SLF4J: Failed to load class "org.slf4j.impl.StaticLoggerBinder".
SLF4J: Defaulting to no-operation (NOP) logger implementation
SLF4J: See http://www.slf4j.org/codes.html#StaticLoggerBinder for further details.
0    [main] WARN  pes.access.impl.DeclaredTypeFactory  - --- xtext.common.types ---------------------------------------------------
1    [main] WARN  pes.access.impl.DeclaredTypeFactory  - ASM library is too old. Falling back to java.lang.reflect API.
1    [main] WARN  pes.access.impl.DeclaredTypeFactory  - Please note that no information about compile time constants is available.
1    [main] WARN  pes.access.impl.DeclaredTypeFactory  - It's recommended to use org.objectweb.asm 9.3.0 or better (Maven group id: org.ow2.asm).
1    [main] WARN  pes.access.impl.DeclaredTypeFactory  - --------------------------------------------------------------------------
Ruleset: 
	javax.net.ssl.KeyStoreBuilderParameters
	javax.crypto.spec.PBEKeySpec
	java.security.spec.MGF1ParameterSpec
	java.security.MessageDigest
	javax.crypto.Cipher
	java.security.KeyPair
	javax.crypto.SecretKeyFactory
	java.security.cert.PKIXBuilderParameters
	javax.crypto.SecretKey
	javax.crypto.spec.IvParameterSpec
	javax.crypto.spec.PBEParameterSpec
	javax.net.ssl.TrustManagerFactory
	javax.crypto.spec.GCMParameterSpec
	javax.crypto.spec.SecretKeySpec
	javax.net.ssl.CertPathTrustManagerParameters
	java.security.spec.DSAParameterSpec
	javax.crypto.KeyAgreement
	java.security.cert.TrustAnchor
	javax.crypto.spec.DHParameterSpec
	javax.net.ssl.SSLParameters
	javax.net.ssl.SSLContext
	java.security.Key
	java.security.KeyFactory
	void
	java.security.DigestOutputStream
	java.security.SecureRandom
	java.security.cert.PKIXParameters
	java.security.spec.X509EncodedKeySpec
	javax.crypto.spec.DHGenParameterSpec
	javax.net.ssl.SSLEngine
	java.security.spec.RSAKeyGenParameterSpec
	java.security.Signature
	javax.crypto.CipherOutputStream
	javax.xml.crypto.dsig.spec.HMACParameterSpec
	java.security.AlgorithmParameterGenerator
	javax.crypto.Mac
	javax.crypto.spec.OAEPParameterSpec
	java.security.AlgorithmParameters
	javax.crypto.CipherInputStream
	java.security.DigestInputStream
	java.security.spec.ECParameterSpec
	javax.crypto.KeyGenerator
	java.security.KeyStore
	java.security.spec.ECGenParameterSpec
	java.security.KeyPairGenerator
	javax.net.ssl.KeyManagerFactory
	java.security.spec.DSAGenParameterSpec

Analyzed Objects: 
	Object:
		Variable: $r0
		Type: byte[]
		Statement: $r0 = virtualinvoke $r4.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r0)
		Method: <cn.jiguang.aj.a: byte[] a(java.lang.String,byte[])>
		SHA-256: 36bf61a68e0f5e447bd023cbc0807d55625d03346ac42018a6e3e97ba704224a
		Secure: false
	Object:
		Variable: $r11
		Type: java.security.MessageDigest
		Statement: $r11 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer82108)
		Method: <org.repackage.a.a.a.a.c: java.lang.String b(android.content.Context,java.lang.String)>
		SHA-256: 79b04fab58f27e6d6570c224925e32b902eb4d613e5f705681cdf5530c55483c
		Secure: false
	Object:
		Variable: $r1
		Type: java.security.SecureRandom
		Statement: specialinvoke $r1.<java.security.SecureRandom: void <init>()>()
		Method: <com.google.android.gms.measurement.internal.zzlb: java.security.SecureRandom zzG()>
		SHA-256: a83d815184ac3bf35da6fcce6e5e67fe49d56b7b993e9cdc982b6561fc342306
		Secure: true
	Object:
		Variable: $r16
		Type: javax.crypto.spec.IvParameterSpec
		Statement: specialinvoke $r16.<javax.crypto.spec.IvParameterSpec: void <init>(byte[])>($r15)
		Method: <com.google.android.exoplayer2.upstream.cache.CachedContentIndex$LegacyStorage: boolean readFile(java.util.HashMap,android.util.SparseArray)>
		SHA-256: 5c8390126ebcbb5ddbf76db4602dc5d8f36a732b2def33cdbb420dbb221f041b
		Secure: false
	Object:
		Variable: $r1
		Type: java.security.SecureRandom
		Statement: specialinvoke $r1.<java.security.SecureRandom: void <init>()>()
		Method: <cz.msebera.android.httpclient.impl.auth.DigestScheme: java.lang.String createCnonce()>
		SHA-256: 51809b40f955da1fb4b3dcfeefebf59f1dd607b449e09656926351c68b1d5de6
		Secure: true
	Object:
		Variable: $r2
		Type: byte[]
		Statement: $r2 = virtualinvoke $r5.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r2)
		Method: <cz.msebera.android.httpclient.impl.auth.NTLMEngineImpl$CipherGen: byte[] getLanManagerSessionKey()>
		SHA-256: 34f4034a9ba7438d9a162f4a6da444ce7c0b70944c78925580489bf13522ac02
		Secure: false
	Object:
		Variable: $r0
		Type: java.security.spec.X509EncodedKeySpec
		Statement: specialinvoke $r0.<java.security.spec.X509EncodedKeySpec: void <init>(byte[])>($r3)
		Method: <cn.jiguang.aq.i: java.security.interfaces.RSAPublicKey c(java.lang.String)>
		SHA-256: d7473c0528077860590c521e080ec16c342e03b7d748c3cddbc8df4753411dd3
		Secure: false
	Object:
		Variable: $r3
		Type: javax.crypto.spec.SecretKeySpec
		Statement: specialinvoke $r3.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r2, varReplacer18390)
		Method: <cn.jiguang.aj.a: byte[] b(java.lang.String,byte[])>
		SHA-256: 1213b5e40680fddf0fa0be497be47b0e71b03ad6f087e2c1f395707e4dd7d1a
		Secure: false
	Object:
		Variable: $r14
		Type: java.security.KeyStore
		Statement: $r14 = staticinvoke <java.security.KeyStore: java.security.KeyStore getInstance(java.lang.String)>($r9)
		Method: <org.eclipse.paho.client.mqttv3.internal.security.SSLSocketFactoryFactory: javax.net.ssl.SSLContext getSSLContext(java.lang.String)>
		SHA-256: 5149894d05ef20df222d58c4a033421d6302e35e69a14f445f906bc16807ea17
		Secure: false
	Object:
		Variable: $r22
		Type: javax.net.ssl.SSLContext
		Statement: $r22 = staticinvoke <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String)>(varReplacer26649)
		Method: <com.umeng.commonsdk.stateless.c: boolean a(byte[],java.lang.String,java.lang.String,java.lang.String)>
		SHA-256: 16ce56cac6fc129ee2c3b718a93875846caba5c1c01b40cfd9cc14e7705f89c9
		Secure: false
	Object:
		Variable: $r6
		Type: byte[]
		Statement: $r6 = virtualinvoke $r5.<java.security.MessageDigest: byte[] digest(byte[])>($r6)
		Method: <com.google.android.gms.common.zzn: java.lang.String zzd(boolean,java.lang.String,com.google.android.gms.common.zzj)>
		SHA-256: 3e5593a6601d3b83ed367e2a3085ea5e9cbecaa31e2606240708a885c86cb418
		Secure: false
	Object:
		Variable: $r2
		Type: byte[]
		Statement: $r2 = virtualinvoke $r1.<java.security.MessageDigest: byte[] digest(byte[])>($r2)
		Method: <com.danikula.videocache.ProxyCacheUtils: java.lang.String computeMD5(java.lang.String)>
		SHA-256: 2c0b85bd39441231516ebce07ef7cba5bb196c1adac5902c4f56547a97b8aa50
		Secure: false
	Object:
		Variable: $r1
		Type: byte[]
		Statement: $r1 = virtualinvoke $r3.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r1)
		Method: <com.umeng.commonsdk.statistics.common.DataHelper: byte[] decrypt(byte[],byte[])>
		SHA-256: 757d771c22b2e0f56f5fa8152876d4652a94103b111855b2baae4f5b518929f7
		Secure: false
	Object:
		Variable: $r4
		Type: javax.net.ssl.SSLContext
		Statement: $r4 = staticinvoke <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String)>(varReplacer45801)
		Method: <okhttp3.internal.platform.Platform: javax.net.ssl.SSLContext getSSLContext()>
		SHA-256: 91d14da3f2644153031e6c6295fd2887cb35e937e06cbe38913dfa5b984e80a0
		Secure: false
	Object:
		Variable: $r8
		Type: javax.net.ssl.SSLContext
		Statement: $r8 = staticinvoke <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String)>(varReplacer82033)
		Method: <com.danikula.videocache.HttpUrlSource: java.net.HttpURLConnection openConnection(long,int)>
		SHA-256: 3e0fdbff2506417c949a62b1d568c53d8c660397ae1565c5511c3bdf76f46276
		Secure: false
	Object:
		Variable: $r3
		Type: byte[]
		Statement: $r3 = virtualinvoke $r2.<java.security.MessageDigest: byte[] digest()>()
		Method: <cz.msebera.android.httpclient.impl.auth.NTLMEngineImpl$HMACMD5: void <init>(byte[])>
		SHA-256: d5cf1f8de9a5f17cad5006e43f64e63b02f8f56706a9e139ea0baeb6f7532b60
		Secure: false
	Object:
		Variable: $r2
		Type: byte[]
		Statement: $r2 = virtualinvoke $r5.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r2)
		Method: <cn.jiguang.aq.i: byte[] a(byte[],java.lang.String,java.lang.String)>
		SHA-256: 1169750ae109a4e2ea44ead7a0663a494377654c3072a1f38277d4033b280e88
		Secure: false
	Object:
		Variable: $r4
		Type: javax.crypto.Cipher
		Statement: $r4 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer39147)
		Method: <cn.jiguang.aj.a: java.lang.String a(java.lang.String)>
		SHA-256: 6774792a0cd3273bb476691a2c399735d34804476a5022cbbe4d80ba62e59c40
		Secure: false
	Object:
		Variable: $r1
		Type: javax.crypto.Cipher
		Statement: $r1 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String,java.lang.String)>(varReplacer122370, varReplacer122371)
		Method: <com.google.android.exoplayer2.upstream.cache.CachedContentIndex: javax.crypto.Cipher getCipher()>
		SHA-256: 2a84853f87ee8e6d5c233a93c4298be28f5e30ea38ee9bebe55694cf1c6151b9
		Secure: true
	Object:
		Variable: $r2
		Type: byte[]
		Statement: $r2 = virtualinvoke $r6.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r3)
		Method: <cz.msebera.android.httpclient.impl.auth.NTLMEngineImpl: byte[] lmHash(java.lang.String)>
		SHA-256: d25cbabbd6d35e4d1ce8d7ea1b95f2cb61d74b6e8ef4ec7bfbb48f440ad14814
		Secure: false
	Object:
		Variable: $r3
		Type: javax.net.ssl.SSLContext
		Statement: $r3 = staticinvoke <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String,java.security.Provider)>(varReplacer45806, $r2)
		Method: <okhttp3.internal.platform.ConscryptPlatform: javax.net.ssl.SSLContext getSSLContext()>
		SHA-256: 85975f0a648b10836b67ca74aa8ad210a2d529eb31e9d0adb8eb017218a166cb
		Secure: false
	Object:
		Variable: $r7
		Type: javax.net.ssl.SSLContext
		Statement: $r7 = staticinvoke <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String)>(varReplacer15890)
		Method: <com.umeng.umzid.a: java.lang.String a(java.lang.String,java.lang.String)>
		SHA-256: 16d20f88bdbcb1f4a295a5816ff096ce536571ed0bf3b5d75ec1afea3b22d5a5
		Secure: false
	Object:
		Variable: $r18
		Type: javax.net.ssl.SSLContext
		Statement: $r18 = staticinvoke <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String)>(varReplacer37857)
		Method: <cn.jiguang.y.b: org.json.JSONObject a(android.content.Context)>
		SHA-256: 5ed0ccc7450aa3f6b42994bd8a6b6e39e11c46e118d8381b1bca2cb2a29c43a1
		Secure: false
	Object:
		Variable: $r4
		Type: byte[]
		Statement: $r4 = virtualinvoke $r5.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r4)
		Method: <cn.jiguang.aj.a: java.lang.String a(java.lang.String,java.lang.String)>
		SHA-256: 182e3058868f6458591e34898819a0d5fd6c22a950d718a582e1ded841cad63f
		Secure: false
	Object:
		Variable: $r1
		Type: java.security.MessageDigest
		Statement: $r1 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer52584)
		Method: <com.umeng.commonsdk.statistics.common.HelperUtils: java.lang.String getMD5(java.lang.String)>
		SHA-256: 2c3506f0d61e8595d4c17acaeabaf32768e03edf70ca6cc255047dcd76520f70
		Secure: false
	Object:
		Variable: $r24
		Type: byte[]
		Statement: $r24 = virtualinvoke $r25.<java.security.MessageDigest: byte[] digest(byte[])>($r24)
		Method: <cz.msebera.android.httpclient.impl.auth.DigestScheme: cz.msebera.android.httpclient.Header createDigestHeader(cz.msebera.android.httpclient.auth.Credentials,cz.msebera.android.httpclient.HttpRequest)>
		SHA-256: d6819f5a090592a9c309f7dee8c1d3060c928c197153632cc3c4595ac59ae53a
		Secure: false
	Object:
		Variable: $r5
		Type: byte[]
		Statement: $r5 = virtualinvoke $r4.<java.security.MessageDigest: byte[] digest(byte[])>($r5)
		Method: <com.google.firebase.messaging.GmsRpc: java.lang.String getHashedFirebaseAppName()>
		SHA-256: 1e52c308f161a25dc3fa5df1d12214a792527ac999f96169898f6fc8f45626b
		Secure: false
	Object:
		Variable: $r8
		Type: java.lang.String
		Statement: $r10 = staticinvoke <java.security.KeyFactory: java.security.KeyFactory getInstance(java.lang.String)>($r8)
		Method: <org.conscrypt.OpenSSLX509Certificate: java.security.PublicKey getPublicKey()>
		SHA-256: fb24971f565cb4681c3c1e192adc31a35b4a987353817f6def6d3d265ac75389
		Secure: false
	Object:
		Variable: varReplacer115781
		Type: java.lang.String
		Statement: $r3 = staticinvoke <java.security.KeyFactory: java.security.KeyFactory getInstance(java.lang.String)>(varReplacer115781)
		Method: <com.google.firebase.installations.local.IidStore: java.security.PublicKey parseKey(java.lang.String)>
		SHA-256: c229e05dd4970229a6f3600e7fad7ca3802dc1a4b7c437c726883e7c95dd37e7
		Secure: false
	Object:
		Variable: $r3
		Type: byte[]
		Statement: $r2 = virtualinvoke $r6.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r3)
		Method: <cz.msebera.android.httpclient.impl.auth.NTLMEngineImpl: byte[] lmHash(java.lang.String)>
		SHA-256: 9e21e63b8a13d6a2e31e6b805473b0da924400a88c243d471bc2e57b0597cc39
		Secure: false
	Object:
		Variable: $r12
		Type: java.security.MessageDigest
		Statement: $r12 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer26948)
		Method: <com.umeng.commonsdk.statistics.common.DeviceConfig: java.lang.String getAppMD5Signature(android.content.Context)>
		SHA-256: 8ee8ed7d0450b8c3980221afedb6bccda196b94fcbb2e56c022b3cfed374a9b4
		Secure: false
	Object:
		Variable: $r2
		Type: java.security.MessageDigest
		Statement: $r2 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer89552)
		Method: <com.nostra13.universalimageloader.cache.disc.naming.Md5FileNameGenerator: byte[] getMD5(byte[])>
		SHA-256: 40974566e9147419485ef5d18e5ddd347c1d45e2986c87e9904d2d19436afccf
		Secure: false
	Object:
		Variable: $r0
		Type: byte[]
		Statement: $r0 = virtualinvoke $r1.<java.security.MessageDigest: byte[] digest(byte[])>($r0)
		Method: <cn.jiguang.y.b: java.lang.String a(byte[])>
		SHA-256: 30334e86ff925e874c9a30d60e816e380ba29a2b2bbce82e9e4ef6ae8840aa41
		Secure: false
	Object:
		Variable: $r1
		Type: java.security.SecureRandom
		Statement: $r1 = staticinvoke <java.security.SecureRandom: java.security.SecureRandom getInstance(java.lang.String)>(varReplacer121655)
		Method: <cz.msebera.android.httpclient.impl.auth.NTLMEngineImpl: void <clinit>()>
		SHA-256: afd0ce7a921c3e6a0bb75f74b352afc850c6344f96d16ca4774d7eec13391dbd
		Secure: true
	Object:
		Variable: $r5
		Type: byte[]
		Statement: virtualinvoke $r7.<java.security.SecureRandom: void nextBytes(byte[])>($r5)
		Method: <com.google.android.gms.measurement.internal.zzkt: java.lang.String zzw(com.google.android.gms.measurement.internal.zzai)>
		SHA-256: ab17a12dcd406f2ea8683d431eb31498ce0a84db445db8221a22299fbf8fa663
		Secure: true
	Object:
		Variable: $r1
		Type: javax.crypto.Cipher
		Statement: $r1 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer122372)
		Method: <com.google.android.exoplayer2.upstream.cache.CachedContentIndex: javax.crypto.Cipher getCipher()>
		SHA-256: d7cdecc931b34b210986becff1e6e8c53cc32da7c5ebf25dff7b99cd5e47003b
		Secure: true
	Object:
		Variable: $r3
		Type: java.security.Signature
		Statement: $r3 = staticinvoke <java.security.Signature: java.security.Signature getInstance(java.lang.String,java.lang.String)>($r4, $r2)
		Method: <org.conscrypt.OpenSSLX509Certificate: void verifyInternal(java.security.PublicKey,java.lang.String)>
		SHA-256: 4b73d9ea47b70e095beb17e2b4e8c62bcb1a3b70cdd913b654094befd6fbd016
		Secure: false
	Object:
		Variable: $r1
		Type: javax.net.ssl.TrustManagerFactory
		Statement: $r1 = staticinvoke <javax.net.ssl.TrustManagerFactory: javax.net.ssl.TrustManagerFactory getInstance(java.lang.String)>($r0)
		Method: <okhttp3.internal.Util: javax.net.ssl.X509TrustManager platformTrustManager()>
		SHA-256: a8764d384e0e6acd4407dba0e4c2025660362892494036c03c4b52a40e75c66b
		Secure: false
	Object:
		Variable: $r4
		Type: byte[]
		Statement: $r4 = virtualinvoke $r2.<java.security.MessageDigest: byte[] digest(byte[])>($r4)
		Method: <cn.jiguang.aq.j: java.lang.String c(java.lang.String)>
		SHA-256: 5115f5b87d986e6d4655640c6c509b20a5aab6fce1a6db966ea01969aef2957
		Secure: false
	Object:
		Variable: varReplacer121706
		Type: java.lang.String
		Statement: specialinvoke $r0.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r2, varReplacer121706)
		Method: <cz.msebera.android.httpclient.impl.auth.NTLMEngineImpl: byte[] RC4(byte[],byte[])>
		SHA-256: a92d9215b30ab5317d012bd1b70d12548ff7cd9561690021c044d0771778395b
		Secure: false
	Object:
		Variable: $r3
		Type: byte[]
		Statement: $r3 = virtualinvoke $r2.<java.security.MessageDigest: byte[] digest(byte[])>($r3)
		Method: <okio.ByteString: okio.ByteString digest(java.lang.String)>
		SHA-256: a79a1700ae9d8d44f13ea218f751e7024f8f1222b1b2ae17cdbab7b56d352181
		Secure: false
	Object:
		Variable: $r1
		Type: byte[]
		Statement: $r1 = virtualinvoke $r2.<java.security.Signature: byte[] sign()>()
		Method: <com.ansjer.zccloud_a.AJ_Tools.AJ_Util.EncryptUtil: java.lang.String encrypt(java.security.interfaces.RSAPrivateKey,byte[])>
		SHA-256: 1173203dfe1e5c256ae38f38d572a21de9ad4bb8e4425366fc8009e77496d139
		Secure: false
	Object:
		Variable: $r2
		Type: byte[]
		Statement: $r2 = virtualinvoke $r3.<java.security.MessageDigest: byte[] digest()>()
		Method: <com.umeng.commonsdk.utils.UMUtils: java.lang.String MD5(java.lang.String)>
		SHA-256: 3e6b5d268cedecd18914680227fd7645707cc1754e1719dccb891245ef9c2de6
		Secure: false
	Object:
		Variable: $r5
		Type: java.security.PrivateKey
		Statement: $r5 = virtualinvoke $r4.<java.security.KeyFactory: java.security.PrivateKey generatePrivate(java.security.spec.KeySpec)>($r3)
		Method: <com.ansjer.zccloud_a.AJ_Tools.AJ_Util.EncryptUtil: java.lang.String encrypt256ForKey(java.lang.String,java.lang.String)>
		SHA-256: a798c56a000b0ce988631de373f6362670f7c596323f35037214cd319f63aa6d
		Secure: false
	Object:
		Variable: $r4
		Type: java.security.spec.X509EncodedKeySpec
		Statement: specialinvoke $r4.<java.security.spec.X509EncodedKeySpec: void <init>(byte[])>($r2)
		Method: <com.google.firebase.installations.local.IidStore: java.security.PublicKey parseKey(java.lang.String)>
		SHA-256: aea7fce58cc2c3232d1730517ff25b7e58e8210bf5f593374b5621a96b219086
		Secure: false
	Object:
		Variable: $r2
		Type: byte[]
		Statement: virtualinvoke $r1.<java.security.SecureRandom: void nextBytes(byte[])>($r2)
		Method: <cz.msebera.android.httpclient.impl.auth.DigestScheme: java.lang.String createCnonce()>
		SHA-256: bbd35c0b9cc04d0eef73b2ad76dd3b0c8a90eec8bc1cf0e85b5f6d07c31b38bf
		Secure: true
	Object:
		Variable: $r4
		Type: javax.crypto.spec.IvParameterSpec
		Statement: specialinvoke $r4.<javax.crypto.spec.IvParameterSpec: void <init>(byte[])>($r2)
		Method: <com.umeng.commonsdk.statistics.common.DataHelper: byte[] decrypt(byte[],byte[])>
		SHA-256: c1aebdc4a60dfa11d7ff0b015316703ae4fe5d519bf41b1d7f28dacde31820db
		Secure: false
	Object:
		Variable: varReplacer39144
		Type: java.lang.String
		Statement: specialinvoke $r0.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r3, varReplacer39144)
		Method: <cn.jiguang.aj.a: java.lang.String a(java.lang.String)>
		SHA-256: 6baaacc00dae79e004e1ac0fe5d690c7f49328dc8a39d31c47df97cfcabcb1be
		Secure: false
	Object:
		Variable: $r24
		Type: byte[]
		Statement: $r24 = virtualinvoke $r17.<java.security.MessageDigest: byte[] digest(byte[])>($r24)
		Method: <com.google.android.gms.measurement.internal.zzdy: com.google.android.gms.measurement.internal.zzq zzj(java.lang.String)>
		SHA-256: 9291558ddb2f9774443ccac99a0e82776c5cbbb03cfd50560914a12ae3407da3
		Secure: false
	Object:
		Variable: $r2
		Type: java.security.MessageDigest
		Statement: $r2 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer73838)
		Method: <com.umeng.commonsdk.statistics.common.DataHelper: byte[] hash(byte[])>
		SHA-256: a0dd8061bd08f829e433a84f686a3c14598b374dd5c5ff16f183e809525f0821
		Secure: false
	Object:
		Variable: $r9
		Type: javax.net.ssl.TrustManagerFactory
		Statement: $r9 = staticinvoke <javax.net.ssl.TrustManagerFactory: javax.net.ssl.TrustManagerFactory getInstance(java.lang.String)>($r1)
		Method: <cn.jiguang.net.SSLTrustManager: void <init>(java.lang.String)>
		SHA-256: 8bbcc8b55c8982617ff1149e8d2b1f3e26060ad614bbfecbb4390e20d6265728
		Secure: false
	Object:
		Variable: $i0
		Type: int
		Statement: $i0 = virtualinvoke $r1.<java.security.SecureRandom: int nextInt()>()
		Method: <cn.jiguang.aj.a: int a()>
		SHA-256: 9fec83b37af84642886eca20a97879d662506617b3ad0bf7ccfa059fbbfe1293
		Secure: true
	Object:
		Variable: $r24
		Type: byte[]
		Statement: $r24 = virtualinvoke $r16.<java.security.MessageDigest: byte[] digest(byte[])>($r24)
		Method: <cz.msebera.android.httpclient.impl.auth.DigestScheme: cz.msebera.android.httpclient.Header createDigestHeader(cz.msebera.android.httpclient.auth.Credentials,cz.msebera.android.httpclient.HttpRequest)>
		SHA-256: d36648b94075615d212b0236bc5cdfc92309766fe7b341b21d50caf50b71db90
		Secure: false
	Object:
		Variable: $r1
		Type: byte[]
		Statement: $r1 = virtualinvoke $r3.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r1)
		Method: <com.umeng.commonsdk.statistics.common.DataHelper: byte[] encrypt(byte[],byte[])>
		SHA-256: c925bfd7f1597953b470d86e8bab63320365cfd0de696cd0092d832a3549d0f1
		Secure: false
	Object:
		Variable: $r51
		Type: java.security.SecureRandom
		Statement: specialinvoke $r51.<java.security.SecureRandom: void <init>()>()
		Method: <cn.jiguang.y.b: org.json.JSONObject a(android.content.Context)>
		SHA-256: ceaf0bfc614b493617029835a2868f4b16a68bf5b5b2ce734ea24ab79960a827
		Secure: true
	Object:
		Variable: $r6
		Type: java.security.MessageDigest
		Statement: $r6 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer112126)
		Method: <com.bumptech.glide.load.engine.cache.SafeKeyGenerator: java.lang.String getSafeKey(com.bumptech.glide.load.Key)>
		SHA-256: 76d7da367c4645888c7894104be0db1b667484399f9912c72399670f7426d762
		Secure: true
	Object:
		Variable: $r2
		Type: byte[]
		Statement: $r2 = virtualinvoke $r1.<java.security.MessageDigest: byte[] digest()>()
		Method: <com.umeng.commonsdk.statistics.common.HelperUtils: java.lang.String getUmengMD5(java.lang.String)>
		SHA-256: 57f66af31401e96c01a0128cc2369c2262dd285521067aa3e29f42a8e11dfe73
		Secure: false
	Object:
		Variable: $r4
		Type: javax.crypto.Cipher
		Statement: $r4 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer18392)
		Method: <cn.jiguang.aj.a: byte[] b(java.lang.String,byte[])>
		SHA-256: 5c93ccaddbc63a3fe31d698fb88ce72d52b98c444aa30269a93659b3642fc302
		Secure: false
	Object:
		Variable: varReplacer18390
		Type: java.lang.String
		Statement: specialinvoke $r3.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r2, varReplacer18390)
		Method: <cn.jiguang.aj.a: byte[] b(java.lang.String,byte[])>
		SHA-256: ea1d0b38f9a9078fc6e09a452e23f8c1312878ed5c4d9858fb0e53bff8101a7
		Secure: false
	Object:
		Variable: varReplacer122369
		Type: java.lang.String
		Statement: specialinvoke $r5.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r3, varReplacer122369)
		Method: <com.google.android.exoplayer2.upstream.cache.CachedContentIndex$LegacyStorage: void <init>(java.io.File,byte[],boolean)>
		SHA-256: 62ddf9ea7bf5391a043dbceb8982cf3a6ff15f390340b3dc7ec7194e106bedc2
		Secure: false
	Object:
		Variable: $r1
		Type: javax.crypto.Cipher
		Statement: $r1 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer81842)
		Method: <com.google.android.exoplayer2.source.hls.Aes128DataSource: javax.crypto.Cipher getCipherInstance()>
		SHA-256: 861a99f5c24a821aed99e866b9c29b4d6cfb492abcfd654c786361eb1d27c9f1
		Secure: false
	Object:
		Variable: $r2
		Type: java.security.MessageDigest
		Statement: $r2 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer37878)
		Method: <cn.jiguang.an.h: java.lang.String e(java.lang.String)>
		SHA-256: 8f8b43881f0039777f3e927b02434023e8728c22614a232c641f085b485aabfe
		Secure: false
	Object:
		Variable: varReplacer18846
		Type: java.lang.String
		Statement: $r4 = staticinvoke <java.security.KeyFactory: java.security.KeyFactory getInstance(java.lang.String)>(varReplacer18846)
		Method: <cn.jiguang.aq.i: java.security.interfaces.RSAPublicKey c(java.lang.String)>
		SHA-256: b5b076e9378ede0bf66a766b6e66c61e616fbbfbb64246f7e1698147aa0dcd28
		Secure: false
	Object:
		Variable: $r3
		Type: javax.crypto.spec.SecretKeySpec
		Statement: specialinvoke $r3.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r2, varReplacer16847)
		Method: <cn.jiguang.aj.a: byte[] a(java.lang.String,byte[])>
		SHA-256: bba161d184eb52d24a114d9eb2a1c678c4475f7d0409f716b0f71457470c737c
		Secure: false
	Object:
		Variable: $r6
		Type: javax.crypto.Cipher
		Statement: $r6 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer123730)
		Method: <cz.msebera.android.httpclient.impl.auth.NTLMEngineImpl: byte[] lmHash(java.lang.String)>
		SHA-256: 304d6ef635b6d4b27cb944558a979dab031d0cfa5c459a0629bd1aeb3c8cf23a
		Secure: false
	Object:
		Variable: $r1
		Type: java.security.MessageDigest
		Statement: $r1 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer112543)
		Method: <com.danikula.videocache.ProxyCacheUtils: java.lang.String computeMD5(java.lang.String)>
		SHA-256: 5280f7415fa0e1e1e0d2a23d196bfcfe521350d37a8124e4b089004a5e1deea4
		Secure: false
	Object:
		Variable: $r1
		Type: byte[]
		Statement: $r1 = virtualinvoke $r5.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r2)
		Method: <cz.msebera.android.httpclient.impl.auth.NTLMEngineImpl$CipherGen: byte[] getLanManagerSessionKey()>
		SHA-256: 29e4a5e001a05d29c16861fe1530ed3ef232835c26fc0e2181c1f3dff02f44b2
		Secure: false
	Object:
		Variable: $r39
		Type: java.security.SecureRandom
		Statement: specialinvoke $r39.<java.security.SecureRandom: void <init>()>()
		Method: <cn.jiguang.net.HttpUtils: cn.jiguang.net.HttpResponse a(android.content.Context,cn.jiguang.net.HttpRequest,boolean)>
		SHA-256: 9974c593b2f9e20a9d88c16ee2d4d912a94acfa2dd6aa6c6395ef47d0f9762c7
		Secure: true
	Object:
		Variable: $r8
		Type: java.security.KeyStore
		Statement: $r8 = staticinvoke <java.security.KeyStore: java.security.KeyStore getInstance(java.lang.String)>($r1)
		Method: <cn.jiguang.net.SSLTrustManager: void <init>(java.lang.String)>
		SHA-256: f28011150a4bb300a355fb4dc4ea3ec76b4742c66dcf35452b59248f5af174b4
		Secure: true
	Object:
		Variable: $r31
		Type: java.security.MessageDigest
		Statement: $r31 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer33972)
		Method: <com.umeng.umzid.ZIDManager: org.json.JSONObject a(android.content.Context,org.json.JSONObject)>
		SHA-256: d3eec370ccdaafaa6dde7614bfde860ebbcff1ab43a3b55ca8681ec7b352fdd2
		Secure: false
	Object:
		Variable: $r7
		Type: java.security.PublicKey
		Statement: $r7 = virtualinvoke $r10.<java.security.KeyFactory: java.security.PublicKey generatePublic(java.security.spec.KeySpec)>($r1)
		Method: <org.conscrypt.OpenSSLX509Certificate: java.security.PublicKey getPublicKey()>
		SHA-256: 9d110d3f3943f5f1538d33e3d18932b71ca7accf2f86c174ab417a2b10712fb0
		Secure: false
	Object:
		Variable: $r5
		Type: byte[]
		Statement: $z0 = virtualinvoke $r3.<java.security.Signature: boolean verify(byte[])>($r5)
		Method: <org.conscrypt.OpenSSLX509Certificate: void verifyInternal(java.security.PublicKey,java.lang.String)>
		SHA-256: e75571d33abb1b5e330ac5b78fcc009ac5fa3b4053acda20dad8234c0598d879
		Secure: false
	Object:
		Variable: $r1
		Type: byte[]
		Statement: $r1 = virtualinvoke $r4.<java.security.MessageDigest: byte[] digest(byte[])>($r1)
		Method: <com.google.android.gms.measurement.internal.zzkv: long zzd(byte[])>
		SHA-256: 6cfc3ea5ded05c33bb4b02e66ff74b86d957ba674c6e9dcb533302cf26e54c55
		Secure: false
	Object:
		Variable: $r2
		Type: java.security.Signature
		Statement: $r2 = staticinvoke <java.security.Signature: java.security.Signature getInstance(java.lang.String)>(varReplacer22772)
		Method: <com.ansjer.zccloud_a.AJ_Tools.AJ_Util.EncryptUtil: java.lang.String encrypt(java.security.interfaces.RSAPrivateKey,byte[])>
		SHA-256: f35f6fbb98e429b6c8ee1e8572bef2f53166a5aa88a6de01865a97794f169128
		Secure: false
	Object:
		Variable: $r3
		Type: javax.net.ssl.SSLContext
		Statement: $r3 = staticinvoke <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String)>(varReplacer45808)
		Method: <okhttp3.internal.platform.AndroidPlatform: javax.net.ssl.SSLContext getSSLContext()>
		SHA-256: 8ebf2d8b8a1bd1542a470b41631ca939b4165c7cdc9bbcfd6de392b9fb0c4390
		Secure: false
	Object:
		Variable: $r4
		Type: byte[]
		Statement: $r4 = virtualinvoke $r3.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r4)
		Method: <cn.jiguang.aq.i: java.lang.String a(java.lang.String,java.lang.String)>
		SHA-256: 1b136352804dd68a39fb59e916ef475a423eab537cc9f2650c432e4ea75d7fac
		Secure: false
	Object:
		Variable: $r3
		Type: byte[]
		Statement: $r1 = virtualinvoke $r2.<java.security.MessageDigest: byte[] digest(byte[])>($r3)
		Method: <cz.msebera.android.httpclient.impl.auth.NTLMEngineImpl$HMACMD5: byte[] getOutput()>
		SHA-256: f6730166425cdde60c0ca0f7f01862a2b9705ad5b213be5cd1a19bc89976254d
		Secure: false
	Object:
		Variable: $r5
		Type: javax.crypto.spec.SecretKeySpec
		Statement: specialinvoke $r5.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r3, varReplacer122369)
		Method: <com.google.android.exoplayer2.upstream.cache.CachedContentIndex$LegacyStorage: void <init>(java.io.File,byte[],boolean)>
		SHA-256: 20b23d8281420863ef0d48763bfeec2b0becd9fce19f1f0b18764fea960eb936
		Secure: false
	Object:
		Variable: $r6
		Type: javax.net.ssl.SSLParameters
		Statement: specialinvoke $r6.<javax.net.ssl.SSLParameters: void <init>()>()
		Method: <org.eclipse.paho.client.mqttv3.internal.SSLNetworkModule: void start()>
		SHA-256: 859fe0ec5a0ef670ee98b35ac915e8f21b89da12473bd5b28964a8131b54f41c
		Secure: false
	Object:
		Variable: $r0
		Type: java.security.SecureRandom
		Statement: specialinvoke $r0.<java.security.SecureRandom: void <init>()>()
		Method: <cn.jiguang.aq.i: int a()>
		SHA-256: e68b6eb910cb1b0a46d15727c405a7640dfb717d6fc806ad7e3e7160023aac21
		Secure: true
	Object:
		Variable: $r1
		Type: javax.net.ssl.SSLContext
		Statement: $r1 = staticinvoke <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String)>(varReplacer91970)
		Method: <com.zopim.android.sdk.api.Tls12SocketFactory: javax.net.ssl.HttpsURLConnection enableTls12(javax.net.ssl.HttpsURLConnection)>
		SHA-256: e93ec26c46bbfa39b5160403dee84fb2c84e0a85b5eb77e3cfc030c0d3eddef1
		Secure: false
	Object:
		Variable: $r34
		Type: java.security.SecureRandom
		Statement: specialinvoke $r34.<java.security.SecureRandom: void <init>()>()
		Method: <com.umeng.commonsdk.statistics.internal.c: byte[] a(byte[],java.lang.String)>
		SHA-256: 16a2677910eea917e489e8590acc60590234eb812d47080af767a2b9061a73c5
		Secure: true
	Object:
		Variable: $r2
		Type: byte[]
		Statement: $r2 = virtualinvoke $r3.<java.security.MessageDigest: byte[] digest()>()
		Method: <com.umeng.commonsdk.statistics.common.HelperUtils: java.lang.String MD5(java.lang.String)>
		SHA-256: 4a55e647000504f4e918561d4d022fd1a4abe973d16b9eba80c5a24c9cc77074
		Secure: false
	Object:
		Variable: varReplacer2645
		Type: java.lang.String
		Statement: specialinvoke $r1.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r4, varReplacer2645)
		Method: <cn.jiguang.aq.i: byte[] a(byte[],java.lang.String,java.lang.String)>
		SHA-256: 78c2eceea80271de2ee2447be83f2cb8515322db7779ee5b8d914ef2cd051aff
		Secure: false
	Object:
		Variable: $r5
		Type: java.security.PublicKey
		Statement: $r5 = virtualinvoke $r4.<java.security.KeyFactory: java.security.PublicKey generatePublic(java.security.spec.KeySpec)>($r0)
		Method: <cn.jiguang.aq.i: java.security.interfaces.RSAPublicKey c(java.lang.String)>
		SHA-256: 29f5efdf47e5f543d37ec7d5a81676de6d3612bbb097831d349b4176c2f5bce1
		Secure: false
	Object:
		Variable: $r5
		Type: javax.crypto.spec.IvParameterSpec
		Statement: specialinvoke $r5.<javax.crypto.spec.IvParameterSpec: void <init>(byte[])>($r4)
		Method: <com.google.android.exoplayer2.source.hls.Aes128DataSource: long open(com.google.android.exoplayer2.upstream.DataSpec)>
		SHA-256: 74efd2ca2013e34a93725a12b2428b082241b229a3b9c59222ec28d5225e0d5
		Secure: false
	Object:
		Variable: $r8
		Type: byte[]
		Statement: $r8 = virtualinvoke $r7.<java.security.MessageDigest: byte[] digest()>()
		Method: <com.umeng.commonsdk.statistics.common.DeviceConfig: java.lang.String getAppHashKey(android.content.Context)>
		SHA-256: e12ed8dff190622c0a3cad0e2520898217a8e2cef1d14869a6f4fd317a9785d5
		Secure: false
	Object:
		Variable: $r0
		Type: javax.crypto.spec.SecretKeySpec
		Statement: specialinvoke $r0.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r3, varReplacer39144)
		Method: <cn.jiguang.aj.a: java.lang.String a(java.lang.String)>
		SHA-256: 98a0763cbd7c6bdb89b864e59be2a42dc196c623cdf29a5f34a2c4fdb77abb2d
		Secure: false
	Object:
		Variable: $r1
		Type: byte[]
		Statement: $r1 = virtualinvoke $r3.<java.security.MessageDigest: byte[] digest()>()
		Method: <cz.msebera.android.httpclient.impl.auth.NTLMEngineImpl: byte[] ntlm2SessionResponse(byte[],byte[],byte[])>
		SHA-256: 87142a8c4369ab14d23fa8690b807f0d900b1807831c8c0f8e6b4de4b8735e3b
		Secure: false
	Object:
		Variable: $r1
		Type: byte[]
		Statement: $r1 = virtualinvoke $r2.<java.security.MessageDigest: byte[] digest()>()
		Method: <com.umeng.commonsdk.statistics.common.DataHelper: byte[] hash(byte[])>
		SHA-256: 621987ddabe92ecd8e69800605671d21acc7984a3fa5d5b21a8f3d532b4680b2
		Secure: false
	Object:
		Variable: $r2
		Type: java.security.SecureRandom
		Statement: specialinvoke $r2.<java.security.SecureRandom: void <init>()>()
		Method: <com.google.android.exoplayer2.upstream.cache.SimpleCache: long createUid(java.io.File)>
		SHA-256: 99c672eefa4689a445952b16fc572f3658b4c117a83684d8406fcdb6e6246872
		Secure: true
	Object:
		Variable: $r3
		Type: javax.crypto.Cipher
		Statement: $r3 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer121705)
		Method: <cz.msebera.android.httpclient.impl.auth.NTLMEngineImpl: byte[] RC4(byte[],byte[])>
		SHA-256: b5044fcb57d5e1427b4bab1b0f7b0c6f7706ecad91db705b08c3183a4d70f2c1
		Secure: false
	Object:
		Variable: $r3
		Type: java.security.MessageDigest
		Statement: $r3 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer122813)
		Method: <cz.msebera.android.httpclient.impl.auth.NTLMEngineImpl: byte[] ntlm2SessionResponse(byte[],byte[],byte[])>
		SHA-256: a442e52325c54efe391102d67cc0d69752676e2eb38480e6b265d45f97bd483e
		Secure: false
	Object:
		Variable: $r3
		Type: javax.crypto.spec.SecretKeySpec
		Statement: specialinvoke $r3.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r4, varReplacer61385)
		Method: <com.google.android.exoplayer2.source.hls.Aes128DataSource: long open(com.google.android.exoplayer2.upstream.DataSpec)>
		SHA-256: a35a4e5657f00b5a08335275c988c28a5fb8c9b5db22092e8c9a9fa49a265930
		Secure: false
	Object:
		Variable: $r2
		Type: javax.crypto.spec.SecretKeySpec
		Statement: specialinvoke $r2.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r1, varReplacer122820)
		Method: <cz.msebera.android.httpclient.impl.auth.NTLMEngineImpl: java.security.Key createDESKey(byte[],int)>
		SHA-256: 33ac4051ba841b02ed22e0e05ebe434c4fe83f5e6cade9960bdf0e7633820df8
		Secure: false
	Object:
		Variable: $r1
		Type: javax.net.ssl.SSLContext
		Statement: $r1 = staticinvoke <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String)>(varReplacer123555)
		Method: <com.zopim.android.sdk.chatlog.PicassoHelper: okhttp3.OkHttpClient$Builder applyTlsPatch(okhttp3.OkHttpClient$Builder)>
		SHA-256: d2b3aefdef7fcc2d7e752eadd9e1aaf5afa3354e139da4f651715557356e0a69
		Secure: false
	Object:
		Variable: $r2
		Type: byte[]
		Statement: $r1 = virtualinvoke $r5.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r2)
		Method: <cz.msebera.android.httpclient.impl.auth.NTLMEngineImpl$CipherGen: byte[] getLanManagerSessionKey()>
		SHA-256: e7d83409a445bee7d822d6526d85135fa6290a20313d944d0afa314bc32464a
		Secure: false
	Object:
		Variable: $r9
		Type: javax.crypto.spec.IvParameterSpec
		Statement: specialinvoke $r9.<javax.crypto.spec.IvParameterSpec: void <init>(byte[])>($r7)
		Method: <com.google.android.exoplayer2.upstream.cache.CachedContentIndex$LegacyStorage: void writeFile(java.util.HashMap)>
		SHA-256: 2c509f54f169000fda7a2d594f0a37a51d8a71318d9074548051a677d33a5aaa
		Secure: false
	Object:
		Variable: $r13
		Type: java.security.spec.ECParameterSpec
		Statement: specialinvoke $r13.<java.security.spec.ECParameterSpec: void <init>(java.security.spec.EllipticCurve,java.security.spec.ECPoint,java.math.BigInteger,int)>($r9, $r12, $r4, $i1)
		Method: <org.conscrypt.OpenSSLECGroupContext: java.security.spec.ECParameterSpec getECParameterSpec()>
		SHA-256: 7223ae8f08ed0dba3dafb06f8e07e30310aca7c9be856d88494b5d1bd531fdf8
		Secure: true
	Object:
		Variable: $r8
		Type: javax.crypto.spec.IvParameterSpec
		Statement: specialinvoke $r8.<javax.crypto.spec.IvParameterSpec: void <init>(byte[])>($r1)
		Method: <com.google.android.exoplayer2.upstream.crypto.AesFlushingCipher: void <init>(int,byte[],long,long)>
		SHA-256: 686d309bb207690559ee1f5862c78db550601d8d47b5b0746d05b9ba47775cde
		Secure: false
	Object:
		Variable: $r2
		Type: byte[]
		Statement: $r2 = virtualinvoke $r1.<java.security.MessageDigest: byte[] digest(byte[])>($r2)
		Method: <com.ansjer.timeline.TextUtil: java.lang.String md5(java.lang.String)>
		SHA-256: c489017386e9384c6c37860536847715ab539be1c221fd6a3d0c8765254a020e
		Secure: false
	Object:
		Variable: $r5
		Type: javax.crypto.Cipher
		Statement: $r5 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer122796)
		Method: <cz.msebera.android.httpclient.impl.auth.NTLMEngineImpl$CipherGen: byte[] getLanManagerSessionKey()>
		SHA-256: c1f025e8cc8d7aef1ec3fc331627231af44962a44e70bc6b85a361aa0dafea6e
		Secure: false
	Object:
		Variable: $r4
		Type: javax.net.ssl.SSLContext
		Statement: $r4 = staticinvoke <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String)>(varReplacer45802)
		Method: <okhttp3.internal.platform.Platform: javax.net.ssl.SSLContext getSSLContext()>
		SHA-256: acbc0fe39497f7c5b4e9483e99d4956aeb448f118ae2ab8c42d8ac851bcfdcd7
		Secure: false
	Object:
		Variable: $r6
		Type: java.lang.String
		Statement: specialinvoke $r4.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r1, $r6)
		Method: <com.google.android.exoplayer2.upstream.crypto.AesFlushingCipher: void <init>(int,byte[],long,long)>
		SHA-256: ea528036834a1e40eb394c6eb8c7d116894bcce83d428f4b94cf4fd8a57f0235
		Secure: false
	Object:
		Variable: $r12
		Type: java.security.MessageDigest
		Statement: $r12 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer26945)
		Method: <com.umeng.commonsdk.statistics.common.DeviceConfig: java.lang.String getAppSHA1Key(android.content.Context)>
		SHA-256: bcb3c02317c4de79206367208c1a76fa186954e7e5afd9a03dbdb43cc55ac800
		Secure: false
	Object:
		Variable: $r5
		Type: javax.crypto.Cipher
		Statement: $r5 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer122791)
		Method: <cz.msebera.android.httpclient.impl.auth.NTLMEngineImpl$CipherGen: byte[] getLanManagerSessionKey()>
		SHA-256: a380f1b742b31e9c70181b74448621e415caf84fa09e3b2282c0e3d35835759
		Secure: false
	Object:
		Variable: $r3
		Type: java.security.MessageDigest
		Statement: $r3 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer88780)
		Method: <com.tencent.mm.opensdk.utils.b: java.lang.String e(byte[])>
		SHA-256: cbd81d15171329783ff45346533e83c9de66a6f74620c635705c60c5086a82b4
		Secure: false
	Object:
		Variable: $r2
		Type: java.security.MessageDigest
		Statement: $r2 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer3372)
		Method: <cn.jiguang.an.h: java.lang.String d(java.lang.String)>
		SHA-256: 83fc3b91003c8f763cf7487e60a7a336cf6336ff485e09e4e007276069b57b40
		Secure: false
	Object:
		Variable: $r6
		Type: javax.crypto.Cipher
		Statement: $r6 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer122828)
		Method: <cz.msebera.android.httpclient.impl.auth.NTLMEngineImpl: byte[] lmResponse(byte[],byte[])>
		SHA-256: b6eec5170093e0317b07e583da0b67aebc09af2fb2dc2a24c40f56589ca8c6ba
		Secure: false
	Object:
		Variable: varReplacer27165
		Type: java.lang.String
		Statement: specialinvoke $r0.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r2, varReplacer27165)
		Method: <com.umeng.commonsdk.statistics.common.DataHelper: byte[] encrypt(byte[],byte[])>
		SHA-256: a356a6aac031c6d81d308a8107aff5a284cc19fb0291367f6c59b3b9bd2b35f2
		Secure: false
	Object:
		Variable: $r24
		Type: javax.net.ssl.TrustManagerFactory
		Statement: $r24 = staticinvoke <javax.net.ssl.TrustManagerFactory: javax.net.ssl.TrustManagerFactory getInstance(java.lang.String)>($r11)
		Method: <org.eclipse.paho.client.mqttv3.internal.security.SSLSocketFactoryFactory: javax.net.ssl.SSLContext getSSLContext(java.lang.String)>
		SHA-256: 347ff217c58c2774000268375cf6ecf17ac33de018df1c83b23e61eaf9dfc2fb
		Secure: false
	Object:
		Variable: $r0
		Type: java.security.MessageDigest
		Statement: $r0 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>($r2)
		Method: <com.google.android.gms.common.util.AndroidUtilsLight: java.security.MessageDigest zza(java.lang.String)>
		SHA-256: c613dcbe025721f48d3fcab4e003017d7cb704971fc9d0296bae42be0b7eb30a
		Secure: false
	Object:
		Variable: $r7
		Type: byte[]
		Statement: $r7 = virtualinvoke $r12.<java.security.MessageDigest: byte[] digest(byte[])>($r7)
		Method: <com.umeng.commonsdk.statistics.common.DeviceConfig: java.lang.String getAppMD5Signature(android.content.Context)>
		SHA-256: 2fb5a7413d3757dcbf692baf7876a0996ed9090adab5f834ee59a20fae10595b
		Secure: false
	Object:
		Variable: $r1
		Type: byte[]
		Statement: $r1 = virtualinvoke $r2.<java.security.MessageDigest: byte[] digest()>()
		Method: <com.nostra13.universalimageloader.cache.disc.naming.Md5FileNameGenerator: byte[] getMD5(byte[])>
		SHA-256: c1be9d0b01edb148a5a898d4a6573aa27b3652d619c42f0bac0506e26dd1e5b2
		Secure: false
	Object:
		Variable: $r1
		Type: java.security.SecureRandom
		Statement: specialinvoke $r1.<java.security.SecureRandom: void <init>()>()
		Method: <com.google.android.gms.measurement.internal.zzlb: void zzaA()>
		SHA-256: 6483e4adec30a7f4c3e402020905ac1a3ff169c1648260ee41f8a7a2d49ca986
		Secure: true
	Object:
		Variable: $r32
		Type: byte[]
		Statement: $r32 = virtualinvoke $r31.<java.security.MessageDigest: byte[] digest()>()
		Method: <com.umeng.umzid.ZIDManager: org.json.JSONObject a(android.content.Context,org.json.JSONObject)>
		SHA-256: 6bf8b63f3a46bac1e23d13928848ce5175924d47108249d94396f078da704c1e
		Secure: false
	Object:
		Variable: $r2
		Type: byte[]
		Statement: $r2 = virtualinvoke $r3.<java.security.MessageDigest: byte[] digest(byte[])>($r2)
		Method: <com.google.firebase.installations.local.IidStore: java.lang.String getIdFromPublicKey(java.security.PublicKey)>
		SHA-256: ad220c352da86335809a3322a312a9e0b628e3ee4c76f8896e52fc09c31946dd
		Secure: false
	Object:
		Variable: varReplacer58562
		Type: java.lang.String
		Statement: specialinvoke $r6.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r4, varReplacer58562)
		Method: <cn.jiguang.aj.a: java.lang.String a(java.lang.String,java.lang.String)>
		SHA-256: 4b7ccad31225c6927c6bb58ba88ffff22609b7257a5afd353314c44943a4cfc5
		Secure: false
	Object:
		Variable: $r0
		Type: javax.crypto.spec.SecretKeySpec
		Statement: specialinvoke $r0.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r2, varReplacer121706)
		Method: <cz.msebera.android.httpclient.impl.auth.NTLMEngineImpl: byte[] RC4(byte[],byte[])>
		SHA-256: 28d3198ae35a947feeeef0f1d3927952c211ab1b43cdfa58bee004eff26a7a4b
		Secure: false
	Object:
		Variable: $r33
		Type: javax.net.ssl.SSLContext
		Statement: $r33 = staticinvoke <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String)>(varReplacer73459)
		Method: <com.umeng.commonsdk.statistics.internal.c: byte[] a(byte[],java.lang.String)>
		SHA-256: 356a6dd84c21234f46249f3b65c7914f2ed67a32ea60dc2638ae8f5f4ee20218
		Secure: false
	Object:
		Variable: $r4
		Type: java.security.MessageDigest
		Statement: $r4 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer39899)
		Method: <cn.jiguang.an.h: java.lang.String j(java.lang.String)>
		SHA-256: 509934874de0c52acd76ba6f37cf6bc15847ab107e8c5191b8639688d6f558e8
		Secure: false
	Object:
		Variable: $r0
		Type: byte[]
		Statement: $r0 = virtualinvoke $r6.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r1)
		Method: <cz.msebera.android.httpclient.impl.auth.NTLMEngineImpl: byte[] lmResponse(byte[],byte[])>
		SHA-256: cdf1555884c268f883b6f786392d353b2786b4804be8408b66194b7c76399250
		Secure: false
	Object:
		Variable: $r3
		Type: java.security.MessageDigest
		Statement: $r3 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer108256)
		Method: <com.umeng.commonsdk.utils.UMUtils: java.lang.String MD5(java.lang.String)>
		SHA-256: f26ba2803944e0ed255c5146a3e4a598a834869de1d2b08b8aa87dfa2032609f
		Secure: false
	Object:
		Variable: $r3
		Type: javax.crypto.Cipher
		Statement: $r3 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer27166)
		Method: <com.umeng.commonsdk.statistics.common.DataHelper: byte[] encrypt(byte[],byte[])>
		SHA-256: 25a7c75ce3827fc6e960a0d5eddefe0073fce3b8eca750355dbaa4fe7e0cfdb9
		Secure: false
	Object:
		Variable: $r4
		Type: java.security.KeyFactory
		Statement: $r4 = staticinvoke <java.security.KeyFactory: java.security.KeyFactory getInstance(java.lang.String)>(varReplacer18846)
		Method: <cn.jiguang.aq.i: java.security.interfaces.RSAPublicKey c(java.lang.String)>
		SHA-256: 1a558c0e9ed7ccd8e66cd6fe5ddbe290d2e9ce61591b0b004dc6aea1dcf0adb1
		Secure: false
	Object:
		Variable: $r1
		Type: byte[]
		Statement: $r1 = virtualinvoke $r3.<java.security.MessageDigest: byte[] digest()>()
		Method: <com.tencent.mm.opensdk.utils.b: java.lang.String e(byte[])>
		SHA-256: 54f0f6b511664a617918a6d2f59eab7bf790dd9def3f2babe2a1094235655ff8
		Secure: false
	Object:
		Variable: $r16
		Type: javax.net.ssl.KeyManagerFactory
		Statement: $r16 = staticinvoke <javax.net.ssl.KeyManagerFactory: javax.net.ssl.KeyManagerFactory getInstance(java.lang.String,java.lang.String)>($r11, $r12)
		Method: <org.eclipse.paho.client.mqttv3.internal.security.SSLSocketFactoryFactory: javax.net.ssl.SSLContext getSSLContext(java.lang.String)>
		SHA-256: 51438369a357067707332506854fc20b41f55bae36aefc78dabd79b339ad0ac5
		Secure: false
	Object:
		Variable: $r2
		Type: java.security.MessageDigest
		Statement: $r2 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer3074)
		Method: <cn.jiguang.aq.j: java.lang.String a(byte[])>
		SHA-256: 438257716b6664332b613cf3471bd93340fd738a2112a3550c14668a9a33a431
		Secure: false
	Object:
		Variable: $r14
		Type: java.security.KeyStore
		Statement: $r14 = staticinvoke <java.security.KeyStore: java.security.KeyStore getInstance(java.lang.String)>($r9)
		Method: <org.eclipse.paho.client.mqttv3.internal.security.SSLSocketFactoryFactory: javax.net.ssl.SSLContext getSSLContext(java.lang.String)>
		SHA-256: 5149894d05ef20df222d58c4a033421d6302e35e69a14f445f906bc16807ea17
		Secure: false
	Object:
		Variable: $r3
		Type: javax.net.ssl.SSLContext
		Statement: $r3 = staticinvoke <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String,java.security.Provider)>(varReplacer45804, $r2)
		Method: <okhttp3.internal.platform.ConscryptPlatform: javax.net.ssl.SSLContext getSSLContext()>
		SHA-256: 98a00029a7692901a128f1a20b16d6f68433a5098f7b13c7e3b130b504f95b2a
		Secure: false
	Object:
		Variable: varReplacer16847
		Type: java.lang.String
		Statement: specialinvoke $r3.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r2, varReplacer16847)
		Method: <cn.jiguang.aj.a: byte[] a(java.lang.String,byte[])>
		SHA-256: 95701655e36e25cee327fe68e7ec574366e237b64ebcd271738fa4da7b976bfb
		Secure: false
	Object:
		Variable: $r7
		Type: byte[]
		Statement: $r7 = virtualinvoke $r6.<java.security.MessageDigest: byte[] digest()>()
		Method: <com.bumptech.glide.load.engine.cache.SafeKeyGenerator: java.lang.String getSafeKey(com.bumptech.glide.load.Key)>
		SHA-256: 6763e0d09de34caa999df127c6d30dc02400c44c84c5c574d6dd222776edfb5c
		Secure: true
	Object:
		Variable: $r1
		Type: java.security.MessageDigest
		Statement: $r1 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer39282)
		Method: <com.ansjer.timeline.TextUtil: java.lang.String md5(java.lang.String)>
		SHA-256: bf7d3ba1f1e706f1f055d4c6e8a1b5ae9d71ce0edde2e98884d4a869211b31e5
		Secure: false
	Object:
		Variable: $r3
		Type: javax.net.ssl.SSLContext
		Statement: $r3 = staticinvoke <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String)>(varReplacer45807)
		Method: <okhttp3.internal.platform.AndroidPlatform: javax.net.ssl.SSLContext getSSLContext()>
		SHA-256: c157dabf0aa1ef5e56e9a0d07df08b79da27ccff9c2b3e0a99c13ede2ece323a
		Secure: false
	Object:
		Variable: $i0
		Type: int
		Statement: $i0 = virtualinvoke $r0.<java.security.SecureRandom: int nextInt()>()
		Method: <cn.jiguang.aq.i: int a()>
		SHA-256: e497230d705abbb7ab8484acea0d59b3b29f76065e6fdd3e1a560eeaae5e6ee1
		Secure: true
	Object:
		Variable: $r3
		Type: java.security.MessageDigest
		Statement: $r3 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer18882)
		Method: <cn.jpush.android.i.a: java.lang.String b(java.lang.String)>
		SHA-256: 707ff7cf3d9a74358048aee8e48f85a4f2f5db53abb899dab7b84be7d09dd222
		Secure: false
	Object:
		Variable: $r3
		Type: byte[]
		Statement: virtualinvoke $r4.<java.security.SecureRandom: void nextBytes(byte[])>($r3)
		Method: <com.google.android.gms.measurement.internal.zzlb: java.lang.String zzC()>
		SHA-256: 4162e2f8c716403f9a6fdf330ae1d34073a2059bdd1b4342c8f5deb2558aeb49
		Secure: true
	Object:
		Variable: $r1
		Type: byte[]
		Statement: $r1 = virtualinvoke $r2.<java.security.MessageDigest: byte[] digest()>()
		Method: <cz.msebera.android.httpclient.impl.auth.HttpEntityDigester: void close()>
		SHA-256: 6e2f49082bf8a753b36c08d597efa7282d12c9a9b9a86cb704dfeec77e918e7c
		Secure: false
	Object:
		Variable: varReplacer61385
		Type: java.lang.String
		Statement: specialinvoke $r3.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r4, varReplacer61385)
		Method: <com.google.android.exoplayer2.source.hls.Aes128DataSource: long open(com.google.android.exoplayer2.upstream.DataSpec)>
		SHA-256: b3dd140be72d3b11a1423efbc280c6dcd0f5785b27091520ef6848fbe682343c
		Secure: false
	Object:
		Variable: $r6
		Type: javax.crypto.spec.SecretKeySpec
		Statement: specialinvoke $r6.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r4, varReplacer58562)
		Method: <cn.jiguang.aj.a: java.lang.String a(java.lang.String,java.lang.String)>
		SHA-256: f9fbbf599ddb89fde7de7158b7aacb79a629b8268e4e44f52ff5bb6d611439ab
		Secure: false
	Object:
		Variable: $r3
		Type: byte[]
		Statement: $r3 = virtualinvoke $r2.<java.security.MessageDigest: byte[] digest(byte[])>($r3)
		Method: <cn.jiguang.aq.j: java.lang.String d(java.lang.String)>
		SHA-256: 354c8d7eb3ad9f44e2dde20b4f6ae2872c02995d6051681a1c12b73b711aa021
		Secure: false
	Object:
		Variable: $r10
		Type: byte[]
		Statement: $r10 = virtualinvoke $r11.<java.security.MessageDigest: byte[] digest(byte[])>($r10)
		Method: <org.repackage.a.a.a.a.c: java.lang.String b(android.content.Context,java.lang.String)>
		SHA-256: 9ec5ae70ef3a98d4e684f19688e7333e56dce410a01683e2a0e1630b6bfedf9
		Secure: false
	Object:
		Variable: $r3
		Type: java.security.MessageDigest
		Statement: $r3 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer109445)
		Method: <com.google.firebase.installations.local.IidStore: java.lang.String getIdFromPublicKey(java.security.PublicKey)>
		SHA-256: 562b221ec58290492b96de963f5a5dcc6264e88f3b10d472a8d88df91193694b
		Secure: false
	Object:
		Variable: $r5
		Type: javax.crypto.Cipher
		Statement: $r5 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer2643)
		Method: <cn.jiguang.aq.i: byte[] a(byte[],java.lang.String,java.lang.String)>
		SHA-256: 5f329aceefd5306ef8dbad2782b99f9dcb9c4a06fecdbc0b3d04d6b5e822db8c
		Secure: false
	Object:
		Variable: $r5
		Type: javax.crypto.Cipher
		Statement: $r5 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer58565)
		Method: <cn.jiguang.aj.a: java.lang.String a(java.lang.String,java.lang.String)>
		SHA-256: 4cc3ee30c61341e5057b799b03fd3751865559a3275e535e8f64478909e0cf8e
		Secure: false
	Object:
		Variable: $r4
		Type: javax.crypto.spec.SecretKeySpec
		Statement: specialinvoke $r4.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r1, $r6)
		Method: <com.google.android.exoplayer2.upstream.crypto.AesFlushingCipher: void <init>(int,byte[],long,long)>
		SHA-256: b74537962b350a4177adbbed9f7a3ed5332f6f2e5f83a3f91cd4cb1ffac981e2
		Secure: false
	Object:
		Variable: $r1
		Type: byte[]
		Statement: $r0 = virtualinvoke $r6.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r1)
		Method: <cz.msebera.android.httpclient.impl.auth.NTLMEngineImpl: byte[] lmResponse(byte[],byte[])>
		SHA-256: f3032edeac7c36138c9692e3752032f05ac7c2bf8405b2ac66a1a7396af18c32
		Secure: false
	Object:
		Variable: $r1
		Type: java.security.MessageDigest
		Statement: $r1 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer37884)
		Method: <cn.jiguang.y.b: java.lang.String a(byte[])>
		SHA-256: 15e4154047b611ee37e3265a8389a3fc5dd210b8df2305ecb87c4454dde05038
		Secure: false
	Object:
		Variable: $r24
		Type: byte[]
		Statement: $r24 = virtualinvoke $r25.<java.security.MessageDigest: byte[] digest(byte[])>($r24)
		Method: <cz.msebera.android.httpclient.impl.auth.DigestScheme: cz.msebera.android.httpclient.Header createDigestHeader(cz.msebera.android.httpclient.auth.Credentials,cz.msebera.android.httpclient.HttpRequest)>
		SHA-256: d6819f5a090592a9c309f7dee8c1d3060c928c197153632cc3c4595ac59ae53a
		Secure: false
	Object:
		Variable: $r7
		Type: java.security.MessageDigest
		Statement: $r7 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer26939)
		Method: <com.umeng.commonsdk.statistics.common.DeviceConfig: java.lang.String getAppHashKey(android.content.Context)>
		SHA-256: a99239b2a812cd6ac6c257c59ebb9f07c629c23b275b4279f549074bbc29b3d0
		Secure: false
	Object:
		Variable: $r6
		Type: javax.net.ssl.SSLContext
		Statement: $r6 = staticinvoke <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String)>(varReplacer59503)
		Method: <com.tencent.bugly.proguard.s: java.net.HttpURLConnection a(java.lang.String,byte[],java.lang.String,java.util.Map)>
		SHA-256: dd8ffc3b6ab3268f2bdba128b615a97a70194ada40611d0032503a5350916463
		Secure: false
	Object:
		Variable: $r7
		Type: byte[]
		Statement: $r7 = virtualinvoke $r5.<java.security.MessageDigest: byte[] digest(byte[])>($r7)
		Method: <com.google.android.gms.common.util.AndroidUtilsLight: byte[] getPackageCertificateHashBytes(android.content.Context,java.lang.String)>
		SHA-256: b1b700d3bac9a15845b2a1446581968f445f05df9861b6e2918912b25ad1a23d
		Secure: false
	Object:
		Variable: $r8
		Type: byte[]
		Statement: $r8 = virtualinvoke $r7.<java.security.MessageDigest: byte[] digest(byte[])>($r8)
		Method: <com.google.android.gms.measurement.internal.zzjo: java.lang.String zzf(java.lang.String,boolean)>
		SHA-256: 88d1d3ada70c0da35d24d9c784b48a915f00e8c1865310745d646bc130d3ea55
		Secure: false
	Object:
		Variable: $r5
		Type: byte[]
		Statement: $r5 = virtualinvoke $r4.<java.security.MessageDigest: byte[] digest()>()
		Method: <cn.jiguang.an.h: java.lang.String j(java.lang.String)>
		SHA-256: fc77771cacf6044f0dc8d53a32cda3a77719178f29cf376d7c1eb129ffa60285
		Secure: false
	Object:
		Variable: $r7
		Type: byte[]
		Statement: $r7 = virtualinvoke $r12.<java.security.MessageDigest: byte[] digest(byte[])>($r7)
		Method: <com.umeng.commonsdk.statistics.common.DeviceConfig: java.lang.String getAppSHA1Key(android.content.Context)>
		SHA-256: fde844b86f6fb73b809113e67caeb67dde89be080c3307bd545cfaa8d8f7e0ba
		Secure: false
	Object:
		Variable: $r1
		Type: byte[]
		Statement: $r1 = virtualinvoke $r2.<java.security.MessageDigest: byte[] digest(byte[])>($r1)
		Method: <cn.jiguang.an.h: java.lang.String a(byte[])>
		SHA-256: e8b314e19836e611132a0e11243df6ad225e5c24a3359cd1fc7f5074e9774852
		Secure: false
	Object:
		Variable: $r0
		Type: java.security.SecureRandom
		Statement: specialinvoke $r0.<java.security.SecureRandom: void <init>()>()
		Method: <org.eclipse.paho.client.mqttv3.internal.websocket.WebSocketFrame: byte[] generateMaskingKey()>
		SHA-256: ded8c01ae161f817a55af6faa3fd5fe16afaa1e6eb084c4584cbe9739e09cf7b
		Secure: true
	Object:
		Variable: $r2
		Type: byte[]
		Statement: $r2 = virtualinvoke $r1.<java.security.MessageDigest: byte[] digest()>()
		Method: <com.umeng.commonsdk.statistics.common.HelperUtils: java.lang.String getMD5(java.lang.String)>
		SHA-256: 5104e2359e5e1332fae8d6bae6d6c512d8001a7920416b38a7422dc11309faea
		Secure: false
	Object:
		Variable: $r4
		Type: java.security.MessageDigest
		Statement: $r4 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer101525)
		Method: <com.google.firebase.messaging.GmsRpc: java.lang.String getHashedFirebaseAppName()>
		SHA-256: 42bf8ad353be8b6b2eeba8a408bce27adf000e6f491efe76bef4c1240d261b2
		Secure: false
	Object:
		Variable: $r2
		Type: java.security.MessageDigest
		Statement: $r2 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer88381)
		Method: <com.umeng.analytics.filter.d: void <init>(boolean,java.lang.String)>
		SHA-256: c888ef97a96c97a51212cf8e54df8cb4e5d0cb5be6739408165cf5fc122741e1
		Secure: false
	Object:
		Variable: $r2
		Type: java.security.MessageDigest
		Statement: $r2 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer101436)
		Method: <org.eclipse.paho.client.mqttv3.internal.websocket.WebSocketHandshake: byte[] sha1(java.lang.String)>
		SHA-256: 2e4d106894d10c8798224b9b5a141b8c8f9af92b783ca2237444258def9afec9
		Secure: false
	Object:
		Variable: $r0
		Type: byte[]
		Statement: $r0 = virtualinvoke $r4.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r0)
		Method: <cn.jiguang.aj.a: byte[] b(java.lang.String,byte[])>
		SHA-256: cab894800d88244e452ec68016b7e77ef458f7d3cc8b145ed09b5ab7c276fcdb
		Secure: false
	Object:
		Variable: $r4
		Type: java.security.SecureRandom
		Statement: specialinvoke $r4.<java.security.SecureRandom: void <init>()>()
		Method: <cn.jiguang.ad.e: java.util.LinkedList a(java.util.Collection,java.util.Comparator)>
		SHA-256: bafaf02378960ec4c5d421784c3ac6db4671cee3cfe6a73a3c4597725fba9d38
		Secure: true
	Object:
		Variable: $r3
		Type: java.security.KeyFactory
		Statement: $r3 = staticinvoke <java.security.KeyFactory: java.security.KeyFactory getInstance(java.lang.String)>(varReplacer115781)
		Method: <com.google.firebase.installations.local.IidStore: java.security.PublicKey parseKey(java.lang.String)>
		SHA-256: b06f9c20c20e6798f08274e0aeee9b1a6fd6a25cc2fdf2688e105ed3df55fc78
		Secure: false
	Object:
		Variable: varReplacer22765
		Type: java.lang.String
		Statement: $r4 = staticinvoke <java.security.KeyFactory: java.security.KeyFactory getInstance(java.lang.String)>(varReplacer22765)
		Method: <com.ansjer.zccloud_a.AJ_Tools.AJ_Util.EncryptUtil: java.lang.String encrypt256ForKey(java.lang.String,java.lang.String)>
		SHA-256: 8fef0d2ab91f3e5ccc3bdfff2fd988db394315bc87ef51e02d6a8ac9f8ed0c7d
		Secure: false
	Object:
		Variable: $z0
		Type: boolean
		Statement: $z0 = virtualinvoke $r3.<java.security.Signature: boolean verify(byte[])>($r5)
		Method: <org.conscrypt.OpenSSLX509Certificate: void verifyInternal(java.security.PublicKey,java.lang.String)>
		SHA-256: d02affd279e8743b6fd64cdf0e2dd47c30a5603be2e61d5718cf63d25b2d1a15
		Secure: false
	Object:
		Variable: $r12
		Type: javax.crypto.CipherOutputStream
		Statement: specialinvoke $r12.<javax.crypto.CipherOutputStream: void <init>(java.io.OutputStream,javax.crypto.Cipher)>($r5, $r10)
		Method: <com.google.android.exoplayer2.upstream.cache.CachedContentIndex$LegacyStorage: void writeFile(java.util.HashMap)>
		SHA-256: d25fda46376f2e332f56ea026ae45706bde4c3a80699c95ac5175b26870d5614
		Secure: false
	Object:
		Variable: $r6
		Type: javax.net.ssl.SSLParameters
		Statement: specialinvoke $r6.<javax.net.ssl.SSLParameters: void <init>()>()
		Method: <org.eclipse.paho.client.mqttv3.internal.SSLNetworkModule: void start()>
		SHA-256: 859fe0ec5a0ef670ee98b35ac915e8f21b89da12473bd5b28964a8131b54f41c
		Secure: false
	Object:
		Variable: $r2
		Type: java.security.MessageDigest
		Statement: $r2 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer38420)
		Method: <com.tencent.wxop.stat.common.l: java.lang.String a(java.lang.String)>
		SHA-256: 240863f233116351339863899c3c7b03961ea05b07405d02a0a18ff46fecc86f
		Secure: false
	Object:
		Variable: $r0
		Type: java.security.MessageDigest
		Statement: $r0 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer59302)
		Method: <com.google.android.gms.measurement.internal.zzlb: java.security.MessageDigest zzF()>
		SHA-256: 7690a95d3a86cdd1b362767b12a15be4649491f04982692283ed7d1b43cc0b21
		Secure: false
	Object:
		Variable: $r4
		Type: byte[]
		Statement: $r4 = virtualinvoke $r3.<java.security.MessageDigest: byte[] digest()>()
		Method: <cn.jpush.android.i.a: java.lang.String b(java.lang.String)>
		SHA-256: cca55af838b065e1a8855ab490f03bcaf159e3f85dc1821ec3655c415d220b93
		Secure: false
	Object:
		Variable: $r2
		Type: java.security.MessageDigest
		Statement: $r2 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer38493)
		Method: <cn.jiguang.an.h: java.lang.String a(byte[])>
		SHA-256: 9f444fd8a814383e49d1921c6fe4edb004e16f797f283db8a527d1edc8a8fb1f
		Secure: false
	Object:
		Variable: $r19
		Type: java.security.SecureRandom
		Statement: specialinvoke $r19.<java.security.SecureRandom: void <init>()>()
		Method: <com.tencent.bugly.proguard.s: java.net.HttpURLConnection a(java.lang.String,byte[],java.lang.String,java.util.Map)>
		SHA-256: 74a835b022cf167812905f5a4e1bd75e1d6d7871dd54ffd8e196e7a3f52144f1
		Secure: true
	Object:
		Variable: $r3
		Type: javax.crypto.Cipher
		Statement: $r3 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer73858)
		Method: <com.umeng.commonsdk.statistics.common.DataHelper: byte[] decrypt(byte[],byte[])>
		SHA-256: 9ecf2da2dc145b22829b1211c6ef25225fae6e53d546fdeac9b5f8fd5c4441d3
		Secure: false
	Object:
		Variable: $r3
		Type: byte[]
		Statement: $r3 = virtualinvoke $r2.<java.security.MessageDigest: byte[] digest(byte[])>($r3)
		Method: <org.eclipse.paho.client.mqttv3.internal.websocket.WebSocketHandshake: byte[] sha1(java.lang.String)>
		SHA-256: 6eda339e373514871fdcaa5a3395bb2434b6fe5d0b32f9405d0cd6757160c015
		Secure: false
	Object:
		Variable: $r3
		Type: byte[]
		Statement: $r3 = virtualinvoke $r4.<java.security.MessageDigest: byte[] digest(byte[])>($r3)
		Method: <cn.jiguang.an.h: byte[] c(java.lang.String)>
		SHA-256: 8e04f5f351c5314ad968f2250036bfe89b016968ff6b0b7818d5a1d8ce1ad850
		Secure: false
	Object:
		Variable: $r8
		Type: java.security.SecureRandom
		Statement: specialinvoke $r8.<java.security.SecureRandom: void <init>()>()
		Method: <com.umeng.umzid.a: java.lang.String a(java.lang.String,java.lang.String)>
		SHA-256: ecbd309620d763501f9692617ef67b0bec39ad5d88d51d67f1832f5a67cc8eb8
		Secure: true
	Object:
		Variable: $r3
		Type: byte[]
		Statement: $r3 = virtualinvoke $r2.<java.security.MessageDigest: byte[] digest()>()
		Method: <com.tencent.wxop.stat.common.l: java.lang.String a(java.lang.String)>
		SHA-256: 17aa2506a4ae331cf3d9e09b26bd04ae8976bf363f2160247272d313a26c8af
		Secure: false
	Object:
		Variable: $r7
		Type: javax.net.ssl.SSLContext
		Statement: $r7 = staticinvoke <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String,java.lang.String)>($r4, $r3)
		Method: <org.eclipse.paho.client.mqttv3.internal.security.SSLSocketFactoryFactory: javax.net.ssl.SSLContext getSSLContext(java.lang.String)>
		SHA-256: 2de0dbcb962ff3cb3e0d9dc8e9469638e8762c9aa5d9bef5cf875912fda1093
		Secure: false
	Object:
		Variable: $r4
		Type: byte[]
		Statement: $r4 = virtualinvoke $r2.<java.security.MessageDigest: byte[] digest(byte[])>($r4)
		Method: <cn.jiguang.an.h: java.lang.String d(java.lang.String)>
		SHA-256: 6f141be950695537e5e281ebeeac3ddaed64852aea79c68bc29edb43e8b9dc1a
		Secure: false
	Object:
		Variable: $r4
		Type: javax.crypto.Cipher
		Statement: $r4 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer16845)
		Method: <cn.jiguang.aj.a: byte[] a(java.lang.String,byte[])>
		SHA-256: 540044655f9d09f6bc76a737d7bb5c840f8a0e6940c40d7942fb30a2a02520a1
		Secure: false
	Object:
		Variable: $r1
		Type: byte[]
		Statement: $r1 = virtualinvoke $r3.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r1)
		Method: <cz.msebera.android.httpclient.impl.auth.NTLMEngineImpl: byte[] RC4(byte[],byte[])>
		SHA-256: ea5cf3d45880768851153806f1be65c24f77d411cab6ce954960ab1ca31e861e
		Secure: false
	Object:
		Variable: $r18
		Type: javax.net.ssl.SSLContext
		Statement: $r18 = staticinvoke <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String)>(varReplacer3314)
		Method: <cn.jiguang.net.HttpUtils: cn.jiguang.net.HttpResponse a(android.content.Context,cn.jiguang.net.HttpRequest,boolean)>
		SHA-256: f6f3f8c8d9d70b54efb48ca5128a769aaff011001fe70f7667735c3f03dd6cc6
		Secure: false
	Object:
		Variable: $r2
		Type: javax.crypto.Cipher
		Statement: $r2 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer81812)
		Method: <com.google.android.exoplayer2.upstream.crypto.AesFlushingCipher: void <init>(int,byte[],long,long)>
		SHA-256: f109b7b1aaafdcaebde675669bb6ea5a414ec3d4fe1d28acb3c18191f8baaac1
		Secure: false
	Object:
		Variable: $r10
		Type: javax.net.ssl.TrustManager[]
		Statement: $r10 = virtualinvoke $r9.<javax.net.ssl.TrustManagerFactory: javax.net.ssl.TrustManager[] getTrustManagers()>()
		Method: <cn.jiguang.net.SSLTrustManager: void <init>(java.lang.String)>
		SHA-256: b6fd0a6cd040f28a8d8fca717ea6c7f26647dc93295e44bab46e28581ba1766c
		Secure: false
	Object:
		Variable: $r10
		Type: java.security.KeyFactory
		Statement: $r10 = staticinvoke <java.security.KeyFactory: java.security.KeyFactory getInstance(java.lang.String)>($r8)
		Method: <org.conscrypt.OpenSSLX509Certificate: java.security.PublicKey getPublicKey()>
		SHA-256: 6635af12fb8498a7bf018ada279831a6e3024bb07fe12c7daed2b6fbc372e6bb
		Secure: false
	Object:
		Variable: $r16
		Type: javax.net.ssl.KeyManagerFactory
		Statement: $r16 = staticinvoke <javax.net.ssl.KeyManagerFactory: javax.net.ssl.KeyManagerFactory getInstance(java.lang.String)>($r11)
		Method: <org.eclipse.paho.client.mqttv3.internal.security.SSLSocketFactoryFactory: javax.net.ssl.SSLContext getSSLContext(java.lang.String)>
		SHA-256: 3502fa758305a1dec42a6535b8ce8189f7707f9bdc917efceea97f5a2943e84d
		Secure: false
	Object:
		Variable: $r1
		Type: byte[]
		Statement: $r1 = virtualinvoke $r2.<java.security.MessageDigest: byte[] digest(byte[])>($r3)
		Method: <cz.msebera.android.httpclient.impl.auth.NTLMEngineImpl$HMACMD5: byte[] getOutput()>
		SHA-256: 3bcbf4d912455255294e9bee4d91f33f3fa55dd4a67dc970c48252366cf97c1f
		Secure: false
	Object:
		Variable: $r23
		Type: java.security.SecureRandom
		Statement: specialinvoke $r23.<java.security.SecureRandom: void <init>()>()
		Method: <com.umeng.commonsdk.stateless.c: boolean a(byte[],java.lang.String,java.lang.String,java.lang.String)>
		SHA-256: 7cc3697dbaae7f7936bc7ec84bff49a6210dc401c39deff6279b7b6fd66006fb
		Secure: true
	Object:
		Variable: $r0
		Type: javax.crypto.spec.SecretKeySpec
		Statement: specialinvoke $r0.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r2, varReplacer73860)
		Method: <com.umeng.commonsdk.statistics.common.DataHelper: byte[] decrypt(byte[],byte[])>
		SHA-256: 92a5396f0b454be8dcbc6b33c5d0ab7e7a41d8199d925d77a8037b0db9390d52
		Secure: false
	Object:
		Variable: $r4
		Type: java.security.MessageDigest
		Statement: $r4 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>($r3)
		Method: <cz.msebera.android.httpclient.impl.auth.DigestScheme: java.security.MessageDigest createMessageDigest(java.lang.String)>
		SHA-256: bafd683999767fa653a59f6561b5fb73a4ec80f20b87a366e3f277c0d9c77bd
		Secure: false
	Object:
		Variable: $r1
		Type: byte[]
		Statement: $r1 = virtualinvoke $r2.<java.security.MessageDigest: byte[] digest(byte[])>($r1)
		Method: <cn.jiguang.aq.j: java.lang.String a(byte[])>
		SHA-256: 7c5b6d59c8f6bdbc3513cbc47d0ae703649f2024df7f1ccca3ef8d3e2dc739db
		Secure: false
	Object:
		Variable: $r0
		Type: byte[]
		Statement: $r0 = virtualinvoke $r1.<java.security.MessageDigest: byte[] digest()>()
		Method: <com.tencent.bugly.proguard.z: java.lang.String a(byte[])>
		SHA-256: 451ad225d7d0ac8b9d9347017e17ad7754b254cc36229b28b99753fd4401a88e
		Secure: false
	Object:
		Variable: varReplacer122820
		Type: java.lang.String
		Statement: specialinvoke $r2.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r1, varReplacer122820)
		Method: <cz.msebera.android.httpclient.impl.auth.NTLMEngineImpl: java.security.Key createDESKey(byte[],int)>
		SHA-256: 384e65399a440de0beb0b9894ed029a4a554518ad964112e39ff64a2f9a743cf
		Secure: false
	Object:
		Variable: $r1
		Type: javax.crypto.spec.SecretKeySpec
		Statement: specialinvoke $r1.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r4, varReplacer2645)
		Method: <cn.jiguang.aq.i: byte[] a(byte[],java.lang.String,java.lang.String)>
		SHA-256: f69a839325cb49a67b35046d5a0f29d664ab0799be2280b7bf3c058e6af3568f
		Secure: false
	Object:
		Variable: $r1
		Type: java.security.spec.X509EncodedKeySpec
		Statement: specialinvoke $r1.<java.security.spec.X509EncodedKeySpec: void <init>(byte[])>($r9)
		Method: <org.conscrypt.OpenSSLX509Certificate: java.security.PublicKey getPublicKey()>
		SHA-256: 7ac05a324707752a8fcdd9787a5fcda4e6af85c295ea6bb9f2ffcf779c41a30d
		Secure: false
	Object:
		Variable: $r3
		Type: javax.crypto.Cipher
		Statement: $r3 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer18738)
		Method: <cn.jiguang.aq.i: java.lang.String a(java.lang.String,java.lang.String)>
		SHA-256: 6fe88247f3233d2a906f4cae4ec77e9264812a2983f359070518def9829945ba
		Secure: false
	Object:
		Variable: $r7
		Type: javax.net.ssl.SSLContext
		Statement: $r7 = staticinvoke <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String)>($r4)
		Method: <org.eclipse.paho.client.mqttv3.internal.security.SSLSocketFactoryFactory: javax.net.ssl.SSLContext getSSLContext(java.lang.String)>
		SHA-256: faf8a006ee2bf18d70acac36e6184b973d313a1f622eaa10afaeb42c1349d99c
		Secure: false
	Object:
		Variable: $r3
		Type: byte[]
		Statement: $r3 = virtualinvoke $r2.<java.security.MessageDigest: byte[] digest(byte[])>($r3)
		Method: <cn.jiguang.an.h: java.lang.String e(java.lang.String)>
		SHA-256: 300139f5a2e4da5d94b2d2bb180cabc9f3d13f865a686cf9b8441d5a01cdd020
		Secure: false
	Object:
		Variable: $r24
		Type: javax.net.ssl.TrustManagerFactory
		Statement: $r24 = staticinvoke <javax.net.ssl.TrustManagerFactory: javax.net.ssl.TrustManagerFactory getInstance(java.lang.String,java.lang.String)>($r11, $r12)
		Method: <org.eclipse.paho.client.mqttv3.internal.security.SSLSocketFactoryFactory: javax.net.ssl.SSLContext getSSLContext(java.lang.String)>
		SHA-256: 36aad3a7128ef6c5c4c8e28147cfe970adbc54360b24bb8da366ddc36b69fda8
		Secure: false
	Object:
		Variable: $r2
		Type: java.security.MessageDigest
		Statement: $r2 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer2321)
		Method: <cn.jiguang.aq.j: java.lang.String c(java.lang.String)>
		SHA-256: 9fc95c24f22440613d5d9d8b2b4bd2bf1b0fccd3ab29fcf1bc0e635dad35f966
		Secure: false
	Object:
		Variable: $r2
		Type: java.security.MessageDigest
		Statement: $r2 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>($r1)
		Method: <okio.ByteString: okio.ByteString digest(java.lang.String)>
		SHA-256: b336d574501b28a5bd90db22472c23a68acb0c1b99c4f14746fdc2a23c69a24e
		Secure: false
	Object:
		Variable: $r25
		Type: javax.net.ssl.TrustManager[]
		Statement: $r25 = virtualinvoke $r24.<javax.net.ssl.TrustManagerFactory: javax.net.ssl.TrustManager[] getTrustManagers()>()
		Method: <org.eclipse.paho.client.mqttv3.internal.security.SSLSocketFactoryFactory: javax.net.ssl.SSLContext getSSLContext(java.lang.String)>
		SHA-256: 4845d370b2525dcea0df759ea58084eaf3dcb6fdbc3f0bf5f8bd3b0be6f2613e
		Secure: false
	Object:
		Variable: $r4
		Type: java.security.MessageDigest
		Statement: $r4 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer38490)
		Method: <cn.jiguang.an.h: byte[] c(java.lang.String)>
		SHA-256: e27193ac160d5e4d85911f54499a32b7f82c65481a6d2cb2619806f5a3ead0ae
		Secure: false
	Object:
		Variable: $i0
		Type: int
		Statement: $i0 = virtualinvoke $r0.<java.security.SecureRandom: int nextInt()>()
		Method: <cn.jiguang.aj.a: int b()>
		SHA-256: a92e255ecf1c4b0793017d047e6e13aae7c25b02df9f529744de195548adda8e
		Secure: true
	Object:
		Variable: $r5
		Type: java.security.PublicKey
		Statement: $r5 = virtualinvoke $r3.<java.security.KeyFactory: java.security.PublicKey generatePublic(java.security.spec.KeySpec)>($r4)
		Method: <com.google.firebase.installations.local.IidStore: java.security.PublicKey parseKey(java.lang.String)>
		SHA-256: 28692ce99d5c8ca35ce46bda2fa73a18f9a164f9dc67aed298a1311d42163d12
		Secure: false
	Object:
		Variable: $r2
		Type: java.security.MessageDigest
		Statement: $r2 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer3334)
		Method: <cn.jiguang.aq.j: java.lang.String d(java.lang.String)>
		SHA-256: 5940fc3dd1831a92b938764590228886baaa6709ddb6d3f4570697256142e5d4
		Secure: false
	Object:
		Variable: $r4
		Type: java.security.SecureRandom
		Statement: specialinvoke $r4.<java.security.SecureRandom: void <init>()>()
		Method: <cn.jiguang.af.l: int a(android.content.Context)>
		SHA-256: 20cfc0d1623ffbfe71fc2377e00ddb32201ad23ebdfe9211bc0113e303c297f9
		Secure: true
	Object:
		Variable: $r9
		Type: byte[]
		Statement: virtualinvoke $r11.<java.security.SecureRandom: void nextBytes(byte[])>($r9)
		Method: <com.google.android.gms.measurement.internal.zzdy: void zzo()>
		SHA-256: 68f4b1bf01a60f6f97cb55ddca0672bd44e0d72693ad10f994a7e35089c2e64b
		Secure: true
	Object:
		Variable: $r3
		Type: byte[]
		Statement: $r3 = virtualinvoke $r2.<java.security.MessageDigest: byte[] digest()>()
		Method: <cz.msebera.android.httpclient.impl.auth.NTLMEngineImpl$HMACMD5: byte[] getOutput()>
		SHA-256: 8dda2f10cd4911a51ea6f84d756034bbd2b170b00e8eb73d84894dc35d4275e0
		Secure: false
	Object:
		Variable: $r2
		Type: java.security.SecureRandom
		Statement: specialinvoke $r2.<java.security.SecureRandom: void <init>()>()
		Method: <cn.jiguang.an.k: java.util.LinkedList a(java.util.Collection)>
		SHA-256: 89d556094d3bdf46fe319854d7ffcaf50daf38921638631be504e9ecd3cca359
		Secure: true
	Object:
		Variable: varReplacer73860
		Type: java.lang.String
		Statement: specialinvoke $r0.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r2, varReplacer73860)
		Method: <com.umeng.commonsdk.statistics.common.DataHelper: byte[] decrypt(byte[],byte[])>
		SHA-256: 917acf4063b9dd381f2e9a61519703671a064d033c8ee81ff0ceb863ca5048bb
		Secure: false
	Object:
		Variable: $r3
		Type: java.security.MessageDigest
		Statement: $r3 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer51322)
		Method: <com.umeng.commonsdk.statistics.common.HelperUtils: java.lang.String MD5(java.lang.String)>
		SHA-256: 71e526727e87d8263e80382724e31459c915c24d767fdf02f96f0561565b6b8b
		Secure: false
	Object:
		Variable: $r2
		Type: java.security.MessageDigest
		Statement: $r2 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer123750)
		Method: <cz.msebera.android.httpclient.impl.auth.NTLMEngineImpl$HMACMD5: void <init>(byte[])>
		SHA-256: 28e5ed933f75575fbf5d411612e1f4c4188548067733770dac32b57ae8e74117
		Secure: false
	Object:
		Variable: $r8
		Type: javax.crypto.CipherInputStream
		Statement: specialinvoke $r8.<javax.crypto.CipherInputStream: void <init>(java.io.InputStream,javax.crypto.Cipher)>($r6, $r1)
		Method: <com.google.android.exoplayer2.source.hls.Aes128DataSource: long open(com.google.android.exoplayer2.upstream.DataSpec)>
		SHA-256: e899dee01d55d270e79a5441cb05f39cda46030c1ce70bb65798863cf7de103a
		Secure: false
	Object:
		Variable: $r24
		Type: byte[]
		Statement: $r24 = virtualinvoke $r25.<java.security.MessageDigest: byte[] digest(byte[])>($r24)
		Method: <cz.msebera.android.httpclient.impl.auth.DigestScheme: cz.msebera.android.httpclient.Header createDigestHeader(cz.msebera.android.httpclient.auth.Credentials,cz.msebera.android.httpclient.HttpRequest)>
		SHA-256: d6819f5a090592a9c309f7dee8c1d3060c928c197153632cc3c4595ac59ae53a
		Secure: false
	Object:
		Variable: $r0
		Type: java.security.SecureRandom
		Statement: specialinvoke $r0.<java.security.SecureRandom: void <init>()>()
		Method: <cn.jiguang.aj.a: int b()>
		SHA-256: d70bbec740c21fcf3a4782571db424a1867ce6766b07594df8a77d108df5fc08
		Secure: true
	Object:
		Variable: $r2
		Type: javax.net.ssl.TrustManager[]
		Statement: $r2 = virtualinvoke $r1.<javax.net.ssl.TrustManagerFactory: javax.net.ssl.TrustManager[] getTrustManagers()>()
		Method: <okhttp3.internal.Util: javax.net.ssl.X509TrustManager platformTrustManager()>
		SHA-256: dea0af93b06734ae35228a014521e6e031131dd2b357359826afa61f9a6de1b
		Secure: false
	Object:
		Variable: $r17
		Type: javax.net.ssl.KeyManager[]
		Statement: $r17 = virtualinvoke $r16.<javax.net.ssl.KeyManagerFactory: javax.net.ssl.KeyManager[] getKeyManagers()>()
		Method: <org.eclipse.paho.client.mqttv3.internal.security.SSLSocketFactoryFactory: javax.net.ssl.SSLContext getSSLContext(java.lang.String)>
		SHA-256: cd0e3b76762bcc893e3b8c71b838de88e9ec2eaaec5c03709c5f4ebb7add121e
		Secure: false
	Object:
		Variable: $r3
		Type: java.security.Signature
		Statement: $r3 = staticinvoke <java.security.Signature: java.security.Signature getInstance(java.lang.String)>($r2)
		Method: <org.conscrypt.OpenSSLX509Certificate: void verifyInternal(java.security.PublicKey,java.lang.String)>
		SHA-256: f325059ee6f08c9776202e677308b0f19ca0767a6821e36b4f64a531d072fa45
		Secure: false
	Object:
		Variable: $r4
		Type: javax.crypto.spec.IvParameterSpec
		Statement: specialinvoke $r4.<javax.crypto.spec.IvParameterSpec: void <init>(byte[])>($r2)
		Method: <com.umeng.commonsdk.statistics.common.DataHelper: byte[] encrypt(byte[],byte[])>
		SHA-256: 8c92239549b791eec36fcf19c5707015e0a093611d03a5fdedca9a5fb8c08413
		Secure: false
	Object:
		Variable: $r0
		Type: javax.crypto.spec.SecretKeySpec
		Statement: specialinvoke $r0.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r2, varReplacer27165)
		Method: <com.umeng.commonsdk.statistics.common.DataHelper: byte[] encrypt(byte[],byte[])>
		SHA-256: fe778475690b92ed854020f801e2e1b7c57e6067c5f0201af6ffa8f17166459
		Secure: false
	Object:
		Variable: $r1
		Type: java.security.SecureRandom
		Statement: specialinvoke $r1.<java.security.SecureRandom: void <init>()>()
		Method: <cn.jiguang.aj.a: int a()>
		SHA-256: b4c07faabdabf41bddd9d6b0c0cc4b23a040738888fd76d3ad15a4fd3f6f3c64
		Secure: true
	Object:
		Variable: $r18
		Type: javax.crypto.CipherInputStream
		Statement: specialinvoke $r18.<javax.crypto.CipherInputStream: void <init>(java.io.InputStream,javax.crypto.Cipher)>($r11, $r14)
		Method: <com.google.android.exoplayer2.upstream.cache.CachedContentIndex$LegacyStorage: boolean readFile(java.util.HashMap,android.util.SparseArray)>
		SHA-256: 6b30d6219e1be8a5e0a9a049ef7eb5d6780a49f6a7b22f8ed8fe44856ade655b
		Secure: false
	Object:
		Variable: $r4
		Type: java.security.KeyFactory
		Statement: $r4 = staticinvoke <java.security.KeyFactory: java.security.KeyFactory getInstance(java.lang.String)>(varReplacer22765)
		Method: <com.ansjer.zccloud_a.AJ_Tools.AJ_Util.EncryptUtil: java.lang.String encrypt256ForKey(java.lang.String,java.lang.String)>
		SHA-256: 844e22a05513b3f5ea6aa5f4f9c5a6acce8e743920866fbef81b36a1c0b14e35
		Secure: false
	Object:
		Variable: $r1
		Type: java.security.MessageDigest
		Statement: $r1 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer27081)
		Method: <com.umeng.commonsdk.statistics.common.HelperUtils: java.lang.String getUmengMD5(java.lang.String)>
		SHA-256: 43a641d4b2a0cc29243754b3f8a07dfb905d4407ac59aadc486cc64c6a24f84e
		Secure: false
	Object:
		Variable: $r18
		Type: java.security.SecureRandom
		Statement: specialinvoke $r18.<java.security.SecureRandom: void <init>()>()
		Method: <com.danikula.videocache.HttpUrlSource: java.net.HttpURLConnection openConnection(long,int)>
		SHA-256: 24cb8ec019a6120aa4c340e90c7b8badefc0e5d9dd079ca2b9228f34ae3aac56
		Secure: true
	Object:
		Variable: $r0
		Type: javax.net.ssl.SSLContext
		Statement: $r0 = staticinvoke <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String)>(varReplacer64992)
		Method: <cz.msebera.android.httpclient.conn.ssl.SSLContexts: javax.net.ssl.SSLContext createDefault()>
		SHA-256: 742fd729814ff70d921f30d6ed54cccfb93043b191bda030d7bf384e50291d0d
		Secure: false
	Object:
		Variable: $r1
		Type: java.security.MessageDigest
		Statement: $r1 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer17645)
		Method: <com.tencent.bugly.proguard.z: java.lang.String a(byte[])>
		SHA-256: 9d195f0fc37a41b617d279c1ad80c050ed1ab615dd0f3e654c299ec162f137
		Secure: false
	Object:
		Variable: $r3
		Type: byte[]
		Statement: $r3 = virtualinvoke $r4.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r3)
		Method: <cn.jiguang.aj.a: java.lang.String a(java.lang.String)>
		SHA-256: 463f4205bb0921258e6c3f59980ebd34de6675709c95623ce44a61fa524f7a98
		Secure: false

Findings in Java Class: cn.jiguang.aq.j

	 in Method: java.lang.String c(java.lang.String)
		ConstraintError violating CrySL rule for java.security.MessageDigest (on Object #9fc95c24f22440613d5d9d8b2b4bd2bf1b0fccd3ab29fcf1bc0e635dad35f966)
			First parameter (with value "MD5") should be any of {SHA-256, SHA-384, SHA-512}
			at statement: $r2 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer2321)


	 in Method: java.lang.String a(byte[])
		ConstraintError violating CrySL rule for java.security.MessageDigest (on Object #438257716b6664332b613cf3471bd93340fd738a2112a3550c14668a9a33a431)
			First parameter (with value "SHA1") should be any of {SHA-256, SHA-384, SHA-512}
			at statement: $r2 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer3074)


	 in Method: java.lang.String d(java.lang.String)
		ConstraintError violating CrySL rule for java.security.MessageDigest (on Object #5940fc3dd1831a92b938764590228886baaa6709ddb6d3f4570697256142e5d4)
			First parameter (with value "MD5") should be any of {SHA-256, SHA-384, SHA-512}
			at statement: $r2 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer3334)


Findings in Java Class: cn.jiguang.aq.i

	 in Method: byte[] a(byte[],java.lang.String,java.lang.String)
		RequiredPredicateError violating CrySL rule for javax.crypto.Cipher
			Second parameter was not properly generated as generatedKey
			at statement: virtualinvoke $r5.<javax.crypto.Cipher: void init(int,java.security.Key,java.security.spec.AlgorithmParameterSpec)>(varReplacer2644, $r1, $r6)

		RequiredPredicateError violating CrySL rule for javax.crypto.Cipher
			Third parameter was not properly generated as preparedIV [ with CBC, It's required to use IVParameterSpec]
			at statement: virtualinvoke $r5.<javax.crypto.Cipher: void init(int,java.security.Key,java.security.spec.AlgorithmParameterSpec)>(varReplacer2644, $r1, $r6)

		ConstraintError violating CrySL rule for javax.crypto.Cipher (on Object #5f329aceefd5306ef8dbad2782b99f9dcb9c4a06fecdbc0b3d04d6b5e822db8c)
			First parameter (with value "AES/CBC/PKCS7Padding") should be any of AES/CBC/{PKCS5Padding, ISO10126Padding}
			at statement: $r5 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer2643)

		RequiredPredicateError violating CrySL rule for javax.crypto.spec.SecretKeySpec
			First parameter was not properly generated as preparedKeyMaterial
			at statement: specialinvoke $r1.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r4, varReplacer2645)


	 in Method: java.security.interfaces.RSAPublicKey c(java.lang.String)
		RequiredPredicateError violating CrySL rule for java.security.KeyFactory
			First parameter was not properly generated as speccedKey
			at statement: $r5 = virtualinvoke $r4.<java.security.KeyFactory: java.security.PublicKey generatePublic(java.security.spec.KeySpec)>($r0)

		RequiredPredicateError violating CrySL rule for java.security.spec.X509EncodedKeySpec
			First parameter was not properly generated as preparedKeyMaterial
			at statement: specialinvoke $r0.<java.security.spec.X509EncodedKeySpec: void <init>(byte[])>($r3)


	 in Method: java.lang.String a(java.lang.String,java.lang.String)
		RequiredPredicateError violating CrySL rule for javax.crypto.Cipher
			Second parameter was not properly generated as generatedKey
			at statement: virtualinvoke $r3.<javax.crypto.Cipher: void init(int,java.security.Key)>(varReplacer18737, $r2)


Findings in Java Class: cn.jiguang.net.HttpUtils

	 in Method: cn.jiguang.net.HttpResponse a(android.content.Context,cn.jiguang.net.HttpRequest,boolean)
		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			Second parameter was not properly generated as generatedTrustManagers
			at statement: virtualinvoke $r18.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>(varReplacer3302, $r42, $r20)

		ConstraintError violating CrySL rule for javax.net.ssl.SSLContext (on Object #f6f3f8c8d9d70b54efb48ca5128a769aaff011001fe70f7667735c3f03dd6cc6)
			First parameter (with value "TLS") should be any of {TLSv1.2}
			at statement: $r18 = staticinvoke <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String)>(varReplacer3314)

		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			First parameter was not properly generated as generatedKeyManagers
			at statement: virtualinvoke $r18.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>(varReplacer3302, $r42, $r20)

		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			Third parameter was not properly generated as randomized
			at statement: virtualinvoke $r18.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>(varReplacer3302, $r42, $r20)


Findings in Java Class: cn.jiguang.an.h

	 in Method: java.lang.String d(java.lang.String)
		ConstraintError violating CrySL rule for java.security.MessageDigest (on Object #83fc3b91003c8f763cf7487e60a7a336cf6336ff485e09e4e007276069b57b40)
			First parameter (with value "MD5") should be any of {SHA-256, SHA-384, SHA-512}
			at statement: $r2 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer3372)


	 in Method: java.lang.String e(java.lang.String)
		ConstraintError violating CrySL rule for java.security.MessageDigest (on Object #8f8b43881f0039777f3e927b02434023e8728c22614a232c641f085b485aabfe)
			First parameter (with value "MD5") should be any of {SHA-256, SHA-384, SHA-512}
			at statement: $r2 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer37878)


	 in Method: byte[] c(java.lang.String)
		ConstraintError violating CrySL rule for java.security.MessageDigest (on Object #e27193ac160d5e4d85911f54499a32b7f82c65481a6d2cb2619806f5a3ead0ae)
			First parameter (with value "MD5") should be any of {SHA-256, SHA-384, SHA-512}
			at statement: $r4 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer38490)


	 in Method: java.lang.String a(byte[])
		ConstraintError violating CrySL rule for java.security.MessageDigest (on Object #9f444fd8a814383e49d1921c6fe4edb004e16f797f283db8a527d1edc8a8fb1f)
			First parameter (with value "SHA1") should be any of {SHA-256, SHA-384, SHA-512}
			at statement: $r2 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer38493)


	 in Method: java.lang.String j(java.lang.String)
		ConstraintError violating CrySL rule for java.security.MessageDigest (on Object #509934874de0c52acd76ba6f37cf6bc15847ab107e8c5191b8639688d6f558e8)
			First parameter (with value "MD5") should be any of {SHA-256, SHA-384, SHA-512}
			at statement: $r4 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer39899)


Findings in Java Class: com.umeng.umzid.a

	 in Method: java.lang.String a(java.lang.String,java.lang.String)
		ConstraintError violating CrySL rule for javax.net.ssl.SSLContext (on Object #16d20f88bdbcb1f4a295a5816ff096ce536571ed0bf3b5d75ec1afea3b22d5a5)
			First parameter (with value "TLS") should be any of {TLSv1.2}
			at statement: $r7 = staticinvoke <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String)>(varReplacer15890)

		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			First parameter was not properly generated as generatedKeyManagers
			at statement: virtualinvoke $r7.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>(varReplacer15893, varReplacer15893, $r8)

		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			Second parameter was not properly generated as generatedTrustManagers
			at statement: virtualinvoke $r7.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>(varReplacer15893, varReplacer15893, $r8)


Findings in Java Class: cn.jiguang.aj.a

	 in Method: byte[] a(java.lang.String,byte[])
		RequiredPredicateError violating CrySL rule for javax.crypto.Cipher
			Second parameter was not properly generated as generatedKey
			at statement: virtualinvoke $r4.<javax.crypto.Cipher: void init(int,java.security.Key,java.security.spec.AlgorithmParameterSpec)>(varReplacer16850, $r3, $r5)

		RequiredPredicateError violating CrySL rule for javax.crypto.spec.SecretKeySpec
			First parameter was not properly generated as preparedKeyMaterial
			at statement: specialinvoke $r3.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r2, varReplacer16847)

		ConstraintError violating CrySL rule for javax.crypto.Cipher (on Object #540044655f9d09f6bc76a737d7bb5c840f8a0e6940c40d7942fb30a2a02520a1)
			First parameter (with value "AES/CBC/PKCS7Padding") should be any of AES/CBC/{PKCS5Padding, ISO10126Padding}
			at statement: $r4 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer16845)

		RequiredPredicateError violating CrySL rule for javax.crypto.Cipher
			Third parameter was not properly generated as preparedIV [ with CBC, It's required to use IVParameterSpec]
			at statement: virtualinvoke $r4.<javax.crypto.Cipher: void init(int,java.security.Key,java.security.spec.AlgorithmParameterSpec)>(varReplacer16850, $r3, $r5)


	 in Method: byte[] b(java.lang.String,byte[])
		RequiredPredicateError violating CrySL rule for javax.crypto.spec.SecretKeySpec
			First parameter was not properly generated as preparedKeyMaterial
			at statement: specialinvoke $r3.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r2, varReplacer18390)

		RequiredPredicateError violating CrySL rule for javax.crypto.Cipher
			Second parameter was not properly generated as generatedKey
			at statement: virtualinvoke $r4.<javax.crypto.Cipher: void init(int,java.security.Key,java.security.spec.AlgorithmParameterSpec)>(varReplacer18396, $r3, $r5)

		ConstraintError violating CrySL rule for javax.crypto.Cipher (on Object #5c93ccaddbc63a3fe31d698fb88ce72d52b98c444aa30269a93659b3642fc302)
			First parameter (with value "AES/CBC/PKCS7Padding") should be any of AES/CBC/{PKCS5Padding, ISO10126Padding}
			at statement: $r4 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer18392)


	 in Method: java.lang.String a(java.lang.String)
		RequiredPredicateError violating CrySL rule for javax.crypto.Cipher
			Third parameter was not properly generated as preparedIV [ with CBC, It's required to use IVParameterSpec]
			at statement: virtualinvoke $r4.<javax.crypto.Cipher: void init(int,java.security.Key,java.security.spec.AlgorithmParameterSpec)>(varReplacer39148, $r0, $r5)

		RequiredPredicateError violating CrySL rule for javax.crypto.Cipher
			Second parameter was not properly generated as generatedKey
			at statement: virtualinvoke $r4.<javax.crypto.Cipher: void init(int,java.security.Key,java.security.spec.AlgorithmParameterSpec)>(varReplacer39148, $r0, $r5)

		RequiredPredicateError violating CrySL rule for javax.crypto.spec.SecretKeySpec
			First parameter was not properly generated as preparedKeyMaterial
			at statement: specialinvoke $r0.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r3, varReplacer39144)


	 in Method: java.lang.String a(java.lang.String,java.lang.String)
		RequiredPredicateError violating CrySL rule for javax.crypto.spec.SecretKeySpec
			First parameter was not properly generated as preparedKeyMaterial
			at statement: specialinvoke $r6.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r4, varReplacer58562)

		RequiredPredicateError violating CrySL rule for javax.crypto.Cipher
			Second parameter was not properly generated as generatedKey
			at statement: virtualinvoke $r5.<javax.crypto.Cipher: void init(int,java.security.Key,java.security.spec.AlgorithmParameterSpec)>(varReplacer58560, $r6, $r7)


Findings in Java Class: com.tencent.bugly.proguard.z

	 in Method: java.lang.String a(byte[])
		ConstraintError violating CrySL rule for java.security.MessageDigest (on Object #9d195f0fc37a41b617d279c1ad80c050ed1ab615dd0f3e654c299ec162f137)
			First parameter (with value "SHA-1") should be any of {SHA-256, SHA-384, SHA-512}
			at statement: $r1 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer17645)


Findings in Java Class: cn.jpush.android.i.a

	 in Method: java.lang.String b(java.lang.String)
		ConstraintError violating CrySL rule for java.security.MessageDigest (on Object #707ff7cf3d9a74358048aee8e48f85a4f2f5db53abb899dab7b84be7d09dd222)
			First parameter (with value "MD5") should be any of {SHA-256, SHA-384, SHA-512}
			at statement: $r3 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer18882)


Findings in Java Class: cn.jiguang.net.SSLTrustManager

	 in Method: void <init>(java.lang.String)
		IncompleteOperationError violating CrySL rule for java.security.KeyStore (on Object #f28011150a4bb300a355fb4dc4ea3ec76b4742c66dcf35452b59248f5af174b4)
			Operation on object of type java.security.KeyStore object not completed. Expected call to store
			at statement: virtualinvoke $r9.<javax.net.ssl.TrustManagerFactory: void init(java.security.KeyStore)>($r8)

		RequiredPredicateError violating CrySL rule for javax.net.ssl.TrustManagerFactory
			First parameter was not properly generated as generatedKeyStore
			at statement: virtualinvoke $r9.<javax.net.ssl.TrustManagerFactory: void init(java.security.KeyStore)>($r8)


Findings in Java Class: com.umeng.commonsdk.stateless.c

	 in Method: boolean a(byte[],java.lang.String,java.lang.String,java.lang.String)
		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			Second parameter was not properly generated as generatedTrustManagers
			at statement: virtualinvoke $r22.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>(varReplacer26658, varReplacer26658, $r23)

		ConstraintError violating CrySL rule for javax.net.ssl.SSLContext (on Object #16ce56cac6fc129ee2c3b718a93875846caba5c1c01b40cfd9cc14e7705f89c9)
			First parameter (with value "TLS") should be any of {TLSv1.2}
			at statement: $r22 = staticinvoke <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String)>(varReplacer26649)

		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			First parameter was not properly generated as generatedKeyManagers
			at statement: virtualinvoke $r22.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>(varReplacer26658, varReplacer26658, $r23)


Findings in Java Class: com.umeng.commonsdk.statistics.common.DeviceConfig

	 in Method: java.lang.String getAppHashKey(android.content.Context)
		ConstraintError violating CrySL rule for java.security.MessageDigest (on Object #a99239b2a812cd6ac6c257c59ebb9f07c629c23b275b4279f549074bbc29b3d0)
			First parameter (with value "SHA") should be any of {SHA-256, SHA-384, SHA-512}
			at statement: $r7 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer26939)


	 in Method: java.lang.String getAppSHA1Key(android.content.Context)
		ConstraintError violating CrySL rule for java.security.MessageDigest (on Object #bcb3c02317c4de79206367208c1a76fa186954e7e5afd9a03dbdb43cc55ac800)
			First parameter (with value "SHA1") should be any of {SHA-256, SHA-384, SHA-512}
			at statement: $r12 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer26945)


	 in Method: java.lang.String getAppMD5Signature(android.content.Context)
		ConstraintError violating CrySL rule for java.security.MessageDigest (on Object #8ee8ed7d0450b8c3980221afedb6bccda196b94fcbb2e56c022b3cfed374a9b4)
			First parameter (with value "MD5") should be any of {SHA-256, SHA-384, SHA-512}
			at statement: $r12 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer26948)


Findings in Java Class: com.umeng.commonsdk.statistics.common.HelperUtils

	 in Method: java.lang.String getUmengMD5(java.lang.String)
		ConstraintError violating CrySL rule for java.security.MessageDigest (on Object #43a641d4b2a0cc29243754b3f8a07dfb905d4407ac59aadc486cc64c6a24f84e)
			First parameter (with value "MD5") should be any of {SHA-256, SHA-384, SHA-512}
			at statement: $r1 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer27081)


	 in Method: java.lang.String MD5(java.lang.String)
		ConstraintError violating CrySL rule for java.security.MessageDigest (on Object #71e526727e87d8263e80382724e31459c915c24d767fdf02f96f0561565b6b8b)
			First parameter (with value "MD5") should be any of {SHA-256, SHA-384, SHA-512}
			at statement: $r3 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer51322)


	 in Method: java.lang.String getMD5(java.lang.String)
		ConstraintError violating CrySL rule for java.security.MessageDigest (on Object #2c3506f0d61e8595d4c17acaeabaf32768e03edf70ca6cc255047dcd76520f70)
			First parameter (with value "MD5") should be any of {SHA-256, SHA-384, SHA-512}
			at statement: $r1 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer52584)


Findings in Java Class: com.umeng.commonsdk.statistics.common.DataHelper

	 in Method: byte[] encrypt(byte[],byte[])
		RequiredPredicateError violating CrySL rule for javax.crypto.Cipher
			Third parameter was not properly generated as preparedIV [ with CBC, It's required to use IVParameterSpec]
			at statement: virtualinvoke $r3.<javax.crypto.Cipher: void init(int,java.security.Key,java.security.spec.AlgorithmParameterSpec)>(varReplacer27167, $r0, $r4)

		ConstraintError violating CrySL rule for javax.crypto.Cipher (on Object #25a7c75ce3827fc6e960a0d5eddefe0073fce3b8eca750355dbaa4fe7e0cfdb9)
			First parameter (with value "AES/CBC/PKCS7Padding") should be any of AES/CBC/{PKCS5Padding, ISO10126Padding}
			at statement: $r3 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer27166)

		RequiredPredicateError violating CrySL rule for javax.crypto.spec.IvParameterSpec
			First parameter was not properly generated as randomized
			at statement: specialinvoke $r4.<javax.crypto.spec.IvParameterSpec: void <init>(byte[])>($r2)

		NeverTypeOfError violating CrySL rule for javax.crypto.spec.SecretKeySpec (on Object #fe778475690b92ed854020f801e2e1b7c57e6067c5f0201af6ffa8f17166459)
			First parameter should never be of type java.lang.String.
			at statement: specialinvoke $r0.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r2, varReplacer27165)

		RequiredPredicateError violating CrySL rule for javax.crypto.Cipher
			Second parameter was not properly generated as generatedKey
			at statement: virtualinvoke $r3.<javax.crypto.Cipher: void init(int,java.security.Key,java.security.spec.AlgorithmParameterSpec)>(varReplacer27167, $r0, $r4)

		NeverTypeOfError violating CrySL rule for javax.crypto.spec.SecretKeySpec (on Object #fe778475690b92ed854020f801e2e1b7c57e6067c5f0201af6ffa8f17166459)
			First parameter should never be of type java.lang.String.
			at statement: specialinvoke $r0.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r2, varReplacer27165)

		RequiredPredicateError violating CrySL rule for javax.crypto.spec.SecretKeySpec
			First parameter was not properly generated as preparedKeyMaterial
			at statement: specialinvoke $r0.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r2, varReplacer27165)

		NeverTypeOfError violating CrySL rule for javax.crypto.spec.SecretKeySpec (on Object #fe778475690b92ed854020f801e2e1b7c57e6067c5f0201af6ffa8f17166459)
			First parameter should never be of type java.lang.String.
			at statement: specialinvoke $r0.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r2, varReplacer27165)

		NeverTypeOfError violating CrySL rule for javax.crypto.spec.SecretKeySpec (on Object #fe778475690b92ed854020f801e2e1b7c57e6067c5f0201af6ffa8f17166459)
			First parameter should never be of type java.lang.String.
			at statement: specialinvoke $r0.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r2, varReplacer27165)

		NeverTypeOfError violating CrySL rule for javax.crypto.spec.SecretKeySpec (on Object #fe778475690b92ed854020f801e2e1b7c57e6067c5f0201af6ffa8f17166459)
			First parameter should never be of type java.lang.String.
			at statement: specialinvoke $r0.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r2, varReplacer27165)

		NeverTypeOfError violating CrySL rule for javax.crypto.spec.SecretKeySpec (on Object #fe778475690b92ed854020f801e2e1b7c57e6067c5f0201af6ffa8f17166459)
			First parameter should never be of type java.lang.String.
			at statement: specialinvoke $r0.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r2, varReplacer27165)


	 in Method: byte[] hash(byte[])
		ConstraintError violating CrySL rule for java.security.MessageDigest (on Object #a0dd8061bd08f829e433a84f686a3c14598b374dd5c5ff16f183e809525f0821)
			First parameter (with value "MD5") should be any of {SHA-256, SHA-384, SHA-512}
			at statement: $r2 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer73838)


	 in Method: byte[] decrypt(byte[],byte[])
		RequiredPredicateError violating CrySL rule for javax.crypto.spec.SecretKeySpec
			First parameter was not properly generated as preparedKeyMaterial
			at statement: specialinvoke $r0.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r2, varReplacer73860)

		RequiredPredicateError violating CrySL rule for javax.crypto.spec.IvParameterSpec
			First parameter was not properly generated as randomized
			at statement: specialinvoke $r4.<javax.crypto.spec.IvParameterSpec: void <init>(byte[])>($r2)

		RequiredPredicateError violating CrySL rule for javax.crypto.Cipher
			Second parameter was not properly generated as generatedKey
			at statement: virtualinvoke $r3.<javax.crypto.Cipher: void init(int,java.security.Key,java.security.spec.AlgorithmParameterSpec)>(varReplacer73859, $r0, $r4)

		ConstraintError violating CrySL rule for javax.crypto.Cipher (on Object #9ecf2da2dc145b22829b1211c6ef25225fae6e53d546fdeac9b5f8fd5c4441d3)
			First parameter (with value "AES/CBC/PKCS7Padding") should be any of AES/CBC/{PKCS5Padding, ISO10126Padding}
			at statement: $r3 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer73858)


Findings in Java Class: com.google.android.gms.common.util.AndroidUtilsLight

	 in Method: java.security.MessageDigest zza(java.lang.String)
		ConstraintError violating CrySL rule for java.security.MessageDigest (on Object #c613dcbe025721f48d3fcab4e003017d7cb704971fc9d0296bae42be0b7eb30a)
			First parameter (with value "SHA1") should be any of {SHA-256, SHA-384, SHA-512}
			at statement: $r0 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>($r2)

		IncompleteOperationError violating CrySL rule for java.security.MessageDigest (on Object #c613dcbe025721f48d3fcab4e003017d7cb704971fc9d0296bae42be0b7eb30a)
			Operation on object of type java.security.MessageDigest object not completed. Expected call to digest, update
			at statement: $r0 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>($r2)


	 in Method: byte[] getPackageCertificateHashBytes(android.content.Context,java.lang.String)
		IncompleteOperationError violating CrySL rule for java.security.MessageDigest (on Object #c613dcbe025721f48d3fcab4e003017d7cb704971fc9d0296bae42be0b7eb30a)
			Operation on object of type java.security.MessageDigest object not completed. Expected call to digest, update
			at statement: $r5 = staticinvoke <com.google.android.gms.common.util.AndroidUtilsLight: java.security.MessageDigest zza(java.lang.String)>(varReplacer100420)


Findings in Java Class: org.eclipse.paho.client.mqttv3.internal.SSLNetworkModule

	 in Method: void start()
		IncompleteOperationError violating CrySL rule for javax.net.ssl.SSLParameters (on Object #859fe0ec5a0ef670ee98b35ac915e8f21b89da12473bd5b28964a8131b54f41c)
			Operation on object of type javax.net.ssl.SSLParameters object not completed. Expected call to setProtocols, setCipherSuites
			at statement: virtualinvoke $r9.<javax.net.ssl.SSLSocket: void setSSLParameters(javax.net.ssl.SSLParameters)>($r6)

		IncompleteOperationError violating CrySL rule for javax.net.ssl.SSLParameters (on Object #859fe0ec5a0ef670ee98b35ac915e8f21b89da12473bd5b28964a8131b54f41c)
			Operation on object of type javax.net.ssl.SSLParameters object not completed. Expected call to setProtocols, setCipherSuites
			at statement: virtualinvoke $r9.<javax.net.ssl.SSLSocket: void setSSLParameters(javax.net.ssl.SSLParameters)>($r6)

		IncompleteOperationError violating CrySL rule for javax.net.ssl.SSLParameters (on Object #859fe0ec5a0ef670ee98b35ac915e8f21b89da12473bd5b28964a8131b54f41c)
			Operation on object of type javax.net.ssl.SSLParameters object not completed. Expected call to setProtocols, setCipherSuites
			at statement: virtualinvoke $r9.<javax.net.ssl.SSLSocket: void setSSLParameters(javax.net.ssl.SSLParameters)>($r6)

		IncompleteOperationError violating CrySL rule for javax.net.ssl.SSLParameters (on Object #859fe0ec5a0ef670ee98b35ac915e8f21b89da12473bd5b28964a8131b54f41c)
			Operation on object of type javax.net.ssl.SSLParameters object not completed. Expected call to setProtocols, setCipherSuites
			at statement: virtualinvoke $r9.<javax.net.ssl.SSLSocket: void setSSLParameters(javax.net.ssl.SSLParameters)>($r6)


Findings in Java Class: com.umeng.umzid.ZIDManager

	 in Method: org.json.JSONObject a(android.content.Context,org.json.JSONObject)
		ConstraintError violating CrySL rule for java.security.MessageDigest (on Object #d3eec370ccdaafaa6dde7614bfde860ebbcff1ab43a3b55ca8681ec7b352fdd2)
			First parameter (with value "MD5") should be any of {SHA-256, SHA-384, SHA-512}
			at statement: $r31 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer33972)


Findings in Java Class: cn.jiguang.y.b

	 in Method: org.json.JSONObject a(android.content.Context)
		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			First parameter was not properly generated as generatedKeyManagers
			at statement: virtualinvoke $r18.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>(varReplacer37852, $r55, $r21)

		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			Third parameter was not properly generated as randomized
			at statement: virtualinvoke $r18.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>(varReplacer37852, $r55, $r21)

		ConstraintError violating CrySL rule for javax.net.ssl.SSLContext (on Object #5ed0ccc7450aa3f6b42994bd8a6b6e39e11c46e118d8381b1bca2cb2a29c43a1)
			First parameter (with value "TLS") should be any of {TLSv1.2}
			at statement: $r18 = staticinvoke <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String)>(varReplacer37857)

		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			Second parameter was not properly generated as generatedTrustManagers
			at statement: virtualinvoke $r18.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>(varReplacer37852, $r55, $r21)


	 in Method: java.lang.String a(byte[])
		ConstraintError violating CrySL rule for java.security.MessageDigest (on Object #15e4154047b611ee37e3265a8389a3fc5dd210b8df2305ecb87c4454dde05038)
			First parameter (with value "MD5") should be any of {SHA-256, SHA-384, SHA-512}
			at statement: $r1 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer37884)


Findings in Java Class: com.tencent.wxop.stat.common.l

	 in Method: java.lang.String a(java.lang.String)
		ConstraintError violating CrySL rule for java.security.MessageDigest (on Object #240863f233116351339863899c3c7b03961ea05b07405d02a0a18ff46fecc86f)
			First parameter (with value "MD5") should be any of {SHA-256, SHA-384, SHA-512}
			at statement: $r2 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer38420)


Findings in Java Class: com.ansjer.timeline.TextUtil

	 in Method: java.lang.String md5(java.lang.String)
		ConstraintError violating CrySL rule for java.security.MessageDigest (on Object #bf7d3ba1f1e706f1f055d4c6e8a1b5ae9d71ce0edde2e98884d4a869211b31e5)
			First parameter (with value "MD5") should be any of {SHA-256, SHA-384, SHA-512}
			at statement: $r1 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer39282)


Findings in Java Class: okhttp3.internal.platform.Platform

	 in Method: javax.net.ssl.SSLContext getSSLContext()
		ConstraintError violating CrySL rule for javax.net.ssl.SSLContext (on Object #acbc0fe39497f7c5b4e9483e99d4956aeb448f118ae2ab8c42d8ac851bcfdcd7)
			First parameter (with value "TLS") should be any of {TLSv1.2}
			at statement: $r4 = staticinvoke <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String)>(varReplacer45802)


Findings in Java Class: okhttp3.internal.platform.ConscryptPlatform

	 in Method: javax.net.ssl.SSLContext getSSLContext()
		ConstraintError violating CrySL rule for javax.net.ssl.SSLContext (on Object #98a00029a7692901a128f1a20b16d6f68433a5098f7b13c7e3b130b504f95b2a)
			First parameter (with value "TLSv1.3") should be any of {TLSv1.2}
			at statement: $r3 = staticinvoke <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String,java.security.Provider)>(varReplacer45804, $r2)

		ConstraintError violating CrySL rule for javax.net.ssl.SSLContext (on Object #85975f0a648b10836b67ca74aa8ad210a2d529eb31e9d0adb8eb017218a166cb)
			First parameter (with value "TLS") should be any of {TLSv1.2}
			at statement: $r3 = staticinvoke <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String,java.security.Provider)>(varReplacer45806, $r2)


Findings in Java Class: okhttp3.internal.platform.AndroidPlatform

	 in Method: javax.net.ssl.SSLContext getSSLContext()
		ConstraintError violating CrySL rule for javax.net.ssl.SSLContext (on Object #8ebf2d8b8a1bd1542a470b41631ca939b4165c7cdc9bbcfd6de392b9fb0c4390)
			First parameter (with value "TLS") should be any of {TLSv1.2}
			at statement: $r3 = staticinvoke <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String)>(varReplacer45808)


Findings in Java Class: com.google.android.gms.measurement.internal.zzlb

	 in Method: java.security.MessageDigest zzF()
		ConstraintError violating CrySL rule for java.security.MessageDigest (on Object #7690a95d3a86cdd1b362767b12a15be4649491f04982692283ed7d1b43cc0b21)
			First parameter (with value "MD5") should be any of {SHA-256, SHA-384, SHA-512}
			at statement: $r0 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer59302)

		IncompleteOperationError violating CrySL rule for java.security.MessageDigest (on Object #7690a95d3a86cdd1b362767b12a15be4649491f04982692283ed7d1b43cc0b21)
			Operation on object of type java.security.MessageDigest object not completed. Expected call to digest, update
			at statement: $r0 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer59302)


Findings in Java Class: com.google.android.gms.measurement.internal.zzjo

	 in Method: java.lang.String zzf(java.lang.String,boolean)
		IncompleteOperationError violating CrySL rule for java.security.MessageDigest (on Object #7690a95d3a86cdd1b362767b12a15be4649491f04982692283ed7d1b43cc0b21)
			Operation on object of type java.security.MessageDigest object not completed. Expected call to digest, update
			at statement: $r7 = staticinvoke <com.google.android.gms.measurement.internal.zzlb: java.security.MessageDigest zzF()>()


Findings in Java Class: com.google.android.gms.measurement.internal.zzdy

	 in Method: com.google.android.gms.measurement.internal.zzq zzj(java.lang.String)
		IncompleteOperationError violating CrySL rule for java.security.MessageDigest (on Object #7690a95d3a86cdd1b362767b12a15be4649491f04982692283ed7d1b43cc0b21)
			Operation on object of type java.security.MessageDigest object not completed. Expected call to digest, update
			at statement: $r17 = staticinvoke <com.google.android.gms.measurement.internal.zzlb: java.security.MessageDigest zzF()>()

		IncompleteOperationError violating CrySL rule for java.security.MessageDigest (on Object #7690a95d3a86cdd1b362767b12a15be4649491f04982692283ed7d1b43cc0b21)
			Operation on object of type java.security.MessageDigest object not completed. Expected call to update, java.security.MessageDigest: byte[] digest(byte[])
			at statement: $r24 = virtualinvoke $r17.<java.security.MessageDigest: byte[] digest(byte[])>($r24)


Findings in Java Class: com.google.android.gms.measurement.internal.zzkv

	 in Method: long zzd(byte[])
		IncompleteOperationError violating CrySL rule for java.security.MessageDigest (on Object #7690a95d3a86cdd1b362767b12a15be4649491f04982692283ed7d1b43cc0b21)
			Operation on object of type java.security.MessageDigest object not completed. Expected call to digest, update
			at statement: $r4 = staticinvoke <com.google.android.gms.measurement.internal.zzlb: java.security.MessageDigest zzF()>()


Findings in Java Class: com.tencent.bugly.proguard.s

	 in Method: java.net.HttpURLConnection a(java.lang.String,byte[],java.lang.String,java.util.Map)
		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			Second parameter was not properly generated as generatedTrustManagers
			at statement: virtualinvoke $r6.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>(varReplacer59496, $r20, $r7)

		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			Third parameter was not properly generated as randomized
			at statement: virtualinvoke $r6.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>(varReplacer59496, $r20, $r7)

		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			First parameter was not properly generated as generatedKeyManagers
			at statement: virtualinvoke $r6.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>(varReplacer59496, $r20, $r7)

		ConstraintError violating CrySL rule for javax.net.ssl.SSLContext (on Object #dd8ffc3b6ab3268f2bdba128b615a97a70194ada40611d0032503a5350916463)
			First parameter (with value "TLS") should be any of {TLSv1.2}
			at statement: $r6 = staticinvoke <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String)>(varReplacer59503)


Findings in Java Class: com.google.android.exoplayer2.source.hls.HlsMediaChunk

	 in Method: void loadMedia()
		IncompleteOperationError violating CrySL rule for javax.crypto.CipherInputStream (on Object #e899dee01d55d270e79a5441cb05f39cda46030c1ce70bb65798863cf7de103a)
			Operation on object of type javax.crypto.CipherInputStream object not completed. Expected call to read
			at statement: specialinvoke r0.<com.google.android.exoplayer2.source.hls.HlsMediaChunk: void feedDataToExtractor(com.google.android.exoplayer2.upstream.DataSource,com.google.android.exoplayer2.upstream.DataSpec,boolean)>($r2, $r3, $z0)

		IncompleteOperationError violating CrySL rule for javax.crypto.Cipher (on Object #f109b7b1aaafdcaebde675669bb6ea5a414ec3d4fe1d28acb3c18191f8baaac1)
			Operation on object of type javax.crypto.Cipher object not completed. Expected call to init, update, wrap, doFinal
			at statement: specialinvoke r0.<com.google.android.exoplayer2.source.hls.HlsMediaChunk: void feedDataToExtractor(com.google.android.exoplayer2.upstream.DataSource,com.google.android.exoplayer2.upstream.DataSpec,boolean)>($r2, $r3, $z0)


	 in Method: void maybeLoadInitData()
		IncompleteOperationError violating CrySL rule for javax.crypto.Cipher (on Object #f109b7b1aaafdcaebde675669bb6ea5a414ec3d4fe1d28acb3c18191f8baaac1)
			Operation on object of type javax.crypto.Cipher object not completed. Expected call to init, update, wrap, doFinal
			at statement: specialinvoke r0.<com.google.android.exoplayer2.source.hls.HlsMediaChunk: void feedDataToExtractor(com.google.android.exoplayer2.upstream.DataSource,com.google.android.exoplayer2.upstream.DataSpec,boolean)>($r2, $r1, $z0)

		IncompleteOperationError violating CrySL rule for javax.crypto.CipherInputStream (on Object #e899dee01d55d270e79a5441cb05f39cda46030c1ce70bb65798863cf7de103a)
			Operation on object of type javax.crypto.CipherInputStream object not completed. Expected call to read
			at statement: specialinvoke r0.<com.google.android.exoplayer2.source.hls.HlsMediaChunk: void feedDataToExtractor(com.google.android.exoplayer2.upstream.DataSource,com.google.android.exoplayer2.upstream.DataSpec,boolean)>($r2, $r1, $z0)


Findings in Java Class: com.google.android.exoplayer2.upstream.FileDataSource

	 in Method: void close()
		IncompleteOperationError violating CrySL rule for javax.crypto.Cipher (on Object #f109b7b1aaafdcaebde675669bb6ea5a414ec3d4fe1d28acb3c18191f8baaac1)
			Operation on object of type javax.crypto.Cipher object not completed. Expected call to init, update, wrap, doFinal
			at statement: virtualinvoke r0.<com.google.android.exoplayer2.upstream.FileDataSource: void transferEnded()>()

		IncompleteOperationError violating CrySL rule for javax.crypto.CipherInputStream (on Object #e899dee01d55d270e79a5441cb05f39cda46030c1ce70bb65798863cf7de103a)
			Operation on object of type javax.crypto.CipherInputStream object not completed. Expected call to read
			at statement: virtualinvoke r0.<com.google.android.exoplayer2.upstream.FileDataSource: void transferEnded()>()


	 in Method: long open(com.google.android.exoplayer2.upstream.DataSpec)
		IncompleteOperationError violating CrySL rule for javax.crypto.Cipher (on Object #f109b7b1aaafdcaebde675669bb6ea5a414ec3d4fe1d28acb3c18191f8baaac1)
			Operation on object of type javax.crypto.Cipher object not completed. Expected call to init, update, wrap, doFinal
			at statement: virtualinvoke r0.<com.google.android.exoplayer2.upstream.FileDataSource: void transferInitializing(com.google.android.exoplayer2.upstream.DataSpec)>($r1)


Findings in Java Class: com.google.android.exoplayer2.upstream.DefaultHttpDataSource

	 in Method: void close()
		IncompleteOperationError violating CrySL rule for javax.crypto.Cipher (on Object #f109b7b1aaafdcaebde675669bb6ea5a414ec3d4fe1d28acb3c18191f8baaac1)
			Operation on object of type javax.crypto.Cipher object not completed. Expected call to init, update, wrap, doFinal
			at statement: virtualinvoke r0.<com.google.android.exoplayer2.upstream.DefaultHttpDataSource: void transferEnded()>()

		IncompleteOperationError violating CrySL rule for javax.crypto.CipherInputStream (on Object #e899dee01d55d270e79a5441cb05f39cda46030c1ce70bb65798863cf7de103a)
			Operation on object of type javax.crypto.CipherInputStream object not completed. Expected call to read
			at statement: specialinvoke r0.<com.google.android.exoplayer2.upstream.DefaultHttpDataSource: void closeConnectionQuietly()>()

		IncompleteOperationError violating CrySL rule for javax.crypto.Cipher (on Object #f109b7b1aaafdcaebde675669bb6ea5a414ec3d4fe1d28acb3c18191f8baaac1)
			Operation on object of type javax.crypto.Cipher object not completed. Expected call to init, update, wrap, doFinal
			at statement: specialinvoke r0.<com.google.android.exoplayer2.upstream.DefaultHttpDataSource: void closeConnectionQuietly()>()

		IncompleteOperationError violating CrySL rule for javax.crypto.CipherInputStream (on Object #e899dee01d55d270e79a5441cb05f39cda46030c1ce70bb65798863cf7de103a)
			Operation on object of type javax.crypto.CipherInputStream object not completed. Expected call to read
			at statement: virtualinvoke r0.<com.google.android.exoplayer2.upstream.DefaultHttpDataSource: void transferEnded()>()


	 in Method: java.net.HttpURLConnection makeConnection(com.google.android.exoplayer2.upstream.DataSpec)
		IncompleteOperationError violating CrySL rule for javax.crypto.Cipher (on Object #f109b7b1aaafdcaebde675669bb6ea5a414ec3d4fe1d28acb3c18191f8baaac1)
			Operation on object of type javax.crypto.Cipher object not completed. Expected call to init, update, wrap, doFinal
			at statement: $r8 = specialinvoke r0.<com.google.android.exoplayer2.upstream.DefaultHttpDataSource: java.net.HttpURLConnection makeConnection(java.net.URL,int,byte[],long,long,boolean,boolean,java.util.Map)>($r3, $i2, $r6, $l3, $l4, $z0, varReplacer81819, $r7)


	 in Method: void skipInternal()
		IncompleteOperationError violating CrySL rule for javax.crypto.Cipher (on Object #f109b7b1aaafdcaebde675669bb6ea5a414ec3d4fe1d28acb3c18191f8baaac1)
			Operation on object of type javax.crypto.Cipher object not completed. Expected call to init, update, wrap, doFinal
			at statement: virtualinvoke r0.<com.google.android.exoplayer2.upstream.DefaultHttpDataSource: void bytesTransferred(int)>($i3)


	 in Method: long open(com.google.android.exoplayer2.upstream.DataSpec)
		IncompleteOperationError violating CrySL rule for javax.crypto.Cipher (on Object #f109b7b1aaafdcaebde675669bb6ea5a414ec3d4fe1d28acb3c18191f8baaac1)
			Operation on object of type javax.crypto.Cipher object not completed. Expected call to init, update, wrap, doFinal
			at statement: specialinvoke r0.<com.google.android.exoplayer2.upstream.DefaultHttpDataSource: void closeConnectionQuietly()>()

		IncompleteOperationError violating CrySL rule for javax.crypto.Cipher (on Object #f109b7b1aaafdcaebde675669bb6ea5a414ec3d4fe1d28acb3c18191f8baaac1)
			Operation on object of type javax.crypto.Cipher object not completed. Expected call to init, update, wrap, doFinal
			at statement: specialinvoke r0.<com.google.android.exoplayer2.upstream.DefaultHttpDataSource: void closeConnectionQuietly()>()

		IncompleteOperationError violating CrySL rule for javax.crypto.Cipher (on Object #f109b7b1aaafdcaebde675669bb6ea5a414ec3d4fe1d28acb3c18191f8baaac1)
			Operation on object of type javax.crypto.Cipher object not completed. Expected call to init, update, wrap, doFinal
			at statement: specialinvoke r0.<com.google.android.exoplayer2.upstream.DefaultHttpDataSource: void closeConnectionQuietly()>()

		IncompleteOperationError violating CrySL rule for javax.crypto.Cipher (on Object #f109b7b1aaafdcaebde675669bb6ea5a414ec3d4fe1d28acb3c18191f8baaac1)
			Operation on object of type javax.crypto.Cipher object not completed. Expected call to init, update, wrap, doFinal
			at statement: specialinvoke r0.<com.google.android.exoplayer2.upstream.DefaultHttpDataSource: void closeConnectionQuietly()>()


Findings in Java Class: com.google.android.exoplayer2.upstream.AssetDataSource

	 in Method: void close()
		IncompleteOperationError violating CrySL rule for javax.crypto.Cipher (on Object #f109b7b1aaafdcaebde675669bb6ea5a414ec3d4fe1d28acb3c18191f8baaac1)
			Operation on object of type javax.crypto.Cipher object not completed. Expected call to init, update, wrap, doFinal
			at statement: virtualinvoke r0.<com.google.android.exoplayer2.upstream.AssetDataSource: void transferEnded()>()

		IncompleteOperationError violating CrySL rule for javax.crypto.CipherInputStream (on Object #e899dee01d55d270e79a5441cb05f39cda46030c1ce70bb65798863cf7de103a)
			Operation on object of type javax.crypto.CipherInputStream object not completed. Expected call to read
			at statement: virtualinvoke r0.<com.google.android.exoplayer2.upstream.AssetDataSource: void transferEnded()>()


	 in Method: long open(com.google.android.exoplayer2.upstream.DataSpec)
		IncompleteOperationError violating CrySL rule for javax.crypto.Cipher (on Object #f109b7b1aaafdcaebde675669bb6ea5a414ec3d4fe1d28acb3c18191f8baaac1)
			Operation on object of type javax.crypto.Cipher object not completed. Expected call to init, update, wrap, doFinal
			at statement: virtualinvoke r0.<com.google.android.exoplayer2.upstream.AssetDataSource: void transferInitializing(com.google.android.exoplayer2.upstream.DataSpec)>($r1)


Findings in Java Class: com.google.android.exoplayer2.upstream.cache.CacheDataSource

	 in Method: void close()
		IncompleteOperationError violating CrySL rule for javax.crypto.CipherInputStream (on Object #e899dee01d55d270e79a5441cb05f39cda46030c1ce70bb65798863cf7de103a)
			Operation on object of type javax.crypto.CipherInputStream object not completed. Expected call to read
			at statement: specialinvoke r0.<com.google.android.exoplayer2.upstream.cache.CacheDataSource: void handleBeforeThrow(java.lang.Throwable)>($r2)

		IncompleteOperationError violating CrySL rule for javax.crypto.Cipher (on Object #f109b7b1aaafdcaebde675669bb6ea5a414ec3d4fe1d28acb3c18191f8baaac1)
			Operation on object of type javax.crypto.Cipher object not completed. Expected call to init, update, wrap, doFinal
			at statement: specialinvoke r0.<com.google.android.exoplayer2.upstream.cache.CacheDataSource: void handleBeforeThrow(java.lang.Throwable)>($r2)


	 in Method: long open(com.google.android.exoplayer2.upstream.DataSpec)
		IncompleteOperationError violating CrySL rule for javax.crypto.Cipher (on Object #f109b7b1aaafdcaebde675669bb6ea5a414ec3d4fe1d28acb3c18191f8baaac1)
			Operation on object of type javax.crypto.Cipher object not completed. Expected call to init, update, wrap, doFinal
			at statement: specialinvoke r0.<com.google.android.exoplayer2.upstream.cache.CacheDataSource: void handleBeforeThrow(java.lang.Throwable)>($r10)

		IncompleteOperationError violating CrySL rule for javax.crypto.Cipher (on Object #f109b7b1aaafdcaebde675669bb6ea5a414ec3d4fe1d28acb3c18191f8baaac1)
			Operation on object of type javax.crypto.Cipher object not completed. Expected call to init, update, wrap, doFinal
			at statement: $i0 = specialinvoke r0.<com.google.android.exoplayer2.upstream.cache.CacheDataSource: int shouldIgnoreCacheForRequest(com.google.android.exoplayer2.upstream.DataSpec)>($r1)

		IncompleteOperationError violating CrySL rule for javax.crypto.Cipher (on Object #f109b7b1aaafdcaebde675669bb6ea5a414ec3d4fe1d28acb3c18191f8baaac1)
			Operation on object of type javax.crypto.Cipher object not completed. Expected call to init, update, wrap, doFinal
			at statement: specialinvoke r0.<com.google.android.exoplayer2.upstream.cache.CacheDataSource: void notifyCacheIgnored(int)>($i0)


	 in Method: int read(byte[],int,int)
		IncompleteOperationError violating CrySL rule for javax.crypto.Cipher (on Object #f109b7b1aaafdcaebde675669bb6ea5a414ec3d4fe1d28acb3c18191f8baaac1)
			Operation on object of type javax.crypto.Cipher object not completed. Expected call to init, update, wrap, doFinal
			at statement: specialinvoke r0.<com.google.android.exoplayer2.upstream.cache.CacheDataSource: void handleBeforeThrow(java.lang.Throwable)>($r3)

		IncompleteOperationError violating CrySL rule for javax.crypto.Cipher (on Object #f109b7b1aaafdcaebde675669bb6ea5a414ec3d4fe1d28acb3c18191f8baaac1)
			Operation on object of type javax.crypto.Cipher object not completed. Expected call to init, update, wrap, doFinal
			at statement: specialinvoke r0.<com.google.android.exoplayer2.upstream.cache.CacheDataSource: void handleBeforeThrow(java.lang.Throwable)>($r4)


Findings in Java Class: com.google.android.exoplayer2.upstream.ContentDataSource

	 in Method: void close()
		IncompleteOperationError violating CrySL rule for javax.crypto.CipherInputStream (on Object #e899dee01d55d270e79a5441cb05f39cda46030c1ce70bb65798863cf7de103a)
			Operation on object of type javax.crypto.CipherInputStream object not completed. Expected call to read
			at statement: virtualinvoke r0.<com.google.android.exoplayer2.upstream.ContentDataSource: void transferEnded()>()

		IncompleteOperationError violating CrySL rule for javax.crypto.CipherInputStream (on Object #e899dee01d55d270e79a5441cb05f39cda46030c1ce70bb65798863cf7de103a)
			Operation on object of type javax.crypto.CipherInputStream object not completed. Expected call to read
			at statement: virtualinvoke r0.<com.google.android.exoplayer2.upstream.ContentDataSource: void transferEnded()>()

		IncompleteOperationError violating CrySL rule for javax.crypto.CipherInputStream (on Object #e899dee01d55d270e79a5441cb05f39cda46030c1ce70bb65798863cf7de103a)
			Operation on object of type javax.crypto.CipherInputStream object not completed. Expected call to read
			at statement: virtualinvoke r0.<com.google.android.exoplayer2.upstream.ContentDataSource: void transferEnded()>()

		IncompleteOperationError violating CrySL rule for javax.crypto.Cipher (on Object #f109b7b1aaafdcaebde675669bb6ea5a414ec3d4fe1d28acb3c18191f8baaac1)
			Operation on object of type javax.crypto.Cipher object not completed. Expected call to init, update, wrap, doFinal
			at statement: virtualinvoke r0.<com.google.android.exoplayer2.upstream.ContentDataSource: void transferEnded()>()

		IncompleteOperationError violating CrySL rule for javax.crypto.Cipher (on Object #f109b7b1aaafdcaebde675669bb6ea5a414ec3d4fe1d28acb3c18191f8baaac1)
			Operation on object of type javax.crypto.Cipher object not completed. Expected call to init, update, wrap, doFinal
			at statement: virtualinvoke r0.<com.google.android.exoplayer2.upstream.ContentDataSource: void transferEnded()>()

		IncompleteOperationError violating CrySL rule for javax.crypto.Cipher (on Object #f109b7b1aaafdcaebde675669bb6ea5a414ec3d4fe1d28acb3c18191f8baaac1)
			Operation on object of type javax.crypto.Cipher object not completed. Expected call to init, update, wrap, doFinal
			at statement: virtualinvoke r0.<com.google.android.exoplayer2.upstream.ContentDataSource: void transferEnded()>()


	 in Method: long open(com.google.android.exoplayer2.upstream.DataSpec)
		IncompleteOperationError violating CrySL rule for javax.crypto.Cipher (on Object #f109b7b1aaafdcaebde675669bb6ea5a414ec3d4fe1d28acb3c18191f8baaac1)
			Operation on object of type javax.crypto.Cipher object not completed. Expected call to init, update, wrap, doFinal
			at statement: virtualinvoke r0.<com.google.android.exoplayer2.upstream.ContentDataSource: void transferInitializing(com.google.android.exoplayer2.upstream.DataSpec)>($r1)


Findings in Java Class: com.google.android.exoplayer2.upstream.RawResourceDataSource

	 in Method: void close()
		IncompleteOperationError violating CrySL rule for javax.crypto.CipherInputStream (on Object #e899dee01d55d270e79a5441cb05f39cda46030c1ce70bb65798863cf7de103a)
			Operation on object of type javax.crypto.CipherInputStream object not completed. Expected call to read
			at statement: virtualinvoke r0.<com.google.android.exoplayer2.upstream.RawResourceDataSource: void transferEnded()>()

		IncompleteOperationError violating CrySL rule for javax.crypto.CipherInputStream (on Object #e899dee01d55d270e79a5441cb05f39cda46030c1ce70bb65798863cf7de103a)
			Operation on object of type javax.crypto.CipherInputStream object not completed. Expected call to read
			at statement: virtualinvoke r0.<com.google.android.exoplayer2.upstream.RawResourceDataSource: void transferEnded()>()

		IncompleteOperationError violating CrySL rule for javax.crypto.CipherInputStream (on Object #e899dee01d55d270e79a5441cb05f39cda46030c1ce70bb65798863cf7de103a)
			Operation on object of type javax.crypto.CipherInputStream object not completed. Expected call to read
			at statement: virtualinvoke r0.<com.google.android.exoplayer2.upstream.RawResourceDataSource: void transferEnded()>()

		IncompleteOperationError violating CrySL rule for javax.crypto.Cipher (on Object #f109b7b1aaafdcaebde675669bb6ea5a414ec3d4fe1d28acb3c18191f8baaac1)
			Operation on object of type javax.crypto.Cipher object not completed. Expected call to init, update, wrap, doFinal
			at statement: virtualinvoke r0.<com.google.android.exoplayer2.upstream.RawResourceDataSource: void transferEnded()>()

		IncompleteOperationError violating CrySL rule for javax.crypto.Cipher (on Object #f109b7b1aaafdcaebde675669bb6ea5a414ec3d4fe1d28acb3c18191f8baaac1)
			Operation on object of type javax.crypto.Cipher object not completed. Expected call to init, update, wrap, doFinal
			at statement: virtualinvoke r0.<com.google.android.exoplayer2.upstream.RawResourceDataSource: void transferEnded()>()

		IncompleteOperationError violating CrySL rule for javax.crypto.Cipher (on Object #f109b7b1aaafdcaebde675669bb6ea5a414ec3d4fe1d28acb3c18191f8baaac1)
			Operation on object of type javax.crypto.Cipher object not completed. Expected call to init, update, wrap, doFinal
			at statement: virtualinvoke r0.<com.google.android.exoplayer2.upstream.RawResourceDataSource: void transferEnded()>()


	 in Method: long open(com.google.android.exoplayer2.upstream.DataSpec)
		IncompleteOperationError violating CrySL rule for javax.crypto.Cipher (on Object #f109b7b1aaafdcaebde675669bb6ea5a414ec3d4fe1d28acb3c18191f8baaac1)
			Operation on object of type javax.crypto.Cipher object not completed. Expected call to init, update, wrap, doFinal
			at statement: virtualinvoke r0.<com.google.android.exoplayer2.upstream.RawResourceDataSource: void transferInitializing(com.google.android.exoplayer2.upstream.DataSpec)>($r2)


Findings in Java Class: com.google.android.exoplayer2.extractor.DefaultExtractorInput

	 in Method: int readFromDataSource(byte[],int,int,int,boolean)
		IncompleteOperationError violating CrySL rule for javax.crypto.CipherInputStream (on Object #e899dee01d55d270e79a5441cb05f39cda46030c1ce70bb65798863cf7de103a)
			Operation on object of type javax.crypto.CipherInputStream object not completed. Expected call to java.io.InputStream: int read(byte[],int,int), javax.crypto.CipherInputStream: int read(), java.io.InputStream: int read(byte[]), java.io.FilterInputStream: int read(byte[],int,int), javax.crypto.CipherInputStream: int read(byte[]), java.io.InputStream: int read(), java.io.FilterInputStream: int read(byte[]), java.io.FilterInputStream: int read(), javax.crypto.CipherInputStream: int read(byte[],int,int)
			at statement: $i0 = interfaceinvoke $r2.<com.google.android.exoplayer2.upstream.DataSource: int read(byte[],int,int)>($r1, $i0, $i1)

		IncompleteOperationError violating CrySL rule for javax.crypto.Cipher (on Object #f109b7b1aaafdcaebde675669bb6ea5a414ec3d4fe1d28acb3c18191f8baaac1)
			Operation on object of type javax.crypto.Cipher object not completed. Expected call to init, update, wrap, doFinal
			at statement: $i0 = interfaceinvoke $r2.<com.google.android.exoplayer2.upstream.DataSource: int read(byte[],int,int)>($r1, $i0, $i1)


Findings in Java Class: cz.msebera.android.httpclient.conn.ssl.SSLContexts

	 in Method: javax.net.ssl.SSLContext createDefault()
		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			First parameter was not properly generated as generatedKeyManagers
			at statement: virtualinvoke $r0.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>(varReplacer64993, varReplacer64993, varReplacer64993)

		ConstraintError violating CrySL rule for javax.net.ssl.SSLContext (on Object #742fd729814ff70d921f30d6ed54cccfb93043b191bda030d7bf384e50291d0d)
			First parameter (with value "TLS") should be any of {TLSv1.2}
			at statement: $r0 = staticinvoke <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String)>(varReplacer64992)

		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			Third parameter was not properly generated as randomized
			at statement: virtualinvoke $r0.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>(varReplacer64993, varReplacer64993, varReplacer64993)

		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			Second parameter was not properly generated as generatedTrustManagers
			at statement: virtualinvoke $r0.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>(varReplacer64993, varReplacer64993, varReplacer64993)


Findings in Java Class: com.umeng.commonsdk.statistics.internal.c

	 in Method: byte[] a(byte[],java.lang.String)
		ConstraintError violating CrySL rule for javax.net.ssl.SSLContext (on Object #356a6dd84c21234f46249f3b65c7914f2ed67a32ea60dc2638ae8f5f4ee20218)
			First parameter (with value "TLS") should be any of {TLSv1.2}
			at statement: $r33 = staticinvoke <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String)>(varReplacer73459)

		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			Second parameter was not properly generated as generatedTrustManagers
			at statement: virtualinvoke $r33.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>(varReplacer73460, varReplacer73460, $r34)

		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			First parameter was not properly generated as generatedKeyManagers
			at statement: virtualinvoke $r33.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>(varReplacer73460, varReplacer73460, $r34)


Findings in Java Class: com.google.android.exoplayer2.offline.ProgressiveDownloader

	 in Method: void download(com.google.android.exoplayer2.offline.Downloader$ProgressListener)
		IncompleteOperationError violating CrySL rule for javax.crypto.Cipher (on Object #f109b7b1aaafdcaebde675669bb6ea5a414ec3d4fe1d28acb3c18191f8baaac1)
			Operation on object of type javax.crypto.Cipher object not completed. Expected call to init, update, wrap, doFinal
			at statement: staticinvoke <com.google.android.exoplayer2.upstream.cache.CacheUtil: void cache(com.google.android.exoplayer2.upstream.DataSpec,com.google.android.exoplayer2.upstream.cache.Cache,com.google.android.exoplayer2.upstream.cache.CacheKeyFactory,com.google.android.exoplayer2.upstream.cache.CacheDataSource,byte[],com.google.android.exoplayer2.util.PriorityTaskManager,int,com.google.android.exoplayer2.upstream.cache.CacheUtil$ProgressListener,java.util.concurrent.atomic.AtomicBoolean,boolean)>($r1, $r2, $r3, $r4, $r5, $r6, varReplacer37158, $r9, $r7, varReplacer37159)


Findings in Java Class: com.google.android.exoplayer2.source.chunk.SingleSampleMediaChunk

	 in Method: void load()
		IncompleteOperationError violating CrySL rule for javax.crypto.Cipher (on Object #f109b7b1aaafdcaebde675669bb6ea5a414ec3d4fe1d28acb3c18191f8baaac1)
			Operation on object of type javax.crypto.Cipher object not completed. Expected call to init, update, wrap, doFinal
			at statement: specialinvoke $r6.<com.google.android.exoplayer2.extractor.DefaultExtractorInput: void <init>(com.google.android.exoplayer2.upstream.DataSource,long,long)>($r1, $l2, $l3)

		IncompleteOperationError violating CrySL rule for javax.crypto.Cipher (on Object #f109b7b1aaafdcaebde675669bb6ea5a414ec3d4fe1d28acb3c18191f8baaac1)
			Operation on object of type javax.crypto.Cipher object not completed. Expected call to init, update, wrap, doFinal
			at statement: $i0 = interfaceinvoke $r3.<com.google.android.exoplayer2.extractor.TrackOutput: int sampleData(com.google.android.exoplayer2.extractor.ExtractorInput,int,boolean)>($r6, varReplacer34603, varReplacer34604)


Findings in Java Class: com.google.android.exoplayer2.offline.SegmentDownloader

	 in Method: void download(com.google.android.exoplayer2.offline.Downloader$ProgressListener)
		IncompleteOperationError violating CrySL rule for javax.crypto.Cipher (on Object #f109b7b1aaafdcaebde675669bb6ea5a414ec3d4fe1d28acb3c18191f8baaac1)
			Operation on object of type javax.crypto.Cipher object not completed. Expected call to init, update, wrap, doFinal
			at statement: staticinvoke <com.google.android.exoplayer2.upstream.cache.CacheUtil: void cache(com.google.android.exoplayer2.upstream.DataSpec,com.google.android.exoplayer2.upstream.cache.Cache,com.google.android.exoplayer2.upstream.cache.CacheKeyFactory,com.google.android.exoplayer2.upstream.cache.CacheDataSource,byte[],com.google.android.exoplayer2.util.PriorityTaskManager,int,com.google.android.exoplayer2.upstream.cache.CacheUtil$ProgressListener,java.util.concurrent.atomic.AtomicBoolean,boolean)>($r6, $r3, $r13, $r5, $r17, $r4, varReplacer37153, $r16, $r2, varReplacer37154)

		IncompleteOperationError violating CrySL rule for javax.crypto.Cipher (on Object #f109b7b1aaafdcaebde675669bb6ea5a414ec3d4fe1d28acb3c18191f8baaac1)
			Operation on object of type javax.crypto.Cipher object not completed. Expected call to init, update, wrap, doFinal
			at statement: $r11 = virtualinvoke r0.<com.google.android.exoplayer2.offline.SegmentDownloader: java.util.List getSegments(com.google.android.exoplayer2.upstream.DataSource,com.google.android.exoplayer2.offline.FilterableManifest,boolean)>($r5, $r8, varReplacer37150)


Findings in Java Class: com.google.android.exoplayer2.extractor.mkv.DefaultEbmlReader

	 in Method: boolean read(com.google.android.exoplayer2.extractor.ExtractorInput)
		IncompleteOperationError violating CrySL rule for javax.crypto.Cipher (on Object #f109b7b1aaafdcaebde675669bb6ea5a414ec3d4fe1d28acb3c18191f8baaac1)
			Operation on object of type javax.crypto.Cipher object not completed. Expected call to init, update, wrap, doFinal
			at statement: $l0 = virtualinvoke $r6.<com.google.android.exoplayer2.extractor.mkv.VarintReader: long readUnsignedVarint(com.google.android.exoplayer2.extractor.ExtractorInput,boolean,boolean,int)>($r1, varReplacer79326, varReplacer79327, varReplacer79328)

		IncompleteOperationError violating CrySL rule for javax.crypto.Cipher (on Object #f109b7b1aaafdcaebde675669bb6ea5a414ec3d4fe1d28acb3c18191f8baaac1)
			Operation on object of type javax.crypto.Cipher object not completed. Expected call to init, update, wrap, doFinal
			at statement: $l0 = virtualinvoke $r6.<com.google.android.exoplayer2.extractor.mkv.VarintReader: long readUnsignedVarint(com.google.android.exoplayer2.extractor.ExtractorInput,boolean,boolean,int)>($r1, varReplacer79331, varReplacer79332, varReplacer79333)

		IncompleteOperationError violating CrySL rule for javax.crypto.Cipher (on Object #f109b7b1aaafdcaebde675669bb6ea5a414ec3d4fe1d28acb3c18191f8baaac1)
			Operation on object of type javax.crypto.Cipher object not completed. Expected call to init, update, wrap, doFinal
			at statement: interfaceinvoke $r1.<com.google.android.exoplayer2.extractor.ExtractorInput: void skipFully(int)>($i3)

		IncompleteOperationError violating CrySL rule for javax.crypto.Cipher (on Object #f109b7b1aaafdcaebde675669bb6ea5a414ec3d4fe1d28acb3c18191f8baaac1)
			Operation on object of type javax.crypto.Cipher object not completed. Expected call to init, update, wrap, doFinal
			at statement: $l1 = specialinvoke r0.<com.google.android.exoplayer2.extractor.mkv.DefaultEbmlReader: long maybeResyncToNextLevel1Element(com.google.android.exoplayer2.extractor.ExtractorInput)>($r1)

		IncompleteOperationError violating CrySL rule for javax.crypto.Cipher (on Object #f109b7b1aaafdcaebde675669bb6ea5a414ec3d4fe1d28acb3c18191f8baaac1)
			Operation on object of type javax.crypto.Cipher object not completed. Expected call to init, update, wrap, doFinal
			at statement: $l0 = interfaceinvoke $r1.<com.google.android.exoplayer2.extractor.ExtractorInput: long getPosition()>()


Findings in Java Class: com.google.android.exoplayer2.source.hls.HlsSampleStreamWrapper$EmsgUnwrappingTrackOutput

	 in Method: int sampleData(com.google.android.exoplayer2.extractor.ExtractorInput,int,boolean)
		IncompleteOperationError violating CrySL rule for javax.crypto.Cipher (on Object #f109b7b1aaafdcaebde675669bb6ea5a414ec3d4fe1d28acb3c18191f8baaac1)
			Operation on object of type javax.crypto.Cipher object not completed. Expected call to init, update, wrap, doFinal
			at statement: $i1 = interfaceinvoke $r1.<com.google.android.exoplayer2.extractor.ExtractorInput: int read(byte[],int,int)>($r2, $i0, $i1)


Findings in Java Class: com.google.android.exoplayer2.extractor.rawcc.RawCcExtractor

	 in Method: boolean parseHeader(com.google.android.exoplayer2.extractor.ExtractorInput)
		IncompleteOperationError violating CrySL rule for javax.crypto.Cipher (on Object #f109b7b1aaafdcaebde675669bb6ea5a414ec3d4fe1d28acb3c18191f8baaac1)
			Operation on object of type javax.crypto.Cipher object not completed. Expected call to init, update, wrap, doFinal
			at statement: $z0 = interfaceinvoke $r1.<com.google.android.exoplayer2.extractor.ExtractorInput: boolean readFully(byte[],int,int,boolean)>($r3, varReplacer79122, varReplacer79123, varReplacer79124)


	 in Method: int read(com.google.android.exoplayer2.extractor.ExtractorInput,com.google.android.exoplayer2.extractor.PositionHolder)
		IncompleteOperationError violating CrySL rule for javax.crypto.Cipher (on Object #f109b7b1aaafdcaebde675669bb6ea5a414ec3d4fe1d28acb3c18191f8baaac1)
			Operation on object of type javax.crypto.Cipher object not completed. Expected call to init, update, wrap, doFinal
			at statement: $z0 = specialinvoke r0.<com.google.android.exoplayer2.extractor.rawcc.RawCcExtractor: boolean parseHeader(com.google.android.exoplayer2.extractor.ExtractorInput)>($r1)

		IncompleteOperationError violating CrySL rule for javax.crypto.Cipher (on Object #f109b7b1aaafdcaebde675669bb6ea5a414ec3d4fe1d28acb3c18191f8baaac1)
			Operation on object of type javax.crypto.Cipher object not completed. Expected call to init, update, wrap, doFinal
			at statement: $z0 = specialinvoke r0.<com.google.android.exoplayer2.extractor.rawcc.RawCcExtractor: boolean parseTimestampAndSampleCount(com.google.android.exoplayer2.extractor.ExtractorInput)>($r1)


Findings in Java Class: com.google.android.exoplayer2.extractor.FlacMetadataReader

	 in Method: boolean readMetadataBlock(com.google.android.exoplayer2.extractor.ExtractorInput,com.google.android.exoplayer2.extractor.FlacMetadataReader$FlacStreamMetadataHolder)
		IncompleteOperationError violating CrySL rule for javax.crypto.Cipher (on Object #f109b7b1aaafdcaebde675669bb6ea5a414ec3d4fe1d28acb3c18191f8baaac1)
			Operation on object of type javax.crypto.Cipher object not completed. Expected call to init, update, wrap, doFinal
			at statement: interfaceinvoke $r1.<com.google.android.exoplayer2.extractor.ExtractorInput: void peekFully(byte[],int,int)>($r3, varReplacer79262, varReplacer79263)


	 in Method: void readStreamMarker(com.google.android.exoplayer2.extractor.ExtractorInput)
		IncompleteOperationError violating CrySL rule for javax.crypto.Cipher (on Object #f109b7b1aaafdcaebde675669bb6ea5a414ec3d4fe1d28acb3c18191f8baaac1)
			Operation on object of type javax.crypto.Cipher object not completed. Expected call to init, update, wrap, doFinal
			at statement: interfaceinvoke $r0.<com.google.android.exoplayer2.extractor.ExtractorInput: void readFully(byte[],int,int)>($r2, varReplacer79268, varReplacer79269)


	 in Method: int getFrameStartMarker(com.google.android.exoplayer2.extractor.ExtractorInput)
		IncompleteOperationError violating CrySL rule for javax.crypto.Cipher (on Object #f109b7b1aaafdcaebde675669bb6ea5a414ec3d4fe1d28acb3c18191f8baaac1)
			Operation on object of type javax.crypto.Cipher object not completed. Expected call to init, update, wrap, doFinal
			at statement: interfaceinvoke $r0.<com.google.android.exoplayer2.extractor.ExtractorInput: void resetPeekPosition()>()


Findings in Java Class: com.google.android.exoplayer2.extractor.mp4.Mp4Extractor

	 in Method: int readSample(com.google.android.exoplayer2.extractor.ExtractorInput,com.google.android.exoplayer2.extractor.PositionHolder)
		IncompleteOperationError violating CrySL rule for javax.crypto.Cipher (on Object #f109b7b1aaafdcaebde675669bb6ea5a414ec3d4fe1d28acb3c18191f8baaac1)
			Operation on object of type javax.crypto.Cipher object not completed. Expected call to init, update, wrap, doFinal
			at statement: interfaceinvoke $r1.<com.google.android.exoplayer2.extractor.ExtractorInput: void readFully(byte[],int,int)>($r11, $i7, $i4)


	 in Method: int read(com.google.android.exoplayer2.extractor.ExtractorInput,com.google.android.exoplayer2.extractor.PositionHolder)
		IncompleteOperationError violating CrySL rule for javax.crypto.Cipher (on Object #f109b7b1aaafdcaebde675669bb6ea5a414ec3d4fe1d28acb3c18191f8baaac1)
			Operation on object of type javax.crypto.Cipher object not completed. Expected call to init, update, wrap, doFinal
			at statement: $z0 = specialinvoke r0.<com.google.android.exoplayer2.extractor.mp4.Mp4Extractor: boolean readAtomHeader(com.google.android.exoplayer2.extractor.ExtractorInput)>($r2)

		IncompleteOperationError violating CrySL rule for javax.crypto.Cipher (on Object #f109b7b1aaafdcaebde675669bb6ea5a414ec3d4fe1d28acb3c18191f8baaac1)
			Operation on object of type javax.crypto.Cipher object not completed. Expected call to init, update, wrap, doFinal
			at statement: $z0 = specialinvoke r0.<com.google.android.exoplayer2.extractor.mp4.Mp4Extractor: boolean readAtomPayload(com.google.android.exoplayer2.extractor.ExtractorInput,com.google.android.exoplayer2.extractor.PositionHolder)>($r2, $r1)


	 in Method: boolean readAtomHeader(com.google.android.exoplayer2.extractor.ExtractorInput)
		IncompleteOperationError violating CrySL rule for javax.crypto.Cipher (on Object #f109b7b1aaafdcaebde675669bb6ea5a414ec3d4fe1d28acb3c18191f8baaac1)
			Operation on object of type javax.crypto.Cipher object not completed. Expected call to init, update, wrap, doFinal
			at statement: interfaceinvoke $r1.<com.google.android.exoplayer2.extractor.ExtractorInput: void readFully(byte[],int,int)>($r3, varReplacer79533, varReplacer79533)

		IncompleteOperationError violating CrySL rule for javax.crypto.Cipher (on Object #f109b7b1aaafdcaebde675669bb6ea5a414ec3d4fe1d28acb3c18191f8baaac1)
			Operation on object of type javax.crypto.Cipher object not completed. Expected call to init, update, wrap, doFinal
			at statement: $l3 = interfaceinvoke $r1.<com.google.android.exoplayer2.extractor.ExtractorInput: long getLength()>()

		IncompleteOperationError violating CrySL rule for javax.crypto.Cipher (on Object #f109b7b1aaafdcaebde675669bb6ea5a414ec3d4fe1d28acb3c18191f8baaac1)
			Operation on object of type javax.crypto.Cipher object not completed. Expected call to init, update, wrap, doFinal
			at statement: $l3 = interfaceinvoke $r1.<com.google.android.exoplayer2.extractor.ExtractorInput: long getPosition()>()

		IncompleteOperationError violating CrySL rule for javax.crypto.Cipher (on Object #f109b7b1aaafdcaebde675669bb6ea5a414ec3d4fe1d28acb3c18191f8baaac1)
			Operation on object of type javax.crypto.Cipher object not completed. Expected call to init, update, wrap, doFinal
			at statement: $z0 = interfaceinvoke $r1.<com.google.android.exoplayer2.extractor.ExtractorInput: boolean readFully(byte[],int,int,boolean)>($r3, varReplacer79529, varReplacer79530, varReplacer79531)


Findings in Java Class: com.google.android.exoplayer2.extractor.wav.WavHeaderReader

	 in Method: android.util.Pair skipToData(com.google.android.exoplayer2.extractor.ExtractorInput)
		IncompleteOperationError violating CrySL rule for javax.crypto.Cipher (on Object #f109b7b1aaafdcaebde675669bb6ea5a414ec3d4fe1d28acb3c18191f8baaac1)
			Operation on object of type javax.crypto.Cipher object not completed. Expected call to init, update, wrap, doFinal
			at statement: $r2 = staticinvoke <com.google.android.exoplayer2.extractor.wav.WavHeaderReader$ChunkHeader: com.google.android.exoplayer2.extractor.wav.WavHeaderReader$ChunkHeader peek(com.google.android.exoplayer2.extractor.ExtractorInput,com.google.android.exoplayer2.util.ParsableByteArray)>($r0, $r1)

		IncompleteOperationError violating CrySL rule for javax.crypto.Cipher (on Object #f109b7b1aaafdcaebde675669bb6ea5a414ec3d4fe1d28acb3c18191f8baaac1)
			Operation on object of type javax.crypto.Cipher object not completed. Expected call to init, update, wrap, doFinal
			at statement: $r2 = staticinvoke <com.google.android.exoplayer2.extractor.wav.WavHeaderReader$ChunkHeader: com.google.android.exoplayer2.extractor.wav.WavHeaderReader$ChunkHeader peek(com.google.android.exoplayer2.extractor.ExtractorInput,com.google.android.exoplayer2.util.ParsableByteArray)>($r0, $r1)


Findings in Java Class: com.google.android.exoplayer2.source.ProgressiveMediaPeriod$ExtractingLoadable

	 in Method: void load()
		IncompleteOperationError violating CrySL rule for javax.crypto.Cipher (on Object #f109b7b1aaafdcaebde675669bb6ea5a414ec3d4fe1d28acb3c18191f8baaac1)
			Operation on object of type javax.crypto.Cipher object not completed. Expected call to init, update, wrap, doFinal
			at statement: $l2 = interfaceinvoke $r1.<com.google.android.exoplayer2.extractor.ExtractorInput: long getPosition()>()

		IncompleteOperationError violating CrySL rule for javax.crypto.Cipher (on Object #f109b7b1aaafdcaebde675669bb6ea5a414ec3d4fe1d28acb3c18191f8baaac1)
			Operation on object of type javax.crypto.Cipher object not completed. Expected call to init, update, wrap, doFinal
			at statement: $l0 = interfaceinvoke $r1.<com.google.android.exoplayer2.extractor.ExtractorInput: long getPosition()>()

		IncompleteOperationError violating CrySL rule for javax.crypto.Cipher (on Object #f109b7b1aaafdcaebde675669bb6ea5a414ec3d4fe1d28acb3c18191f8baaac1)
			Operation on object of type javax.crypto.Cipher object not completed. Expected call to init, update, wrap, doFinal
			at statement: $l2 = interfaceinvoke $r1.<com.google.android.exoplayer2.extractor.ExtractorInput: long getPosition()>()

		IncompleteOperationError violating CrySL rule for javax.crypto.Cipher (on Object #f109b7b1aaafdcaebde675669bb6ea5a414ec3d4fe1d28acb3c18191f8baaac1)
			Operation on object of type javax.crypto.Cipher object not completed. Expected call to init, update, wrap, doFinal
			at statement: $r16 = virtualinvoke $r14.<com.google.android.exoplayer2.source.ProgressiveMediaPeriod$ExtractorHolder: com.google.android.exoplayer2.extractor.Extractor selectExtractor(com.google.android.exoplayer2.extractor.ExtractorInput,com.google.android.exoplayer2.extractor.ExtractorOutput,android.net.Uri)>($r1, $r15, $r6)


Findings in Java Class: com.google.android.exoplayer2.extractor.mp4.FragmentedMp4Extractor

	 in Method: boolean readAtomHeader(com.google.android.exoplayer2.extractor.ExtractorInput)
		IncompleteOperationError violating CrySL rule for javax.crypto.Cipher (on Object #f109b7b1aaafdcaebde675669bb6ea5a414ec3d4fe1d28acb3c18191f8baaac1)
			Operation on object of type javax.crypto.Cipher object not completed. Expected call to init, update, wrap, doFinal
			at statement: interfaceinvoke $r1.<com.google.android.exoplayer2.extractor.ExtractorInput: void readFully(byte[],int,int)>($r3, varReplacer79616, varReplacer79616)

		IncompleteOperationError violating CrySL rule for javax.crypto.Cipher (on Object #f109b7b1aaafdcaebde675669bb6ea5a414ec3d4fe1d28acb3c18191f8baaac1)
			Operation on object of type javax.crypto.Cipher object not completed. Expected call to init, update, wrap, doFinal
			at statement: $l1 = interfaceinvoke $r1.<com.google.android.exoplayer2.extractor.ExtractorInput: long getPosition()>()

		IncompleteOperationError violating CrySL rule for javax.crypto.Cipher (on Object #f109b7b1aaafdcaebde675669bb6ea5a414ec3d4fe1d28acb3c18191f8baaac1)
			Operation on object of type javax.crypto.Cipher object not completed. Expected call to init, update, wrap, doFinal
			at statement: $l3 = interfaceinvoke $r1.<com.google.android.exoplayer2.extractor.ExtractorInput: long getPosition()>()

		IncompleteOperationError violating CrySL rule for javax.crypto.Cipher (on Object #f109b7b1aaafdcaebde675669bb6ea5a414ec3d4fe1d28acb3c18191f8baaac1)
			Operation on object of type javax.crypto.Cipher object not completed. Expected call to init, update, wrap, doFinal
			at statement: $l3 = interfaceinvoke $r1.<com.google.android.exoplayer2.extractor.ExtractorInput: long getLength()>()

		IncompleteOperationError violating CrySL rule for javax.crypto.Cipher (on Object #f109b7b1aaafdcaebde675669bb6ea5a414ec3d4fe1d28acb3c18191f8baaac1)
			Operation on object of type javax.crypto.Cipher object not completed. Expected call to init, update, wrap, doFinal
			at statement: $z0 = interfaceinvoke $r1.<com.google.android.exoplayer2.extractor.ExtractorInput: boolean readFully(byte[],int,int,boolean)>($r3, varReplacer79595, varReplacer79596, varReplacer79597)


	 in Method: boolean readSample(com.google.android.exoplayer2.extractor.ExtractorInput)
		IncompleteOperationError violating CrySL rule for javax.crypto.Cipher (on Object #f109b7b1aaafdcaebde675669bb6ea5a414ec3d4fe1d28acb3c18191f8baaac1)
			Operation on object of type javax.crypto.Cipher object not completed. Expected call to init, update, wrap, doFinal
			at statement: interfaceinvoke $r1.<com.google.android.exoplayer2.extractor.ExtractorInput: void readFully(byte[],int,int)>($r15, $i4, $i3)

		IncompleteOperationError violating CrySL rule for javax.crypto.Cipher (on Object #f109b7b1aaafdcaebde675669bb6ea5a414ec3d4fe1d28acb3c18191f8baaac1)
			Operation on object of type javax.crypto.Cipher object not completed. Expected call to init, update, wrap, doFinal
			at statement: $l2 = interfaceinvoke $r1.<com.google.android.exoplayer2.extractor.ExtractorInput: long getPosition()>()


	 in Method: void readEncryptionData(com.google.android.exoplayer2.extractor.ExtractorInput)
		IncompleteOperationError violating CrySL rule for javax.crypto.Cipher (on Object #f109b7b1aaafdcaebde675669bb6ea5a414ec3d4fe1d28acb3c18191f8baaac1)
			Operation on object of type javax.crypto.Cipher object not completed. Expected call to init, update, wrap, doFinal
			at statement: $l4 = interfaceinvoke $r1.<com.google.android.exoplayer2.extractor.ExtractorInput: long getPosition()>()


Findings in Java Class: com.google.android.exoplayer2.extractor.ogg.OggPageHeader

	 in Method: boolean populate(com.google.android.exoplayer2.extractor.ExtractorInput,boolean)
		IncompleteOperationError violating CrySL rule for javax.crypto.Cipher (on Object #f109b7b1aaafdcaebde675669bb6ea5a414ec3d4fe1d28acb3c18191f8baaac1)
			Operation on object of type javax.crypto.Cipher object not completed. Expected call to init, update, wrap, doFinal
			at statement: $l3 = interfaceinvoke $r1.<com.google.android.exoplayer2.extractor.ExtractorInput: long getPeekPosition()>()

		IncompleteOperationError violating CrySL rule for javax.crypto.Cipher (on Object #f109b7b1aaafdcaebde675669bb6ea5a414ec3d4fe1d28acb3c18191f8baaac1)
			Operation on object of type javax.crypto.Cipher object not completed. Expected call to init, update, wrap, doFinal
			at statement: $l0 = interfaceinvoke $r1.<com.google.android.exoplayer2.extractor.ExtractorInput: long getLength()>()

		IncompleteOperationError violating CrySL rule for javax.crypto.Cipher (on Object #f109b7b1aaafdcaebde675669bb6ea5a414ec3d4fe1d28acb3c18191f8baaac1)
			Operation on object of type javax.crypto.Cipher object not completed. Expected call to init, update, wrap, doFinal
			at statement: $z1 = interfaceinvoke $r1.<com.google.android.exoplayer2.extractor.ExtractorInput: boolean peekFully(byte[],int,int,boolean)>($r3, varReplacer92074, varReplacer92075, varReplacer92076)


Findings in Java Class: com.google.android.exoplayer2.source.chunk.ContainerMediaChunk

	 in Method: void load()
		IncompleteOperationError violating CrySL rule for javax.crypto.Cipher (on Object #f109b7b1aaafdcaebde675669bb6ea5a414ec3d4fe1d28acb3c18191f8baaac1)
			Operation on object of type javax.crypto.Cipher object not completed. Expected call to init, update, wrap, doFinal
			at statement: $l0 = interfaceinvoke $r5.<com.google.android.exoplayer2.extractor.ExtractorInput: long getPosition()>()


Findings in Java Class: com.google.android.exoplayer2.extractor.mkv.VarintReader

	 in Method: long readUnsignedVarint(com.google.android.exoplayer2.extractor.ExtractorInput,boolean,boolean,int)
		IncompleteOperationError violating CrySL rule for javax.crypto.Cipher (on Object #f109b7b1aaafdcaebde675669bb6ea5a414ec3d4fe1d28acb3c18191f8baaac1)
			Operation on object of type javax.crypto.Cipher object not completed. Expected call to init, update, wrap, doFinal
			at statement: $z1 = interfaceinvoke $r1.<com.google.android.exoplayer2.extractor.ExtractorInput: boolean readFully(byte[],int,int,boolean)>($r2, varReplacer92337, varReplacer92338, $z1)


Findings in Java Class: com.google.android.exoplayer2.extractor.amr.AmrExtractor

	 in Method: int peekNextSampleSize(com.google.android.exoplayer2.extractor.ExtractorInput)
		IncompleteOperationError violating CrySL rule for javax.crypto.Cipher (on Object #f109b7b1aaafdcaebde675669bb6ea5a414ec3d4fe1d28acb3c18191f8baaac1)
			Operation on object of type javax.crypto.Cipher object not completed. Expected call to init, update, wrap, doFinal
			at statement: interfaceinvoke $r1.<com.google.android.exoplayer2.extractor.ExtractorInput: void peekFully(byte[],int,int)>($r2, varReplacer92216, varReplacer92217)


	 in Method: int read(com.google.android.exoplayer2.extractor.ExtractorInput,com.google.android.exoplayer2.extractor.PositionHolder)
		IncompleteOperationError violating CrySL rule for javax.crypto.Cipher (on Object #f109b7b1aaafdcaebde675669bb6ea5a414ec3d4fe1d28acb3c18191f8baaac1)
			Operation on object of type javax.crypto.Cipher object not completed. Expected call to init, update, wrap, doFinal
			at statement: $z0 = specialinvoke r0.<com.google.android.exoplayer2.extractor.amr.AmrExtractor: boolean readAmrHeader(com.google.android.exoplayer2.extractor.ExtractorInput)>($r1)


Findings in Java Class: com.google.android.exoplayer2.extractor.ogg.DefaultOggSeeker

	 in Method: long getNextSeekPosition(com.google.android.exoplayer2.extractor.ExtractorInput)
		IncompleteOperationError violating CrySL rule for javax.crypto.Cipher (on Object #f109b7b1aaafdcaebde675669bb6ea5a414ec3d4fe1d28acb3c18191f8baaac1)
			Operation on object of type javax.crypto.Cipher object not completed. Expected call to init, update, wrap, doFinal
			at statement: $z0 = specialinvoke r0.<com.google.android.exoplayer2.extractor.ogg.DefaultOggSeeker: boolean skipToNextPage(com.google.android.exoplayer2.extractor.ExtractorInput,long)>($r1, $l1)


	 in Method: void skipToNextPage(com.google.android.exoplayer2.extractor.ExtractorInput)
		IncompleteOperationError violating CrySL rule for javax.crypto.Cipher (on Object #f109b7b1aaafdcaebde675669bb6ea5a414ec3d4fe1d28acb3c18191f8baaac1)
			Operation on object of type javax.crypto.Cipher object not completed. Expected call to init, update, wrap, doFinal
			at statement: $z0 = specialinvoke r0.<com.google.android.exoplayer2.extractor.ogg.DefaultOggSeeker: boolean skipToNextPage(com.google.android.exoplayer2.extractor.ExtractorInput,long)>($r1, $l0)


Findings in Java Class: com.google.android.exoplayer2.upstream.ByteArrayDataSource

	 in Method: long open(com.google.android.exoplayer2.upstream.DataSpec)
		IncompleteOperationError violating CrySL rule for javax.crypto.Cipher (on Object #f109b7b1aaafdcaebde675669bb6ea5a414ec3d4fe1d28acb3c18191f8baaac1)
			Operation on object of type javax.crypto.Cipher object not completed. Expected call to init, update, wrap, doFinal
			at statement: virtualinvoke r0.<com.google.android.exoplayer2.upstream.ByteArrayDataSource: void transferInitializing(com.google.android.exoplayer2.upstream.DataSpec)>($r2)


Findings in Java Class: com.google.android.exoplayer2.extractor.mkv.MatroskaExtractor

	 in Method: int writeSampleData(com.google.android.exoplayer2.extractor.ExtractorInput,com.google.android.exoplayer2.extractor.mkv.MatroskaExtractor$Track,int)
		IncompleteOperationError violating CrySL rule for javax.crypto.Cipher (on Object #f109b7b1aaafdcaebde675669bb6ea5a414ec3d4fe1d28acb3c18191f8baaac1)
			Operation on object of type javax.crypto.Cipher object not completed. Expected call to init, update, wrap, doFinal
			at statement: interfaceinvoke $r1.<com.google.android.exoplayer2.extractor.ExtractorInput: void readFully(byte[],int,int)>($r5, varReplacer110858, varReplacer110859)


	 in Method: void binaryElement(int,int,com.google.android.exoplayer2.extractor.ExtractorInput)
		IncompleteOperationError violating CrySL rule for javax.crypto.Cipher (on Object #f109b7b1aaafdcaebde675669bb6ea5a414ec3d4fe1d28acb3c18191f8baaac1)
			Operation on object of type javax.crypto.Cipher object not completed. Expected call to init, update, wrap, doFinal
			at statement: specialinvoke r0.<com.google.android.exoplayer2.extractor.mkv.MatroskaExtractor: void readScratch(com.google.android.exoplayer2.extractor.ExtractorInput,int)>($r1, $i4)

		IncompleteOperationError violating CrySL rule for javax.crypto.Cipher (on Object #f109b7b1aaafdcaebde675669bb6ea5a414ec3d4fe1d28acb3c18191f8baaac1)
			Operation on object of type javax.crypto.Cipher object not completed. Expected call to init, update, wrap, doFinal
			at statement: specialinvoke r0.<com.google.android.exoplayer2.extractor.mkv.MatroskaExtractor: void readScratch(com.google.android.exoplayer2.extractor.ExtractorInput,int)>($r1, $i4)

		IncompleteOperationError violating CrySL rule for javax.crypto.Cipher (on Object #f109b7b1aaafdcaebde675669bb6ea5a414ec3d4fe1d28acb3c18191f8baaac1)
			Operation on object of type javax.crypto.Cipher object not completed. Expected call to init, update, wrap, doFinal
			at statement: specialinvoke r0.<com.google.android.exoplayer2.extractor.mkv.MatroskaExtractor: void readScratch(com.google.android.exoplayer2.extractor.ExtractorInput,int)>($r1, varReplacer102164)


Findings in Java Class: com.google.android.exoplayer2.upstream.DataSourceInputStream

	 in Method: void checkOpened()
		IncompleteOperationError violating CrySL rule for javax.crypto.Cipher (on Object #f109b7b1aaafdcaebde675669bb6ea5a414ec3d4fe1d28acb3c18191f8baaac1)
			Operation on object of type javax.crypto.Cipher object not completed. Expected call to init, update, wrap, doFinal
			at statement: interfaceinvoke $r2.<com.google.android.exoplayer2.upstream.DataSource: long open(com.google.android.exoplayer2.upstream.DataSpec)>($r1)


	 in Method: int read(byte[],int,int)
		IncompleteOperationError violating CrySL rule for javax.crypto.Cipher (on Object #f109b7b1aaafdcaebde675669bb6ea5a414ec3d4fe1d28acb3c18191f8baaac1)
			Operation on object of type javax.crypto.Cipher object not completed. Expected call to init, update, wrap, doFinal
			at statement: $i1 = interfaceinvoke $r2.<com.google.android.exoplayer2.upstream.DataSource: int read(byte[],int,int)>($r1, $i1, $i0)


Findings in Java Class: com.google.android.exoplayer2.extractor.DummyTrackOutput

	 in Method: int sampleData(com.google.android.exoplayer2.extractor.ExtractorInput,int,boolean)
		IncompleteOperationError violating CrySL rule for javax.crypto.Cipher (on Object #f109b7b1aaafdcaebde675669bb6ea5a414ec3d4fe1d28acb3c18191f8baaac1)
			Operation on object of type javax.crypto.Cipher object not completed. Expected call to init, update, wrap, doFinal
			at statement: $i0 = interfaceinvoke $r1.<com.google.android.exoplayer2.extractor.ExtractorInput: int skip(int)>($i0)


Findings in Java Class: com.google.android.exoplayer2.extractor.ts.AdtsExtractor

	 in Method: void calculateAverageFrameSize(com.google.android.exoplayer2.extractor.ExtractorInput)
		IncompleteOperationError violating CrySL rule for javax.crypto.Cipher (on Object #f109b7b1aaafdcaebde675669bb6ea5a414ec3d4fe1d28acb3c18191f8baaac1)
			Operation on object of type javax.crypto.Cipher object not completed. Expected call to init, update, wrap, doFinal
			at statement: $z0 = interfaceinvoke $r2.<com.google.android.exoplayer2.extractor.ExtractorInput: boolean peekFully(byte[],int,int,boolean)>($r4, varReplacer79346, varReplacer79347, varReplacer79348)


Findings in Java Class: com.google.android.exoplayer2.extractor.FlacFrameReader

	 in Method: long getFirstSampleNumber(com.google.android.exoplayer2.extractor.ExtractorInput,com.google.android.exoplayer2.util.FlacStreamMetadata)
		IncompleteOperationError violating CrySL rule for javax.crypto.Cipher (on Object #f109b7b1aaafdcaebde675669bb6ea5a414ec3d4fe1d28acb3c18191f8baaac1)
			Operation on object of type javax.crypto.Cipher object not completed. Expected call to init, update, wrap, doFinal
			at statement: interfaceinvoke $r2.<com.google.android.exoplayer2.extractor.ExtractorInput: void resetPeekPosition()>()


Findings in Java Class: com.google.android.exoplayer2.extractor.wav.WavExtractor

	 in Method: int read(com.google.android.exoplayer2.extractor.ExtractorInput,com.google.android.exoplayer2.extractor.PositionHolder)
		IncompleteOperationError violating CrySL rule for javax.crypto.Cipher (on Object #f109b7b1aaafdcaebde675669bb6ea5a414ec3d4fe1d28acb3c18191f8baaac1)
			Operation on object of type javax.crypto.Cipher object not completed. Expected call to init, update, wrap, doFinal
			at statement: $r4 = staticinvoke <com.google.android.exoplayer2.extractor.wav.WavHeaderReader: com.google.android.exoplayer2.extractor.wav.WavHeader peek(com.google.android.exoplayer2.extractor.ExtractorInput)>($r1)


Findings in Java Class: com.google.android.exoplayer2.upstream.cache.CacheUtil

	 in Method: long readAndDiscard(com.google.android.exoplayer2.upstream.DataSpec,long,long,com.google.android.exoplayer2.upstream.DataSource,byte[],com.google.android.exoplayer2.util.PriorityTaskManager,int,com.google.android.exoplayer2.upstream.cache.CacheUtil$ProgressNotifier,boolean,java.util.concurrent.atomic.AtomicBoolean)
		IncompleteOperationError violating CrySL rule for javax.crypto.Cipher (on Object #f109b7b1aaafdcaebde675669bb6ea5a414ec3d4fe1d28acb3c18191f8baaac1)
			Operation on object of type javax.crypto.Cipher object not completed. Expected call to init, update, wrap, doFinal
			at statement: staticinvoke <com.google.android.exoplayer2.util.Util: void closeQuietly(com.google.android.exoplayer2.upstream.DataSource)>($r1)


	 in Method: void cache(com.google.android.exoplayer2.upstream.DataSpec,com.google.android.exoplayer2.upstream.cache.Cache,com.google.android.exoplayer2.upstream.cache.CacheKeyFactory,com.google.android.exoplayer2.upstream.cache.CacheDataSource,byte[],com.google.android.exoplayer2.util.PriorityTaskManager,int,com.google.android.exoplayer2.upstream.cache.CacheUtil$ProgressListener,java.util.concurrent.atomic.AtomicBoolean,boolean)
		IncompleteOperationError violating CrySL rule for javax.crypto.Cipher (on Object #f109b7b1aaafdcaebde675669bb6ea5a414ec3d4fe1d28acb3c18191f8baaac1)
			Operation on object of type javax.crypto.Cipher object not completed. Expected call to init, update, wrap, doFinal
			at statement: $l5 = staticinvoke <com.google.android.exoplayer2.upstream.cache.CacheUtil: long readAndDiscard(com.google.android.exoplayer2.upstream.DataSpec,long,long,com.google.android.exoplayer2.upstream.DataSource,byte[],com.google.android.exoplayer2.util.PriorityTaskManager,int,com.google.android.exoplayer2.upstream.cache.CacheUtil$ProgressNotifier,boolean,java.util.concurrent.atomic.AtomicBoolean)>($r0, $l2, $l5, $r3, $r4, $r5, $i0, $r8, $z2, $r7)


Findings in Java Class: com.google.android.exoplayer2.extractor.flv.FlvExtractor

	 in Method: int read(com.google.android.exoplayer2.extractor.ExtractorInput,com.google.android.exoplayer2.extractor.PositionHolder)
		IncompleteOperationError violating CrySL rule for javax.crypto.Cipher (on Object #f109b7b1aaafdcaebde675669bb6ea5a414ec3d4fe1d28acb3c18191f8baaac1)
			Operation on object of type javax.crypto.Cipher object not completed. Expected call to init, update, wrap, doFinal
			at statement: $z0 = specialinvoke r0.<com.google.android.exoplayer2.extractor.flv.FlvExtractor: boolean readTagData(com.google.android.exoplayer2.extractor.ExtractorInput)>($r1)

		IncompleteOperationError violating CrySL rule for javax.crypto.Cipher (on Object #f109b7b1aaafdcaebde675669bb6ea5a414ec3d4fe1d28acb3c18191f8baaac1)
			Operation on object of type javax.crypto.Cipher object not completed. Expected call to init, update, wrap, doFinal
			at statement: $z0 = specialinvoke r0.<com.google.android.exoplayer2.extractor.flv.FlvExtractor: boolean readTagHeader(com.google.android.exoplayer2.extractor.ExtractorInput)>($r1)

		IncompleteOperationError violating CrySL rule for javax.crypto.Cipher (on Object #f109b7b1aaafdcaebde675669bb6ea5a414ec3d4fe1d28acb3c18191f8baaac1)
			Operation on object of type javax.crypto.Cipher object not completed. Expected call to init, update, wrap, doFinal
			at statement: $z0 = specialinvoke r0.<com.google.android.exoplayer2.extractor.flv.FlvExtractor: boolean readFlvHeader(com.google.android.exoplayer2.extractor.ExtractorInput)>($r1)

		IncompleteOperationError violating CrySL rule for javax.crypto.Cipher (on Object #f109b7b1aaafdcaebde675669bb6ea5a414ec3d4fe1d28acb3c18191f8baaac1)
			Operation on object of type javax.crypto.Cipher object not completed. Expected call to init, update, wrap, doFinal
			at statement: specialinvoke r0.<com.google.android.exoplayer2.extractor.flv.FlvExtractor: void skipToTagHeader(com.google.android.exoplayer2.extractor.ExtractorInput)>($r1)


Findings in Java Class: com.google.android.exoplayer2.extractor.mp3.Mp3Extractor

	 in Method: boolean synchronize(com.google.android.exoplayer2.extractor.ExtractorInput,boolean)
		IncompleteOperationError violating CrySL rule for javax.crypto.Cipher (on Object #f109b7b1aaafdcaebde675669bb6ea5a414ec3d4fe1d28acb3c18191f8baaac1)
			Operation on object of type javax.crypto.Cipher object not completed. Expected call to init, update, wrap, doFinal
			at statement: $z1 = specialinvoke r0.<com.google.android.exoplayer2.extractor.mp3.Mp3Extractor: boolean peekEndOfStreamOrHeader(com.google.android.exoplayer2.extractor.ExtractorInput)>($r1)


Findings in Java Class: com.google.android.exoplayer2.extractor.ogg.OggExtractor

	 in Method: int read(com.google.android.exoplayer2.extractor.ExtractorInput,com.google.android.exoplayer2.extractor.PositionHolder)
		IncompleteOperationError violating CrySL rule for javax.crypto.Cipher (on Object #f109b7b1aaafdcaebde675669bb6ea5a414ec3d4fe1d28acb3c18191f8baaac1)
			Operation on object of type javax.crypto.Cipher object not completed. Expected call to init, update, wrap, doFinal
			at statement: $z0 = specialinvoke r0.<com.google.android.exoplayer2.extractor.ogg.OggExtractor: boolean sniffInternal(com.google.android.exoplayer2.extractor.ExtractorInput)>($r2)


Findings in Java Class: com.google.android.exoplayer2.source.ProgressiveMediaPeriod$ExtractorHolder

	 in Method: com.google.android.exoplayer2.extractor.Extractor selectExtractor(com.google.android.exoplayer2.extractor.ExtractorInput,com.google.android.exoplayer2.extractor.ExtractorOutput,android.net.Uri)
		IncompleteOperationError violating CrySL rule for javax.crypto.Cipher (on Object #f109b7b1aaafdcaebde675669bb6ea5a414ec3d4fe1d28acb3c18191f8baaac1)
			Operation on object of type javax.crypto.Cipher object not completed. Expected call to init, update, wrap, doFinal
			at statement: interfaceinvoke $r3.<com.google.android.exoplayer2.extractor.ExtractorInput: void resetPeekPosition()>()

		IncompleteOperationError violating CrySL rule for javax.crypto.Cipher (on Object #f109b7b1aaafdcaebde675669bb6ea5a414ec3d4fe1d28acb3c18191f8baaac1)
			Operation on object of type javax.crypto.Cipher object not completed. Expected call to init, update, wrap, doFinal
			at statement: interfaceinvoke $r3.<com.google.android.exoplayer2.extractor.ExtractorInput: void resetPeekPosition()>()


Findings in Java Class: com.google.android.exoplayer2.source.SampleDataQueue

	 in Method: int sampleData(com.google.android.exoplayer2.extractor.ExtractorInput,int,boolean)
		IncompleteOperationError violating CrySL rule for javax.crypto.Cipher (on Object #f109b7b1aaafdcaebde675669bb6ea5a414ec3d4fe1d28acb3c18191f8baaac1)
			Operation on object of type javax.crypto.Cipher object not completed. Expected call to init, update, wrap, doFinal
			at statement: $i1 = interfaceinvoke $r1.<com.google.android.exoplayer2.extractor.ExtractorInput: int read(byte[],int,int)>($r4, $i2, $i1)


Findings in Java Class: com.google.android.exoplayer2.source.hls.DefaultHlsExtractorFactory

	 in Method: boolean sniffQuietly(com.google.android.exoplayer2.extractor.Extractor,com.google.android.exoplayer2.extractor.ExtractorInput)
		IncompleteOperationError violating CrySL rule for javax.crypto.Cipher (on Object #f109b7b1aaafdcaebde675669bb6ea5a414ec3d4fe1d28acb3c18191f8baaac1)
			Operation on object of type javax.crypto.Cipher object not completed. Expected call to init, update, wrap, doFinal
			at statement: interfaceinvoke $r0.<com.google.android.exoplayer2.extractor.ExtractorInput: void resetPeekPosition()>()


Findings in Java Class: com.google.android.exoplayer2.upstream.DataSchemeDataSource

	 in Method: long open(com.google.android.exoplayer2.upstream.DataSpec)
		IncompleteOperationError violating CrySL rule for javax.crypto.Cipher (on Object #f109b7b1aaafdcaebde675669bb6ea5a414ec3d4fe1d28acb3c18191f8baaac1)
			Operation on object of type javax.crypto.Cipher object not completed. Expected call to init, update, wrap, doFinal
			at statement: virtualinvoke r0.<com.google.android.exoplayer2.upstream.DataSchemeDataSource: void transferInitializing(com.google.android.exoplayer2.upstream.DataSpec)>($r1)


Findings in Java Class: com.google.android.exoplayer2.source.chunk.InitializationChunk

	 in Method: void load()
		IncompleteOperationError violating CrySL rule for javax.crypto.Cipher (on Object #f109b7b1aaafdcaebde675669bb6ea5a414ec3d4fe1d28acb3c18191f8baaac1)
			Operation on object of type javax.crypto.Cipher object not completed. Expected call to init, update, wrap, doFinal
			at statement: $l1 = interfaceinvoke $r4.<com.google.android.exoplayer2.extractor.ExtractorInput: long getPosition()>()


Findings in Java Class: com.google.android.exoplayer2.extractor.BinarySearchSeeker

	 in Method: int handlePendingSeek(com.google.android.exoplayer2.extractor.ExtractorInput,com.google.android.exoplayer2.extractor.PositionHolder)
		IncompleteOperationError violating CrySL rule for javax.crypto.Cipher (on Object #f109b7b1aaafdcaebde675669bb6ea5a414ec3d4fe1d28acb3c18191f8baaac1)
			Operation on object of type javax.crypto.Cipher object not completed. Expected call to init, update, wrap, doFinal
			at statement: $r6 = interfaceinvoke $r3.<com.google.android.exoplayer2.extractor.BinarySearchSeeker$TimestampSeeker: com.google.android.exoplayer2.extractor.BinarySearchSeeker$TimestampSearchResult searchForTimestamp(com.google.android.exoplayer2.extractor.ExtractorInput,long)>($r1, $l1)


Findings in Java Class: com.google.android.exoplayer2.source.hls.Aes128DataSource

	 in Method: javax.crypto.Cipher getCipherInstance()
		ConstraintError violating CrySL rule for javax.crypto.Cipher (on Object #861a99f5c24a821aed99e866b9c29b4d6cfb492abcfd654c786361eb1d27c9f1)
			First parameter (with value "AES/CBC/PKCS7Padding") should be any of AES/CBC/{PKCS5Padding, ISO10126Padding}
			at statement: $r1 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer81842)


	 in Method: long open(com.google.android.exoplayer2.upstream.DataSpec)
		IncompleteOperationError violating CrySL rule for javax.crypto.Cipher (on Object #861a99f5c24a821aed99e866b9c29b4d6cfb492abcfd654c786361eb1d27c9f1)
			Operation on object of type javax.crypto.Cipher object not completed. Expected call to update, wrap, doFinal
			at statement: specialinvoke $r8.<javax.crypto.CipherInputStream: void <init>(java.io.InputStream,javax.crypto.Cipher)>($r6, $r1)

		RequiredPredicateError violating CrySL rule for javax.crypto.spec.SecretKeySpec
			First parameter was not properly generated as preparedKeyMaterial
			at statement: specialinvoke $r3.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r4, varReplacer61385)

		RequiredPredicateError violating CrySL rule for javax.crypto.Cipher
			Second parameter was not properly generated as generatedKey
			at statement: virtualinvoke $r1.<javax.crypto.Cipher: void init(int,java.security.Key,java.security.spec.AlgorithmParameterSpec)>(varReplacer61383, $r3, $r5)

		RequiredPredicateError violating CrySL rule for javax.crypto.spec.IvParameterSpec
			First parameter was not properly generated as randomized
			at statement: specialinvoke $r5.<javax.crypto.spec.IvParameterSpec: void <init>(byte[])>($r4)


Findings in Java Class: com.danikula.videocache.HttpUrlSource

	 in Method: java.net.HttpURLConnection openConnection(long,int)
		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			First parameter was not properly generated as generatedKeyManagers
			at statement: virtualinvoke $r8.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>(varReplacer82028, $r22, $r1)

		ConstraintError violating CrySL rule for javax.net.ssl.SSLContext (on Object #3e0fdbff2506417c949a62b1d568c53d8c660397ae1565c5511c3bdf76f46276)
			First parameter (with value "SSL") should be any of {TLSv1.2}
			at statement: $r8 = staticinvoke <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String)>(varReplacer82033)

		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			Third parameter was not properly generated as randomized
			at statement: virtualinvoke $r8.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>(varReplacer82028, $r22, $r1)

		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			Second parameter was not properly generated as generatedTrustManagers
			at statement: virtualinvoke $r8.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>(varReplacer82028, $r22, $r1)


Findings in Java Class: org.repackage.a.a.a.a.c

	 in Method: java.lang.String b(android.content.Context,java.lang.String)
		ConstraintError violating CrySL rule for java.security.MessageDigest (on Object #79b04fab58f27e6d6570c224925e32b902eb4d613e5f705681cdf5530c55483c)
			First parameter (with value "SHA1") should be any of {SHA-256, SHA-384, SHA-512}
			at statement: $r11 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer82108)

		IncompleteOperationError violating CrySL rule for java.security.MessageDigest (on Object #79b04fab58f27e6d6570c224925e32b902eb4d613e5f705681cdf5530c55483c)
			Operation on object of type java.security.MessageDigest object not completed. Expected call to update, java.security.MessageDigest: byte[] digest(byte[])
			at statement: $r10 = virtualinvoke $r11.<java.security.MessageDigest: byte[] digest(byte[])>($r10)

		IncompleteOperationError violating CrySL rule for java.security.MessageDigest (on Object #79b04fab58f27e6d6570c224925e32b902eb4d613e5f705681cdf5530c55483c)
			Operation on object of type java.security.MessageDigest object not completed. Expected call to digest, update
			at statement: $r11 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer82108)


Findings in Java Class: com.umeng.analytics.filter.d

	 in Method: void <init>(boolean,java.lang.String)
		ConstraintError violating CrySL rule for java.security.MessageDigest (on Object #c888ef97a96c97a51212cf8e54df8cb4e5d0cb5be6739408165cf5fc122741e1)
			First parameter (with value "MD5") should be any of {SHA-256, SHA-384, SHA-512}
			at statement: $r2 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer88381)


Findings in Java Class: com.umeng.commonsdk.statistics.idtracking.ImprintHandler

	 in Method: com.umeng.commonsdk.statistics.proto.d a(com.umeng.commonsdk.statistics.proto.d,com.umeng.commonsdk.statistics.proto.d,java.util.Map)
		IncompleteOperationError violating CrySL rule for java.security.MessageDigest (on Object #c888ef97a96c97a51212cf8e54df8cb4e5d0cb5be6739408165cf5fc122741e1)
			Operation on object of type java.security.MessageDigest object not completed. Expected call to digest, update
			at statement: interfaceinvoke $r19.<com.umeng.commonsdk.statistics.internal.UMImprintChangeCallback: void onImprintValueChanged(java.lang.String,java.lang.String)>($r11, varReplacer87825)


	 in Method: com.umeng.commonsdk.statistics.proto.d e(com.umeng.commonsdk.statistics.proto.d)
		IncompleteOperationError violating CrySL rule for java.security.MessageDigest (on Object #c888ef97a96c97a51212cf8e54df8cb4e5d0cb5be6739408165cf5fc122741e1)
			Operation on object of type java.security.MessageDigest object not completed. Expected call to digest, update
			at statement: interfaceinvoke $r15.<com.umeng.commonsdk.statistics.internal.UMImprintChangeCallback: void onImprintValueChanged(java.lang.String,java.lang.String)>($r9, varReplacer87824)

		IncompleteOperationError violating CrySL rule for java.security.MessageDigest (on Object #c888ef97a96c97a51212cf8e54df8cb4e5d0cb5be6739408165cf5fc122741e1)
			Operation on object of type java.security.MessageDigest object not completed. Expected call to digest, update
			at statement: interfaceinvoke $r15.<com.umeng.commonsdk.statistics.internal.UMImprintChangeCallback: void onImprintValueChanged(java.lang.String,java.lang.String)>($r9, $r10)


	 in Method: void b(com.umeng.commonsdk.statistics.proto.d)
		IncompleteOperationError violating CrySL rule for java.security.MessageDigest (on Object #c888ef97a96c97a51212cf8e54df8cb4e5d0cb5be6739408165cf5fc122741e1)
			Operation on object of type java.security.MessageDigest object not completed. Expected call to digest, update
			at statement: interfaceinvoke $r17.<com.umeng.commonsdk.statistics.internal.UMImprintChangeCallback: void onImprintValueChanged(java.lang.String,java.lang.String)>($r4, $r5)


Findings in Java Class: com.umeng.analytics.b

	 in Method: void a(android.content.Context)
		IncompleteOperationError violating CrySL rule for java.security.MessageDigest (on Object #c888ef97a96c97a51212cf8e54df8cb4e5d0cb5be6739408165cf5fc122741e1)
			Operation on object of type java.security.MessageDigest object not completed. Expected call to digest, update
			at statement: virtualinvoke $r7.<com.umeng.analytics.filter.b: void register(android.content.Context)>($r5)

		IncompleteOperationError violating CrySL rule for java.security.MessageDigest (on Object #c888ef97a96c97a51212cf8e54df8cb4e5d0cb5be6739408165cf5fc122741e1)
			Operation on object of type java.security.MessageDigest object not completed. Expected call to digest, update
			at statement: $r7 = r0.<com.umeng.analytics.b: com.umeng.analytics.filter.b x>


Findings in Java Class: com.tencent.mm.opensdk.utils.b

	 in Method: java.lang.String e(byte[])
		ConstraintError violating CrySL rule for java.security.MessageDigest (on Object #cbd81d15171329783ff45346533e83c9de66a6f74620c635705c60c5086a82b4)
			First parameter (with value "MD5") should be any of {SHA-256, SHA-384, SHA-512}
			at statement: $r3 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer88780)


Findings in Java Class: com.nostra13.universalimageloader.cache.disc.naming.Md5FileNameGenerator

	 in Method: byte[] getMD5(byte[])
		ConstraintError violating CrySL rule for java.security.MessageDigest (on Object #40974566e9147419485ef5d18e5ddd347c1d45e2986c87e9904d2d19436afccf)
			First parameter (with value "MD5") should be any of {SHA-256, SHA-384, SHA-512}
			at statement: $r2 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer89552)


Findings in Java Class: com.zopim.android.sdk.api.Tls12SocketFactory

	 in Method: javax.net.ssl.HttpsURLConnection enableTls12(javax.net.ssl.HttpsURLConnection)
		ConstraintError violating CrySL rule for javax.net.ssl.SSLContext (on Object #e93ec26c46bbfa39b5160403dee84fb2c84e0a85b5eb77e3cfc030c0d3eddef1)
			First parameter (with value "TLS") should be any of {TLSv1.2}
			at statement: $r1 = staticinvoke <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String)>(varReplacer91970)

		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			First parameter was not properly generated as generatedKeyManagers
			at statement: virtualinvoke $r1.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>(varReplacer91971, varReplacer91971, varReplacer91971)

		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			Third parameter was not properly generated as randomized
			at statement: virtualinvoke $r1.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>(varReplacer91971, varReplacer91971, varReplacer91971)

		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			Second parameter was not properly generated as generatedTrustManagers
			at statement: virtualinvoke $r1.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>(varReplacer91971, varReplacer91971, varReplacer91971)


Findings in Java Class: com.google.android.exoplayer2.upstream.cache.CachedContentIndex$LegacyStorage

	 in Method: boolean readFile(java.util.HashMap,android.util.SparseArray)
		IncompleteOperationError violating CrySL rule for javax.crypto.CipherInputStream (on Object #6b30d6219e1be8a5e0a9a049ef7eb5d6780a49f6a7b22f8ed8fe44856ade655b)
			Operation on object of type javax.crypto.CipherInputStream object not completed. Expected call to read
			at statement: specialinvoke $r10.<java.io.DataInputStream: void <init>(java.io.InputStream)>($r18)

		RequiredPredicateError violating CrySL rule for javax.crypto.spec.IvParameterSpec
			First parameter was not properly generated as randomized
			at statement: specialinvoke $r16.<javax.crypto.spec.IvParameterSpec: void <init>(byte[])>($r15)


	 in Method: void writeFile(java.util.HashMap)
		IncompleteOperationError violating CrySL rule for javax.crypto.CipherOutputStream (on Object #d25fda46376f2e332f56ea026ae45706bde4c3a80699c95ac5175b26870d5614)
			Operation on object of type javax.crypto.CipherOutputStream object not completed. Expected call to write
			at statement: specialinvoke $r2.<java.io.DataOutputStream: void <init>(java.io.OutputStream)>($r12)

		RequiredPredicateError violating CrySL rule for javax.crypto.spec.IvParameterSpec
			First parameter was not properly generated as randomized
			at statement: specialinvoke $r9.<javax.crypto.spec.IvParameterSpec: void <init>(byte[])>($r7)


	 in Method: void <init>(java.io.File,byte[],boolean)
		RequiredPredicateError violating CrySL rule for javax.crypto.spec.SecretKeySpec
			First parameter was not properly generated as preparedKeyMaterial
			at statement: specialinvoke $r5.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r3, varReplacer122369)


Findings in Java Class: org.eclipse.paho.client.mqttv3.internal.websocket.WebSocketHandshake

	 in Method: byte[] sha1(java.lang.String)
		ConstraintError violating CrySL rule for java.security.MessageDigest (on Object #2e4d106894d10c8798224b9b5a141b8c8f9af92b783ca2237444258def9afec9)
			First parameter (with value "SHA1") should be any of {SHA-256, SHA-384, SHA-512}
			at statement: $r2 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer101436)


Findings in Java Class: com.google.firebase.messaging.GmsRpc

	 in Method: java.lang.String getHashedFirebaseAppName()
		ConstraintError violating CrySL rule for java.security.MessageDigest (on Object #42bf8ad353be8b6b2eeba8a408bce27adf000e6f491efe76bef4c1240d261b2)
			First parameter (with value "SHA-1") should be any of {SHA-256, SHA-384, SHA-512}
			at statement: $r4 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer101525)


Findings in Java Class: okio.ByteString

	 in Method: okio.ByteString digest(java.lang.String)
		ConstraintError violating CrySL rule for java.security.MessageDigest (on Object #b336d574501b28a5bd90db22472c23a68acb0c1b99c4f14746fdc2a23c69a24e)
			First parameter (with value "SHA-1") should be any of {SHA-256, SHA-384, SHA-512}
			at statement: $r2 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>($r1)

		ConstraintError violating CrySL rule for java.security.MessageDigest (on Object #b336d574501b28a5bd90db22472c23a68acb0c1b99c4f14746fdc2a23c69a24e)
			First parameter (with value "MD5") should be any of {SHA-256, SHA-384, SHA-512}
			at statement: $r2 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>($r1)


Findings in Java Class: com.umeng.commonsdk.utils.UMUtils

	 in Method: java.lang.String MD5(java.lang.String)
		ConstraintError violating CrySL rule for java.security.MessageDigest (on Object #f26ba2803944e0ed255c5146a3e4a598a834869de1d2b08b8aa87dfa2032609f)
			First parameter (with value "MD5") should be any of {SHA-256, SHA-384, SHA-512}
			at statement: $r3 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer108256)


Findings in Java Class: com.google.firebase.installations.local.IidStore

	 in Method: java.lang.String getIdFromPublicKey(java.security.PublicKey)
		ConstraintError violating CrySL rule for java.security.MessageDigest (on Object #562b221ec58290492b96de963f5a5dcc6264e88f3b10d472a8d88df91193694b)
			First parameter (with value "SHA1") should be any of {SHA-256, SHA-384, SHA-512}
			at statement: $r3 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer109445)


	 in Method: java.security.PublicKey parseKey(java.lang.String)
		RequiredPredicateError violating CrySL rule for java.security.KeyFactory
			First parameter was not properly generated as speccedKey
			at statement: $r5 = virtualinvoke $r3.<java.security.KeyFactory: java.security.PublicKey generatePublic(java.security.spec.KeySpec)>($r4)

		RequiredPredicateError violating CrySL rule for java.security.spec.X509EncodedKeySpec
			First parameter was not properly generated as preparedKeyMaterial
			at statement: specialinvoke $r4.<java.security.spec.X509EncodedKeySpec: void <init>(byte[])>($r2)


Findings in Java Class: com.bumptech.glide.load.engine.cache.SafeKeyGenerator

	 in Method: java.lang.String getSafeKey(com.bumptech.glide.load.Key)
		TypestateError violating CrySL rule for java.security.MessageDigest (on Object #76d7da367c4645888c7894104be0db1b667484399f9912c72399670f7426d762)
			Unexpected call to method <java.security.MessageDigest: byte[] digest()> on object of type java.security.MessageDigest. Expect a call to one of the following methods java.security.MessageDigest: void update(byte[],int,int),java.security.MessageDigest: void update(java.nio.ByteBuffer),java.security.MessageDigest: byte[] digest(byte[]),java.security.MessageDigest: void update(byte),java.security.MessageDigest: void update(byte[])
			at statement: $r7 = virtualinvoke $r6.<java.security.MessageDigest: byte[] digest()>()


Findings in Java Class: com.danikula.videocache.ProxyCacheUtils

	 in Method: java.lang.String computeMD5(java.lang.String)
		ConstraintError violating CrySL rule for java.security.MessageDigest (on Object #5280f7415fa0e1e1e0d2a23d196bfcfe521350d37a8124e4b089004a5e1deea4)
			First parameter (with value "MD5") should be any of {SHA-256, SHA-384, SHA-512}
			at statement: $r1 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer112543)


Findings in Java Class: cz.msebera.android.httpclient.impl.auth.DigestScheme

	 in Method: java.security.MessageDigest createMessageDigest(java.lang.String)
		ConstraintError violating CrySL rule for java.security.MessageDigest (on Object #bafd683999767fa653a59f6561b5fb73a4ec80f20b87a366e3f277c0d9c77bd)
			First parameter (with value "MD5") should be any of {SHA-256, SHA-384, SHA-512}
			at statement: $r4 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>($r3)


Findings in Java Class: cz.msebera.android.httpclient.impl.auth.HttpEntityDigester

	 in Method: void close()
		TypestateError violating CrySL rule for java.security.MessageDigest (on Object #bafd683999767fa653a59f6561b5fb73a4ec80f20b87a366e3f277c0d9c77bd)
			Unexpected call to method <java.security.MessageDigest: byte[] digest()> on object of type java.security.MessageDigest. Expect a call to one of the following methods java.security.MessageDigest: void update(byte[],int,int),java.security.MessageDigest: void update(java.nio.ByteBuffer),java.security.MessageDigest: byte[] digest(byte[]),java.security.MessageDigest: void update(byte),java.security.MessageDigest: void update(byte[])
			at statement: $r1 = virtualinvoke $r2.<java.security.MessageDigest: byte[] digest()>()


Findings in Java Class: com.loopj.android.http.JsonStreamerEntity

	 in Method: void writeTo(java.io.OutputStream)
		IncompleteOperationError violating CrySL rule for java.security.MessageDigest (on Object #bafd683999767fa653a59f6561b5fb73a4ec80f20b87a366e3f277c0d9c77bd)
			Operation on object of type java.security.MessageDigest object not completed. Expected call to digest
			at statement: virtualinvoke $r20.<java.io.OutputStream: void write(int)>(varReplacer117252)


Findings in Java Class: org.apache.commons.io.output.WriterOutputStream

	 in Method: void processInput(boolean)
		IncompleteOperationError violating CrySL rule for java.security.MessageDigest (on Object #bafd683999767fa653a59f6561b5fb73a4ec80f20b87a366e3f277c0d9c77bd)
			Operation on object of type java.security.MessageDigest object not completed. Expected call to digest
			at statement: specialinvoke r0.<org.apache.commons.io.output.WriterOutputStream: void flushOutput()>()


Findings in Java Class: org.conscrypt.ConscryptEngineSocket$SSLOutputStream

	 in Method: void writeInternal(java.nio.ByteBuffer)
		IncompleteOperationError violating CrySL rule for java.security.MessageDigest (on Object #bafd683999767fa653a59f6561b5fb73a4ec80f20b87a366e3f277c0d9c77bd)
			Operation on object of type java.security.MessageDigest object not completed. Expected call to digest
			at statement: specialinvoke r0.<org.conscrypt.ConscryptEngineSocket$SSLOutputStream: void writeToSocket()>()

		IncompleteOperationError violating CrySL rule for java.security.MessageDigest (on Object #bafd683999767fa653a59f6561b5fb73a4ec80f20b87a366e3f277c0d9c77bd)
			Operation on object of type java.security.MessageDigest object not completed. Expected call to digest
			at statement: specialinvoke r0.<org.conscrypt.ConscryptEngineSocket$SSLOutputStream: void init()>()


Findings in Java Class: com.loopj.android.http.Base64OutputStream

	 in Method: void internalWrite(byte[],int,int,boolean)
		IncompleteOperationError violating CrySL rule for java.security.MessageDigest (on Object #bafd683999767fa653a59f6561b5fb73a4ec80f20b87a366e3f277c0d9c77bd)
			Operation on object of type java.security.MessageDigest object not completed. Expected call to digest
			at statement: $r3 = specialinvoke r0.<com.loopj.android.http.Base64OutputStream: byte[] embiggen(byte[],int)>($r3, $i2)


	 in Method: void close()
		IncompleteOperationError violating CrySL rule for java.security.MessageDigest (on Object #bafd683999767fa653a59f6561b5fb73a4ec80f20b87a366e3f277c0d9c77bd)
			Operation on object of type java.security.MessageDigest object not completed. Expected call to digest
			at statement: specialinvoke r0.<com.loopj.android.http.Base64OutputStream: void internalWrite(byte[],int,int,boolean)>($r1, varReplacer19696, varReplacer19696, varReplacer19698)


Findings in Java Class: org.eclipse.paho.client.mqttv3.internal.security.SSLSocketFactoryFactory

	 in Method: javax.net.ssl.SSLContext getSSLContext(java.lang.String)
		NeverTypeOfError violating CrySL rule for javax.net.ssl.KeyManagerFactory (on Object #3502fa758305a1dec42a6535b8ce8189f7707f9bdc917efceea97f5a2943e84d)
			Second parameter should never be of type java.lang.String.
			at statement: virtualinvoke $r16.<javax.net.ssl.KeyManagerFactory: void init(java.security.KeyStore,char[])>($r14, $r10)

		HardCodedError violating CrySL rule for javax.net.ssl.KeyManagerFactory (on Object #3502fa758305a1dec42a6535b8ce8189f7707f9bdc917efceea97f5a2943e84d)
			Second parameter should never be hardcoded.
			at statement: virtualinvoke $r16.<javax.net.ssl.KeyManagerFactory: void init(java.security.KeyStore,char[])>($r14, $r10)

		NeverTypeOfError violating CrySL rule for java.security.KeyStore (on Object #5149894d05ef20df222d58c4a033421d6302e35e69a14f445f906bc16807ea17)
			Second parameter should never be of type java.lang.String.
			at statement: virtualinvoke $r14.<java.security.KeyStore: void load(java.io.InputStream,char[])>($r15, $r10)

		HardCodedError violating CrySL rule for java.security.KeyStore (on Object #5149894d05ef20df222d58c4a033421d6302e35e69a14f445f906bc16807ea17)
			Second parameter should never be hardcoded.
			at statement: virtualinvoke $r14.<java.security.KeyStore: void load(java.io.InputStream,char[])>($r15, $r10)

		NeverTypeOfError violating CrySL rule for javax.net.ssl.KeyManagerFactory (on Object #3502fa758305a1dec42a6535b8ce8189f7707f9bdc917efceea97f5a2943e84d)
			Second parameter should never be of type java.lang.String.
			at statement: virtualinvoke $r16.<javax.net.ssl.KeyManagerFactory: void init(java.security.KeyStore,char[])>($r14, $r10)

		HardCodedError violating CrySL rule for javax.net.ssl.KeyManagerFactory (on Object #3502fa758305a1dec42a6535b8ce8189f7707f9bdc917efceea97f5a2943e84d)
			Second parameter should never be hardcoded.
			at statement: virtualinvoke $r16.<javax.net.ssl.KeyManagerFactory: void init(java.security.KeyStore,char[])>($r14, $r10)

		ConstraintError violating CrySL rule for javax.net.ssl.SSLContext (on Object #2de0dbcb962ff3cb3e0d9dc8e9469638e8762c9aa5d9bef5cf875912fda1093)
			First parameter (with value "TLS") should be any of {TLSv1.2}
			at statement: $r7 = staticinvoke <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String,java.lang.String)>($r4, $r3)

		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			Second parameter was not properly generated as generatedTrustManagers
			at statement: virtualinvoke $r7.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>($r17, $r25, varReplacer117788)

		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			Third parameter was not properly generated as randomized
			at statement: virtualinvoke $r7.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>($r17, $r25, varReplacer117788)

		RequiredPredicateError violating CrySL rule for javax.net.ssl.TrustManagerFactory
			First parameter was not properly generated as generatedKeyStore
			at statement: virtualinvoke $r24.<javax.net.ssl.TrustManagerFactory: void init(java.security.KeyStore)>($r14)

		NeverTypeOfError violating CrySL rule for java.security.KeyStore (on Object #5149894d05ef20df222d58c4a033421d6302e35e69a14f445f906bc16807ea17)
			Second parameter should never be of type java.lang.String.
			at statement: virtualinvoke $r14.<java.security.KeyStore: void load(java.io.InputStream,char[])>($r15, $r10)

		HardCodedError violating CrySL rule for java.security.KeyStore (on Object #5149894d05ef20df222d58c4a033421d6302e35e69a14f445f906bc16807ea17)
			Second parameter should never be hardcoded.
			at statement: virtualinvoke $r14.<java.security.KeyStore: void load(java.io.InputStream,char[])>($r15, $r10)

		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			First parameter was not properly generated as generatedKeyManagers
			at statement: virtualinvoke $r7.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>($r17, $r25, varReplacer117788)

		NeverTypeOfError violating CrySL rule for java.security.KeyStore (on Object #5149894d05ef20df222d58c4a033421d6302e35e69a14f445f906bc16807ea17)
			Second parameter should never be of type java.lang.String.
			at statement: virtualinvoke $r14.<java.security.KeyStore: void load(java.io.InputStream,char[])>($r15, $r10)

		HardCodedError violating CrySL rule for java.security.KeyStore (on Object #5149894d05ef20df222d58c4a033421d6302e35e69a14f445f906bc16807ea17)
			Second parameter should never be hardcoded.
			at statement: virtualinvoke $r14.<java.security.KeyStore: void load(java.io.InputStream,char[])>($r15, $r10)

		RequiredPredicateError violating CrySL rule for javax.net.ssl.KeyManagerFactory
			First parameter was not properly generated as generatedKeyStore
			at statement: virtualinvoke $r16.<javax.net.ssl.KeyManagerFactory: void init(java.security.KeyStore,char[])>($r14, $r10)

		ConstraintError violating CrySL rule for javax.net.ssl.SSLContext (on Object #faf8a006ee2bf18d70acac36e6184b973d313a1f622eaa10afaeb42c1349d99c)
			First parameter (with value "TLS") should be any of {TLSv1.2}
			at statement: $r7 = staticinvoke <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String)>($r4)


Findings in Java Class: cz.msebera.android.httpclient.impl.auth.NTLMEngineImpl

	 in Method: byte[] RC4(byte[],byte[])
		RequiredPredicateError violating CrySL rule for javax.crypto.Cipher
			Second parameter was not properly generated as generatedKey
			at statement: virtualinvoke $r3.<javax.crypto.Cipher: void init(int,java.security.Key)>(varReplacer121704, $r0)

		ConstraintError violating CrySL rule for javax.crypto.spec.SecretKeySpec (on Object #28d3198ae35a947feeeef0f1d3927952c211ab1b43cdfa58bee004eff26a7a4b)
			Second parameter (with value "RC4") should be any of {AES, HmacSHA224, HmacSHA256, HmacSHA384, HmacSHA512}
			at statement: specialinvoke $r0.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r2, varReplacer121706)

		RequiredPredicateError violating CrySL rule for javax.crypto.spec.SecretKeySpec
			First parameter was not properly generated as preparedKeyMaterial
			at statement: specialinvoke $r0.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r2, varReplacer121706)

		ConstraintError violating CrySL rule for javax.crypto.Cipher (on Object #b5044fcb57d5e1427b4bab1b0f7b0c6f7706ecad91db705b08c3183a4d70f2c1)
			First parameter (with value "RC4") should be any of {AES, PBEWithHmacSHA224AndAES_128, PBEWithHmacSHA256AndAES_128, PBEWithHmacSHA384AndAES_128, PBEWithHmacSHA512AndAES_128, PBEWithHmacSHA224AndAES_256, PBEWithHmacSHA256AndAES_256, PBEWithHmacSHA384AndAES_256, PBEWithHmacSHA512AndAES_256}
			at statement: $r3 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer121705)


	 in Method: byte[] ntlm2SessionResponse(byte[],byte[],byte[])
		ConstraintError violating CrySL rule for java.security.MessageDigest (on Object #a442e52325c54efe391102d67cc0d69752676e2eb38480e6b265d45f97bd483e)
			First parameter (with value "MD5") should be any of {SHA-256, SHA-384, SHA-512}
			at statement: $r3 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer122813)


	 in Method: java.security.Key createDESKey(byte[],int)
		ConstraintError violating CrySL rule for javax.crypto.spec.SecretKeySpec (on Object #33ac4051ba841b02ed22e0e05ebe434c4fe83f5e6cade9960bdf0e7633820df8)
			Second parameter (with value "DES") should be any of {AES, HmacSHA224, HmacSHA256, HmacSHA384, HmacSHA512}
			at statement: specialinvoke $r2.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r1, varReplacer122820)

		RequiredPredicateError violating CrySL rule for javax.crypto.spec.SecretKeySpec
			First parameter was not properly generated as preparedKeyMaterial
			at statement: specialinvoke $r2.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r1, varReplacer122820)


	 in Method: byte[] lmResponse(byte[],byte[])
		ConstraintError violating CrySL rule for javax.crypto.Cipher (on Object #b6eec5170093e0317b07e583da0b67aebc09af2fb2dc2a24c40f56589ca8c6ba)
			First parameter (with value "DES/ECB/NoPadding") should be any of {AES, PBEWithHmacSHA224AndAES_128, PBEWithHmacSHA256AndAES_128, PBEWithHmacSHA384AndAES_128, PBEWithHmacSHA512AndAES_128, PBEWithHmacSHA224AndAES_256, PBEWithHmacSHA256AndAES_256, PBEWithHmacSHA384AndAES_256, PBEWithHmacSHA512AndAES_256}
			at statement: $r6 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer122828)

		TypestateError violating CrySL rule for javax.crypto.Cipher (on Object #b6eec5170093e0317b07e583da0b67aebc09af2fb2dc2a24c40f56589ca8c6ba)
			Unexpected call to method init on object of type javax.crypto.Cipher. Expect a call to one of the following methods update,doFinal
			at statement: virtualinvoke $r6.<javax.crypto.Cipher: void init(int,java.security.Key)>(varReplacer122823, $r4)

		RequiredPredicateError violating CrySL rule for javax.crypto.Cipher
			Second parameter was not properly generated as generatedKey
			at statement: virtualinvoke $r6.<javax.crypto.Cipher: void init(int,java.security.Key)>(varReplacer122834, $r3)


	 in Method: byte[] lmHash(java.lang.String)
		RequiredPredicateError violating CrySL rule for javax.crypto.Cipher
			Second parameter was not properly generated as generatedKey
			at statement: virtualinvoke $r6.<javax.crypto.Cipher: void init(int,java.security.Key)>(varReplacer123736, $r5)

		TypestateError violating CrySL rule for javax.crypto.Cipher (on Object #304d6ef635b6d4b27cb944558a979dab031d0cfa5c459a0629bd1aeb3c8cf23a)
			Unexpected call to method init on object of type javax.crypto.Cipher. Expect a call to one of the following methods update,doFinal
			at statement: virtualinvoke $r6.<javax.crypto.Cipher: void init(int,java.security.Key)>(varReplacer123736, $r5)

		ConstraintError violating CrySL rule for javax.crypto.Cipher (on Object #304d6ef635b6d4b27cb944558a979dab031d0cfa5c459a0629bd1aeb3c8cf23a)
			First parameter (with value "DES/ECB/NoPadding") should be any of {AES, PBEWithHmacSHA224AndAES_128, PBEWithHmacSHA256AndAES_128, PBEWithHmacSHA384AndAES_128, PBEWithHmacSHA512AndAES_128, PBEWithHmacSHA224AndAES_256, PBEWithHmacSHA256AndAES_256, PBEWithHmacSHA384AndAES_256, PBEWithHmacSHA512AndAES_256}
			at statement: $r6 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer123730)


	 in Method: byte[] ntlmv2Hash(java.lang.String,java.lang.String,byte[])
		IncompleteOperationError violating CrySL rule for java.security.MessageDigest (on Object #28e5ed933f75575fbf5d411612e1f4c4188548067733770dac32b57ae8e74117)
			Operation on object of type java.security.MessageDigest object not completed. Expected call to digest
			at statement: specialinvoke $r7.<cz.msebera.android.httpclient.impl.auth.NTLMEngineImpl$HMACMD5: void <init>(byte[])>($r3)


	 in Method: byte[] lmv2Hash(java.lang.String,java.lang.String,byte[])
		IncompleteOperationError violating CrySL rule for java.security.MessageDigest (on Object #28e5ed933f75575fbf5d411612e1f4c4188548067733770dac32b57ae8e74117)
			Operation on object of type java.security.MessageDigest object not completed. Expected call to digest
			at statement: specialinvoke $r7.<cz.msebera.android.httpclient.impl.auth.NTLMEngineImpl$HMACMD5: void <init>(byte[])>($r3)


Findings in Java Class: cz.msebera.android.httpclient.impl.auth.NTLMEngineImpl$CipherGen

	 in Method: byte[] getLanManagerSessionKey()
		ConstraintError violating CrySL rule for javax.crypto.Cipher (on Object #c1f025e8cc8d7aef1ec3fc331627231af44962a44e70bc6b85a361aa0dafea6e)
			First parameter (with value "DES/ECB/NoPadding") should be any of {AES, PBEWithHmacSHA224AndAES_128, PBEWithHmacSHA256AndAES_128, PBEWithHmacSHA384AndAES_128, PBEWithHmacSHA512AndAES_128, PBEWithHmacSHA224AndAES_256, PBEWithHmacSHA256AndAES_256, PBEWithHmacSHA384AndAES_256, PBEWithHmacSHA512AndAES_256}
			at statement: $r5 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer122796)

		RequiredPredicateError violating CrySL rule for javax.crypto.Cipher
			Second parameter was not properly generated as generatedKey
			at statement: virtualinvoke $r5.<javax.crypto.Cipher: void init(int,java.security.Key)>(varReplacer122792, $r4)


Findings in Java Class: cz.msebera.android.httpclient.impl.auth.NTLMEngineImpl$HMACMD5

	 in Method: void <init>(byte[])
		ConstraintError violating CrySL rule for java.security.MessageDigest (on Object #28e5ed933f75575fbf5d411612e1f4c4188548067733770dac32b57ae8e74117)
			First parameter (with value "MD5") should be any of {SHA-256, SHA-384, SHA-512}
			at statement: $r2 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer123750)


Findings in Java Class: okhttp3.OkHttpClient

	 in Method: javax.net.ssl.SSLSocketFactory newSslSocketFactory(javax.net.ssl.X509TrustManager)
		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			Second parameter was not properly generated as generatedTrustManagers
			at statement: virtualinvoke $r2.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>(varReplacer23303, $r7, varReplacer23303)

		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			Third parameter was not properly generated as randomized
			at statement: virtualinvoke $r2.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>(varReplacer23303, $r7, varReplacer23303)

		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			First parameter was not properly generated as generatedKeyManagers
			at statement: virtualinvoke $r2.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>(varReplacer23303, $r7, varReplacer23303)


Findings in Java Class: com.google.android.exoplayer2.upstream.crypto.AesFlushingCipher

	 in Method: void <init>(int,byte[],long,long)
		RequiredPredicateError violating CrySL rule for javax.crypto.spec.SecretKeySpec
			First parameter was not properly generated as preparedKeyMaterial
			at statement: specialinvoke $r4.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r1, $r6)

		RequiredPredicateError violating CrySL rule for javax.crypto.Cipher
			Second parameter was not properly generated as generatedKey
			at statement: virtualinvoke $r2.<javax.crypto.Cipher: void init(int,java.security.Key,java.security.spec.AlgorithmParameterSpec)>($i1, $r4, $r8)

		RequiredPredicateError violating CrySL rule for javax.crypto.spec.IvParameterSpec
			First parameter was not properly generated as randomized
			at statement: specialinvoke $r8.<javax.crypto.spec.IvParameterSpec: void <init>(byte[])>($r1)


Findings in Java Class: org.conscrypt.OpenSSLX509Certificate

	 in Method: void verifyInternal(java.security.PublicKey,java.lang.String)
		RequiredPredicateError violating CrySL rule for java.security.Signature
			First parameter was not properly generated as generatedPubkey
			at statement: virtualinvoke $r3.<java.security.Signature: void initVerify(java.security.PublicKey)>($r1)


	 in Method: java.security.PublicKey getPublicKey()
		RequiredPredicateError violating CrySL rule for java.security.KeyFactory
			First parameter was not properly generated as speccedKey
			at statement: $r7 = virtualinvoke $r10.<java.security.KeyFactory: java.security.PublicKey generatePublic(java.security.spec.KeySpec)>($r1)

		RequiredPredicateError violating CrySL rule for java.security.spec.X509EncodedKeySpec
			First parameter was not properly generated as preparedKeyMaterial
			at statement: specialinvoke $r1.<java.security.spec.X509EncodedKeySpec: void <init>(byte[])>($r9)


Findings in Java Class: okhttp3.internal.Util

	 in Method: javax.net.ssl.X509TrustManager platformTrustManager()
		RequiredPredicateError violating CrySL rule for javax.net.ssl.TrustManagerFactory
			First parameter was not properly generated as generatedKeyStore
			at statement: virtualinvoke $r1.<javax.net.ssl.TrustManagerFactory: void init(java.security.KeyStore)>(varReplacer23306)


Findings in Java Class: com.ansjer.zccloud_a.AJ_Tools.AJ_Util.EncryptUtil

	 in Method: java.lang.String encrypt(java.security.interfaces.RSAPrivateKey,byte[])
		RequiredPredicateError violating CrySL rule for java.security.Signature
			First parameter was not properly generated as generatedPrivkey
			at statement: virtualinvoke $r2.<java.security.Signature: void initSign(java.security.PrivateKey)>($r0)


	 in Method: java.lang.String encrypt256ForKey(java.lang.String,java.lang.String)
		RequiredPredicateError violating CrySL rule for java.security.KeyFactory
			First parameter was not properly generated as speccedKey
			at statement: $r5 = virtualinvoke $r4.<java.security.KeyFactory: java.security.PrivateKey generatePrivate(java.security.spec.KeySpec)>($r3)


Findings in Java Class: com.zopim.android.sdk.chatlog.PicassoHelper

	 in Method: okhttp3.OkHttpClient$Builder applyTlsPatch(okhttp3.OkHttpClient$Builder)
		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			First parameter was not properly generated as generatedKeyManagers
			at statement: virtualinvoke $r1.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>(varReplacer123556, varReplacer123556, varReplacer123556)

		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			Third parameter was not properly generated as randomized
			at statement: virtualinvoke $r1.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>(varReplacer123556, varReplacer123556, varReplacer123556)

		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			Second parameter was not properly generated as generatedTrustManagers
			at statement: virtualinvoke $r1.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>(varReplacer123556, varReplacer123556, varReplacer123556)


======================= CryptoAnalysis Summary ==========================
	Number of CrySL rules: 47
	Number of Objects Analyzed: 230

	CryptoAnalysis found the following violations. For details see description above.
	RequiredPredicateError: 82
	ConstraintError: 64
	HardCodedError: 5
	IncompleteOperationError: 147
	TypestateError: 4
	NeverTypeOfError: 11
=====================================================================
