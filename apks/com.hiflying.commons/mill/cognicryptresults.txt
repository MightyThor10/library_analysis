SLF4J: Failed to load class "org.slf4j.impl.StaticLoggerBinder".
SLF4J: Defaulting to no-operation (NOP) logger implementation
SLF4J: See http://www.slf4j.org/codes.html#StaticLoggerBinder for further details.
0    [main] WARN  pes.access.impl.DeclaredTypeFactory  - --- xtext.common.types ---------------------------------------------------
0    [main] WARN  pes.access.impl.DeclaredTypeFactory  - ASM library is too old. Falling back to java.lang.reflect API.
0    [main] WARN  pes.access.impl.DeclaredTypeFactory  - Please note that no information about compile time constants is available.
0    [main] WARN  pes.access.impl.DeclaredTypeFactory  - It's recommended to use org.objectweb.asm 9.3.0 or better (Maven group id: org.ow2.asm).
0    [main] WARN  pes.access.impl.DeclaredTypeFactory  - --------------------------------------------------------------------------
Ruleset: 
	javax.net.ssl.KeyStoreBuilderParameters
	javax.crypto.spec.PBEKeySpec
	java.security.spec.MGF1ParameterSpec
	java.security.MessageDigest
	javax.crypto.Cipher
	java.security.KeyPair
	javax.crypto.SecretKeyFactory
	java.security.cert.PKIXBuilderParameters
	javax.crypto.SecretKey
	javax.crypto.spec.IvParameterSpec
	javax.crypto.spec.PBEParameterSpec
	javax.net.ssl.TrustManagerFactory
	javax.crypto.spec.GCMParameterSpec
	javax.crypto.spec.SecretKeySpec
	javax.net.ssl.CertPathTrustManagerParameters
	java.security.spec.DSAParameterSpec
	javax.crypto.KeyAgreement
	java.security.cert.TrustAnchor
	javax.crypto.spec.DHParameterSpec
	javax.net.ssl.SSLParameters
	javax.net.ssl.SSLContext
	java.security.Key
	java.security.KeyFactory
	void
	java.security.DigestOutputStream
	java.security.SecureRandom
	java.security.cert.PKIXParameters
	java.security.spec.X509EncodedKeySpec
	javax.crypto.spec.DHGenParameterSpec
	javax.net.ssl.SSLEngine
	java.security.spec.RSAKeyGenParameterSpec
	java.security.Signature
	javax.crypto.CipherOutputStream
	javax.xml.crypto.dsig.spec.HMACParameterSpec
	java.security.AlgorithmParameterGenerator
	javax.crypto.Mac
	javax.crypto.spec.OAEPParameterSpec
	java.security.AlgorithmParameters
	javax.crypto.CipherInputStream
	java.security.DigestInputStream
	java.security.spec.ECParameterSpec
	javax.crypto.KeyGenerator
	java.security.KeyStore
	java.security.spec.ECGenParameterSpec
	java.security.KeyPairGenerator
	javax.net.ssl.KeyManagerFactory
	java.security.spec.DSAGenParameterSpec

Analyzed Objects: 
	Object:
		Variable: $r5
		Type: javax.crypto.spec.SecretKeySpec
		Statement: specialinvoke $r5.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r1, varReplacer15984)
		Method: <com.hiflying.commons.utils.GAES: byte[] encrypt(byte[],byte[],byte[])>
		SHA-256: fb2d24d292e1fda8499654f120b74523dcd80497fb0961da704e53afbac58d2
		Secure: false
	Object:
		Variable: $r3
		Type: javax.net.ssl.SSLContext
		Statement: $r3 = staticinvoke <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String)>(varReplacer57675)
		Method: <okhttp3.internal.platform.AndroidPlatform: javax.net.ssl.SSLContext getSSLContext()>
		SHA-256: 93a7b14e128a45195b19d2d3b6f5aec5791cba583bdaa2d4ae5ce4088c861392
		Secure: false
	Object:
		Variable: $r6
		Type: java.security.MessageDigest
		Statement: $r6 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer40261)
		Method: <org.java_websocket.drafts.Draft_76: byte[] createChallenge(java.lang.String,java.lang.String,byte[])>
		SHA-256: e6b33841379e6c4e14a2373b2a40c8b5e92fca6b32d6074be0b18bb010c7b582
		Secure: false
	Object:
		Variable: $r6
		Type: javax.crypto.spec.IvParameterSpec
		Statement: specialinvoke $r6.<javax.crypto.spec.IvParameterSpec: void <init>(byte[])>($r2)
		Method: <com.hiflying.commons.utils.GAES: byte[] encrypt(byte[],byte[],byte[])>
		SHA-256: 5813609f7c9ea6009720fdd09fe7c4b3c20ddbd35cc28d034ac234106fdb21fd
		Secure: false
	Object:
		Variable: $r4
		Type: javax.crypto.Cipher
		Statement: $r4 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer16040)
		Method: <com.accloud.utils.AesUtil: byte[] decrypt(byte[],byte[])>
		SHA-256: 4a687a55dc0cdbe8614c97e51442fbcfe31cf928cead4efc1353f16c2bcaf0ca
		Secure: false
	Object:
		Variable: $r10
		Type: javax.net.ssl.TrustManagerFactory
		Statement: $r10 = staticinvoke <javax.net.ssl.TrustManagerFactory: javax.net.ssl.TrustManagerFactory getInstance(java.lang.String)>($r3)
		Method: <com.mzlion.easyokhttp.utils.CustomTrust: javax.net.ssl.X509TrustManager trustManagerForCertificates(java.io.InputStream[])>
		SHA-256: 9c1e30e8f7baaa26fd1af4f4d38285a686ddc4c003c7c17e4ca1ad7593138940
		Secure: false
	Object:
		Variable: $r0
		Type: java.security.MessageDigest
		Statement: $r0 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer31554)
		Method: <com.google.android.gms.measurement.internal.zzkw: java.security.MessageDigest zzh()>
		SHA-256: 8869cee50c8db65e09c3226d544e3aa15cb53821df92cf5cab0c58285c3915e3
		Secure: false
	Object:
		Variable: $r0
		Type: byte[]
		Statement: $r0 = virtualinvoke $r6.<java.security.MessageDigest: byte[] digest(byte[])>($r5)
		Method: <org.java_websocket.drafts.Draft_76: byte[] createChallenge(java.lang.String,java.lang.String,byte[])>
		SHA-256: 16e619ea7c854d11cc270eb86e829bea4bc898fa31dd1105d925d1d093de6373
		Secure: false
	Object:
		Variable: $r1
		Type: javax.net.ssl.TrustManagerFactory
		Statement: $r1 = staticinvoke <javax.net.ssl.TrustManagerFactory: javax.net.ssl.TrustManagerFactory getInstance(java.lang.String)>($r0)
		Method: <com.accloud.utils.SecurityUtils: javax.net.ssl.X509TrustManager getX509TrustManager()>
		SHA-256: deefcab69638c7a8af879454a926ba50ae829f44b0090fcc4633423f48469228
		Secure: false
	Object:
		Variable: $r3
		Type: javax.net.ssl.SSLContext
		Statement: $r3 = staticinvoke <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String)>(varReplacer57676)
		Method: <okhttp3.internal.platform.AndroidPlatform: javax.net.ssl.SSLContext getSSLContext()>
		SHA-256: 25ff45e0c5b715940a753d251bbe12ebd114593e201b7406d4bfe12a26bd8fac
		Secure: false
	Object:
		Variable: $r11
		Type: javax.crypto.Cipher
		Statement: $r11 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>($r7)
		Method: <com.rhhl.millheater.utils.AES: byte[] encrypt(java.lang.String,javax.crypto.SecretKey,javax.crypto.spec.IvParameterSpec,byte[])>
		SHA-256: a5b1e5f0b094ea57b454b63bdd1f32b1dd6d05155bcba4a0506b891ff6e8dcd8
		Secure: false
	Object:
		Variable: $r3
		Type: javax.net.ssl.SSLContext
		Statement: $r3 = staticinvoke <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String,java.security.Provider)>(varReplacer57674, $r2)
		Method: <okhttp3.internal.platform.ConscryptPlatform: javax.net.ssl.SSLContext getSSLContext()>
		SHA-256: ef9e07aaa3bbc543c805d5cd8a1aec6ae94e7de0d7acdda6ee95441dd6f0e1cb
		Secure: false
	Object:
		Variable: $r7
		Type: javax.crypto.SecretKey
		Statement: $r7 = virtualinvoke $r6.<javax.crypto.SecretKeyFactory: javax.crypto.SecretKey generateSecret(java.security.spec.KeySpec)>($r3)
		Method: <com.hiflying.smartlink.v7.MulticastSmartLinkerSendAction: byte[] encodedPMK(java.lang.String,java.lang.String)>
		SHA-256: 4409e8a47e12fdb7c1719503021aa4cfd16d423fe3b88d3d88ba654a0b2667df
		Secure: false
	Object:
		Variable: $r4
		Type: byte[]
		Statement: $r4 = virtualinvoke $r3.<java.security.MessageDigest: byte[] digest(byte[])>($r4)
		Method: <org.java_websocket.drafts.Draft_10: java.lang.String generateFinalKey(java.lang.String)>
		SHA-256: 6f7e0d009fe843781c6583c4c2d94575a8e4890331abe5d479f088ab2467a31e
		Secure: false
	Object:
		Variable: varReplacer27607
		Type: java.lang.String
		Statement: specialinvoke $r0.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r3, varReplacer27607)
		Method: <com.accloud.utils.AesUtil: byte[] encrypt(byte[],byte[])>
		SHA-256: dc84de6d0b6a0a14efb8abf8a0db5570ebd6a589c5e4fd7567a0ad8c26e87a91
		Secure: false
	Object:
		Variable: $r3
		Type: javax.crypto.spec.PBEKeySpec
		Statement: specialinvoke $r3.<javax.crypto.spec.PBEKeySpec: void <init>(char[],byte[],int,int)>($r4, $r5, varReplacer35835, varReplacer35836)
		Method: <com.hiflying.smartlink.v7.MulticastSmartLinkerSendAction: byte[] encodedPMK(java.lang.String,java.lang.String)>
		SHA-256: 504b114395deccd529b8573c9463f00af3bcdc133d755cd371e6c61792093ae8
		Secure: false
	Object:
		Variable: $r4
		Type: javax.crypto.Cipher
		Statement: $r4 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>($r3)
		Method: <com.hiflying.commons.utils.GAES: byte[] encrypt(byte[],byte[],byte[])>
		SHA-256: a031b67b7aabc4ed79746df24c57ed82b497d55b9aa6b81ebd33b306b52fb6f8
		Secure: false
	Object:
		Variable: $r0
		Type: java.security.MessageDigest
		Statement: $r0 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>($r2)
		Method: <com.google.android.gms.common.util.AndroidUtilsLight: java.security.MessageDigest zzj(java.lang.String)>
		SHA-256: ae3618d0d1f264c3cd26a80f719d0eedb09a990816926713b695a9a95da4ac0d
		Secure: false
	Object:
		Variable: $r3
		Type: java.security.KeyFactory
		Statement: $r3 = staticinvoke <java.security.KeyFactory: java.security.KeyFactory getInstance(java.lang.String)>(varReplacer61877)
		Method: <com.google.firebase.installations.local.IidStore: java.security.PublicKey parseKey(java.lang.String)>
		SHA-256: accada3322caa653f7a89491bf6699cdcd3d2671a7aeb64e890683281e37b27d
		Secure: false
	Object:
		Variable: $r5
		Type: byte[]
		Statement: $r5 = virtualinvoke $r4.<java.security.MessageDigest: byte[] digest(byte[])>($r5)
		Method: <com.google.android.gms.common.zzm: java.lang.String zzc(java.lang.String,com.google.android.gms.common.zze,boolean,boolean)>
		SHA-256: f058fe58647ffa4cb8db79b9535c46a7dfeb49c7921d2a4041a5970d6b3b3927
		Secure: false
	Object:
		Variable: $r11
		Type: javax.net.ssl.TrustManager[]
		Statement: $r11 = virtualinvoke $r10.<javax.net.ssl.TrustManagerFactory: javax.net.ssl.TrustManager[] getTrustManagers()>()
		Method: <com.mzlion.easyokhttp.utils.CustomTrust: javax.net.ssl.X509TrustManager trustManagerForCertificates(java.io.InputStream[])>
		SHA-256: 8269ab2ff5d71d2f14acfcadd5674b0d50ccd190838f575170f92f51056a4cb2
		Secure: false
	Object:
		Variable: $r1
		Type: javax.crypto.spec.IvParameterSpec
		Statement: specialinvoke $r1.<javax.crypto.spec.IvParameterSpec: void <init>(byte[])>($r3)
		Method: <com.accloud.utils.AesUtil: byte[] encrypt(byte[],byte[])>
		SHA-256: aa903094a8874d0bba8867cd2d7937d914f37ccd195b8f85a51ac0033ad4a454
		Secure: false
	Object:
		Variable: $r4
		Type: java.security.spec.X509EncodedKeySpec
		Statement: specialinvoke $r4.<java.security.spec.X509EncodedKeySpec: void <init>(byte[])>($r2)
		Method: <com.google.firebase.installations.local.IidStore: java.security.PublicKey parseKey(java.lang.String)>
		SHA-256: aea7fce58cc2c3232d1730517ff25b7e58e8210bf5f593374b5621a96b219086
		Secure: false
	Object:
		Variable: varReplacer35836
		Type: int
		Statement: specialinvoke $r3.<javax.crypto.spec.PBEKeySpec: void <init>(char[],byte[],int,int)>($r4, $r5, varReplacer35835, varReplacer35836)
		Method: <com.hiflying.smartlink.v7.MulticastSmartLinkerSendAction: byte[] encodedPMK(java.lang.String,java.lang.String)>
		SHA-256: daedc37a43d17d33edd8c3e3c09e89c219645141ea20a3baef236dd3faf4c5d1
		Secure: false
	Object:
		Variable: $r9
		Type: javax.crypto.spec.IvParameterSpec
		Statement: specialinvoke $r9.<javax.crypto.spec.IvParameterSpec: void <init>(byte[])>($r2)
		Method: <com.rhhl.millheater.utils.AES: void <init>()>
		SHA-256: 335304afe41c1b0a942aef47a1ba88722b1c88faf66b4ae948de2ddf38732c3e
		Secure: false
	Object:
		Variable: $r5
		Type: java.security.PublicKey
		Statement: $r5 = virtualinvoke $r3.<java.security.KeyFactory: java.security.PublicKey generatePublic(java.security.spec.KeySpec)>($r4)
		Method: <com.google.firebase.installations.local.IidStore: java.security.PublicKey parseKey(java.lang.String)>
		SHA-256: 28692ce99d5c8ca35ce46bda2fa73a18f9a164f9dc67aed298a1311d42163d12
		Secure: false
	Object:
		Variable: $r6
		Type: javax.crypto.SecretKeyFactory
		Statement: $r6 = staticinvoke <javax.crypto.SecretKeyFactory: javax.crypto.SecretKeyFactory getInstance(java.lang.String)>(varReplacer35837)
		Method: <com.hiflying.smartlink.v7.MulticastSmartLinkerSendAction: byte[] encodedPMK(java.lang.String,java.lang.String)>
		SHA-256: 8078ef985a85e37e0a9901ca2e52cff90a1d647ae9d9cde773f6a6a7d5555eb9
		Secure: false
	Object:
		Variable: $r6
		Type: javax.crypto.SecretKeyFactory
		Statement: $r6 = staticinvoke <javax.crypto.SecretKeyFactory: javax.crypto.SecretKeyFactory getInstance(java.lang.String)>(varReplacer6854)
		Method: <com.rhhl.millheater.utils.AES: void <init>()>
		SHA-256: e9a11084c8dd5789c75a7be1e2dfe8561bb86ec47ca61a8d3234193eba920dc4
		Secure: false
	Object:
		Variable: $r3
		Type: java.security.MessageDigest
		Statement: $r3 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer48167)
		Method: <org.java_websocket.drafts.Draft_10: java.lang.String generateFinalKey(java.lang.String)>
		SHA-256: e8a004fa382d3312d4bf22d4b9d327147ec928cef55b7dc54cf344a1d2b0cdfe
		Secure: false
	Object:
		Variable: $r2
		Type: byte[]
		Statement: $r2 = virtualinvoke $r4.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r2)
		Method: <com.accloud.utils.AesUtil: byte[] encrypt(byte[],byte[])>
		SHA-256: cb4589ec741c3acb111424627bcebf32362b0fc3ae77c74c488f433977ab0e
		Secure: false
	Object:
		Variable: $r9
		Type: java.security.SecureRandom
		Statement: specialinvoke $r9.<java.security.SecureRandom: void <init>()>()
		Method: <com.mzlion.easyokhttp.utils.CustomTrust: javax.net.ssl.SSLSocketFactory sslSocketFactory(java.io.InputStream[])>
		SHA-256: 3371f0f3f6ff72f4b8a86cbb784df4c8f302186b1062bfb3f00c87cd047afcb1
		Secure: true
	Object:
		Variable: $r15
		Type: java.security.SecureRandom
		Statement: specialinvoke $r15.<java.security.SecureRandom: void <init>()>()
		Method: <com.accloud.cloudservice.ACSocketManager: void connectInternal()>
		SHA-256: 1f4d855035f4f1bc6c050d8221a4bca107f902074c402f3a1f4d034408bd77b
		Secure: true
	Object:
		Variable: $r11
		Type: byte[]
		Statement: $r11 = virtualinvoke $r4.<java.security.MessageDigest: byte[] digest(byte[])>($r11)
		Method: <com.google.android.gms.measurement.internal.zzkw: long zza(android.content.Context,java.lang.String)>
		SHA-256: 3f1a4dc867e4a32c8f9ac23eba367a7327902a5895793d74e3425bde5f1a31c2
		Secure: false
	Object:
		Variable: $r8
		Type: javax.crypto.spec.SecretKeySpec
		Statement: specialinvoke $r8.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r2, varReplacer6858)
		Method: <com.rhhl.millheater.utils.AES: void <init>()>
		SHA-256: 6b00397201d616f2a15601c0fbd75efa05a6547e95269eb448a91fa2a34e65a9
		Secure: false
	Object:
		Variable: $r1
		Type: java.security.SecureRandom
		Statement: specialinvoke $r1.<java.security.SecureRandom: void <init>()>()
		Method: <com.google.android.gms.measurement.internal.zzkw: java.security.SecureRandom zzg()>
		SHA-256: 9989852904ae51b51d7fbda787c273d719d38b581d2006d8e50613fc6810710e
		Secure: true
	Object:
		Variable: $r2
		Type: byte[]
		Statement: $r2 = virtualinvoke $r4.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r2)
		Method: <com.accloud.utils.AesUtil: byte[] decrypt(byte[],byte[])>
		SHA-256: 3a3ab8cbcee7b6523426447e8303ad69eadf71d04a4161e4bd024bdeb70fbeb4
		Secure: false
	Object:
		Variable: $r3
		Type: byte[]
		Statement: virtualinvoke $r6.<java.security.SecureRandom: void nextBytes(byte[])>($r3)
		Method: <com.google.android.gms.measurement.internal.zzki: java.lang.String zzz()>
		SHA-256: 68e0ce7ff2c52ec4f26bbb1c02e3230bcce59fc04bd2a731061c7d96c6205d9
		Secure: true
	Object:
		Variable: $r3
		Type: byte[]
		Statement: $r3 = virtualinvoke $r2.<java.security.MessageDigest: byte[] digest(byte[])>($r3)
		Method: <okio.ByteString: okio.ByteString digest(java.lang.String)>
		SHA-256: a79a1700ae9d8d44f13ea218f751e7024f8f1222b1b2ae17cdbab7b56d352181
		Secure: false
	Object:
		Variable: $r6
		Type: java.security.MessageDigest
		Statement: $r6 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer60425)
		Method: <com.bumptech.glide.load.engine.cache.SafeKeyGenerator: java.lang.String getSafeKey(com.bumptech.glide.load.Key)>
		SHA-256: 5b946495516dd903d2cdf3deae8f2948efaafed53c2e0a45412699a1244e85fd
		Secure: true
	Object:
		Variable: $r7
		Type: javax.crypto.SecretKey
		Statement: $r7 = virtualinvoke $r6.<javax.crypto.SecretKeyFactory: javax.crypto.SecretKey generateSecret(java.security.spec.KeySpec)>($r5)
		Method: <com.rhhl.millheater.utils.AES: void <init>()>
		SHA-256: c3fddad55a63c2f1ff1cb83be30361fb7001030d0b052236249f370694fb1cc
		Secure: false
	Object:
		Variable: $r0
		Type: javax.crypto.spec.SecretKeySpec
		Statement: specialinvoke $r0.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r3, varReplacer16038)
		Method: <com.accloud.utils.AesUtil: byte[] decrypt(byte[],byte[])>
		SHA-256: fb8489fb836ab66e0428ee7d5d67404e605c601cbeffe8a05bd198a79ab5ac0b
		Secure: false
	Object:
		Variable: $r1
		Type: java.security.SecureRandom
		Statement: specialinvoke $r1.<java.security.SecureRandom: void <init>()>()
		Method: <com.google.android.gms.measurement.internal.zzkw: void g_()>
		SHA-256: 5e2b993ac5363f6bab77020efc3b9b0308a2dd8ee892524a034c9685465d82f9
		Secure: true
	Object:
		Variable: $r0
		Type: javax.crypto.spec.SecretKeySpec
		Statement: specialinvoke $r0.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r3, varReplacer27607)
		Method: <com.accloud.utils.AesUtil: byte[] encrypt(byte[],byte[])>
		SHA-256: ef5cf115d1b2dc5d6dcbdcc9c7a5e0d3f79463854a444813af2de0b0e3c34a82
		Secure: false
	Object:
		Variable: $r1
		Type: javax.net.ssl.TrustManagerFactory
		Statement: $r1 = staticinvoke <javax.net.ssl.TrustManagerFactory: javax.net.ssl.TrustManagerFactory getInstance(java.lang.String)>($r0)
		Method: <okhttp3.internal.Util: javax.net.ssl.X509TrustManager platformTrustManager()>
		SHA-256: a8764d384e0e6acd4407dba0e4c2025660362892494036c03c4b52a40e75c66b
		Secure: false
	Object:
		Variable: $r2
		Type: javax.net.ssl.TrustManager[]
		Statement: $r2 = virtualinvoke $r1.<javax.net.ssl.TrustManagerFactory: javax.net.ssl.TrustManager[] getTrustManagers()>()
		Method: <okhttp3.internal.Util: javax.net.ssl.X509TrustManager platformTrustManager()>
		SHA-256: dea0af93b06734ae35228a014521e6e031131dd2b357359826afa61f9a6de1b
		Secure: false
	Object:
		Variable: $r3
		Type: java.security.MessageDigest
		Statement: $r3 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer57916)
		Method: <com.google.firebase.installations.local.IidStore: java.lang.String getIdFromPublicKey(java.security.PublicKey)>
		SHA-256: c439e3c48d456bec288603947271c6764d519db8a0c03e43fd7261ff082fa999
		Secure: false
	Object:
		Variable: $r4
		Type: javax.net.ssl.SSLContext
		Statement: $r4 = staticinvoke <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String)>(varReplacer57670)
		Method: <okhttp3.internal.platform.Platform: javax.net.ssl.SSLContext getSSLContext()>
		SHA-256: 79b783ec84053b1be361a20f313ac2863a1ee2158e0a39e3ea616fb0985cc58d
		Secure: false
	Object:
		Variable: $r3
		Type: javax.net.ssl.SSLContext
		Statement: $r3 = staticinvoke <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String,java.security.Provider)>(varReplacer57673, $r2)
		Method: <okhttp3.internal.platform.ConscryptPlatform: javax.net.ssl.SSLContext getSSLContext()>
		SHA-256: 443d1cfd7870738fa49c10b6891396b5c0b2c2e13bc1a3b07482b88d68ff2450
		Secure: false
	Object:
		Variable: $r1
		Type: byte[]
		Statement: $r1 = virtualinvoke $r3.<java.security.MessageDigest: byte[] digest()>()
		Method: <com.google.firebase.crashlytics.internal.common.CommonUtils: java.lang.String hash(byte[],java.lang.String)>
		SHA-256: 847e78157c93691b2ae119253de6302419d14276894c4ea2f7fe9fb898fdae56
		Secure: false
	Object:
		Variable: $r4
		Type: javax.crypto.Cipher
		Statement: $r4 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer27605)
		Method: <com.accloud.utils.AesUtil: byte[] encrypt(byte[],byte[])>
		SHA-256: 1abcac04b5a09ad3089170fa984f287f138d39473f115407273b0f5cfbda7ee4
		Secure: false
	Object:
		Variable: varReplacer15984
		Type: java.lang.String
		Statement: specialinvoke $r5.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r1, varReplacer15984)
		Method: <com.hiflying.commons.utils.GAES: byte[] encrypt(byte[],byte[],byte[])>
		SHA-256: 48e9dd7fc90bd98eed49fc506ba5fa94441033d740754ed1d43eb9b7556f86c0
		Secure: false
	Object:
		Variable: $r3
		Type: byte[]
		Statement: $r3 = virtualinvoke $r2.<java.security.MessageDigest: byte[] digest()>()
		Method: <com.google.firebase.crashlytics.internal.common.CommonUtils: java.lang.String hash(java.io.InputStream,java.lang.String)>
		SHA-256: 2a8bb7bdd975ef88d06e80a05666decf0aaf243ddba65d659145ee1e12c3280d
		Secure: false
	Object:
		Variable: $r4
		Type: javax.net.ssl.SSLContext
		Statement: $r4 = staticinvoke <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String)>(varReplacer57668)
		Method: <okhttp3.internal.platform.Platform: javax.net.ssl.SSLContext getSSLContext()>
		SHA-256: 70ecf66d32a269ae834f6dd89fe16024d948b537a5aa278a208eff67db97b8ef
		Secure: false
	Object:
		Variable: $r10
		Type: byte[]
		Statement: $r10 = virtualinvoke $r11.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r10)
		Method: <com.rhhl.millheater.utils.AES: byte[] encrypt(java.lang.String,javax.crypto.SecretKey,javax.crypto.spec.IvParameterSpec,byte[])>
		SHA-256: e1882a24c598d5a06aa170b25b421eda9d69d44a5ce6b7c4985ebf5a27f68e2b
		Secure: false
	Object:
		Variable: $r1
		Type: javax.net.ssl.SSLContext
		Statement: $r1 = staticinvoke <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String)>(varReplacer38507)
		Method: <com.mzlion.easyokhttp.utils.CustomTrust: javax.net.ssl.SSLSocketFactory sslSocketFactory(java.io.InputStream[])>
		SHA-256: f4c0f87c04355d1fa1298e8d6893d57612332e40cf020780329fffb89ad63a61
		Secure: false
	Object:
		Variable: $r1
		Type: byte[]
		Statement: $r1 = virtualinvoke $r3.<java.security.MessageDigest: byte[] digest(byte[])>($r1)
		Method: <com.google.android.gms.measurement.internal.zzks: long zza(byte[])>
		SHA-256: 909f66bb7361b3717e3bcc262e5f04184f07b16d619a6c68972fb1dbe35c8a43
		Secure: false
	Object:
		Variable: $r5
		Type: javax.net.ssl.SSLContext
		Statement: $r5 = staticinvoke <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String)>(varReplacer9144)
		Method: <com.accloud.cloudservice.ACSocketManager: void connectInternal()>
		SHA-256: 70ff73349d6f512b1d437d93c58c7ec292bf02395b7f6583915be8709df19709
		Secure: false
	Object:
		Variable: $r3
		Type: java.security.MessageDigest
		Statement: $r3 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>($r2)
		Method: <com.google.firebase.crashlytics.internal.common.CommonUtils: java.lang.String hash(byte[],java.lang.String)>
		SHA-256: 7fb5e1ca4e0ccb41306f524bfa8fe0a452898cd3171e10ddd8d49eb5eb47dc5a
		Secure: false
	Object:
		Variable: $r5
		Type: byte[]
		Statement: $r0 = virtualinvoke $r6.<java.security.MessageDigest: byte[] digest(byte[])>($r5)
		Method: <org.java_websocket.drafts.Draft_76: byte[] createChallenge(java.lang.String,java.lang.String,byte[])>
		SHA-256: 80c037d133dfae34ddb8b3ebdc23c7e665cf0a31b614905c01e06ab69198cacc
		Secure: false
	Object:
		Variable: $r3
		Type: byte[]
		Statement: $r3 = virtualinvoke $r2.<java.security.MessageDigest: byte[] digest()>()
		Method: <com.accloud.common.ACSigner: java.lang.String genSignature(java.lang.String)>
		SHA-256: d39d51c8356a8f525333ea2a5d197e520623af59eb92c42ac4e91920929dd55
		Secure: false
	Object:
		Variable: $r9
		Type: javax.net.ssl.KeyManagerFactory
		Statement: $r9 = staticinvoke <javax.net.ssl.KeyManagerFactory: javax.net.ssl.KeyManagerFactory getInstance(java.lang.String)>($r3)
		Method: <com.mzlion.easyokhttp.utils.CustomTrust: javax.net.ssl.X509TrustManager trustManagerForCertificates(java.io.InputStream[])>
		SHA-256: 574130df150f28a28458257f2896af4a5012811d206e8408c69a2920d656a59e
		Secure: false
	Object:
		Variable: varReplacer6845
		Type: int
		Statement: specialinvoke $r5.<javax.crypto.spec.PBEKeySpec: void <init>(char[],byte[],int,int)>($r1, $r2, varReplacer6844, varReplacer6845)
		Method: <com.rhhl.millheater.utils.AES: void <init>()>
		SHA-256: 7d2ff6ebd8692d9ab1c8ed90efc7526cb6ef3880426e775fc6bb59dd995c1172
		Secure: false
	Object:
		Variable: varReplacer16038
		Type: java.lang.String
		Statement: specialinvoke $r0.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r3, varReplacer16038)
		Method: <com.accloud.utils.AesUtil: byte[] decrypt(byte[],byte[])>
		SHA-256: f9bcee076db22e4f49689aadfb4c54b4ff11f20f83a8010c5b0b4ac42ed87ce6
		Secure: false
	Object:
		Variable: $r2
		Type: java.security.MessageDigest
		Statement: $r2 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>($r1)
		Method: <okio.ByteString: okio.ByteString digest(java.lang.String)>
		SHA-256: b336d574501b28a5bd90db22472c23a68acb0c1b99c4f14746fdc2a23c69a24e
		Secure: false
	Object:
		Variable: $r2
		Type: java.security.MessageDigest
		Statement: $r2 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer14694)
		Method: <com.accloud.common.ACSigner: java.lang.String genSignature(java.lang.String)>
		SHA-256: 261a33bd322b92d1372ef91d1e03729bdc721fde2aead83a48e70c5d787805ba
		Secure: false
	Object:
		Variable: $r2
		Type: java.security.MessageDigest
		Statement: $r2 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>($r1)
		Method: <com.google.firebase.crashlytics.internal.common.CommonUtils: java.lang.String hash(java.io.InputStream,java.lang.String)>
		SHA-256: a0cd7a8e8b4a1982c4187e09914bf7dc3b8735c5e8d396ebe76586457c6aeee9
		Secure: false
	Object:
		Variable: $r1
		Type: javax.crypto.spec.IvParameterSpec
		Statement: specialinvoke $r1.<javax.crypto.spec.IvParameterSpec: void <init>(byte[])>($r3)
		Method: <com.accloud.utils.AesUtil: byte[] decrypt(byte[],byte[])>
		SHA-256: 8bd5cd2671ae5beab027205aab2f7b35b21e274629b05ea6bf93c3693982ca10
		Secure: false
	Object:
		Variable: $r5
		Type: javax.crypto.spec.PBEKeySpec
		Statement: specialinvoke $r5.<javax.crypto.spec.PBEKeySpec: void <init>(char[],byte[],int,int)>($r1, $r2, varReplacer6844, varReplacer6845)
		Method: <com.rhhl.millheater.utils.AES: void <init>()>
		SHA-256: 8061de827fa8653bce18fbefb44d6181210fce11b0ada16458b1c654b483f91a
		Secure: false
	Object:
		Variable: $r0
		Type: byte[]
		Statement: $r0 = virtualinvoke $r4.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r0)
		Method: <com.hiflying.commons.utils.GAES: byte[] encrypt(byte[],byte[],byte[])>
		SHA-256: 839bf1ac3f9af393c531c6a3ecaf77152b2bc3aab23951a71d6966726c80ec39
		Secure: false
	Object:
		Variable: $r7
		Type: byte[]
		Statement: $r7 = virtualinvoke $r5.<java.security.MessageDigest: byte[] digest(byte[])>($r7)
		Method: <com.google.android.gms.common.util.AndroidUtilsLight: byte[] getPackageCertificateHashBytes(android.content.Context,java.lang.String)>
		SHA-256: b1b700d3bac9a15845b2a1446581968f445f05df9861b6e2918912b25ad1a23d
		Secure: false
	Object:
		Variable: $r7
		Type: byte[]
		Statement: $r7 = virtualinvoke $r6.<java.security.MessageDigest: byte[] digest()>()
		Method: <com.bumptech.glide.load.engine.cache.SafeKeyGenerator: java.lang.String getSafeKey(com.bumptech.glide.load.Key)>
		SHA-256: 6763e0d09de34caa999df127c6d30dc02400c44c84c5c574d6dd222776edfb5c
		Secure: true
	Object:
		Variable: $r2
		Type: java.security.KeyStore
		Statement: $r2 = staticinvoke <java.security.KeyStore: java.security.KeyStore getInstance(java.lang.String)>($r1)
		Method: <com.mzlion.easyokhttp.utils.CustomTrust: java.security.KeyStore newEmptyKeyStore(char[])>
		SHA-256: f4168c7af82d4ac7010e090820b9300ba7f058e4468a97689a3e04f33df7763e
		Secure: false
	Object:
		Variable: varReplacer6858
		Type: java.lang.String
		Statement: specialinvoke $r8.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r2, varReplacer6858)
		Method: <com.rhhl.millheater.utils.AES: void <init>()>
		SHA-256: b950eb74f639b4e043f5e08d13241fd892b2f448095ce69edd32cfd3cc21e887
		Secure: false
	Object:
		Variable: $r2
		Type: byte[]
		Statement: $r2 = virtualinvoke $r3.<java.security.MessageDigest: byte[] digest(byte[])>($r2)
		Method: <com.google.firebase.installations.local.IidStore: java.lang.String getIdFromPublicKey(java.security.PublicKey)>
		SHA-256: ad220c352da86335809a3322a312a9e0b628e3ee4c76f8896e52fc09c31946dd
		Secure: false
	Object:
		Variable: $r8
		Type: byte[]
		Statement: $r8 = virtualinvoke $r7.<java.security.MessageDigest: byte[] digest(byte[])>($r8)
		Method: <com.google.android.gms.measurement.internal.zzjo: java.lang.String zza(java.lang.String)>
		SHA-256: f87b49da69598ece48cdfd1c94e0e1ae0f05b49e747178896d1b9c2254a7d410
		Secure: false
	Object:
		Variable: $r2
		Type: javax.net.ssl.TrustManager[]
		Statement: $r2 = virtualinvoke $r1.<javax.net.ssl.TrustManagerFactory: javax.net.ssl.TrustManager[] getTrustManagers()>()
		Method: <com.accloud.utils.SecurityUtils: javax.net.ssl.X509TrustManager getX509TrustManager()>
		SHA-256: 7e6fc23dde974386f4d3a3d4c22af1eee618fc57d479ed0e59de140c0538f9c0
		Secure: false
	Object:
		Variable: varReplacer61877
		Type: java.lang.String
		Statement: $r3 = staticinvoke <java.security.KeyFactory: java.security.KeyFactory getInstance(java.lang.String)>(varReplacer61877)
		Method: <com.google.firebase.installations.local.IidStore: java.security.PublicKey parseKey(java.lang.String)>
		SHA-256: f6702544739b457daaa406657a0fd31e30b71df0f78c7b22e96ce6f248af32b2
		Secure: false

Findings in Java Class: com.rhhl.millheater.utils.AES

	 in Method: void <init>()
		NeverTypeOfError violating CrySL rule for javax.crypto.spec.PBEKeySpec (on Object #8061de827fa8653bce18fbefb44d6181210fce11b0ada16458b1c654b483f91a)
			First parameter should never be of type java.lang.String.
			at statement: specialinvoke $r5.<javax.crypto.spec.PBEKeySpec: void <init>(char[],byte[],int,int)>($r1, $r2, varReplacer6844, varReplacer6845)

		HardCodedError violating CrySL rule for javax.crypto.spec.PBEKeySpec (on Object #8061de827fa8653bce18fbefb44d6181210fce11b0ada16458b1c654b483f91a)
			First parameter should never be hardcoded.
			at statement: specialinvoke $r5.<javax.crypto.spec.PBEKeySpec: void <init>(char[],byte[],int,int)>($r1, $r2, varReplacer6844, varReplacer6845)

		ConstraintError violating CrySL rule for javax.crypto.SecretKeyFactory (on Object #e9a11084c8dd5789c75a7be1e2dfe8561bb86ec47ca61a8d3234193eba920dc4)
			First parameter (with value "PBKDF2WithHmacSHA1") should be any of {PBKDF2WithHmacSHA512, PBKDF2WithHmacSHA384, PBKDF2WithHmacSHA256, PBKDF2WithHmacSHA224, PBEWithHmacSHA512AndAES_128, PBEWithHmacSHA384AndAES_128, PBEWithHmacSHA384AndAES_128, PBEWithHmacSHA224AndAES_128, PBEWithHmacSHA256AndAES_128, PBEWithHmacSHA224AndAES_256, PBEWithHmacSHA256AndAES_256, PBEWithHmacSHA384AndAES_256, PBEWithHmacSHA512AndAES_256}
			at statement: $r6 = staticinvoke <javax.crypto.SecretKeyFactory: javax.crypto.SecretKeyFactory getInstance(java.lang.String)>(varReplacer6854)

		RequiredPredicateError violating CrySL rule for javax.crypto.SecretKeyFactory
			First parameter was not properly generated as speccedKey
			at statement: $r7 = virtualinvoke $r6.<javax.crypto.SecretKeyFactory: javax.crypto.SecretKey generateSecret(java.security.spec.KeySpec)>($r5)

		RequiredPredicateError violating CrySL rule for javax.crypto.spec.IvParameterSpec
			First parameter was not properly generated as randomized
			at statement: specialinvoke $r9.<javax.crypto.spec.IvParameterSpec: void <init>(byte[])>($r2)

		RequiredPredicateError violating CrySL rule for javax.crypto.spec.SecretKeySpec
			First parameter was not properly generated as preparedKeyMaterial
			at statement: specialinvoke $r8.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r2, varReplacer6858)

		RequiredPredicateError violating CrySL rule for javax.crypto.spec.PBEKeySpec
			Second parameter was not properly generated as randomized
			at statement: specialinvoke $r5.<javax.crypto.spec.PBEKeySpec: void <init>(char[],byte[],int,int)>($r1, $r2, varReplacer6844, varReplacer6845)


	 in Method: java.lang.String aesEncrypt(java.lang.String)
		IncompleteOperationError violating CrySL rule for javax.crypto.spec.PBEKeySpec (on Object #8061de827fa8653bce18fbefb44d6181210fce11b0ada16458b1c654b483f91a)
			Operation on object of type javax.crypto.spec.PBEKeySpec object not completed. Expected call to clearPassword
			at statement: specialinvoke $r4.<com.rhhl.millheater.utils.AES: void <init>()>()


	 in Method: byte[] encrypt(java.lang.String,javax.crypto.SecretKey,javax.crypto.spec.IvParameterSpec,byte[])
		RequiredPredicateError violating CrySL rule for javax.crypto.Cipher
			Third parameter was not properly generated as preparedIV [ with CBC, It's required to use IVParameterSpec]
			at statement: virtualinvoke $r11.<javax.crypto.Cipher: void init(int,java.security.Key,java.security.spec.AlgorithmParameterSpec)>(varReplacer13571, $r8, $r9)

		ConstraintError violating CrySL rule for javax.crypto.Cipher (on Object #a5b1e5f0b094ea57b454b63bdd1f32b1dd6d05155bcba4a0506b891ff6e8dcd8)
			First parameter (with value "AES/CBC/PKCS7Padding") should be any of AES/CBC/{PKCS5Padding, ISO10126Padding}
			at statement: $r11 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>($r7)

		RequiredPredicateError violating CrySL rule for javax.crypto.Cipher
			Second parameter was not properly generated as generatedKey
			at statement: virtualinvoke $r11.<javax.crypto.Cipher: void init(int,java.security.Key,java.security.spec.AlgorithmParameterSpec)>(varReplacer13571, $r8, $r9)


Findings in Java Class: com.accloud.cloudservice.ACSocketManager

	 in Method: void connectInternal()
		ConstraintError violating CrySL rule for javax.net.ssl.SSLContext (on Object #70ff73349d6f512b1d437d93c58c7ec292bf02395b7f6583915be8709df19709)
			First parameter (with value "TLS") should be any of {TLSv1.2}
			at statement: $r5 = staticinvoke <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String)>(varReplacer9144)


Findings in Java Class: com.google.android.gms.common.util.AndroidUtilsLight

	 in Method: java.security.MessageDigest zzj(java.lang.String)
		IncompleteOperationError violating CrySL rule for java.security.MessageDigest (on Object #ae3618d0d1f264c3cd26a80f719d0eedb09a990816926713b695a9a95da4ac0d)
			Operation on object of type java.security.MessageDigest object not completed. Expected call to digest, update
			at statement: $r0 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>($r2)

		ConstraintError violating CrySL rule for java.security.MessageDigest (on Object #ae3618d0d1f264c3cd26a80f719d0eedb09a990816926713b695a9a95da4ac0d)
			First parameter (with value "SHA-1") should be any of {SHA-256, SHA-384, SHA-512}
			at statement: $r0 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>($r2)

		ConstraintError violating CrySL rule for java.security.MessageDigest (on Object #ae3618d0d1f264c3cd26a80f719d0eedb09a990816926713b695a9a95da4ac0d)
			First parameter (with value "SHA1") should be any of {SHA-256, SHA-384, SHA-512}
			at statement: $r0 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>($r2)


	 in Method: byte[] getPackageCertificateHashBytes(android.content.Context,java.lang.String)
		IncompleteOperationError violating CrySL rule for java.security.MessageDigest (on Object #ae3618d0d1f264c3cd26a80f719d0eedb09a990816926713b695a9a95da4ac0d)
			Operation on object of type java.security.MessageDigest object not completed. Expected call to digest, update
			at statement: $r5 = staticinvoke <com.google.android.gms.common.util.AndroidUtilsLight: java.security.MessageDigest zzj(java.lang.String)>(varReplacer50563)


Findings in Java Class: com.accloud.common.ACSigner

	 in Method: java.lang.String genSignature(java.lang.String)
		ConstraintError violating CrySL rule for java.security.MessageDigest (on Object #261a33bd322b92d1372ef91d1e03729bdc721fde2aead83a48e70c5d787805ba)
			First parameter (with value "SHA-1") should be any of {SHA-256, SHA-384, SHA-512}
			at statement: $r2 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer14694)


Findings in Java Class: com.hiflying.commons.utils.GAES

	 in Method: byte[] encrypt(byte[],byte[],byte[])
		RequiredPredicateError violating CrySL rule for javax.crypto.spec.SecretKeySpec
			First parameter was not properly generated as preparedKeyMaterial
			at statement: specialinvoke $r5.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r1, varReplacer15984)

		RequiredPredicateError violating CrySL rule for javax.crypto.Cipher
			Second parameter was not properly generated as generatedKey
			at statement: virtualinvoke $r4.<javax.crypto.Cipher: void init(int,java.security.Key,java.security.spec.AlgorithmParameterSpec)>(varReplacer15983, $r5, $r6)

		ConstraintError violating CrySL rule for javax.crypto.Cipher (on Object #a031b67b7aabc4ed79746df24c57ed82b497d55b9aa6b81ebd33b306b52fb6f8)
			First parameter (with value "") should be any of {AES, PBEWithHmacSHA224AndAES_128, PBEWithHmacSHA256AndAES_128, PBEWithHmacSHA384AndAES_128, PBEWithHmacSHA512AndAES_128, PBEWithHmacSHA224AndAES_256, PBEWithHmacSHA256AndAES_256, PBEWithHmacSHA384AndAES_256, PBEWithHmacSHA512AndAES_256}
			at statement: $r4 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>($r3)

		RequiredPredicateError violating CrySL rule for javax.crypto.spec.IvParameterSpec
			First parameter was not properly generated as randomized
			at statement: specialinvoke $r6.<javax.crypto.spec.IvParameterSpec: void <init>(byte[])>($r2)


Findings in Java Class: com.google.android.gms.measurement.internal.zzkw

	 in Method: java.security.MessageDigest zzh()
		ConstraintError violating CrySL rule for java.security.MessageDigest (on Object #8869cee50c8db65e09c3226d544e3aa15cb53821df92cf5cab0c58285c3915e3)
			First parameter (with value "MD5") should be any of {SHA-256, SHA-384, SHA-512}
			at statement: $r0 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer31554)

		IncompleteOperationError violating CrySL rule for java.security.MessageDigest (on Object #8869cee50c8db65e09c3226d544e3aa15cb53821df92cf5cab0c58285c3915e3)
			Operation on object of type java.security.MessageDigest object not completed. Expected call to digest, update
			at statement: $r0 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer31554)


	 in Method: long zza(android.content.Context,java.lang.String)
		IncompleteOperationError violating CrySL rule for java.security.MessageDigest (on Object #8869cee50c8db65e09c3226d544e3aa15cb53821df92cf5cab0c58285c3915e3)
			Operation on object of type java.security.MessageDigest object not completed. Expected call to digest, update
			at statement: $r4 = staticinvoke <com.google.android.gms.measurement.internal.zzkw: java.security.MessageDigest zzh()>()


Findings in Java Class: com.google.android.gms.measurement.internal.zzjo

	 in Method: java.lang.String zza(java.lang.String)
		IncompleteOperationError violating CrySL rule for java.security.MessageDigest (on Object #8869cee50c8db65e09c3226d544e3aa15cb53821df92cf5cab0c58285c3915e3)
			Operation on object of type java.security.MessageDigest object not completed. Expected call to digest, update
			at statement: $r7 = staticinvoke <com.google.android.gms.measurement.internal.zzkw: java.security.MessageDigest zzh()>()


Findings in Java Class: com.google.android.gms.measurement.internal.zzks

	 in Method: long zza(byte[])
		IncompleteOperationError violating CrySL rule for java.security.MessageDigest (on Object #8869cee50c8db65e09c3226d544e3aa15cb53821df92cf5cab0c58285c3915e3)
			Operation on object of type java.security.MessageDigest object not completed. Expected call to digest, update
			at statement: $r3 = staticinvoke <com.google.android.gms.measurement.internal.zzkw: java.security.MessageDigest zzh()>()


Findings in Java Class: com.hiflying.smartlink.v7.MulticastSmartLinkerSendAction

	 in Method: byte[] encodedPMK(java.lang.String,java.lang.String)
		ConstraintError violating CrySL rule for javax.crypto.SecretKeyFactory (on Object #8078ef985a85e37e0a9901ca2e52cff90a1d647ae9d9cde773f6a6a7d5555eb9)
			First parameter (with value "PBKDF2WithHmacSHA1") should be any of {PBKDF2WithHmacSHA512, PBKDF2WithHmacSHA384, PBKDF2WithHmacSHA256, PBKDF2WithHmacSHA224, PBEWithHmacSHA512AndAES_128, PBEWithHmacSHA384AndAES_128, PBEWithHmacSHA384AndAES_128, PBEWithHmacSHA224AndAES_128, PBEWithHmacSHA256AndAES_128, PBEWithHmacSHA224AndAES_256, PBEWithHmacSHA256AndAES_256, PBEWithHmacSHA384AndAES_256, PBEWithHmacSHA512AndAES_256}
			at statement: $r6 = staticinvoke <javax.crypto.SecretKeyFactory: javax.crypto.SecretKeyFactory getInstance(java.lang.String)>(varReplacer35837)

		IncompleteOperationError violating CrySL rule for javax.crypto.spec.PBEKeySpec (on Object #504b114395deccd529b8573c9463f00af3bcdc133d755cd371e6c61792093ae8)
			Operation on object of type javax.crypto.spec.PBEKeySpec object not completed. Expected call to clearPassword
			at statement: $r7 = virtualinvoke $r6.<javax.crypto.SecretKeyFactory: javax.crypto.SecretKey generateSecret(java.security.spec.KeySpec)>($r3)

		RequiredPredicateError violating CrySL rule for javax.crypto.SecretKeyFactory
			First parameter was not properly generated as speccedKey
			at statement: $r7 = virtualinvoke $r6.<javax.crypto.SecretKeyFactory: javax.crypto.SecretKey generateSecret(java.security.spec.KeySpec)>($r3)

		ConstraintError violating CrySL rule for javax.crypto.spec.PBEKeySpec (on Object #504b114395deccd529b8573c9463f00af3bcdc133d755cd371e6c61792093ae8)
			Third parameter (with value 4096)Variable iterationCountmust be  at least 10000
			at statement: specialinvoke $r3.<javax.crypto.spec.PBEKeySpec: void <init>(char[],byte[],int,int)>($r4, $r5, varReplacer35835, varReplacer35836)

		NeverTypeOfError violating CrySL rule for javax.crypto.spec.PBEKeySpec (on Object #504b114395deccd529b8573c9463f00af3bcdc133d755cd371e6c61792093ae8)
			First parameter should never be of type java.lang.String.
			at statement: specialinvoke $r3.<javax.crypto.spec.PBEKeySpec: void <init>(char[],byte[],int,int)>($r4, $r5, varReplacer35835, varReplacer35836)

		HardCodedError violating CrySL rule for javax.crypto.spec.PBEKeySpec (on Object #504b114395deccd529b8573c9463f00af3bcdc133d755cd371e6c61792093ae8)
			First parameter should never be hardcoded.
			at statement: specialinvoke $r3.<javax.crypto.spec.PBEKeySpec: void <init>(char[],byte[],int,int)>($r4, $r5, varReplacer35835, varReplacer35836)

		RequiredPredicateError violating CrySL rule for javax.crypto.spec.PBEKeySpec
			Second parameter was not properly generated as randomized
			at statement: specialinvoke $r3.<javax.crypto.spec.PBEKeySpec: void <init>(char[],byte[],int,int)>($r4, $r5, varReplacer35835, varReplacer35836)

		NeverTypeOfError violating CrySL rule for javax.crypto.spec.PBEKeySpec (on Object #504b114395deccd529b8573c9463f00af3bcdc133d755cd371e6c61792093ae8)
			First parameter should never be of type java.lang.String.
			at statement: specialinvoke $r3.<javax.crypto.spec.PBEKeySpec: void <init>(char[],byte[],int,int)>($r4, $r5, varReplacer35835, varReplacer35836)

		HardCodedError violating CrySL rule for javax.crypto.spec.PBEKeySpec (on Object #504b114395deccd529b8573c9463f00af3bcdc133d755cd371e6c61792093ae8)
			First parameter should never be hardcoded.
			at statement: specialinvoke $r3.<javax.crypto.spec.PBEKeySpec: void <init>(char[],byte[],int,int)>($r4, $r5, varReplacer35835, varReplacer35836)


Findings in Java Class: com.mzlion.easyokhttp.utils.CustomTrust

	 in Method: javax.net.ssl.SSLSocketFactory sslSocketFactory(java.io.InputStream[])
		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			First parameter was not properly generated as generatedKeyManagers
			at statement: virtualinvoke $r1.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>(varReplacer38505, $r11, $r5)

		ConstraintError violating CrySL rule for javax.net.ssl.SSLContext (on Object #f4c0f87c04355d1fa1298e8d6893d57612332e40cf020780329fffb89ad63a61)
			First parameter (with value "TLS") should be any of {TLSv1.2}
			at statement: $r1 = staticinvoke <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String)>(varReplacer38507)

		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			Third parameter was not properly generated as randomized
			at statement: virtualinvoke $r1.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>(varReplacer38505, $r11, $r5)

		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			Second parameter was not properly generated as generatedTrustManagers
			at statement: virtualinvoke $r1.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>(varReplacer38505, $r11, $r5)


	 in Method: javax.net.ssl.X509TrustManager trustManagerForCertificates(java.io.InputStream[])
		RequiredPredicateError violating CrySL rule for javax.net.ssl.TrustManagerFactory
			First parameter was not properly generated as generatedKeyStore
			at statement: virtualinvoke $r10.<javax.net.ssl.TrustManagerFactory: void init(java.security.KeyStore)>($r5)

		NeverTypeOfError violating CrySL rule for javax.net.ssl.KeyManagerFactory (on Object #574130df150f28a28458257f2896af4a5012811d206e8408c69a2920d656a59e)
			Second parameter should never be of type java.lang.String.
			at statement: virtualinvoke $r9.<javax.net.ssl.KeyManagerFactory: void init(java.security.KeyStore,char[])>($r5, $r4)

		HardCodedError violating CrySL rule for javax.net.ssl.KeyManagerFactory (on Object #574130df150f28a28458257f2896af4a5012811d206e8408c69a2920d656a59e)
			Second parameter should never be hardcoded.
			at statement: virtualinvoke $r9.<javax.net.ssl.KeyManagerFactory: void init(java.security.KeyStore,char[])>($r5, $r4)

		RequiredPredicateError violating CrySL rule for javax.net.ssl.KeyManagerFactory
			First parameter was not properly generated as generatedKeyStore
			at statement: virtualinvoke $r9.<javax.net.ssl.KeyManagerFactory: void init(java.security.KeyStore,char[])>($r5, $r4)


	 in Method: java.security.KeyStore newEmptyKeyStore(char[])
		NeverTypeOfError violating CrySL rule for java.security.KeyStore (on Object #f4168c7af82d4ac7010e090820b9300ba7f058e4468a97689a3e04f33df7763e)
			Second parameter should never be of type java.lang.String.
			at statement: virtualinvoke $r2.<java.security.KeyStore: void load(java.io.InputStream,char[])>(varReplacer38517, $r0)

		HardCodedError violating CrySL rule for java.security.KeyStore (on Object #f4168c7af82d4ac7010e090820b9300ba7f058e4468a97689a3e04f33df7763e)
			Second parameter should never be hardcoded.
			at statement: virtualinvoke $r2.<java.security.KeyStore: void load(java.io.InputStream,char[])>(varReplacer38517, $r0)


Findings in Java Class: org.java_websocket.drafts.Draft_76

	 in Method: byte[] createChallenge(java.lang.String,java.lang.String,byte[])
		ConstraintError violating CrySL rule for java.security.MessageDigest (on Object #e6b33841379e6c4e14a2373b2a40c8b5e92fca6b32d6074be0b18bb010c7b582)
			First parameter (with value "MD5") should be any of {SHA-256, SHA-384, SHA-512}
			at statement: $r6 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer40261)


Findings in Java Class: com.google.firebase.crashlytics.internal.common.CommonUtils

	 in Method: java.lang.String hash(byte[],java.lang.String)
		ConstraintError violating CrySL rule for java.security.MessageDigest (on Object #7fb5e1ca4e0ccb41306f524bfa8fe0a452898cd3171e10ddd8d49eb5eb47dc5a)
			First parameter (with value "SHA-1") should be any of {SHA-256, SHA-384, SHA-512}
			at statement: $r3 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>($r2)


	 in Method: java.lang.String hash(java.io.InputStream,java.lang.String)
		TypestateError violating CrySL rule for java.security.MessageDigest (on Object #a0cd7a8e8b4a1982c4187e09914bf7dc3b8735c5e8d396ebe76586457c6aeee9)
			Unexpected call to method <java.security.MessageDigest: byte[] digest()> on object of type java.security.MessageDigest. Expect a call to one of the following methods java.security.MessageDigest: void update(byte[],int,int),java.security.MessageDigest: void update(java.nio.ByteBuffer),java.security.MessageDigest: byte[] digest(byte[]),java.security.MessageDigest: void update(byte),java.security.MessageDigest: void update(byte[])
			at statement: $r3 = virtualinvoke $r2.<java.security.MessageDigest: byte[] digest()>()

		ConstraintError violating CrySL rule for java.security.MessageDigest (on Object #a0cd7a8e8b4a1982c4187e09914bf7dc3b8735c5e8d396ebe76586457c6aeee9)
			First parameter (with value "SHA-1") should be any of {SHA-256, SHA-384, SHA-512}
			at statement: $r2 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>($r1)


Findings in Java Class: org.java_websocket.drafts.Draft_10

	 in Method: java.lang.String generateFinalKey(java.lang.String)
		ConstraintError violating CrySL rule for java.security.MessageDigest (on Object #e8a004fa382d3312d4bf22d4b9d327147ec928cef55b7dc54cf344a1d2b0cdfe)
			First parameter (with value "SHA1") should be any of {SHA-256, SHA-384, SHA-512}
			at statement: $r3 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer48167)


Findings in Java Class: okio.ByteString

	 in Method: okio.ByteString digest(java.lang.String)
		ConstraintError violating CrySL rule for java.security.MessageDigest (on Object #b336d574501b28a5bd90db22472c23a68acb0c1b99c4f14746fdc2a23c69a24e)
			First parameter (with value "SHA-1") should be any of {SHA-256, SHA-384, SHA-512}
			at statement: $r2 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>($r1)

		ConstraintError violating CrySL rule for java.security.MessageDigest (on Object #b336d574501b28a5bd90db22472c23a68acb0c1b99c4f14746fdc2a23c69a24e)
			First parameter (with value "MD5") should be any of {SHA-256, SHA-384, SHA-512}
			at statement: $r2 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>($r1)


Findings in Java Class: okhttp3.internal.platform.Platform

	 in Method: javax.net.ssl.SSLContext getSSLContext()
		ConstraintError violating CrySL rule for javax.net.ssl.SSLContext (on Object #79b783ec84053b1be361a20f313ac2863a1ee2158e0a39e3ea616fb0985cc58d)
			First parameter (with value "TLS") should be any of {TLSv1.2}
			at statement: $r4 = staticinvoke <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String)>(varReplacer57670)


Findings in Java Class: okhttp3.internal.platform.ConscryptPlatform

	 in Method: javax.net.ssl.SSLContext getSSLContext()
		ConstraintError violating CrySL rule for javax.net.ssl.SSLContext (on Object #ef9e07aaa3bbc543c805d5cd8a1aec6ae94e7de0d7acdda6ee95441dd6f0e1cb)
			First parameter (with value "TLSv1.3") should be any of {TLSv1.2}
			at statement: $r3 = staticinvoke <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String,java.security.Provider)>(varReplacer57674, $r2)

		ConstraintError violating CrySL rule for javax.net.ssl.SSLContext (on Object #443d1cfd7870738fa49c10b6891396b5c0b2c2e13bc1a3b07482b88d68ff2450)
			First parameter (with value "TLS") should be any of {TLSv1.2}
			at statement: $r3 = staticinvoke <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String,java.security.Provider)>(varReplacer57673, $r2)


Findings in Java Class: okhttp3.internal.platform.AndroidPlatform

	 in Method: javax.net.ssl.SSLContext getSSLContext()
		ConstraintError violating CrySL rule for javax.net.ssl.SSLContext (on Object #93a7b14e128a45195b19d2d3b6f5aec5791cba583bdaa2d4ae5ce4088c861392)
			First parameter (with value "TLS") should be any of {TLSv1.2}
			at statement: $r3 = staticinvoke <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String)>(varReplacer57675)


Findings in Java Class: com.google.firebase.installations.local.IidStore

	 in Method: java.lang.String getIdFromPublicKey(java.security.PublicKey)
		ConstraintError violating CrySL rule for java.security.MessageDigest (on Object #c439e3c48d456bec288603947271c6764d519db8a0c03e43fd7261ff082fa999)
			First parameter (with value "SHA1") should be any of {SHA-256, SHA-384, SHA-512}
			at statement: $r3 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer57916)


	 in Method: java.security.PublicKey parseKey(java.lang.String)
		RequiredPredicateError violating CrySL rule for java.security.KeyFactory
			First parameter was not properly generated as speccedKey
			at statement: $r5 = virtualinvoke $r3.<java.security.KeyFactory: java.security.PublicKey generatePublic(java.security.spec.KeySpec)>($r4)

		RequiredPredicateError violating CrySL rule for java.security.spec.X509EncodedKeySpec
			First parameter was not properly generated as preparedKeyMaterial
			at statement: specialinvoke $r4.<java.security.spec.X509EncodedKeySpec: void <init>(byte[])>($r2)


Findings in Java Class: com.bumptech.glide.load.engine.cache.SafeKeyGenerator

	 in Method: java.lang.String getSafeKey(com.bumptech.glide.load.Key)
		TypestateError violating CrySL rule for java.security.MessageDigest (on Object #5b946495516dd903d2cdf3deae8f2948efaafed53c2e0a45412699a1244e85fd)
			Unexpected call to method <java.security.MessageDigest: byte[] digest()> on object of type java.security.MessageDigest. Expect a call to one of the following methods java.security.MessageDigest: void update(byte[],int,int),java.security.MessageDigest: void update(java.nio.ByteBuffer),java.security.MessageDigest: byte[] digest(byte[]),java.security.MessageDigest: void update(byte),java.security.MessageDigest: void update(byte[])
			at statement: $r7 = virtualinvoke $r6.<java.security.MessageDigest: byte[] digest()>()


Findings in Java Class: com.accloud.utils.AesUtil

	 in Method: byte[] decrypt(byte[],byte[])
		RequiredPredicateError violating CrySL rule for javax.crypto.spec.SecretKeySpec
			First parameter was not properly generated as preparedKeyMaterial
			at statement: specialinvoke $r0.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r3, varReplacer16038)

		RequiredPredicateError violating CrySL rule for javax.crypto.spec.IvParameterSpec
			First parameter was not properly generated as randomized
			at statement: specialinvoke $r1.<javax.crypto.spec.IvParameterSpec: void <init>(byte[])>($r3)

		RequiredPredicateError violating CrySL rule for javax.crypto.Cipher
			Second parameter was not properly generated as generatedKey
			at statement: virtualinvoke $r4.<javax.crypto.Cipher: void init(int,java.security.Key,java.security.spec.AlgorithmParameterSpec)>(varReplacer16039, $r0, $r1)


	 in Method: byte[] encrypt(byte[],byte[])
		RequiredPredicateError violating CrySL rule for javax.crypto.Cipher
			Third parameter was not properly generated as preparedIV [ with CBC, It's required to use IVParameterSpec]
			at statement: virtualinvoke $r4.<javax.crypto.Cipher: void init(int,java.security.Key,java.security.spec.AlgorithmParameterSpec)>(varReplacer27606, $r0, $r1)

		RequiredPredicateError violating CrySL rule for javax.crypto.spec.IvParameterSpec
			First parameter was not properly generated as randomized
			at statement: specialinvoke $r1.<javax.crypto.spec.IvParameterSpec: void <init>(byte[])>($r3)

		RequiredPredicateError violating CrySL rule for javax.crypto.Cipher
			Second parameter was not properly generated as generatedKey
			at statement: virtualinvoke $r4.<javax.crypto.Cipher: void init(int,java.security.Key,java.security.spec.AlgorithmParameterSpec)>(varReplacer27606, $r0, $r1)

		RequiredPredicateError violating CrySL rule for javax.crypto.spec.SecretKeySpec
			First parameter was not properly generated as preparedKeyMaterial
			at statement: specialinvoke $r0.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r3, varReplacer27607)


Findings in Java Class: okhttp3.OkHttpClient

	 in Method: javax.net.ssl.SSLSocketFactory newSslSocketFactory(javax.net.ssl.X509TrustManager)
		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			Second parameter was not properly generated as generatedTrustManagers
			at statement: virtualinvoke $r2.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>(varReplacer53128, $r7, varReplacer53128)

		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			Third parameter was not properly generated as randomized
			at statement: virtualinvoke $r2.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>(varReplacer53128, $r7, varReplacer53128)

		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			First parameter was not properly generated as generatedKeyManagers
			at statement: virtualinvoke $r2.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>(varReplacer53128, $r7, varReplacer53128)


Findings in Java Class: okhttp3.internal.Util

	 in Method: javax.net.ssl.X509TrustManager platformTrustManager()
		RequiredPredicateError violating CrySL rule for javax.net.ssl.TrustManagerFactory
			First parameter was not properly generated as generatedKeyStore
			at statement: virtualinvoke $r1.<javax.net.ssl.TrustManagerFactory: void init(java.security.KeyStore)>(varReplacer53130)


Findings in Java Class: com.accloud.utils.SecurityUtils

	 in Method: javax.net.ssl.X509TrustManager getX509TrustManager()
		RequiredPredicateError violating CrySL rule for javax.net.ssl.TrustManagerFactory
			First parameter was not properly generated as generatedKeyStore
			at statement: virtualinvoke $r1.<javax.net.ssl.TrustManagerFactory: void init(java.security.KeyStore)>(varReplacer38903)


======================= CryptoAnalysis Summary ==========================
	Number of CrySL rules: 47
	Number of Objects Analyzed: 77

	CryptoAnalysis found the following violations. For details see description above.
	RequiredPredicateError: 30
	IncompleteOperationError: 8
	TypestateError: 2
	NeverTypeOfError: 5
	HardCodedError: 5
	ConstraintError: 22
=====================================================================
