SLF4J: Failed to load class "org.slf4j.impl.StaticLoggerBinder".
SLF4J: Defaulting to no-operation (NOP) logger implementation
SLF4J: See http://www.slf4j.org/codes.html#StaticLoggerBinder for further details.
0    [main] WARN  pes.access.impl.DeclaredTypeFactory  - --- xtext.common.types ---------------------------------------------------
1    [main] WARN  pes.access.impl.DeclaredTypeFactory  - ASM library is too old. Falling back to java.lang.reflect API.
1    [main] WARN  pes.access.impl.DeclaredTypeFactory  - Please note that no information about compile time constants is available.
1    [main] WARN  pes.access.impl.DeclaredTypeFactory  - It's recommended to use org.objectweb.asm 9.3.0 or better (Maven group id: org.ow2.asm).
1    [main] WARN  pes.access.impl.DeclaredTypeFactory  - --------------------------------------------------------------------------
Alive 16392  5000
Ruleset: 
	javax.net.ssl.KeyStoreBuilderParameters
	javax.crypto.spec.PBEKeySpec
	java.security.spec.MGF1ParameterSpec
	java.security.MessageDigest
	javax.crypto.Cipher
	java.security.KeyPair
	javax.crypto.SecretKeyFactory
	java.security.cert.PKIXBuilderParameters
	javax.crypto.SecretKey
	javax.crypto.spec.IvParameterSpec
	javax.crypto.spec.PBEParameterSpec
	javax.net.ssl.TrustManagerFactory
	javax.crypto.spec.GCMParameterSpec
	javax.crypto.spec.SecretKeySpec
	javax.net.ssl.CertPathTrustManagerParameters
	java.security.spec.DSAParameterSpec
	javax.crypto.KeyAgreement
	java.security.cert.TrustAnchor
	javax.crypto.spec.DHParameterSpec
	javax.net.ssl.SSLParameters
	javax.net.ssl.SSLContext
	java.security.Key
	java.security.KeyFactory
	void
	java.security.DigestOutputStream
	java.security.SecureRandom
	java.security.cert.PKIXParameters
	java.security.spec.X509EncodedKeySpec
	javax.crypto.spec.DHGenParameterSpec
	javax.net.ssl.SSLEngine
	java.security.spec.RSAKeyGenParameterSpec
	java.security.Signature
	javax.crypto.CipherOutputStream
	javax.xml.crypto.dsig.spec.HMACParameterSpec
	java.security.AlgorithmParameterGenerator
	javax.crypto.Mac
	javax.crypto.spec.OAEPParameterSpec
	java.security.AlgorithmParameters
	javax.crypto.CipherInputStream
	java.security.DigestInputStream
	java.security.spec.ECParameterSpec
	javax.crypto.KeyGenerator
	java.security.KeyStore
	java.security.spec.ECGenParameterSpec
	java.security.KeyPairGenerator
	javax.net.ssl.KeyManagerFactory
	java.security.spec.DSAGenParameterSpec

Analyzed Objects: 
	Object:
		Variable: varReplacer3363
		Type: java.lang.String
		Statement: specialinvoke $r2.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r0, varReplacer3363)
		Method: <com.mob.tools.utils.Data: byte[] AES128Encode(byte[],byte[])>
		SHA-256: 4cb53d7a701b249905a1e8be48df8e9f306eb35e4fa0f14add75e92196a2aea9
		Secure: false
	Object:
		Variable: $r3
		Type: java.security.KeyStore
		Statement: $r3 = staticinvoke <java.security.KeyStore: java.security.KeyStore getInstance(java.lang.String)>(varReplacer120075)
		Method: <com.huawei.hms.device.a: java.security.cert.X509Certificate a(android.content.Context,java.lang.String)>
		SHA-256: 714b410de53c49d18c719029ed8fab1ae2e917210a86c3ed20120551a87a72e7
		Secure: false
	Object:
		Variable: $r1
		Type: byte[]
		Statement: $z0 = virtualinvoke $r5.<java.security.Signature: boolean verify(byte[])>($r1)
		Method: <com.huawei.hms.utils.ReadApkFileUtil: boolean a(byte[],byte[],byte[],java.lang.String)>
		SHA-256: 4fb71c04d9a3c6cc548e38494b376f80859efbb6fd406ed5262b775e06416625
		Secure: false
	Object:
		Variable: $r5
		Type: javax.crypto.Cipher
		Statement: $r5 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer132986)
		Method: <com.huawei.secure.android.common.encrypt.keystore.aes.AesGcmKS: byte[] decrypt(javax.crypto.SecretKey,byte[])>
		SHA-256: 4e660eea4ec9efdbc6c6207a8c4303a83a619cc9fc770c73863ecad6e7749bfc
		Secure: false
	Object:
		Variable: $r3
		Type: javax.crypto.spec.SecretKeySpec
		Statement: specialinvoke $r3.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r2, varReplacer133109)
		Method: <org.litepal.util.cipher.AESCrypt: javax.crypto.spec.SecretKeySpec generateKey(java.lang.String)>
		SHA-256: 41097cc882a250006877c86853d123796b3bf2ae74f9f02a0bb8661511d80c83
		Secure: false
	Object:
		Variable: $r7
		Type: java.security.PublicKey
		Statement: $r7 = virtualinvoke $r6.<java.security.KeyFactory: java.security.PublicKey generatePublic(java.security.spec.KeySpec)>($r0)
		Method: <com.amap.api.mapcore.util.h: java.security.PublicKey a(java.lang.String)>
		SHA-256: 839443c05ec642bbc6fe9938d60fa048280e7bb179b6e5f34e76ac8d5bc5d43c
		Secure: false
	Object:
		Variable: $r3
		Type: javax.crypto.Mac
		Statement: $r3 = staticinvoke <javax.crypto.Mac: javax.crypto.Mac getInstance(java.lang.String)>($r2)
		Method: <net.lingala.zip4j.crypto.PBKDF2.MacBasedPRF: void <init>(java.lang.String)>
		SHA-256: fe86d6df4f79d1062ebbc1599317d6572713990c2d231593223a215eef0fe89e
		Secure: false
	Object:
		Variable: varReplacer50079
		Type: java.lang.String
		Statement: specialinvoke $r14.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r1, varReplacer50079)
		Method: <com.huawei.secure.android.common.encrypt.aes.AesCbc: byte[] decrypt(byte[],byte[],byte[])>
		SHA-256: 10c69781d5646b7061311fe992e9c910ec771c04fd1c4136a1908b2a6779f128
		Secure: false
	Object:
		Variable: $r1
		Type: byte[]
		Statement: $r1 = virtualinvoke $r3.<java.security.MessageDigest: byte[] digest()>()
		Method: <com.tencent.mm.opensdk.utils.b: java.lang.String e(byte[])>
		SHA-256: 54f0f6b511664a617918a6d2f59eab7bf790dd9def3f2babe2a1094235655ff8
		Secure: false
	Object:
		Variable: $r6
		Type: java.security.KeyFactory
		Statement: $r6 = staticinvoke <java.security.KeyFactory: java.security.KeyFactory getInstance(java.lang.String)>(varReplacer87449)
		Method: <com.huawei.hms.utils.ReadApkFileUtil: boolean a(byte[],byte[],byte[],java.lang.String)>
		SHA-256: e58a3e3613e69a59b1aefc00bfeb229aa4519182acbd1f327fc66daefaf50c31
		Secure: false
	Object:
		Variable: $r1
		Type: java.security.MessageDigest
		Statement: $r1 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer133108)
		Method: <org.litepal.util.cipher.AESCrypt: javax.crypto.spec.SecretKeySpec generateKey(java.lang.String)>
		SHA-256: c43ad9209b2742c0a2ec269584904ed4c22a73be9417e9899ff9904f354d34b
		Secure: true
	Object:
		Variable: $r14
		Type: javax.crypto.spec.IvParameterSpec
		Statement: specialinvoke $r14.<javax.crypto.spec.IvParameterSpec: void <init>(byte[])>($r13)
		Method: <com.google.android.exoplayer2.upstream.cache.CachedContentIndex: boolean readFile()>
		SHA-256: df45aa43803ab1e96547241df9b5f29d1505157a5322a2903a95f6210a51481d
		Secure: false
	Object:
		Variable: varReplacer13248
		Type: java.lang.String
		Statement: $r6 = staticinvoke <java.security.KeyFactory: java.security.KeyFactory getInstance(java.lang.String)>(varReplacer13248)
		Method: <com.amap.api.mapcore.util.h: java.security.PublicKey a(java.lang.String)>
		SHA-256: 63f4c71f4d0ede47dcaa511ef28deeb647167bc50874da70ed7ef875cb0fa9f
		Secure: false
	Object:
		Variable: $r3
		Type: java.security.MessageDigest
		Statement: $r3 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>($r1)
		Method: <okio.ByteString: okio.ByteString digest$okio(java.lang.String)>
		SHA-256: ae39b036c5eeeba58d380660f68e23806935f12d2f5c9cefe65440425aa34f4a
		Secure: false
	Object:
		Variable: $r7
		Type: javax.crypto.Cipher
		Statement: $r7 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer104087)
		Method: <com.amap.api.mapcore.util.i: byte[] b(byte[])>
		SHA-256: 243c556c87c2fccd6a378ab6eecaf9a76c650a58d180bd2e530be2dc659f4984
		Secure: false
	Object:
		Variable: $r3
		Type: byte[]
		Statement: $r3 = virtualinvoke $r2.<java.security.MessageDigest: byte[] digest()>()
		Method: <com.xiaomi.push.bm: byte[] a(java.lang.String)>
		SHA-256: 4facd7ba29dba4b9651ce5a91cc098c32bd8c9ead718fc311349c44ac68baea8
		Secure: false
	Object:
		Variable: $r2
		Type: java.lang.String
		Statement: specialinvoke $r1.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r3, $r2)
		Method: <net.lingala.zip4j.crypto.PBKDF2.MacBasedPRF: void init(byte[])>
		SHA-256: 1af3e375106d10b26ea6034ef73b9c61e751ef18cab8bd19d427ede96b1bf3f8
		Secure: false
	Object:
		Variable: $r7
		Type: java.security.PublicKey
		Statement: $r7 = virtualinvoke $r6.<java.security.KeyFactory: java.security.PublicKey generatePublic(java.security.spec.KeySpec)>($r2)
		Method: <com.huawei.hms.utils.ReadApkFileUtil: boolean a(byte[],byte[],byte[],java.lang.String)>
		SHA-256: 5669c5b96cf856a020aa98f0c11d833b3ae3485c1d540c4a47043e43c66f1323
		Secure: false
	Object:
		Variable: $r6
		Type: javax.crypto.Cipher
		Statement: $r6 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer6371)
		Method: <com.amap.api.mapcore.util.i: byte[] a(byte[])>
		SHA-256: c0f3eda87942270001aaebf4b73833c5da7c0aa27123a5dea347523e6909aacb
		Secure: false
	Object:
		Variable: $r2
		Type: byte[]
		Statement: $r2 = virtualinvoke $r3.<java.security.MessageDigest: byte[] digest()>()
		Method: <com.amap.api.mapcore.util.hl: java.lang.String a(java.lang.String)>
		SHA-256: 2b9c4de86a09c304f3700935a536cdea6b4bc33f15812af17876a99bf6eb6654
		Secure: false
	Object:
		Variable: $r3
		Type: javax.crypto.spec.SecretKeySpec
		Statement: specialinvoke $r3.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r2, varReplacer3277)
		Method: <com.mob.tools.utils.Data: byte[] AES128Decode(byte[],byte[])>
		SHA-256: bc9a7490bcb05cfd2422047a55a5d50823482d580c1a0a8f24835e7fd6802221
		Secure: false
	Object:
		Variable: $r6
		Type: java.security.MessageDigest
		Statement: $r6 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer87399)
		Method: <com.huawei.hms.utils.ReadApkFileUtil: boolean verifyApkHash(java.lang.String)>
		SHA-256: 37ee6e33853ca59f5374351668c4cb3765ad50ad2aacd07e39f0778c90880e8e
		Secure: true
	Object:
		Variable: $r2
		Type: byte[]
		Statement: $r2 = virtualinvoke $r6.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r2)
		Method: <cn.smssdk.net.h.c: byte[] a(byte[],byte[])>
		SHA-256: 2a346a5bfdb6565a84e57551c03d5da8a444fd4da1388a40c7022fc497992343
		Secure: false
	Object:
		Variable: $r2
		Type: byte[]
		Statement: $r2 = virtualinvoke $r1.<java.security.MessageDigest: byte[] digest(byte[])>($r2)
		Method: <com.danikula.videocache.ProxyCacheUtils: java.lang.String computeMD5(java.lang.String)>
		SHA-256: 2c0b85bd39441231516ebce07ef7cba5bb196c1adac5902c4f56547a97b8aa50
		Secure: false
	Object:
		Variable: $r3
		Type: java.security.KeyFactory
		Statement: $r3 = staticinvoke <java.security.KeyFactory: java.security.KeyFactory getInstance(java.lang.String)>(varReplacer46459)
		Method: <com.xiaomi.push.service.bs: void <clinit>()>
		SHA-256: 43d0721b44a95d2bbbfb4f951649c9d9fbda8c8bdc1507bbc1bb209e48decffa
		Secure: false
	Object:
		Variable: varReplacer6372
		Type: java.lang.String
		Statement: specialinvoke $r1.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r3, varReplacer6372)
		Method: <com.amap.api.mapcore.util.i: byte[] a(byte[])>
		SHA-256: a105293a91d9523a82c32edd593647d1f9d669d771c7b63989aec89ed3430ade
		Secure: false
	Object:
		Variable: $r0
		Type: byte[]
		Statement: $r0 = virtualinvoke $r1.<java.security.MessageDigest: byte[] digest(byte[])>($r0)
		Method: <com.airoha.libutils.SHA256: byte[] calculate(byte[])>
		SHA-256: 5b811dcd61eee3d9e092aa4835f4200caf357917d059cfc462c4e4736093dbbb
		Secure: true
	Object:
		Variable: $r2
		Type: javax.crypto.Cipher
		Statement: $r2 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer15335)
		Method: <com.heytap.mcssdk.f.b: java.lang.String a(java.lang.String,java.lang.String)>
		SHA-256: e50b901649145a948993bd390b7e7d350c1359f2d3bcbe4bb884a3dcbd33ca3
		Secure: false
	Object:
		Variable: $r1
		Type: byte[]
		Statement: $i0 = virtualinvoke $r5.<javax.crypto.Cipher: int update(byte[],int,int,byte[],int)>($r1, varReplacer3366, $i0, $r0, varReplacer3366)
		Method: <com.mob.tools.utils.Data: byte[] AES128Encode(byte[],byte[])>
		SHA-256: 2da01d53b0a8811e83081dfc8480893a8d766aedc6be7ce6e530574e8cc8ae63
		Secure: false
	Object:
		Variable: $r0
		Type: byte[]
		Statement: $r3 = virtualinvoke $r4.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r0)
		Method: <org.litepal.util.cipher.AESCrypt: byte[] encrypt(javax.crypto.spec.SecretKeySpec,byte[],byte[])>
		SHA-256: 5bf89b7c32c27b3a7f0d634739099c4fb548e834643a135e6456522e9093024d
		Secure: false
	Object:
		Variable: $r2
		Type: java.security.MessageDigest
		Statement: $r2 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer84253)
		Method: <com.xiaomi.push.bn: java.lang.String a(byte[])>
		SHA-256: 6844e834a38aeec7d657225e2bed970c573e8f163b6b8c7a0c34ec445cc225ff
		Secure: false
	Object:
		Variable: $r3
		Type: java.security.SecureRandom
		Statement: $r3 = staticinvoke <java.security.SecureRandom: java.security.SecureRandom getInstance(java.lang.String)>(varReplacer2315)
		Method: <com.huawei.secure.android.common.encrypt.utils.EncryptUtil: byte[] generateSecureRandom(int)>
		SHA-256: c4d4a7b5dab8cbb5b87312fd26bd7cece8b6d619b3ac08bcfb947aba52db6e6d
		Secure: true
	Object:
		Variable: $r5
		Type: java.security.MessageDigest
		Statement: $r5 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer29186)
		Method: <cn.smssdk.net.h.f: java.lang.String a(java.lang.String,java.lang.String)>
		SHA-256: c1c78401a731a4a147dfd038cc260c5176d3878a82d20b400ec1389a116b45dd
		Secure: false
	Object:
		Variable: $r8
		Type: javax.crypto.spec.SecretKeySpec
		Statement: specialinvoke $r8.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r2, varReplacer67251)
		Method: <com.amap.api.mapcore.util.hj: byte[] c(byte[],byte[],byte[])>
		SHA-256: ed095c7ebd475872c0bf52c5fece0430973902832ecef8942210fed5f95c5b4e
		Secure: false
	Object:
		Variable: $r7
		Type: java.security.MessageDigest
		Statement: $r7 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>($r5)
		Method: <com.huawei.hms.opendevice.r: java.lang.String a(java.lang.String,java.lang.String)>
		SHA-256: e272320022b602b69294d8d48c89f21b235d810b04043e5b73ae7071312a510e
		Secure: true
	Object:
		Variable: $r0
		Type: java.security.Key
		Statement: $r1 = interfaceinvoke $r0.<java.security.Key: byte[] getEncoded()>()
		Method: <com.vivo.push.util.u: java.lang.String a(java.security.Key)>
		SHA-256: 735a6c06d51c46ce5cfad492a421f726856594b64fa7cebd1adade6da8ad9460
		Secure: true
	Object:
		Variable: varReplacer6221
		Type: java.lang.String
		Statement: specialinvoke $r27.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r25, varReplacer6221)
		Method: <com.amap.api.mapcore.util.he: com.amap.api.mapcore.util.he$a a(android.content.Context,com.amap.api.mapcore.util.ho,java.lang.String,java.util.Map,boolean)>
		SHA-256: 59c6f645dd25e4f1db1b00777e9b60ada8c930ed199ef6e978ed6669a64d1888
		Secure: false
	Object:
		Variable: $r0
		Type: byte[]
		Statement: $r2 = virtualinvoke $r5.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r0)
		Method: <com.amap.api.mapcore.util.hj: byte[] d(byte[],byte[],byte[])>
		SHA-256: 3f30e45568788ac7062979875c4facbc7b405aa5d365e5566faa5237a372ced2
		Secure: false
	Object:
		Variable: varReplacer75336
		Type: java.lang.String
		Statement: specialinvoke $r3.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r4, varReplacer75336)
		Method: <com.google.android.exoplayer2.source.hls.Aes128DataSource: long open(com.google.android.exoplayer2.upstream.DataSpec)>
		SHA-256: 1c9b76a9591c7724aa2e9bef7d51eb552382291bb315aaec4ba13aec11f898f8
		Secure: false
	Object:
		Variable: $r3
		Type: javax.crypto.SecretKeyFactory
		Statement: $r3 = staticinvoke <javax.crypto.SecretKeyFactory: javax.crypto.SecretKeyFactory getInstance(java.lang.String)>(varReplacer2464)
		Method: <com.huawei.secure.android.common.encrypt.hash.PBKDF2: byte[] a(char[],byte[],int,int,boolean)>
		SHA-256: ef898f21c32324daca2a8a9a0ae93cb02da8f5c42aaa36a25e1506793a65019
		Secure: false
	Object:
		Variable: $r1
		Type: java.security.MessageDigest
		Statement: $r1 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer165445)
		Method: <com.bumptech.glide.load.engine.cache.SafeKeyGenerator$1: com.bumptech.glide.load.engine.cache.SafeKeyGenerator$PoolableDigestContainer create()>
		SHA-256: 212d15eeee151a5fa3a063b7ab76022b16b7558fa53b5275717c1c3548daf79a
		Secure: true
	Object:
		Variable: $r0
		Type: byte[]
		Statement: $r0 = virtualinvoke $r4.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r0)
		Method: <com.huawei.secure.android.common.encrypt.aes.AesCbc: byte[] encrypt(byte[],byte[],byte[])>
		SHA-256: 35805929122ae07293adb4ee9bb9e6c6580f0de0644a43a1233557b0ef690749
		Secure: false
	Object:
		Variable: $r4
		Type: java.security.KeyFactory
		Statement: $r4 = staticinvoke <java.security.KeyFactory: java.security.KeyFactory getInstance(java.lang.String)>(varReplacer7322)
		Method: <com.amap.api.mapcore.util.hp: java.security.PublicKey d()>
		SHA-256: e2de78ea136a040d23d80638dd23923c56a819793f99afd5b8e51191a9c08b2e
		Secure: false
	Object:
		Variable: $r0
		Type: byte[]
		Statement: $r0 = virtualinvoke $r1.<java.security.MessageDigest: byte[] digest(byte[])>($r0)
		Method: <com.huawei.hms.utils.SHA256: byte[] digest(byte[])>
		SHA-256: 6bb0390dd3e5fd5e01bb3d551adfe362cb4082196a8f9282c33d8f0cb598842e
		Secure: true
	Object:
		Variable: $r4
		Type: byte[]
		Statement: $r4 = virtualinvoke $r6.<java.security.MessageDigest: byte[] digest()>()
		Method: <cn.sharesdk.wechat.utils.j: byte[] a(java.lang.String,java.lang.String,int)>
		SHA-256: 84b64006c4c8049af4de4fe9750e4b6a5557cf7c3289e514d46898f837bb7c0e
		Secure: false
	Object:
		Variable: $r8
		Type: javax.crypto.spec.IvParameterSpec
		Statement: specialinvoke $r8.<javax.crypto.spec.IvParameterSpec: void <init>(byte[])>($r6)
		Method: <com.vivo.push.util.a: java.lang.String a(java.lang.String)>
		SHA-256: 826ccfe75eb31de680b3d2f9193f7e428bcd84383c085fdb1e71ffd150474703
		Secure: false
	Object:
		Variable: $r9
		Type: javax.crypto.spec.SecretKeySpec
		Statement: specialinvoke $r9.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r1, varReplacer104628)
		Method: <com.huawei.agconnect.config.impl.i: javax.crypto.SecretKey a(byte[],byte[],byte[],byte[],int)>
		SHA-256: bfe547d3124fc768cea2763a6509c18c442cfac1cc3e2ca079d66beee7742c8c
		Secure: false
	Object:
		Variable: $r5
		Type: java.security.Signature
		Statement: $r5 = staticinvoke <java.security.Signature: java.security.Signature getInstance(java.lang.String)>(varReplacer49962)
		Method: <com.vivo.push.c.e: java.lang.String a(java.lang.String)>
		SHA-256: 7baa1a0f489841df69bafea23d16c948229cc1b9f9d22293d1928e3a806c43c1
		Secure: false
	Object:
		Variable: $r15
		Type: javax.crypto.spec.GCMParameterSpec
		Statement: specialinvoke $r15.<javax.crypto.spec.GCMParameterSpec: void <init>(int,byte[])>(varReplacer132963, $r4)
		Method: <com.huawei.secure.android.common.encrypt.keystore.aes.AesGcmKS: byte[] decrypt(javax.crypto.SecretKey,byte[])>
		SHA-256: c47e158f5ba3b1f7360681e6942dc0ab00b5d502b0fd859b8ac1e739d4ca1d56
		Secure: false
	Object:
		Variable: $r2
		Type: java.security.MessageDigest
		Statement: $r2 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>($r1)
		Method: <okio.SegmentedByteString: okio.ByteString digest$okio(java.lang.String)>
		SHA-256: 6c960e488f21ae2f1d37981b7f790ff5823030d9f242d798118968e0f93ba357
		Secure: false
	Object:
		Variable: $r4
		Type: javax.crypto.spec.SecretKeySpec
		Statement: specialinvoke $r4.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r0, varReplacer3313)
		Method: <com.mob.tools.utils.Data: byte[] AES128Encode(java.lang.String,java.lang.String)>
		SHA-256: aff4c0826700fb8ce185648d18626ceb36d070efa702fd19d95aa1fa76014955
		Secure: false
	Object:
		Variable: $r0
		Type: byte[]
		Statement: $i0 = virtualinvoke $r6.<javax.crypto.Cipher: int update(byte[],int,int,byte[],int)>($r3, varReplacer3307, $i0, $r0, varReplacer3307)
		Method: <com.mob.tools.utils.Data: byte[] AES128Encode(java.lang.String,java.lang.String)>
		SHA-256: 7e72735f438cca7e006afceb70407dec36f44beafb930fbaf53fdb5c1bb04dee
		Secure: false
	Object:
		Variable: $r2
		Type: javax.crypto.SecretKey
		Statement: $r2 = virtualinvoke $r1.<javax.crypto.KeyGenerator: javax.crypto.SecretKey generateKey()>()
		Method: <com.amap.api.mapcore.util.hj: byte[] a(byte[])>
		SHA-256: 51cdd1ac7fb6139696554908b583c0f9b5f2a8b61eb315dacf76bf39607e68c2
		Secure: true
	Object:
		Variable: $r1
		Type: byte[]
		Statement: $r1 = virtualinvoke $r2.<java.security.MessageDigest: byte[] digest()>()
		Method: <com.xiaomi.push.bn: java.lang.String a(byte[])>
		SHA-256: 251342d21ed0130dc957095c009367a76aee856bae26def9c8f27b2f0dc43bab
		Secure: false
	Object:
		Variable: $r8
		Type: java.security.KeyPairGenerator
		Statement: $r8 = staticinvoke <java.security.KeyPairGenerator: java.security.KeyPairGenerator getInstance(java.lang.String,java.lang.String)>(varReplacer50014, varReplacer50015)
		Method: <com.vivo.push.c.e: void a(android.content.Context)>
		SHA-256: 95efbdb8729f90648401ebedd10e81e3fc16e012a5b02d27439512b653a92bb2
		Secure: false
	Object:
		Variable: $r3
		Type: javax.crypto.spec.SecretKeySpec
		Statement: specialinvoke $r3.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r4, varReplacer75336)
		Method: <com.google.android.exoplayer2.source.hls.Aes128DataSource: long open(com.google.android.exoplayer2.upstream.DataSpec)>
		SHA-256: f819413bb972ea17435fd7fb4b8679b5b1b7a565f30609ff9c506a9c40d8d8d9
		Secure: false
	Object:
		Variable: $r2
		Type: java.security.MessageDigest
		Statement: $r2 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>($r1)
		Method: <com.huawei.hms.utils.ReadApkFileUtil: byte[] a(java.lang.String,java.lang.String)>
		SHA-256: d492fcf978387f2e44cac8259d2057ee0b237e9f4325b60c5246bab24d1257d1
		Secure: true
	Object:
		Variable: $r0
		Type: javax.crypto.spec.IvParameterSpec
		Statement: specialinvoke $r0.<javax.crypto.spec.IvParameterSpec: void <init>(byte[])>($r3)
		Method: <com.amap.api.mapcore.util.eo: java.lang.String a(byte[],byte[],byte[])>
		SHA-256: fcc510b38b0ed2ac51e185bf46f09fe7a75e24c9561fc6e6d433614acfb85270
		Secure: false
	Object:
		Variable: $r1
		Type: java.security.KeyStore
		Statement: $r1 = staticinvoke <java.security.KeyStore: java.security.KeyStore getInstance(java.lang.String)>(varReplacer119888)
		Method: <com.vivo.push.c.a: void a()>
		SHA-256: 3a328381ae9c6dc3da1ceaac7521f9577e04a16d1d2c88bf0f91c59ac514cff6
		Secure: false
	Object:
		Variable: $r4
		Type: javax.net.ssl.SSLContext
		Statement: $r4 = staticinvoke <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String)>(varReplacer98143)
		Method: <com.qcymall.earphonesetup.network.retrofit.HttpSSLUtils: com.qcymall.earphonesetup.network.retrofit.HttpSSLUtils$SSLParams getSslSocketFactory()>
		SHA-256: 52400615a253c221162cc366cc748e741b3e2f76eeed44dae5647c7945deb1f7
		Secure: false
	Object:
		Variable: $r0
		Type: java.security.spec.X509EncodedKeySpec
		Statement: specialinvoke $r0.<java.security.spec.X509EncodedKeySpec: void <init>(byte[])>($r1)
		Method: <com.huawei.hms.hatool.e: java.security.PublicKey a(byte[])>
		SHA-256: 7c8b81cf0d950e06a705074f393df51a9a73fc4464e3884e3d00a6f200c23562
		Secure: false
	Object:
		Variable: $r3
		Type: byte[]
		Statement: $r3 = virtualinvoke $r4.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r0)
		Method: <org.litepal.util.cipher.AESCrypt: byte[] encrypt(javax.crypto.spec.SecretKeySpec,byte[],byte[])>
		SHA-256: 5702f3f2df7aa24083c7cc0ff950379995714f464d6e1a60553738ef25ba860d
		Secure: false
	Object:
		Variable: $r7
		Type: java.security.MessageDigest
		Statement: $r7 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer48830)
		Method: <com.xiaomi.push.az: java.lang.String b()>
		SHA-256: b8479b64f170eb71d32e44529f06fce6a62ccd4dcbad0936e97f6c5d4bf78bdb
		Secure: false
	Object:
		Variable: $r5
		Type: javax.crypto.Cipher
		Statement: $r5 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer144890)
		Method: <com.vivo.push.util.f: byte[] a(java.lang.String,java.lang.String,byte[])>
		SHA-256: ce012d9d888f5f93f61c718a44d5e1190f75049f9e0d44f0718fa904f010c84c
		Secure: false
	Object:
		Variable: $r3
		Type: javax.crypto.Cipher
		Statement: $r3 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String,java.lang.String)>($r0, $r1)
		Method: <com.mob.tools.utils.Data: javax.crypto.Cipher getCipher(java.lang.String,java.lang.String)>
		SHA-256: fb08f9134dbb26f0da0b7eb0a36682bca26bb024b8ee21f3e73b013f325db52b
		Secure: false
	Object:
		Variable: $r6
		Type: javax.net.ssl.TrustManager[]
		Statement: $r6 = virtualinvoke $r3.<javax.net.ssl.TrustManagerFactory: javax.net.ssl.TrustManager[] getTrustManagers()>()
		Method: <com.huawei.secure.android.common.ssl.SecureX509TrustManager: void a(java.io.InputStream,java.lang.String)>
		SHA-256: fdbfd6125c6bdfd90212ba2839e55df43ae529291f5a33f9e5bdbee6dd4f126f
		Secure: false
	Object:
		Variable: $r5
		Type: javax.crypto.Cipher
		Statement: $r5 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer67252)
		Method: <com.amap.api.mapcore.util.hj: byte[] c(byte[],byte[],byte[])>
		SHA-256: 9a964a3e5c778bdf2ad7ae5febc9c600c99669d03c81e1fd8abe15da28fe2a24
		Secure: false
	Object:
		Variable: $r4
		Type: javax.crypto.Cipher
		Statement: $r4 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer146786)
		Method: <org.litepal.util.cipher.AESCrypt: byte[] decrypt(javax.crypto.spec.SecretKeySpec,byte[],byte[])>
		SHA-256: 483338827adb69933c4c8b6757c79def06a7fb29b8f6c34df854e6dbd28ddca6
		Secure: false
	Object:
		Variable: $r5
		Type: byte[]
		Statement: $r5 = virtualinvoke $r6.<java.security.MessageDigest: byte[] digest()>()
		Method: <com.qualcomm.qti.gaiaclient.core.utils.BytesUtils: byte[] getMD5FromUri(android.content.Context,android.net.Uri)>
		SHA-256: 6531cbe1a2c1f6622bfe11f0181b413d8298343a115b571abc8592699c56fb0e
		Secure: false
	Object:
		Variable: $r0
		Type: java.security.KeyStore
		Statement: $r0 = staticinvoke <java.security.KeyStore: java.security.KeyStore getInstance(java.lang.String)>(varReplacer50035)
		Method: <com.vivo.push.c.e: void b()>
		SHA-256: 8cd143a716446b33a74289c67e5fa951bc6138084df0232c0c4b53db77ad5dd2
		Secure: false
	Object:
		Variable: $r6
		Type: byte[]
		Statement: $r6 = virtualinvoke $r5.<java.security.MessageDigest: byte[] digest(byte[])>($r6)
		Method: <com.google.android.gms.common.zzm: java.lang.String zzc(boolean,java.lang.String,com.google.android.gms.common.zzi)>
		SHA-256: 32545d2a6e3a346329f62774c4cf40147b4b80d26df06d430d2ebe09bf733d90
		Secure: false
	Object:
		Variable: $r1
		Type: javax.net.ssl.TrustManagerFactory
		Statement: $r1 = staticinvoke <javax.net.ssl.TrustManagerFactory: javax.net.ssl.TrustManagerFactory getInstance(java.lang.String,java.lang.String)>(varReplacer69019, varReplacer69020)
		Method: <okhttp3.internal.platform.BouncyCastlePlatform: javax.net.ssl.X509TrustManager platformTrustManager()>
		SHA-256: 248648e726432db199b32e9247ba2f40b02fd6b02eba6ade45df8062a44d21cd
		Secure: false
	Object:
		Variable: $r4
		Type: byte[]
		Statement: $r4 = virtualinvoke $r5.<java.security.Signature: byte[] sign()>()
		Method: <com.vivo.push.c.e: java.lang.String a(java.lang.String)>
		SHA-256: f3d44d221edf4903089de0126d5074d02d9170c945e5b97862ab3a1f74d61d8e
		Secure: false
	Object:
		Variable: $r5
		Type: java.security.SecureRandom
		Statement: specialinvoke $r5.<java.security.SecureRandom: void <init>()>()
		Method: <com.yc.pedometer.sdk.WriteCommandToBLE: void queryDeviceBt3State()>
		SHA-256: 7a1390f92899d8f6dccc76e0f5fe5288c6276ae70c542bb2427974af62c505f7
		Secure: true
	Object:
		Variable: $r2
		Type: byte[]
		Statement: $r2 = virtualinvoke $r0.<java.security.MessageDigest: byte[] digest(byte[])>($r2)
		Method: <org.apache.http.impl.auth.DigestScheme: java.lang.String createCnonce()>
		SHA-256: 237b2bdbf3a67edc693005bc279c16bcec253c30f11b82d74390ca89f214d6be
		Secure: false
	Object:
		Variable: varReplacer144887
		Type: java.lang.String
		Statement: specialinvoke $r1.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r4, varReplacer144887)
		Method: <com.vivo.push.util.f: byte[] a(java.lang.String,java.lang.String,byte[])>
		SHA-256: f6ee1fe9c79601c6b72b3ad9fe82954172bfc018feabef285ee54cb80fb82993
		Secure: false
	Object:
		Variable: $r4
		Type: javax.crypto.SecretKey
		Statement: $r4 = virtualinvoke $r3.<javax.crypto.SecretKeyFactory: javax.crypto.SecretKey generateSecret(java.security.spec.KeySpec)>($r0)
		Method: <com.huawei.secure.android.common.encrypt.hash.PBKDF2: byte[] a(char[],byte[],int,int,boolean)>
		SHA-256: 888a8ed6b0df9797fc996ab46466b8c1a8cb39925b651cdaad448e80b62e60ae
		Secure: false
	Object:
		Variable: $r1
		Type: javax.net.ssl.SSLContext
		Statement: $r1 = staticinvoke <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String)>(varReplacer104412)
		Method: <okhttp3.internal.platform.Platform: javax.net.ssl.SSLContext newSSLContext()>
		SHA-256: e346e70c3ec630759c2cf893db8eea91edef64e8a2697a1309b6cb72d644444d
		Secure: false
	Object:
		Variable: $r1
		Type: byte[]
		Statement: $r1 = virtualinvoke $r2.<javax.crypto.Mac: byte[] doFinal()>()
		Method: <net.lingala.zip4j.crypto.PBKDF2.MacBasedPRF: byte[] doFinal()>
		SHA-256: 23eb6bc332ca789bcf27299e70f0704eed45b5662a070781c9eade8f4b4d6994
		Secure: false
	Object:
		Variable: $r2
		Type: javax.crypto.Cipher
		Statement: $r2 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer46452)
		Method: <com.xiaomi.push.service.bs: java.lang.String a(java.lang.String)>
		SHA-256: 33276afcac7b3a18b47840ee0f0ee24374e8fbea721ffcc23a776758b817d11f
		Secure: false
	Object:
		Variable: $r0
		Type: javax.crypto.spec.IvParameterSpec
		Statement: specialinvoke $r0.<javax.crypto.spec.IvParameterSpec: void <init>(byte[])>($r3)
		Method: <com.huawei.agconnect.config.impl.i: byte[] a(javax.crypto.SecretKey,byte[])>
		SHA-256: 100871c9cea3a42be8f18e83734dd78477d73f91982e79989d1d5c440f58fa19
		Secure: false
	Object:
		Variable: $r1
		Type: javax.crypto.spec.IvParameterSpec
		Statement: specialinvoke $r1.<javax.crypto.spec.IvParameterSpec: void <init>(byte[])>($r3)
		Method: <org.litepal.util.cipher.AESCrypt: byte[] decrypt(javax.crypto.spec.SecretKeySpec,byte[],byte[])>
		SHA-256: 61f5b8a8670082c5705774d56a57288ad5d8132009743261e84e3355f7546e45
		Secure: false
	Object:
		Variable: $r2
		Type: java.security.KeyFactory
		Statement: $r2 = staticinvoke <java.security.KeyFactory: java.security.KeyFactory getInstance(java.lang.String)>(varReplacer163515)
		Method: <com.huawei.hms.hatool.e: java.security.PublicKey a(byte[])>
		SHA-256: 15fbad981867ca01a9b0374dba5c1ed395c56d4de84da59eda3166a71af2caa7
		Secure: false
	Object:
		Variable: varReplacer2445
		Type: java.lang.String
		Statement: specialinvoke $r14.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r1, varReplacer2445)
		Method: <com.huawei.secure.android.common.encrypt.aes.AesCbc: byte[] encrypt(byte[],byte[],byte[])>
		SHA-256: f9ba89de66d7f7251ae954d022de295ebc98e9c4f6a9c07fdd9c9db66408cf38
		Secure: false
	Object:
		Variable: $r1
		Type: byte[]
		Statement: $r1 = virtualinvoke $r5.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r1)
		Method: <com.amap.api.mapcore.util.eo: java.lang.String a(byte[],byte[],byte[])>
		SHA-256: bc0dc60fe74b7c61eb46ec2794cba9fb5c28830c43c8f761bc16237f6854d6d3
		Secure: false
	Object:
		Variable: $r1
		Type: javax.net.ssl.SSLContext
		Statement: $r1 = staticinvoke <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String,java.security.Provider)>(varReplacer104408, $r2)
		Method: <okhttp3.internal.platform.ConscryptPlatform: javax.net.ssl.SSLContext newSSLContext()>
		SHA-256: 9f6c3f9e4094dac175a2b8a764528257139e03a9b7bad126370aa427c625b799
		Secure: false
	Object:
		Variable: $r5
		Type: javax.crypto.SecretKeyFactory
		Statement: $r5 = staticinvoke <javax.crypto.SecretKeyFactory: javax.crypto.SecretKeyFactory getInstance(java.lang.String)>(varReplacer104627)
		Method: <com.huawei.agconnect.config.impl.i: javax.crypto.SecretKey a(byte[],byte[],byte[],byte[],int)>
		SHA-256: db2485e661087a466d8103c920740eaad2b273c4f923b16c6eaaa3e3c38e35e3
		Secure: false
	Object:
		Variable: $r6
		Type: javax.crypto.spec.IvParameterSpec
		Statement: specialinvoke $r6.<javax.crypto.spec.IvParameterSpec: void <init>(byte[])>($r4)
		Method: <com.vivo.push.util.f: byte[] a(java.lang.String,java.lang.String,byte[])>
		SHA-256: dfa5efa549a17b6ffd2420d69b1dee5d1981c6484c13970e1a7ce862ccda1fad
		Secure: false
	Object:
		Variable: $r3
		Type: byte[]
		Statement: $r3 = virtualinvoke $r7.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r3)
		Method: <com.vivo.push.util.a: java.lang.String a(java.lang.String)>
		SHA-256: 5efad7501e38457e6d5ceb38bc65c91ffffbac01cdbda19efe3980003e05d2ce
		Secure: false
	Object:
		Variable: $r28
		Type: javax.crypto.Cipher
		Statement: $r28 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer6236)
		Method: <com.amap.api.mapcore.util.he: com.amap.api.mapcore.util.he$a a(android.content.Context,com.amap.api.mapcore.util.ho,java.lang.String,java.util.Map,boolean)>
		SHA-256: c4eb49e50c4268480f90dd4d6a0b3fcdad81b6badb765bbba3b0c68e9e292cd2
		Secure: false
	Object:
		Variable: $r0
		Type: javax.net.ssl.SSLContext
		Statement: $r0 = staticinvoke <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String)>(varReplacer32343)
		Method: <com.huawei.secure.android.common.ssl.SSLUtil: javax.net.ssl.SSLContext setSSLContext()>
		SHA-256: 69a67211f980f42e0d73ed0603dfaf035856300ea41d392e630571a146522df6
		Secure: false
	Object:
		Variable: $r3
		Type: javax.net.ssl.TrustManager[]
		Statement: $r3 = virtualinvoke $r2.<javax.net.ssl.TrustManagerFactory: javax.net.ssl.TrustManager[] getTrustManagers()>()
		Method: <okhttp3.internal.platform.ConscryptPlatform: javax.net.ssl.X509TrustManager platformTrustManager()>
		SHA-256: 15a76129680a3cd57380001c355c828c5afc3ba9ce32fff65b352ff3390bbd6
		Secure: false
	Object:
		Variable: $r2
		Type: byte[]
		Statement: $r2 = virtualinvoke $r3.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r2)
		Method: <com.amap.api.mapcore.util.h: byte[] a(byte[],java.security.PublicKey)>
		SHA-256: ac63ef892f29b977555e51200e42aa8f3cc4b7c7f8cea3441d753dfe0395d791
		Secure: false
	Object:
		Variable: $r4
		Type: byte[]
		Statement: $r4 = virtualinvoke $r3.<java.security.MessageDigest: byte[] digest(byte[])>($r4)
		Method: <okio.ByteString: okio.ByteString digest$okio(java.lang.String)>
		SHA-256: d4bf5cc88c644b9a20ac4aef1746c1f0c9ae862102406e7436b8866c875859ff
		Secure: false
	Object:
		Variable: $r3
		Type: javax.crypto.SecretKey
		Statement: $r3 = virtualinvoke $r2.<javax.crypto.SecretKeyFactory: javax.crypto.SecretKey generateSecret(java.security.spec.KeySpec)>($r0)
		Method: <cn.smssdk.net.h.c: java.security.Key a(byte[])>
		SHA-256: 6dfd51fa8467a4c334fbdf2d0a6fa7ae4d07463c330f48d1ddc3796128cec8d2
		Secure: false
	Object:
		Variable: $r1
		Type: javax.crypto.Cipher
		Statement: $r1 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer15671)
		Method: <com.xiaomi.push.h: javax.crypto.Cipher a(byte[],int)>
		SHA-256: de643d28555dbdbd987f8a1aff8d93dec62509e1f369d93b32f213835f6af8d7
		Secure: false
	Object:
		Variable: $r3
		Type: javax.net.ssl.TrustManagerFactory
		Statement: $r3 = staticinvoke <javax.net.ssl.TrustManagerFactory: javax.net.ssl.TrustManagerFactory getInstance(java.lang.String,java.security.Provider)>($r1, $r2)
		Method: <okhttp3.internal.platform.OpenJSSEPlatform: javax.net.ssl.X509TrustManager platformTrustManager()>
		SHA-256: 1027fce20723454b26980f38c5edb26bcec19bffa5b6443c75459b577c51d460
		Secure: false
	Object:
		Variable: $r3
		Type: java.security.PublicKey
		Statement: $r3 = virtualinvoke $r2.<java.security.KeyFactory: java.security.PublicKey generatePublic(java.security.spec.KeySpec)>($r0)
		Method: <com.huawei.hms.hatool.e: java.security.PublicKey a(byte[])>
		SHA-256: b4155e4715b49a390e289f8fe0fd71dda2da71a37251b8129df3de752ca2387a
		Secure: false
	Object:
		Variable: $r2
		Type: java.security.MessageDigest
		Statement: $r2 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer48084)
		Method: <com.tencent.wxop.stat.common.l: java.lang.String a(java.lang.String)>
		SHA-256: 9ca73159fa9778e482c31d58b3b9f3145335fb67964d9fb79f53eb66cd3a956
		Secure: false
	Object:
		Variable: $r13
		Type: byte[]
		Statement: $r13 = virtualinvoke $r10.<java.security.MessageDigest: byte[] digest(byte[])>($r13)
		Method: <org.apache.http.impl.auth.DigestScheme: java.lang.String createDigest(org.apache.http.auth.Credentials)>
		SHA-256: 12673c138b1f7bed0c70268aebaa47f0acb7ab52f165dd68e93940af0eb1553f
		Secure: false
	Object:
		Variable: $r4
		Type: javax.crypto.Cipher
		Statement: $r4 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer2437)
		Method: <com.huawei.secure.android.common.encrypt.aes.AesCbc: byte[] encrypt(byte[],byte[],byte[])>
		SHA-256: 1157a50870f27fbabcda215f915d99faa0a7c90d1cea63f3f0e09ea111048a0c
		Secure: false
	Object:
		Variable: $z0
		Type: boolean
		Statement: $z0 = virtualinvoke $r4.<java.security.Signature: boolean verify(byte[])>($r3)
		Method: <com.vivo.push.c.e: boolean a(byte[],java.security.PublicKey,byte[])>
		SHA-256: c4f815df1dce85a7a298cafc298a4906b95ca28ee8e69ce6ccc6efdbbf993064
		Secure: false
	Object:
		Variable: $r2
		Type: java.security.MessageDigest
		Statement: $r2 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer2055)
		Method: <com.xiaomi.push.bn: java.lang.String b(java.lang.String)>
		SHA-256: 3d2c29f557ef905d79511e0ed5df80b347d04ae664d2e7bc68046d0151fb2fdf
		Secure: false
	Object:
		Variable: $r3
		Type: java.security.Key
		Statement: $r3 = virtualinvoke $r2.<java.security.KeyStore: java.security.Key getKey(java.lang.String,char[])>($r0, varReplacer16009)
		Method: <com.huawei.secure.android.common.encrypt.keystore.aes.AesGcmKS: javax.crypto.SecretKey a(java.lang.String)>
		SHA-256: a25c28dbce1fcd44da1ade91f3d234a636853dfdf10fbf381914915ea968554b
		Secure: false
	Object:
		Variable: varReplacer46459
		Type: java.lang.String
		Statement: $r3 = staticinvoke <java.security.KeyFactory: java.security.KeyFactory getInstance(java.lang.String)>(varReplacer46459)
		Method: <com.xiaomi.push.service.bs: void <clinit>()>
		SHA-256: 9c310a2a9d4448548ae79f133cb633ccdc9a4aa690fb5be81652ed825dacbbc5
		Secure: false
	Object:
		Variable: $r0
		Type: byte[]
		Statement: $r0 = virtualinvoke $r5.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r0)
		Method: <com.vivo.push.util.f: byte[] a(java.lang.String,java.lang.String,byte[])>
		SHA-256: bf64d4c15f1e57ee868899b5e291a01af1aa62d3cc7ddff98c902a93828700d5
		Secure: false
	Object:
		Variable: $r0
		Type: byte[]
		Statement: $r3 = virtualinvoke $r1.<javax.crypto.Cipher: byte[] doFinal(byte[],int,int)>($r0, $i2, $i3)
		Method: <com.xiaomi.push.service.bs: byte[] a(javax.crypto.Cipher,int,byte[],int)>
		SHA-256: e2dc44a7aed98bc87950d9ad2a3a5d17bfe88de501c7a13852ca8f46b7d8a8b9
		Secure: false
	Object:
		Variable: $r1
		Type: javax.crypto.spec.IvParameterSpec
		Statement: specialinvoke $r1.<javax.crypto.spec.IvParameterSpec: void <init>(byte[])>($r3)
		Method: <com.amap.api.mapcore.util.hj: byte[] d(byte[],byte[],byte[])>
		SHA-256: a791240c8ad1b388dea782122f27d0b4e6c0ed75512208ef267ae4b670c8111b
		Secure: false
	Object:
		Variable: $r1
		Type: byte[]
		Statement: $r1 = virtualinvoke $r2.<java.security.MessageDigest: byte[] digest()>()
		Method: <com.sina.weibo.sdk.b.d: java.lang.String a(byte[])>
		SHA-256: 337a3dc21569c7d63fdc72ab92dffdc9b60f07971443fc228feba3ac928977f9
		Secure: false
	Object:
		Variable: $r4
		Type: javax.net.ssl.TrustManager[]
		Statement: $r4 = virtualinvoke $r3.<javax.net.ssl.TrustManagerFactory: javax.net.ssl.TrustManager[] getTrustManagers()>()
		Method: <com.qcymall.earphonesetup.network.retrofit.HttpSSLUtils$MyTrustManager: void <init>(javax.net.ssl.X509TrustManager)>
		SHA-256: ee898f728f0039a8820246ae5966c86dd5625720978a37753888c3b949bee522
		Secure: false
	Object:
		Variable: $r4
		Type: byte[]
		Statement: $r4 = interfaceinvoke $r3.<javax.crypto.SecretKey: byte[] getEncoded()>()
		Method: <com.amap.api.mapcore.util.i: java.lang.String a()>
		SHA-256: 80fe353bb1bf3b8d1998fc8259a6014c4f6705918b839f52b0706503acaf691e
		Secure: true
	Object:
		Variable: $r1
		Type: javax.net.ssl.SSLContext
		Statement: $r1 = staticinvoke <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String,java.security.Provider)>(varReplacer104414, $r2)
		Method: <okhttp3.internal.platform.BouncyCastlePlatform: javax.net.ssl.SSLContext newSSLContext()>
		SHA-256: 26cc40f26cc398002cc0e0582b11b55b2c65fabf70c9214677bc3f430036b2f4
		Secure: false
	Object:
		Variable: $r5
		Type: javax.net.ssl.TrustManager[]
		Statement: $r5 = virtualinvoke $r4.<javax.net.ssl.TrustManagerFactory: javax.net.ssl.TrustManager[] getTrustManagers()>()
		Method: <com.mob.tools.network.NetworkHelper$SimpleX509TrustManager: void <init>(java.security.KeyStore,java.lang.String)>
		SHA-256: f4c98fa7fffa3f004ba5d87e2b867e6fed436d3e60bfa20eb8fe7a2529620cad
		Secure: false
	Object:
		Variable: $r0
		Type: byte[]
		Statement: $r0 = virtualinvoke $r1.<java.security.MessageDigest: byte[] digest()>()
		Method: <com.tencent.bugly.proguard.ab: java.lang.String a(byte[])>
		SHA-256: 61d5fa4ec1bd9903d1c12fefd8e39b1a76e23140d7bbce1cc0ad14f3a6b01ca2
		Secure: false
	Object:
		Variable: $r0
		Type: byte[]
		Statement: $r0 = virtualinvoke $r1.<java.security.MessageDigest: byte[] digest()>()
		Method: <com.mob.tools.utils.Data: byte[] SHA1(byte[])>
		SHA-256: b5fa6c4f2114caae6c4efe98d2a1c33cc8f63742dbe96b1259df171ef523b449
		Secure: false
	Object:
		Variable: $r6
		Type: java.security.MessageDigest
		Statement: $r6 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer141673)
		Method: <com.qualcomm.qti.gaiaclient.core.utils.BytesUtils: byte[] getMD5FromUri(android.content.Context,android.net.Uri)>
		SHA-256: e788bcd1d9165c752b0256b1580c97ff4e5bda79a73292b6297ca1228285614c
		Secure: false
	Object:
		Variable: $r7
		Type: java.security.MessageDigest
		Statement: $r7 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer93699)
		Method: <com.vivo.push.util.t: java.lang.String g(android.content.Context,java.lang.String)>
		SHA-256: 4fd0ff56feed627f9233989c290fe5bc86823631cd1949d38487f42b623979a4
		Secure: false
	Object:
		Variable: $r2
		Type: java.security.MessageDigest
		Statement: $r2 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>($r1)
		Method: <com.amap.api.mapcore.util.hl: byte[] a(byte[],java.lang.String)>
		SHA-256: 380393f0143c4292400a22ab0bf46cb06e586c7389cd62a23b9b8a13554e42ed
		Secure: false
	Object:
		Variable: $r13
		Type: byte[]
		Statement: $r13 = virtualinvoke $r10.<java.security.MessageDigest: byte[] digest(byte[])>($r13)
		Method: <org.apache.http.impl.auth.DigestScheme: java.lang.String createDigest(org.apache.http.auth.Credentials)>
		SHA-256: 12673c138b1f7bed0c70268aebaa47f0acb7ab52f165dd68e93940af0eb1553f
		Secure: false
	Object:
		Variable: $r8
		Type: javax.crypto.spec.IvParameterSpec
		Statement: specialinvoke $r8.<javax.crypto.spec.IvParameterSpec: void <init>(byte[])>($r6)
		Method: <com.google.android.exoplayer2.upstream.cache.CachedContentIndex: void writeFile()>
		SHA-256: e92cc326d599cffd30e7683ecdf45badf5aa69482ff08414261765cd7d25e976
		Secure: false
	Object:
		Variable: $r2
		Type: java.security.MessageDigest
		Statement: $r2 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer87871)
		Method: <com.xiaomi.push.bm: byte[] a(java.lang.String)>
		SHA-256: 1d41689212ddf0f9de908e6e57dfedda525130bdff8ced3166ef66f7ae69bd04
		Secure: false
	Object:
		Variable: $r13
		Type: byte[]
		Statement: $r13 = virtualinvoke $r10.<java.security.MessageDigest: byte[] digest(byte[])>($r13)
		Method: <org.apache.http.impl.auth.DigestScheme: java.lang.String createDigest(org.apache.http.auth.Credentials)>
		SHA-256: 12673c138b1f7bed0c70268aebaa47f0acb7ab52f165dd68e93940af0eb1553f
		Secure: false
	Object:
		Variable: $i1
		Type: int
		Statement: specialinvoke $r9.<javax.crypto.spec.PBEKeySpec: void <init>(char[],byte[],int,int)>($r1, $r2, $i0, $i1)
		Method: <com.huawei.secure.android.common.encrypt.hash.PBKDF2: byte[] a(char[],byte[],int,int,boolean)>
		SHA-256: 48b1c9adbf5b63bce21b8c9b81fe54943f955c336ac5d131ca7d625a7db43a4d
		Secure: false
	Object:
		Variable: $r3
		Type: javax.crypto.SecretKey
		Statement: $r3 = virtualinvoke $r2.<javax.crypto.KeyGenerator: javax.crypto.SecretKey generateKey()>()
		Method: <com.amap.api.mapcore.util.i: java.lang.String a()>
		SHA-256: 7accf157ab3fdb39f71559d9641a239c29602893a1de14bb770354ec9511f92a
		Secure: true
	Object:
		Variable: $r7
		Type: javax.crypto.spec.IvParameterSpec
		Statement: specialinvoke $r7.<javax.crypto.spec.IvParameterSpec: void <init>(byte[])>($r3)
		Method: <com.amap.api.mapcore.util.hj: byte[] c(byte[],byte[],byte[])>
		SHA-256: 24bab011529b80fb72c1a39aef50ad6a214d76f8fbd925a625bba9df726d24df
		Secure: false
	Object:
		Variable: $r1
		Type: javax.crypto.spec.SecretKeySpec
		Statement: specialinvoke $r1.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r3, $r2)
		Method: <net.lingala.zip4j.crypto.PBKDF2.MacBasedPRF: void init(byte[])>
		SHA-256: 2c8b6542a35e929698f4560c93b5cf68fb53e0b3268e298dc399955f0bfa617b
		Secure: false
	Object:
		Variable: $r3
		Type: java.security.SecureRandom
		Statement: $r3 = staticinvoke <java.security.SecureRandom: java.security.SecureRandom getInstanceStrong()>()
		Method: <com.huawei.secure.android.common.encrypt.utils.EncryptUtil: java.security.SecureRandom a()>
		SHA-256: d69f66cc94256d382b0472f39a779c5333059f9ea881d50c59d81f41437d4e75
		Secure: true
	Object:
		Variable: $r4
		Type: javax.crypto.Cipher
		Statement: $r4 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer99651)
		Method: <com.huawei.agconnect.config.impl.i: byte[] a(javax.crypto.SecretKey,byte[])>
		SHA-256: a92a69363732aaf96537c91b040890bf18daa70d85f1f199b5bfcf72556b8c3e
		Secure: false
	Object:
		Variable: $r2
		Type: byte[]
		Statement: $r2 = virtualinvoke $r4.<javax.crypto.Cipher: byte[] doFinal(byte[],int,int)>($r2, $i0, $i1)
		Method: <com.huawei.agconnect.config.impl.i: byte[] a(javax.crypto.SecretKey,byte[])>
		SHA-256: 89358b2100141cb06f3fefe3c5d178b8ee7d6f26fe2fc65ac48b224ccd26d8e3
		Secure: false
	Object:
		Variable: $r2
		Type: byte[]
		Statement: $r2 = virtualinvoke $r1.<java.security.MessageDigest: byte[] digest()>()
		Method: <com.amap.api.mapcore.util.hl: byte[] f(java.lang.String)>
		SHA-256: 34397505c3952f5e75091dd111a0905b9d78758e7fe77afd5c8ccc04942b5775
		Secure: false
	Object:
		Variable: $r0
		Type: javax.crypto.spec.IvParameterSpec
		Statement: specialinvoke $r0.<javax.crypto.spec.IvParameterSpec: void <init>(byte[])>($r3)
		Method: <com.amap.api.mapcore.util.i: byte[] a(byte[])>
		SHA-256: 100871c9cea3a42be8f18e83734dd78477d73f91982e79989d1d5c440f58fa19
		Secure: false
	Object:
		Variable: $r0
		Type: java.security.MessageDigest
		Statement: $r0 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>($r2)
		Method: <com.google.android.gms.common.util.AndroidUtilsLight: java.security.MessageDigest zza(java.lang.String)>
		SHA-256: c613dcbe025721f48d3fcab4e003017d7cb704971fc9d0296bae42be0b7eb30a
		Secure: false
	Object:
		Variable: $r1
		Type: javax.crypto.spec.SecretKeySpec
		Statement: specialinvoke $r1.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r6, varReplacer49961)
		Method: <com.vivo.push.util.a: java.lang.String a(java.lang.String)>
		SHA-256: c17bf80fe7afafc2be89f775879f599a35cafd2de436e5b8805a650b3904b935
		Secure: false
	Object:
		Variable: $r0
		Type: java.security.spec.X509EncodedKeySpec
		Statement: specialinvoke $r0.<java.security.spec.X509EncodedKeySpec: void <init>(byte[])>($r5)
		Method: <com.amap.api.mapcore.util.h: java.security.PublicKey a(java.lang.String)>
		SHA-256: 92ebbb0b541b8fddba06ce6cc68552bfad476d980fac46c4bfe3dc346812cbc9
		Secure: false
	Object:
		Variable: $r1
		Type: javax.crypto.spec.SecretKeySpec
		Statement: specialinvoke $r1.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r3, varReplacer6372)
		Method: <com.amap.api.mapcore.util.i: byte[] a(byte[])>
		SHA-256: d1826a471399074f1bee5e84006bf56b48ab77cd3f0cc2468ec04cc5142def66
		Secure: false
	Object:
		Variable: $r3
		Type: java.security.MessageDigest
		Statement: $r3 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>($r2)
		Method: <com.huawei.secure.android.common.encrypt.hash.SHA: byte[] shaEncryptByte(byte[],java.lang.String)>
		SHA-256: bc42a5e0d53fccd07c4d16d4047e83d5d00b100c816b4a37f30a32d38407af79
		Secure: true
	Object:
		Variable: $r6
		Type: javax.crypto.spec.PBEKeySpec
		Statement: specialinvoke $r6.<javax.crypto.spec.PBEKeySpec: void <init>(char[],byte[],int,int)>($r7, $r0, $i0, varReplacer104625)
		Method: <com.huawei.agconnect.config.impl.i: javax.crypto.SecretKey a(byte[],byte[],byte[],byte[],int)>
		SHA-256: 9b1515b54c0bb50958091e5d3c67020da8cdd179c6779bacb010d0c831f6db97
		Secure: false
	Object:
		Variable: $r3
		Type: javax.crypto.spec.SecretKeySpec
		Statement: specialinvoke $r3.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r1, varReplacer123853)
		Method: <com.amap.api.mapcore.util.kr: byte[] a(byte[])>
		SHA-256: 9c8f950dc9dfb8e0dfb381389184a0f42092bb63e756b14e2ce090d453ca0291
		Secure: false
	Object:
		Variable: $r0
		Type: byte[]
		Statement: $r1 = virtualinvoke $r2.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r0)
		Method: <com.xiaomi.push.h: byte[] b(byte[],byte[])>
		SHA-256: c29f9fc7e5bc252e12b215001a8b5dc70d64f1bfc761d089f979179cc9da7311
		Secure: false
	Object:
		Variable: $r4
		Type: javax.net.ssl.TrustManager[]
		Statement: $r4 = virtualinvoke $r3.<javax.net.ssl.TrustManagerFactory: javax.net.ssl.TrustManager[] getTrustManagers()>()
		Method: <okhttp3.internal.platform.OpenJSSEPlatform: javax.net.ssl.X509TrustManager platformTrustManager()>
		SHA-256: a729cfd5669df603070b7ba7d05b524b10a048ab1da974a5ccb1df973521b7d3
		Secure: false
	Object:
		Variable: $r7
		Type: javax.crypto.Cipher
		Statement: $r7 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer49959)
		Method: <com.vivo.push.util.a: java.lang.String a(java.lang.String)>
		SHA-256: 836605ed9c148dcb8efc41940036f97bfb66ae14604c147b5ba71604b58bfd1f
		Secure: false
	Object:
		Variable: $r1
		Type: javax.crypto.Cipher
		Statement: $r1 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer75335)
		Method: <com.google.android.exoplayer2.source.hls.Aes128DataSource: long open(com.google.android.exoplayer2.upstream.DataSpec)>
		SHA-256: 46e1646a1626a9e3cca49fbb75b1b2c6afd2cc5fd7654df0d0bcbd14695dbf34
		Secure: false
	Object:
		Variable: $r4
		Type: java.security.KeyStore
		Statement: $r4 = staticinvoke <java.security.KeyStore: java.security.KeyStore getInstance(java.lang.String)>(varReplacer104061)
		Method: <com.huawei.secure.android.common.ssl.SecureX509TrustManager: void a(java.io.InputStream,java.lang.String)>
		SHA-256: 5148d04fdc352d03b4604eb13f357392312f2c07913c995da2af6075dcb7d341
		Secure: false
	Object:
		Variable: $r3
		Type: byte[]
		Statement: $r3 = virtualinvoke $r1.<java.security.MessageDigest: byte[] digest()>()
		Method: <org.litepal.util.cipher.CipherUtil: java.lang.String md5Encrypt(java.lang.String)>
		SHA-256: bcec480eafd68b77b5d788ea4867d4f6a04309bf774898612e8f46b994404a92
		Secure: false
	Object:
		Variable: $r2
		Type: java.security.MessageDigest
		Statement: $r2 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer27742)
		Method: <com.sina.weibo.sdk.b.d: java.lang.String a(byte[])>
		SHA-256: 6d15d225e54dc314be3bedd5748eeef96b222cef3290aa09cfd9b8e7c8d3f67c
		Secure: false
	Object:
		Variable: $r4
		Type: javax.crypto.Cipher
		Statement: $r4 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer133102)
		Method: <org.litepal.util.cipher.AESCrypt: byte[] encrypt(javax.crypto.spec.SecretKeySpec,byte[],byte[])>
		SHA-256: c9d2de794500eb2f2c606875c3e57d67832f8d337439cad50d103d5b5125673f
		Secure: false
	Object:
		Variable: $r3
		Type: javax.crypto.Cipher
		Statement: $r3 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer15867)
		Method: <com.huawei.secure.android.common.encrypt.keystore.aes.AesGcmKS: byte[] encrypt(javax.crypto.SecretKey,byte[])>
		SHA-256: 5c3bad7a6d165cdb0f71eda2838971127659c9fbbfbaeffb16e636bbe4f42436
		Secure: false
	Object:
		Variable: $r1
		Type: java.security.MessageDigest
		Statement: $r1 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer83981)
		Method: <com.xiaomi.push.bl: java.lang.String a(java.lang.String)>
		SHA-256: 213fa627d2e6c7360d643f527b80d4559d4f9cdbb60ec0a97f0ac362d145925f
		Secure: false
	Object:
		Variable: $r8
		Type: javax.crypto.SecretKey
		Statement: $r8 = virtualinvoke $r5.<javax.crypto.SecretKeyFactory: javax.crypto.SecretKey generateSecret(java.security.spec.KeySpec)>($r6)
		Method: <com.huawei.agconnect.config.impl.i: javax.crypto.SecretKey a(byte[],byte[],byte[],byte[],int)>
		SHA-256: 48bbe4da29ff464fcaf3c0898238a3f0d47d3ab881776007d023df1905e89445
		Secure: false
	Object:
		Variable: $r4
		Type: javax.crypto.spec.SecretKeySpec
		Statement: specialinvoke $r4.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r2, varReplacer67235)
		Method: <com.amap.api.mapcore.util.hj: byte[] d(byte[],byte[],byte[])>
		SHA-256: 45ba2419da0206b421ee074021b55b0967e329c440ee5445ba5603df02e062f5
		Secure: false
	Object:
		Variable: $r8
		Type: javax.crypto.Cipher
		Statement: $r8 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer163511)
		Method: <com.huawei.hms.hatool.e: byte[] a(byte[],java.security.PublicKey)>
		SHA-256: 7f872fd9a03c539c4fc47d7d8fce8ede704396da7fc4c826096582bc4723b44d
		Secure: false
	Object:
		Variable: $r3
		Type: byte[]
		Statement: $r3 = virtualinvoke $r6.<java.security.MessageDigest: byte[] digest()>()
		Method: <com.huawei.hms.utils.ReadApkFileUtil: boolean verifyApkHash(java.lang.String)>
		SHA-256: d10469ca5fdf0f40f7ed1106c94386b90f15420516c199e0c53041af7448e715
		Secure: true
	Object:
		Variable: $r1
		Type: javax.net.ssl.SSLContext
		Statement: $r1 = staticinvoke <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String,java.security.Provider)>(varReplacer104411, $r2)
		Method: <okhttp3.internal.platform.OpenJSSEPlatform: javax.net.ssl.SSLContext newSSLContext()>
		SHA-256: f0adba4d455b941069e04f1c6f875a79af8026253d38eb374e27440be8b7fefa
		Secure: false
	Object:
		Variable: varReplacer67251
		Type: java.lang.String
		Statement: specialinvoke $r8.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r2, varReplacer67251)
		Method: <com.amap.api.mapcore.util.hj: byte[] c(byte[],byte[],byte[])>
		SHA-256: 143952fe0ff495764a6c4fcac3a121b97e14bf46f2bbaf5b6aa816d5afc1c2f6
		Secure: false
	Object:
		Variable: $r9
		Type: javax.crypto.spec.PBEKeySpec
		Statement: specialinvoke $r9.<javax.crypto.spec.PBEKeySpec: void <init>(char[],byte[],int,int)>($r1, $r2, $i0, $i1)
		Method: <com.huawei.secure.android.common.encrypt.hash.PBKDF2: byte[] a(char[],byte[],int,int,boolean)>
		SHA-256: f584823212a2f4cc22b4d2fb1fbbed7e07150ad984c4171d663daeedce8b38db
		Secure: false
	Object:
		Variable: varReplacer67235
		Type: java.lang.String
		Statement: specialinvoke $r4.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r2, varReplacer67235)
		Method: <com.amap.api.mapcore.util.hj: byte[] d(byte[],byte[],byte[])>
		SHA-256: c93c42c4c3abbeebbda726f2ff70a1caec4b54ebded3f7348b3ba812c7b8f96b
		Secure: false
	Object:
		Variable: $r1
		Type: byte[]
		Statement: $r1 = virtualinvoke $r3.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r1)
		Method: <com.amap.api.mapcore.util.hj: byte[] a(byte[],java.security.Key)>
		SHA-256: 33bb0bef0aa72add954ed3759b2de0b8e145dcfeca90a3ec89dbeaed5d88eff3
		Secure: false
	Object:
		Variable: $r3
		Type: byte[]
		Statement: $r3 = virtualinvoke $r4.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r0)
		Method: <org.litepal.util.cipher.AESCrypt: byte[] decrypt(javax.crypto.spec.SecretKeySpec,byte[],byte[])>
		SHA-256: 94b14c9b6f18f9f25a1c0782554b4c8188a8d2fb149db654b6e7b84b7e06ac48
		Secure: false
	Object:
		Variable: $r0
		Type: java.security.spec.X509EncodedKeySpec
		Statement: specialinvoke $r0.<java.security.spec.X509EncodedKeySpec: void <init>(byte[])>($r2)
		Method: <com.amap.api.mapcore.util.hp: java.security.PublicKey d()>
		SHA-256: 6a319e7f6b72ea3008bc1ccec6d51e3daab0ea6fa2a03e5b7c14cb5d44f79a96
		Secure: false
	Object:
		Variable: $r1
		Type: java.security.MessageDigest
		Statement: $r1 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer48037)
		Method: <com.mob.tools.utils.Data: byte[] SHA1(byte[])>
		SHA-256: 9f5e34bccf4ab3fbfa99504db995bcf35e0ff8513326b06ca93a26de97a61478
		Secure: false
	Object:
		Variable: $r2
		Type: java.security.KeyStore
		Statement: $r2 = staticinvoke <java.security.KeyStore: java.security.KeyStore getInstance(java.lang.String)>(varReplacer98150)
		Method: <com.qcymall.earphonesetup.network.retrofit.HttpSSLUtils: javax.net.ssl.KeyManager[] prepareKeyManager(java.io.InputStream,java.lang.String)>
		SHA-256: 3e359c01465754d5f3d4684b1bbb64034068dc1f4b66d82994b8a12a8bb08edc
		Secure: false
	Object:
		Variable: varReplacer15670
		Type: java.lang.String
		Statement: specialinvoke $r0.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r2, varReplacer15670)
		Method: <com.xiaomi.push.h: javax.crypto.Cipher a(byte[],int)>
		SHA-256: 9f9de07ad796e3e5ec811dd62c20fde38134c44f25f43630d5024685aef4b552
		Secure: false
	Object:
		Variable: $r11
		Type: javax.crypto.CipherOutputStream
		Statement: specialinvoke $r11.<javax.crypto.CipherOutputStream: void <init>(java.io.OutputStream,javax.crypto.Cipher)>($r4, $r9)
		Method: <com.google.android.exoplayer2.upstream.cache.CachedContentIndex: void writeFile()>
		SHA-256: dadc3abd80ab175e2a8cb465d21ff9cca1f3896811eda25fff2b253d3368c9f5
		Secure: false
	Object:
		Variable: $r2
		Type: javax.net.ssl.TrustManagerFactory
		Statement: $r2 = staticinvoke <javax.net.ssl.TrustManagerFactory: javax.net.ssl.TrustManagerFactory getInstance(java.lang.String)>($r1)
		Method: <okhttp3.internal.platform.Platform: javax.net.ssl.X509TrustManager platformTrustManager()>
		SHA-256: 5fb6984969c8c0f60ee84399ef18a49aa63648c889757c4080685ad119ecd903
		Secure: false
	Object:
		Variable: $r14
		Type: javax.crypto.spec.SecretKeySpec
		Statement: specialinvoke $r14.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r1, varReplacer2445)
		Method: <com.huawei.secure.android.common.encrypt.aes.AesCbc: byte[] encrypt(byte[],byte[],byte[])>
		SHA-256: bd4aa523182749167ad19ec12448ec6990e76de64190ca3347eca827ec6a89d2
		Secure: false
	Object:
		Variable: $r0
		Type: byte[]
		Statement: $r3 = virtualinvoke $r1.<javax.crypto.Cipher: byte[] doFinal(byte[],int,int)>($r0, $i2, $i1)
		Method: <com.xiaomi.push.service.bs: byte[] a(javax.crypto.Cipher,int,byte[],int)>
		SHA-256: 95f0481a99dbc61075a78350cfb406e08c9d297bee4263b5a0e09635444bd28c
		Secure: false
	Object:
		Variable: varReplacer104088
		Type: java.lang.String
		Statement: specialinvoke $r1.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r4, varReplacer104088)
		Method: <com.amap.api.mapcore.util.i: byte[] b(byte[])>
		SHA-256: 2fc428397ebe9a5baae12b089daea010848ee7cc8e49322bc35b45fbf2058715
		Secure: false
	Object:
		Variable: $r7
		Type: javax.crypto.spec.IvParameterSpec
		Statement: specialinvoke $r7.<javax.crypto.spec.IvParameterSpec: void <init>(byte[])>($r2)
		Method: <com.google.android.exoplayer2.upstream.crypto.AesFlushingCipher: void <init>(int,byte[],long,long)>
		SHA-256: 1f659adc03f7387c35917cac546d9dbd9967a59f1249808c1d74cc9d15840120
		Secure: false
	Object:
		Variable: $r0
		Type: byte[]
		Statement: $i0 = virtualinvoke $r6.<javax.crypto.Cipher: int update(byte[],int,int,byte[],int)>($r1, varReplacer3281, $i0, $r0, varReplacer3281)
		Method: <com.mob.tools.utils.Data: byte[] AES128Decode(byte[],byte[])>
		SHA-256: 48ea47864ffdda631f35a53e68d5d59c42d79388cc995d29b37e9300ba23c39
		Secure: false
	Object:
		Variable: $r3
		Type: javax.crypto.spec.IvParameterSpec
		Statement: specialinvoke $r3.<javax.crypto.spec.IvParameterSpec: void <init>(byte[])>($r2)
		Method: <com.xiaomi.push.h: javax.crypto.Cipher a(byte[],int)>
		SHA-256: d6fa1d507bf468e29a5564206b0fa60338742ddc3063edc5b24cd65d1ec7c836
		Secure: false
	Object:
		Variable: $r4
		Type: javax.crypto.SecretKey
		Statement: $r4 = virtualinvoke $r3.<javax.crypto.SecretKeyFactory: javax.crypto.SecretKey generateSecret(java.security.spec.KeySpec)>($r0)
		Method: <com.heytap.mcssdk.f.b: java.security.Key a(java.lang.String)>
		SHA-256: 8c1bbfcde5235acc68e7dcf17fa931a8911275e66efa94a4dc133f727ef9f628
		Secure: false
	Object:
		Variable: $r5
		Type: javax.crypto.Cipher
		Statement: $r5 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer150441)
		Method: <com.amap.api.mapcore.util.eo: java.lang.String a(byte[],byte[],byte[])>
		SHA-256: 1b16e5cd5da1981fba96b16f2d0b87f4599f34f48973ca3ba459568c96815aba
		Secure: false
	Object:
		Variable: $r1
		Type: java.security.MessageDigest
		Statement: $r1 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer7276)
		Method: <com.amap.api.mapcore.util.hl: byte[] f(java.lang.String)>
		SHA-256: a338d1b66ad940e5287fe0a0f42394b81581f68c1bc6ba2b6b09fd6b5fbd5c5a
		Secure: false
	Object:
		Variable: $r0
		Type: byte[]
		Statement: virtualinvoke $r6.<javax.crypto.Cipher: int doFinal(byte[],int)>($r0, $i0)
		Method: <com.mob.tools.utils.Data: byte[] AES128Decode(byte[],byte[])>
		SHA-256: 7004d6b0f3702a7f74049b44331bd0940aaaf2f143e7875776860e7a30709c27
		Secure: false
	Object:
		Variable: $r4
		Type: java.security.SecureRandom
		Statement: $r4 = staticinvoke <java.security.SecureRandom: java.security.SecureRandom getInstanceStrong()>()
		Method: <com.huawei.secure.android.common.encrypt.utils.EncryptUtil: byte[] generateSecureRandom(int)>
		SHA-256: 43875fc7f7b3d72875b20ff07c5b9f261def0478aff38f867e873abd615fe945
		Secure: true
	Object:
		Variable: $r0
		Type: byte[]
		Statement: $r0 = virtualinvoke $r1.<java.security.MessageDigest: byte[] digest(byte[])>($r0)
		Method: <com.huawei.agconnect.config.impl.j: byte[] a(byte[])>
		SHA-256: 78b5a64711772b2838db6adeddb9b24b68b5b8944d0ed203fea6a219b8d8dff9
		Secure: true
	Object:
		Variable: $r3
		Type: java.security.Signature
		Statement: $r3 = staticinvoke <java.security.Signature: java.security.Signature getInstance(java.lang.String)>(varReplacer83784)
		Method: <com.vivo.push.util.u: boolean a(byte[],java.security.PublicKey,byte[])>
		SHA-256: e30f09dec76a9726ad46a459bae314c4b2efed0ce560dfeac57d77794cc1c8b2
		Secure: false
	Object:
		Variable: $r2
		Type: java.security.spec.X509EncodedKeySpec
		Statement: specialinvoke $r2.<java.security.spec.X509EncodedKeySpec: void <init>(byte[])>($r3)
		Method: <com.huawei.hms.utils.ReadApkFileUtil: boolean a(byte[],byte[],byte[],java.lang.String)>
		SHA-256: 171ce03493b591d737ab25a1d8b348a7e62b876b6337e10fe029426c98afa1d7
		Secure: false
	Object:
		Variable: $r3
		Type: javax.crypto.Cipher
		Statement: $r3 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer13243)
		Method: <com.amap.api.mapcore.util.h: byte[] a(byte[],java.security.PublicKey)>
		SHA-256: 1f312c04f0d381e7d72eca093ac2f0a5c88f9e1253c96ca50ba4b5bfd15a292c
		Secure: false
	Object:
		Variable: $r0
		Type: byte[]
		Statement: $i0 = virtualinvoke $r5.<javax.crypto.Cipher: int update(byte[],int,int,byte[],int)>($r1, varReplacer3366, $i0, $r0, varReplacer3366)
		Method: <com.mob.tools.utils.Data: byte[] AES128Encode(byte[],byte[])>
		SHA-256: 77e228a19303b81abc02230d15473e626191d70c7071daef1d9cdb0465296334
		Secure: false
	Object:
		Variable: $r26
		Type: byte[]
		Statement: $r26 = virtualinvoke $r28.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r26)
		Method: <com.amap.api.mapcore.util.he: com.amap.api.mapcore.util.he$a a(android.content.Context,com.amap.api.mapcore.util.ho,java.lang.String,java.util.Map,boolean)>
		SHA-256: b754ac211a40ab58b3c4ab9e128eeb7f6326dd93718e53e19f1f2e040f2d6ae1
		Secure: false
	Object:
		Variable: $r3
		Type: byte[]
		Statement: $r3 = interfaceinvoke $r2.<javax.crypto.SecretKey: byte[] getEncoded()>()
		Method: <com.amap.api.mapcore.util.hj: byte[] a(byte[])>
		SHA-256: 35e28a334d6ea7880fadb91bc4f32dc6dbc7f7d715f1c8757cdeb7bc69652474
		Secure: true
	Object:
		Variable: varReplacer3313
		Type: java.lang.String
		Statement: specialinvoke $r4.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r0, varReplacer3313)
		Method: <com.mob.tools.utils.Data: byte[] AES128Encode(java.lang.String,java.lang.String)>
		SHA-256: 3320d400919aeeed373b44d704894f74bfaef91d24c3a3f635e29d9d99cead88
		Secure: false
	Object:
		Variable: $r3
		Type: javax.crypto.SecretKeyFactory
		Statement: $r3 = staticinvoke <javax.crypto.SecretKeyFactory: javax.crypto.SecretKeyFactory getInstance(java.lang.String)>(varReplacer15782)
		Method: <com.heytap.mcssdk.f.b: java.security.Key a(java.lang.String)>
		SHA-256: e997c236e33e795541e574708f00d696907a07b1e30edcb72a16b477f545ed04
		Secure: false
	Object:
		Variable: $r2
		Type: java.security.MessageDigest
		Statement: $r2 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer133868)
		Method: <com.amap.api.mapcore.util.fv: java.lang.String c(java.lang.String)>
		SHA-256: 145bb29596a87d51a33ad10f6590b03e58eec0aa0ed8907d6fccff6e9f6f286
		Secure: false
	Object:
		Variable: $r1
		Type: javax.crypto.KeyGenerator
		Statement: $r1 = staticinvoke <javax.crypto.KeyGenerator: javax.crypto.KeyGenerator getInstance(java.lang.String)>(varReplacer84982)
		Method: <com.amap.api.mapcore.util.hj: byte[] a(byte[])>
		SHA-256: 8c5ad0ab81e2c3387ce2a9ccb9c31b887ff2ddd459b330e2400d5e37505a05dc
		Secure: false
	Object:
		Variable: $r6
		Type: java.security.PublicKey
		Statement: $r6 = virtualinvoke $r4.<java.security.KeyFactory: java.security.PublicKey generatePublic(java.security.spec.KeySpec)>($r0)
		Method: <com.amap.api.mapcore.util.hp: java.security.PublicKey d()>
		SHA-256: 37b5df07a0f84b4521f6a916c3b12a52bb4095292894749fed149c803c2090dd
		Secure: false
	Object:
		Variable: $r4
		Type: javax.net.ssl.SSLContext
		Statement: $r4 = staticinvoke <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String)>(varReplacer103437)
		Method: <com.amap.api.mapcore.util.iv: void <init>(int,int,java.net.Proxy,boolean,com.amap.api.mapcore.util.is$a)>
		SHA-256: cdbd777fda8727894bc5e00b1710e8697bed07d9e69a8320e240b5d6c248b119
		Secure: false
	Object:
		Variable: $r2
		Type: javax.crypto.spec.IvParameterSpec
		Statement: specialinvoke $r2.<javax.crypto.spec.IvParameterSpec: void <init>(byte[])>($r1)
		Method: <com.amap.api.mapcore.util.kr: void <clinit>()>
		SHA-256: 7be30ea56bd77c9dabb1b2645d8abc46537a19c602e4d8289a496b306cdd1ff6
		Secure: false
	Object:
		Variable: $r0
		Type: byte[]
		Statement: $r2 = virtualinvoke $r5.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r0)
		Method: <com.amap.api.mapcore.util.hj: byte[] c(byte[],byte[],byte[])>
		SHA-256: 2adf4d94f789e8023fd55717dc26dabae5606217270b5b4220270285a3470abc
		Secure: false
	Object:
		Variable: $r4
		Type: javax.crypto.Cipher
		Statement: $r4 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer123857)
		Method: <com.amap.api.mapcore.util.kr: byte[] a(byte[])>
		SHA-256: 89505778698bba5bf992577c445b548eba747c810abcaf640ecaaeb648297c59
		Secure: false
	Object:
		Variable: $r15
		Type: javax.crypto.spec.IvParameterSpec
		Statement: specialinvoke $r15.<javax.crypto.spec.IvParameterSpec: void <init>(byte[])>($r2)
		Method: <com.huawei.secure.android.common.encrypt.aes.AesCbc: byte[] decrypt(byte[],byte[],byte[])>
		SHA-256: 2e7c8d8d279e1a7bca8d5728dda8cfc5676f2a40dd9b67549fe4ff3c99bdab73
		Secure: false
	Object:
		Variable: $r6
		Type: byte[]
		Statement: $r6 = virtualinvoke $r2.<java.security.MessageDigest: byte[] digest()>()
		Method: <okio.SegmentedByteString: okio.ByteString digest$okio(java.lang.String)>
		SHA-256: b189e83daa1cae39dacb5d56f8d20e560b21d5b6f8f0c6a35bc1a551d3d1c123
		Secure: false
	Object:
		Variable: $r5
		Type: javax.crypto.KeyGenerator
		Statement: $r5 = staticinvoke <javax.crypto.KeyGenerator: javax.crypto.KeyGenerator getInstance(java.lang.String,java.lang.String)>(varReplacer16001, varReplacer16002)
		Method: <com.huawei.secure.android.common.encrypt.keystore.aes.AesGcmKS: javax.crypto.SecretKey a(java.lang.String)>
		SHA-256: 3d8c336b07b9fec2a5cc2e343fb48f35896fb163675df468b9961a053598ba59
		Secure: true
	Object:
		Variable: $r2
		Type: byte[]
		Statement: virtualinvoke $r5.<java.security.SecureRandom: void nextBytes(byte[])>($r2)
		Method: <com.yc.pedometer.sdk.WriteCommandToBLE: void queryDeviceBt3State()>
		SHA-256: cf9c307936cd8a69b4f3beca2c9e10fd0e15643c317ec6953b0b590dfa69d6df
		Secure: true
	Object:
		Variable: $r5
		Type: javax.crypto.spec.IvParameterSpec
		Statement: specialinvoke $r5.<javax.crypto.spec.IvParameterSpec: void <init>(byte[])>($r1)
		Method: <com.amap.api.mapcore.util.kr: byte[] a(byte[])>
		SHA-256: b416a9fcd1a7cdc29616276a77f9a26709dddbe4a327f290e87d5cf4e4541ef4
		Secure: false
	Object:
		Variable: $r6
		Type: byte[]
		Statement: $r6 = virtualinvoke $r7.<java.security.MessageDigest: byte[] digest(byte[])>($r6)
		Method: <com.vivo.push.util.t: java.lang.String g(android.content.Context,java.lang.String)>
		SHA-256: 7cbd2aea7f29517e2fd1e5c44f1cf8adbf884f25ff01b78e181d54310016b441
		Secure: false
	Object:
		Variable: $r2
		Type: java.security.MessageDigest
		Statement: $r2 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer3380)
		Method: <com.mob.tools.utils.Data: byte[] rawMD5(java.io.InputStream)>
		SHA-256: 834d55cc8d59ec549501cfada4422d86c52622700ffc10b2397ab3120c80a009
		Secure: false
	Object:
		Variable: varReplacer150444
		Type: java.lang.String
		Statement: specialinvoke $r4.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r2, varReplacer150444)
		Method: <com.amap.api.mapcore.util.eo: java.lang.String a(byte[],byte[],byte[])>
		SHA-256: 554c5367f018a92d7c51d9b31b6869c9200e458449bb1fe035645d74ebede8fc
		Secure: false
	Object:
		Variable: $r19
		Type: java.security.SecureRandom
		Statement: specialinvoke $r19.<java.security.SecureRandom: void <init>()>()
		Method: <com.mob.tools.network.NetworkHelper: java.net.HttpURLConnection getConnection(java.lang.String,com.mob.tools.network.NetworkHelper$NetworkTimeOut)>
		SHA-256: c6bbc035d36a38c201209a1546968382cc300a6ec8b2d5ec4c1cf22d8abe5c1a
		Secure: true
	Object:
		Variable: $r4
		Type: byte[]
		Statement: $r4 = virtualinvoke $r5.<java.security.MessageDigest: byte[] digest(byte[])>($r4)
		Method: <com.huawei.hms.framework.network.grs.h.b: java.lang.String a(java.lang.String,java.lang.String)>
		SHA-256: 87241b37f7d59cb5721a8fd9eb3b24c3c4dcc77ce11cf434dbc8c99198148535
		Secure: true
	Object:
		Variable: $r4
		Type: java.security.SecureRandom
		Statement: $r4 = staticinvoke <java.security.SecureRandom: java.security.SecureRandom getInstance(java.lang.String)>(varReplacer2410)
		Method: <com.huawei.secure.android.common.encrypt.utils.EncryptUtil: java.security.SecureRandom a()>
		SHA-256: 8b194c12f180409f4404c4860936431b37519cc2a640e7982b2dd5dd1faa1992
		Secure: true
	Object:
		Variable: varReplacer49961
		Type: java.lang.String
		Statement: specialinvoke $r1.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r6, varReplacer49961)
		Method: <com.vivo.push.util.a: java.lang.String a(java.lang.String)>
		SHA-256: e29f4d7ad347ec3045b6e329e477bf1d8bd527888d91d6e4b805c605f681d7ec
		Secure: false
	Object:
		Variable: $r2
		Type: javax.net.ssl.TrustManager[]
		Statement: $r2 = virtualinvoke $r1.<javax.net.ssl.TrustManagerFactory: javax.net.ssl.TrustManager[] getTrustManagers()>()
		Method: <okhttp3.internal.platform.BouncyCastlePlatform: javax.net.ssl.X509TrustManager platformTrustManager()>
		SHA-256: 84f17b7e3930c76e2b174d27b9668ee8d3209ae5512e2c539d541e6ef4265515
		Secure: false
	Object:
		Variable: $z0
		Type: boolean
		Statement: $z0 = virtualinvoke $r5.<java.security.Signature: boolean verify(byte[])>($r1)
		Method: <com.huawei.hms.utils.ReadApkFileUtil: boolean a(byte[],byte[],byte[],java.lang.String)>
		SHA-256: 15da7614cb6c8ea249192b58528903a976838c8bbddb5812ed081c7a17d74432
		Secure: false
	Object:
		Variable: $r4
		Type: javax.net.ssl.TrustManagerFactory
		Statement: $r4 = staticinvoke <javax.net.ssl.TrustManagerFactory: javax.net.ssl.TrustManagerFactory getInstance(java.lang.String)>(varReplacer96554)
		Method: <com.mob.tools.network.NetworkHelper$SimpleX509TrustManager: void <init>(java.security.KeyStore,java.lang.String)>
		SHA-256: cf1e6bc48abace38710c776c1d058f8ae05386ce34bfea402f8a8f8aa15ce6f6
		Secure: false
	Object:
		Variable: $r5
		Type: java.security.Signature
		Statement: $r5 = staticinvoke <java.security.Signature: java.security.Signature getInstance(java.lang.String)>($r4)
		Method: <com.huawei.hms.utils.ReadApkFileUtil: boolean a(byte[],byte[],byte[],java.lang.String)>
		SHA-256: c10b61aa6ce0669983687c2a3876e5ab4e9fa84d8755aa772540712ea363191f
		Secure: false
	Object:
		Variable: $r2
		Type: javax.net.ssl.TrustManagerFactory
		Statement: $r2 = staticinvoke <javax.net.ssl.TrustManagerFactory: javax.net.ssl.TrustManagerFactory getInstance(java.lang.String)>($r1)
		Method: <okhttp3.internal.platform.ConscryptPlatform: javax.net.ssl.X509TrustManager platformTrustManager()>
		SHA-256: 316cbc86e080130334eaabd60025d96084375d0058312a103cd3255ba6f0aeb
		Secure: false
	Object:
		Variable: $r3
		Type: javax.net.ssl.TrustManager[]
		Statement: $r3 = virtualinvoke $r2.<javax.net.ssl.TrustManagerFactory: javax.net.ssl.TrustManager[] getTrustManagers()>()
		Method: <okhttp3.internal.platform.Platform: javax.net.ssl.X509TrustManager platformTrustManager()>
		SHA-256: c3dcfb07eabeaead2afa7b41e33d56187e303e14a7184c21b7bac99836f2c278
		Secure: false
	Object:
		Variable: $r10
		Type: byte[]
		Statement: $r10 = virtualinvoke $r7.<java.security.MessageDigest: byte[] digest(byte[])>($r10)
		Method: <com.xiaomi.push.az: java.lang.String b()>
		SHA-256: 60753aa91914d28ad78e831e8967f22170b0a4ffa1155d8e45af3ae29d789e6e
		Secure: false
	Object:
		Variable: $r1
		Type: java.security.MessageDigest
		Statement: $r1 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer13823)
		Method: <com.tencent.bugly.proguard.ab: java.lang.String a(byte[])>
		SHA-256: ff771967691bb317580eac0bd722fd8df1dc43a18aa848b90e3330d2ee1158e1
		Secure: false
	Object:
		Variable: $r1
		Type: java.security.MessageDigest
		Statement: $r1 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer133089)
		Method: <org.litepal.util.cipher.CipherUtil: java.lang.String md5Encrypt(java.lang.String)>
		SHA-256: 3afd92175c147a34aa5f9d219a6d2aa19f0226df784f60d1e9b2bd33a664829d
		Secure: false
	Object:
		Variable: $r6
		Type: javax.net.ssl.KeyManager[]
		Statement: $r6 = virtualinvoke $r5.<javax.net.ssl.KeyManagerFactory: javax.net.ssl.KeyManager[] getKeyManagers()>()
		Method: <com.qcymall.earphonesetup.network.retrofit.HttpSSLUtils: javax.net.ssl.KeyManager[] prepareKeyManager(java.io.InputStream,java.lang.String)>
		SHA-256: c0b8a5a7a8dbe1a11bb2b8736dfcc4c880843b37013be2da0fbc3d369c764c7c
		Secure: false
	Object:
		Variable: $r3
		Type: java.security.MessageDigest
		Statement: $r3 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer98126)
		Method: <com.tencent.mm.opensdk.utils.b: java.lang.String e(byte[])>
		SHA-256: 624fe096ce121f8503c0ea2acdd72a99ca5d3bc0b82035de652bc94b5706d39
		Secure: false
	Object:
		Variable: $r15
		Type: javax.crypto.CipherInputStream
		Statement: specialinvoke $r15.<javax.crypto.CipherInputStream: void <init>(java.io.InputStream,javax.crypto.Cipher)>($r8, $r12)
		Method: <com.google.android.exoplayer2.upstream.cache.CachedContentIndex: boolean readFile()>
		SHA-256: bf95858fa5669389fe34388a27c4eb4fcb288c679f0b110e90c5c5b8dcf04a30
		Secure: false
	Object:
		Variable: $r2
		Type: byte[]
		Statement: $r2 = virtualinvoke $r5.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r0)
		Method: <com.amap.api.mapcore.util.hj: byte[] d(byte[],byte[],byte[])>
		SHA-256: 93680c9366ec58b2a8627b69a36b7bb47b1c34afa619431cdb84ecd11439ebbd
		Secure: false
	Object:
		Variable: $r19
		Type: java.security.SecureRandom
		Statement: specialinvoke $r19.<java.security.SecureRandom: void <init>()>()
		Method: <com.tencent.bugly.proguard.s: java.net.HttpURLConnection a(java.lang.String,byte[],java.lang.String,java.util.Map)>
		SHA-256: 74a835b022cf167812905f5a4e1bd75e1d6d7871dd54ffd8e196e7a3f52144f1
		Secure: true
	Object:
		Variable: $r3
		Type: java.security.MessageDigest
		Statement: $r3 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer10156)
		Method: <com.amap.api.mapcore.util.hl: java.lang.String a(java.lang.String)>
		SHA-256: 95aed0981862b8d00b90629ddf0c98174b145743d47ae0a6c30749c5cd1cc239
		Secure: false
	Object:
		Variable: $r1
		Type: javax.crypto.spec.IvParameterSpec
		Statement: specialinvoke $r1.<javax.crypto.spec.IvParameterSpec: void <init>(byte[])>($r3)
		Method: <org.litepal.util.cipher.AESCrypt: byte[] encrypt(javax.crypto.spec.SecretKeySpec,byte[],byte[])>
		SHA-256: c628554405933368a5769dfe65ba77f9d98f849b14f39c05e102dfaaa590283b
		Secure: false
	Object:
		Variable: $r14
		Type: javax.crypto.spec.SecretKeySpec
		Statement: specialinvoke $r14.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r1, varReplacer50079)
		Method: <com.huawei.secure.android.common.encrypt.aes.AesCbc: byte[] decrypt(byte[],byte[],byte[])>
		SHA-256: c806aed104ca461be144af95e2e192c430b82674c9c7d46f5bef442eb275a483
		Secure: false
	Object:
		Variable: $r3
		Type: byte[]
		Statement: $i0 = virtualinvoke $r6.<javax.crypto.Cipher: int update(byte[],int,int,byte[],int)>($r3, varReplacer3307, $i0, $r0, varReplacer3307)
		Method: <com.mob.tools.utils.Data: byte[] AES128Encode(java.lang.String,java.lang.String)>
		SHA-256: 29556cbc48b894455fa66c21bcabdb717202d7ee556d98b40a401c967aaff63
		Secure: false
	Object:
		Variable: $r2
		Type: java.security.KeyStore
		Statement: $r2 = staticinvoke <java.security.KeyStore: java.security.KeyStore getInstance(java.lang.String)>(varReplacer15992)
		Method: <com.huawei.secure.android.common.encrypt.keystore.aes.AesGcmKS: javax.crypto.SecretKey a(java.lang.String)>
		SHA-256: 3c1d3bd9be97425d3724317de6d17521a2dcdbdf7830865332422dc1488b8581
		Secure: false
	Object:
		Variable: $r0
		Type: java.security.spec.X509EncodedKeySpec
		Statement: specialinvoke $r0.<java.security.spec.X509EncodedKeySpec: void <init>(byte[])>($r2)
		Method: <com.xiaomi.push.service.bs: void <clinit>()>
		SHA-256: 1a599b6d695b10cf27a2f56cada7406fdc4bfe25afb9fe7b4b2b394bd23882da
		Secure: false
	Object:
		Variable: $r1
		Type: byte[]
		Statement: $r1 = interfaceinvoke $r0.<java.security.Key: byte[] getEncoded()>()
		Method: <com.vivo.push.util.u: java.lang.String a(java.security.Key)>
		SHA-256: 4fc6e0c139634d623c002139a2e58f8f2b5f7f0f212fc38e0ad87a958294c4eb
		Secure: true
	Object:
		Variable: $r3
		Type: byte[]
		Statement: $r3 = virtualinvoke $r1.<javax.crypto.Cipher: byte[] doFinal(byte[],int,int)>($r0, $i2, $i1)
		Method: <com.xiaomi.push.service.bs: byte[] a(javax.crypto.Cipher,int,byte[],int)>
		SHA-256: 45a118e287f9df93a0c50b935512db9180f54321adbb17189d83c70ba07bf32a
		Secure: false
	Object:
		Variable: $r3
		Type: byte[]
		Statement: $r3 = virtualinvoke $r7.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r3)
		Method: <com.amap.api.mapcore.util.i: byte[] b(byte[])>
		SHA-256: dfe6eb63183cf215dc2e3bfd634372c4be6330d9d68d8c8b1e599a47ec8f3933
		Secure: false
	Object:
		Variable: $r7
		Type: byte[]
		Statement: virtualinvoke $r3.<java.security.SecureRandom: void nextBytes(byte[])>($r7)
		Method: <com.huawei.secure.android.common.encrypt.utils.EncryptUtil: java.security.SecureRandom a()>
		SHA-256: 2f2b2bd3a635b5d637b1f92cda3c0b97f12191a10d4042c2ee2e3760f47ca73c
		Secure: true
	Object:
		Variable: $r1
		Type: byte[]
		Statement: $r1 = virtualinvoke $r2.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r0)
		Method: <com.xiaomi.push.h: byte[] a(byte[],byte[])>
		SHA-256: 6f6a8b554fbeed9b1759d96e3ea7f4f7177fd7b310e2a10437c6b44012e6b57
		Secure: false
	Object:
		Variable: $z0
		Type: boolean
		Statement: $z0 = virtualinvoke $r3.<java.security.Signature: boolean verify(byte[])>($r1)
		Method: <com.vivo.push.util.u: boolean a(byte[],java.security.PublicKey,byte[])>
		SHA-256: 8481fb1bf46e4aaa77c7acb1e704bcedabc7db30a53ed507dd8b87d5d0480a60
		Secure: false
	Object:
		Variable: $r3
		Type: byte[]
		Statement: $z0 = virtualinvoke $r4.<java.security.Signature: boolean verify(byte[])>($r3)
		Method: <com.vivo.push.c.e: boolean a(byte[],java.security.PublicKey,byte[])>
		SHA-256: aba90cca0075cc4833ee6a7a4a13e58cef4413dd876c8810f0d84de756af22c
		Secure: false
	Object:
		Variable: $r14
		Type: javax.net.ssl.SSLContext
		Statement: $r14 = staticinvoke <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String)>(varReplacer61011)
		Method: <com.mob.tools.network.NetworkHelper: java.net.HttpURLConnection getConnection(java.lang.String,com.mob.tools.network.NetworkHelper$NetworkTimeOut)>
		SHA-256: edbbd1d687e424866b703c9502847cca844d383f90ba33ef9bd0f298b32f16ad
		Secure: false
	Object:
		Variable: $r1
		Type: java.security.MessageDigest
		Statement: $r1 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer99660)
		Method: <com.huawei.agconnect.config.impl.j: byte[] a(byte[])>
		SHA-256: 522241264f33a5f3eeb14e77d316d6a9cf8e0828b966e14bbd2e5717ff156213
		Secure: true
	Object:
		Variable: $r0
		Type: javax.crypto.spec.IvParameterSpec
		Statement: specialinvoke $r0.<javax.crypto.spec.IvParameterSpec: void <init>(byte[])>($r4)
		Method: <com.amap.api.mapcore.util.i: byte[] b(byte[])>
		SHA-256: 347492157f950e4c6ba1cfd9a42debf8a2374f7ca640a26331fd0c87011efd4c
		Secure: false
	Object:
		Variable: $r1
		Type: java.security.MessageDigest
		Statement: $r1 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer15181)
		Method: <com.facebook.common.util.SecureHashUtil: java.lang.String makeSHA1HashBase64(byte[])>
		SHA-256: 56022ce6c919421f3b16986fa18a1e82386eaed02a366b190e32737fd350f56a
		Secure: false
	Object:
		Variable: $r15
		Type: javax.crypto.spec.IvParameterSpec
		Statement: specialinvoke $r15.<javax.crypto.spec.IvParameterSpec: void <init>(byte[])>($r2)
		Method: <com.huawei.secure.android.common.encrypt.aes.AesCbc: byte[] encrypt(byte[],byte[],byte[])>
		SHA-256: 8fe1f10068761b3543e463737b49bf1f3f22802dc7d46185e97e2749701d37c7
		Secure: true
	Object:
		Variable: $r2
		Type: javax.crypto.SecretKeyFactory
		Statement: $r2 = staticinvoke <javax.crypto.SecretKeyFactory: javax.crypto.SecretKeyFactory getInstance(java.lang.String)>(varReplacer126719)
		Method: <cn.smssdk.net.h.c: java.security.Key a(byte[])>
		SHA-256: d16c6482950b57252d0c1daf5ded9a50afffa313380a9c0808d0094a077a0e18
		Secure: false
	Object:
		Variable: $r6
		Type: java.security.KeyFactory
		Statement: $r6 = staticinvoke <java.security.KeyFactory: java.security.KeyFactory getInstance(java.lang.String)>(varReplacer13248)
		Method: <com.amap.api.mapcore.util.h: java.security.PublicKey a(java.lang.String)>
		SHA-256: 7ac67eeb0227f8416ceddfe705cefc2dd277497289a3ab629cf1c45b3662adae
		Secure: false
	Object:
		Variable: $r2
		Type: java.security.MessageDigest
		Statement: $r2 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer11155)
		Method: <com.xiaomi.push.bn: java.lang.String a(java.lang.String)>
		SHA-256: 98462ddd7a7319d1aa5b5367cccb5f3a58ea02f7f346b78c474ec28a597e54f
		Secure: false
	Object:
		Variable: $r2
		Type: javax.crypto.KeyGenerator
		Statement: $r2 = staticinvoke <javax.crypto.KeyGenerator: javax.crypto.KeyGenerator getInstance(java.lang.String)>(varReplacer13255)
		Method: <com.amap.api.mapcore.util.i: java.lang.String a()>
		SHA-256: 759020bc30cf252347be8ae514dc0b54e40c9ff566e95f26e271bdcfd0b6ccd2
		Secure: true
	Object:
		Variable: $r1
		Type: javax.crypto.spec.SecretKeySpec
		Statement: specialinvoke $r1.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r2, $r5)
		Method: <com.google.android.exoplayer2.upstream.crypto.AesFlushingCipher: void <init>(int,byte[],long,long)>
		SHA-256: 95de6006659c5b201ab78fe692245d3536f1b9a1bd5dcc899d6091a1fa00afac
		Secure: false
	Object:
		Variable: $r1
		Type: byte[]
		Statement: $i0 = virtualinvoke $r6.<javax.crypto.Cipher: int update(byte[],int,int,byte[],int)>($r1, varReplacer3281, $i0, $r0, varReplacer3281)
		Method: <com.mob.tools.utils.Data: byte[] AES128Decode(byte[],byte[])>
		SHA-256: d65167e4eba8dd3020e684eab6e47426935f370593d580070c6c7aa209af26db
		Secure: false
	Object:
		Variable: $r5
		Type: javax.crypto.Cipher
		Statement: $r5 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer67236)
		Method: <com.amap.api.mapcore.util.hj: byte[] d(byte[],byte[],byte[])>
		SHA-256: acb285b53cbc5e9d2beed45d587dc641c2947cb1d19cd92e357defc55d8066e8
		Secure: false
	Object:
		Variable: $r6
		Type: byte[]
		Statement: $r6 = virtualinvoke $r8.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r6)
		Method: <com.huawei.hms.hatool.e: byte[] a(byte[],java.security.PublicKey)>
		SHA-256: 6136ac2dd7e8a4c60708e21c37cf0ee72b207a70930caf39d4916607cb772e73
		Secure: false
	Object:
		Variable: $r3
		Type: javax.crypto.Cipher
		Statement: $r3 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>($r2)
		Method: <com.amap.api.mapcore.util.hj: byte[] a(byte[],java.security.Key)>
		SHA-256: 3faae9839bd04c3503830872af4345927cd1c994034bc08fab02519049c859e1
		Secure: false
	Object:
		Variable: $r5
		Type: java.security.MessageDigest
		Statement: $r5 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>($r3)
		Method: <com.huawei.hms.framework.network.grs.h.b: java.lang.String a(java.lang.String,java.lang.String)>
		SHA-256: 89439dafdc0e390ac765a9472b31faf18e4a58ad1b2ad448aefe56aadef0ea7c
		Secure: true
	Object:
		Variable: $r1
		Type: java.security.MessageDigest
		Statement: $r1 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer148998)
		Method: <com.airoha.libutils.SHA256: byte[] calculate(byte[])>
		SHA-256: 57c79bec8c94d52aadb3c00804b1cc449e3d6d8615d0ace27a980aa2766e9cc0
		Secure: true
	Object:
		Variable: $r0
		Type: byte[]
		Statement: $r1 = virtualinvoke $r2.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r0)
		Method: <com.xiaomi.push.h: byte[] a(byte[],byte[])>
		SHA-256: 296b2da616113f4d0d336ca0fc280ecbc6ac860d8ec1d57ffbeb7d65f338ecc2
		Secure: false
	Object:
		Variable: $r1
		Type: byte[]
		Statement: $r1 = virtualinvoke $r3.<java.security.MessageDigest: byte[] digest()>()
		Method: <com.huawei.secure.android.common.encrypt.hash.SHA: byte[] shaEncryptByte(byte[],java.lang.String)>
		SHA-256: cbca68b583610ec48ad5302d32e3a4428bddbe159952d177e7bdb878315cb61d
		Secure: true
	Object:
		Variable: $r1
		Type: java.security.SecureRandom
		Statement: specialinvoke $r1.<java.security.SecureRandom: void <init>()>()
		Method: <com.amap.api.mapcore.util.i: java.lang.String a()>
		SHA-256: 7c6512c3c6b6a98fccd8091de071387591c4126d8e7e7a76b4ea40bda5144918
		Secure: true
	Object:
		Variable: $r1
		Type: javax.crypto.spec.SecretKeySpec
		Statement: specialinvoke $r1.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r4, varReplacer104088)
		Method: <com.amap.api.mapcore.util.i: byte[] b(byte[])>
		SHA-256: f91894f7e3fd444dd13e2920775b5d2a8aa1e43cc98d5f86b93d8a38716252b7
		Secure: false
	Object:
		Variable: $r2
		Type: javax.crypto.spec.SecretKeySpec
		Statement: specialinvoke $r2.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r0, varReplacer3363)
		Method: <com.mob.tools.utils.Data: byte[] AES128Encode(byte[],byte[])>
		SHA-256: 9d2e2da9b6a6545d36139989bc0533e277cc10556533f4c45eb11281e51eb1a7
		Secure: false
	Object:
		Variable: $r4
		Type: java.security.Signature
		Statement: $r4 = staticinvoke <java.security.Signature: java.security.Signature getInstance(java.lang.String)>(varReplacer144892)
		Method: <com.vivo.push.c.e: boolean a(byte[],java.security.PublicKey,byte[])>
		SHA-256: db4d470434e97673f4ccce866fe0c81d124542f460ddfd32ebe0ba2a129e9acf
		Secure: false
	Object:
		Variable: varReplacer104628
		Type: java.lang.String
		Statement: specialinvoke $r9.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r1, varReplacer104628)
		Method: <com.huawei.agconnect.config.impl.i: javax.crypto.SecretKey a(byte[],byte[],byte[],byte[],int)>
		SHA-256: a75558a8a6660244e936ca2d7b337a5fec4b7ac5951247e4fbd2bdbc8a1ca87c
		Secure: false
	Object:
		Variable: $r4
		Type: javax.crypto.Cipher
		Statement: $r4 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer50067)
		Method: <com.huawei.secure.android.common.encrypt.aes.AesCbc: byte[] decrypt(byte[],byte[],byte[])>
		SHA-256: c4b90dd2f68befed5ae1e89aa430ee4c93f8ef00f3061080597fa8ddea33d707
		Secure: false
	Object:
		Variable: $r2
		Type: byte[]
		Statement: $r2 = virtualinvoke $r1.<java.security.MessageDigest: byte[] digest(byte[])>($r2)
		Method: <com.xiaomi.push.bl: java.lang.String a(java.lang.String)>
		SHA-256: 4a5c2c77f784b873bb799d5844edc82192e6ee8955748476dd133886dc86c9c0
		Secure: false
	Object:
		Variable: varReplacer104625
		Type: int
		Statement: specialinvoke $r6.<javax.crypto.spec.PBEKeySpec: void <init>(char[],byte[],int,int)>($r7, $r0, $i0, varReplacer104625)
		Method: <com.huawei.agconnect.config.impl.i: javax.crypto.SecretKey a(byte[],byte[],byte[],byte[],int)>
		SHA-256: d485173697a8791b17cdae0788cbd005b20b5b980699ce23e0396ae8faf9b316
		Secure: false
	Object:
		Variable: varReplacer87449
		Type: java.lang.String
		Statement: $r6 = staticinvoke <java.security.KeyFactory: java.security.KeyFactory getInstance(java.lang.String)>(varReplacer87449)
		Method: <com.huawei.hms.utils.ReadApkFileUtil: boolean a(byte[],byte[],byte[],java.lang.String)>
		SHA-256: abb3e73c822a707ea9311bfeb72fd3a29b8447e977d433659ea3ec82697f415e
		Secure: false
	Object:
		Variable: $r0
		Type: byte[]
		Statement: $r0 = virtualinvoke $r1.<java.security.MessageDigest: byte[] digest()>()
		Method: <com.facebook.common.util.SecureHashUtil: java.lang.String makeSHA1HashBase64(byte[])>
		SHA-256: c6bb4832d15267321b64294e36949b1fc4731b855443ce4eba77a8ad3eaece90
		Secure: false
	Object:
		Variable: $r0
		Type: byte[]
		Statement: $r3 = virtualinvoke $r4.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r0)
		Method: <org.litepal.util.cipher.AESCrypt: byte[] decrypt(javax.crypto.spec.SecretKeySpec,byte[],byte[])>
		SHA-256: 54d3f1f8851341b2634282316af3a7a5612b4c1b534669c144eb1451da773db
		Secure: false
	Object:
		Variable: $r3
		Type: byte[]
		Statement: $r3 = virtualinvoke $r2.<java.security.MessageDigest: byte[] digest()>()
		Method: <com.xiaomi.push.bn: java.lang.String b(java.lang.String)>
		SHA-256: 64a98461de9f2def6c11f259dfb61e0da2293684137d436a48a6afe754ff2f16
		Secure: false
	Object:
		Variable: $r4
		Type: byte[]
		Statement: $r4 = virtualinvoke $r2.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r4)
		Method: <com.heytap.mcssdk.f.b: java.lang.String a(java.lang.String,java.lang.String)>
		SHA-256: a37b8e66d538a6cd5cdbd429f4f5df13ef96ebeae07a3370a1585c09ad586644
		Secure: false
	Object:
		Variable: $r1
		Type: java.security.MessageDigest
		Statement: $r1 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer93075)
		Method: <com.huawei.hms.utils.SHA256: byte[] digest(byte[])>
		SHA-256: 8648429241e317702c05838ff42765b445336aedddf73230f438cbdff48ae8fc
		Secure: true
	Object:
		Variable: $r0
		Type: byte[]
		Statement: $r0 = virtualinvoke $r2.<java.security.MessageDigest: byte[] digest()>()
		Method: <com.amap.api.mapcore.util.hl: byte[] a(byte[],java.lang.String)>
		SHA-256: af8b52b53e3618eccc1bfb5a9410623449710ade5a94e1bfddf38aa0806263fa
		Secure: false
	Object:
		Variable: $r6
		Type: byte[]
		Statement: $r6 = virtualinvoke $r5.<java.security.MessageDigest: byte[] digest(byte[])>($r6)
		Method: <cn.smssdk.net.h.f: java.lang.String a(java.lang.String,java.lang.String)>
		SHA-256: ca9eb655bf53fa9c414b53fc5e2e125ff5f2a41888e7f34b28093b7c1a4ea476
		Secure: false
	Object:
		Variable: $r5
		Type: javax.crypto.Cipher
		Statement: $r5 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String,java.security.Provider)>($r0, $r4)
		Method: <com.mob.tools.utils.Data: javax.crypto.Cipher getCipher(java.lang.String,java.lang.String)>
		SHA-256: 95eb67e152191fae33f3b96af6f335adf7c85696274c05f20b8b928bcf8d5efc
		Secure: false
	Object:
		Variable: $r3
		Type: javax.crypto.Cipher
		Statement: $r3 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer109784)
		Method: <com.google.android.exoplayer2.upstream.crypto.AesFlushingCipher: void <init>(int,byte[],long,long)>
		SHA-256: edbe0506ad6dbea1c27946bbae618d47af4a6f873049cdb0788f3c941182f678
		Secure: false
	Object:
		Variable: $r6
		Type: javax.crypto.Cipher
		Statement: $r6 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>($r5)
		Method: <cn.smssdk.net.h.c: byte[] a(byte[],byte[])>
		SHA-256: 8b4dc1facbb2f7d60040e991dbe700340868187d56b6dff3e78d14aac12b2a40
		Secure: false
	Object:
		Variable: $r4
		Type: javax.crypto.SecretKey
		Statement: $r4 = virtualinvoke $r5.<javax.crypto.KeyGenerator: javax.crypto.SecretKey generateKey()>()
		Method: <com.huawei.secure.android.common.encrypt.keystore.aes.AesGcmKS: javax.crypto.SecretKey a(java.lang.String)>
		SHA-256: 8a636bebce5068756a07041a5638f12bdb0f1f23261306b4d60e8ba89f698b11
		Secure: true
	Object:
		Variable: $r6
		Type: byte[]
		Statement: $r6 = virtualinvoke $r5.<java.security.MessageDigest: byte[] digest(byte[])>($r6)
		Method: <cn.smssdk.net.h.f: java.lang.String a(java.lang.String,java.lang.String)>
		SHA-256: ca9eb655bf53fa9c414b53fc5e2e125ff5f2a41888e7f34b28093b7c1a4ea476
		Secure: false
	Object:
		Variable: $r3
		Type: byte[]
		Statement: $r3 = virtualinvoke $r2.<java.security.MessageDigest: byte[] digest()>()
		Method: <com.amap.api.mapcore.util.fv: java.lang.String c(java.lang.String)>
		SHA-256: 10cff2a9316086ec1077f9eb5951c0b910dd718dcda8b1bc8aa7e1d5c6a71e1b
		Secure: false
	Object:
		Variable: $r0
		Type: javax.crypto.spec.SecretKeySpec
		Statement: specialinvoke $r0.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r2, varReplacer15670)
		Method: <com.xiaomi.push.h: javax.crypto.Cipher a(byte[],int)>
		SHA-256: ba37d0cb1bbfefa710eb9d446e8a697c0885e582cbf5ec992de39814b3f8c698
		Secure: false
	Object:
		Variable: $r0
		Type: java.security.spec.X509EncodedKeySpec
		Statement: specialinvoke $r0.<java.security.spec.X509EncodedKeySpec: void <init>(byte[])>($r5)
		Method: <com.vivo.push.util.u: java.security.PublicKey a(java.lang.String)>
		SHA-256: 15cf802a30782ea8ed14f2e182262ee195e44e8b120fe6c46336e8b5ccdd44b8
		Secure: false
	Object:
		Variable: $r6
		Type: java.security.KeyFactory
		Statement: $r6 = staticinvoke <java.security.KeyFactory: java.security.KeyFactory getInstance(java.lang.String)>($r4)
		Method: <com.vivo.push.util.u: java.security.PublicKey a(java.lang.String)>
		SHA-256: 36c8db4c87f80d17120295ae9fc11e2b205f30ac18a012d2dafb83a0cf07e051
		Secure: false
	Object:
		Variable: $r6
		Type: java.security.MessageDigest
		Statement: $r6 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer97658)
		Method: <cn.sharesdk.wechat.utils.j: byte[] a(java.lang.String,java.lang.String,int)>
		SHA-256: 16eb6fc6418a0bc43ca77b442ba98b07b9f20db1ca726a7206eed56634da9a7
		Secure: false
	Object:
		Variable: $r1
		Type: java.security.MessageDigest
		Statement: $r1 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer167923)
		Method: <com.danikula.videocache.ProxyCacheUtils: java.lang.String computeMD5(java.lang.String)>
		SHA-256: 65449edf4f2fa3040d51678fe3b18755c055fb3c1a03028241cc3d162634498b
		Secure: false
	Object:
		Variable: $r4
		Type: byte[]
		Statement: $r4 = virtualinvoke $r2.<java.security.MessageDigest: byte[] digest()>()
		Method: <com.huawei.hms.utils.ReadApkFileUtil: byte[] a(java.lang.String,java.lang.String)>
		SHA-256: c316bd9d32eede060c606dffa16563794a861399bd7d22edb6b195cda7aa1d0e
		Secure: true
	Object:
		Variable: $r4
		Type: java.security.PublicKey
		Statement: $r4 = virtualinvoke $r3.<java.security.KeyFactory: java.security.PublicKey generatePublic(java.security.spec.KeySpec)>($r0)
		Method: <com.xiaomi.push.service.bs: void <clinit>()>
		SHA-256: 86b6148a28012fe924bce77c7543bf874d4e32fbf588b08b2363e8719dda31fa
		Secure: false
	Object:
		Variable: $r5
		Type: javax.crypto.spec.IvParameterSpec
		Statement: specialinvoke $r5.<javax.crypto.spec.IvParameterSpec: void <init>(byte[])>($r4)
		Method: <com.google.android.exoplayer2.source.hls.Aes128DataSource: long open(com.google.android.exoplayer2.upstream.DataSpec)>
		SHA-256: 74efd2ca2013e34a93725a12b2428b082241b229a3b9c59222ec28d5225e0d5
		Secure: false
	Object:
		Variable: $r4
		Type: java.security.MessageDigest
		Statement: $r4 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>($r3)
		Method: <org.apache.http.impl.auth.DigestScheme: java.security.MessageDigest createMessageDigest(java.lang.String)>
		SHA-256: bafd683999767fa653a59f6561b5fb73a4ec80f20b87a366e3f277c0d9c77bd
		Secure: false
	Object:
		Variable: $r0
		Type: byte[]
		Statement: virtualinvoke $r5.<javax.crypto.Cipher: int doFinal(byte[],int)>($r0, $i0)
		Method: <com.mob.tools.utils.Data: byte[] AES128Encode(byte[],byte[])>
		SHA-256: 5e0c5dd15ee5f320482e9423d43d77283e4bd141ecdcebbc48940109f4c828ab
		Secure: false
	Object:
		Variable: $r2
		Type: byte[]
		Statement: $r2 = virtualinvoke $r1.<java.security.MessageDigest: byte[] digest()>()
		Method: <org.litepal.util.cipher.AESCrypt: javax.crypto.spec.SecretKeySpec generateKey(java.lang.String)>
		SHA-256: f1f9ee73990edee1a683038b56a5ffa7cb2461e8b368c126aef62c05a74bfb05
		Secure: true
	Object:
		Variable: varReplacer7322
		Type: java.lang.String
		Statement: $r4 = staticinvoke <java.security.KeyFactory: java.security.KeyFactory getInstance(java.lang.String)>(varReplacer7322)
		Method: <com.amap.api.mapcore.util.hp: java.security.PublicKey d()>
		SHA-256: 5b8cc4fd001083c66dbe364de57a7841925edb81c9fe0102f838052354415e3f
		Secure: false
	Object:
		Variable: $r2
		Type: byte[]
		Statement: $r2 = virtualinvoke $r5.<javax.crypto.Cipher: byte[] doFinal(byte[],int,int)>($r2, varReplacer132984, $i0)
		Method: <com.huawei.secure.android.common.encrypt.keystore.aes.AesGcmKS: byte[] decrypt(javax.crypto.SecretKey,byte[])>
		SHA-256: 9ae10fa530ea58927a3d55746cda0fe384e749680df67b3dc3a982926f38e7a4
		Secure: false
	Object:
		Variable: $r29
		Type: javax.crypto.spec.IvParameterSpec
		Statement: specialinvoke $r29.<javax.crypto.spec.IvParameterSpec: void <init>(byte[])>($r25)
		Method: <com.amap.api.mapcore.util.he: com.amap.api.mapcore.util.he$a a(android.content.Context,com.amap.api.mapcore.util.ho,java.lang.String,java.util.Map,boolean)>
		SHA-256: a42e40020a8ea216b324b34cae6e5c4c9b1eedf9a6795aa2dedeb6815e04e286
		Secure: false
	Object:
		Variable: $r6
		Type: byte[]
		Statement: $r6 = virtualinvoke $r7.<java.security.MessageDigest: byte[] digest(byte[])>($r6)
		Method: <com.amap.api.mapcore.util.hd: java.lang.String e(android.content.Context)>
		SHA-256: 3b2be863f440eddc6806d433aa3e4c20c5e7d16f7a4fe30dded932e86795ee07
		Secure: false
	Object:
		Variable: $r4
		Type: byte[]
		Statement: $r4 = virtualinvoke $r2.<java.security.MessageDigest: byte[] digest(byte[])>($r4)
		Method: <com.amap.api.mapcore.util.i: java.lang.String a(java.lang.String)>
		SHA-256: 3208231054065db19d260d141018b37af98389d016a75a8e2b4f46adbc08f0e9
		Secure: false
	Object:
		Variable: $r5
		Type: java.lang.String
		Statement: specialinvoke $r1.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r2, $r5)
		Method: <com.google.android.exoplayer2.upstream.crypto.AesFlushingCipher: void <init>(int,byte[],long,long)>
		SHA-256: 668fb282133b6fd8e89f162eb69e092bf9de2d4d534ba58afcbc19a2d13c13c6
		Secure: false
	Object:
		Variable: $r4
		Type: java.security.Signature
		Statement: $r4 = staticinvoke <java.security.Signature: java.security.Signature getInstance(java.lang.String)>($r3)
		Method: <com.huawei.hms.device.a: boolean a(java.security.cert.X509Certificate,byte[],byte[])>
		SHA-256: a93d5b40771894716896012dfef54712b4c736261ac20972cc400788d8f545ba
		Secure: false
	Object:
		Variable: $r5
		Type: javax.net.ssl.KeyManagerFactory
		Statement: $r5 = staticinvoke <javax.net.ssl.KeyManagerFactory: javax.net.ssl.KeyManagerFactory getInstance(java.lang.String)>($r4)
		Method: <com.qcymall.earphonesetup.network.retrofit.HttpSSLUtils: javax.net.ssl.KeyManager[] prepareKeyManager(java.io.InputStream,java.lang.String)>
		SHA-256: 623034483ac328a8e392b198b5382a2f602f865c40426187261865fb306cb696
		Secure: false
	Object:
		Variable: $r4
		Type: byte[]
		Statement: $r4 = virtualinvoke $r3.<java.security.MessageDigest: byte[] digest()>()
		Method: <com.xiaomi.push.bm: java.lang.String a(java.lang.String)>
		SHA-256: 12c6418933ebb8284547a808a015cae0eb90853c32eeeb89ac9e85bea9ab3751
		Secure: false
	Object:
		Variable: $r3
		Type: byte[]
		Statement: $r3 = virtualinvoke $r2.<java.security.MessageDigest: byte[] digest()>()
		Method: <com.xiaomi.push.bn: java.lang.String a(java.lang.String)>
		SHA-256: 69fd8194a078075099c1d95f0f6c8874c191e17513f62a8004fb608b91bd6f99
		Secure: false
	Object:
		Variable: $r0
		Type: javax.net.ssl.SSLContext
		Statement: $r0 = staticinvoke <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String)>(varReplacer32345)
		Method: <com.huawei.secure.android.common.ssl.SSLUtil: javax.net.ssl.SSLContext setSSLContext()>
		SHA-256: d316bf84fbc5b3be496128351429099fe15cf3043d98aaf958df4d9c87f6d4e8
		Secure: false
	Object:
		Variable: $r3
		Type: byte[]
		Statement: $r3 = virtualinvoke $r2.<java.security.MessageDigest: byte[] digest()>()
		Method: <com.tencent.wxop.stat.common.l: java.lang.String a(java.lang.String)>
		SHA-256: 17aa2506a4ae331cf3d9e09b26bd04ae8976bf363f2160247272d313a26c8af
		Secure: false
	Object:
		Variable: $r3
		Type: javax.crypto.spec.IvParameterSpec
		Statement: specialinvoke $r3.<javax.crypto.spec.IvParameterSpec: void <init>(byte[])>($r1)
		Method: <cn.smssdk.net.h.c: void <init>(java.lang.String,byte[])>
		SHA-256: 11d10c924137a4f9a9d1263e218610026c2a9d35e5b903f1de0e5ce3b870fba9
		Secure: false
	Object:
		Variable: $r1
		Type: byte[]
		Statement: $r1 = virtualinvoke $r2.<java.security.MessageDigest: byte[] digest()>()
		Method: <com.mob.tools.utils.Data: byte[] rawMD5(java.io.InputStream)>
		SHA-256: 20906f15bdba051225a0fe479de4dd86221281d69913b17fc34ff0602d1a417a
		Secure: false
	Object:
		Variable: varReplacer163515
		Type: java.lang.String
		Statement: $r2 = staticinvoke <java.security.KeyFactory: java.security.KeyFactory getInstance(java.lang.String)>(varReplacer163515)
		Method: <com.huawei.hms.hatool.e: java.security.PublicKey a(byte[])>
		SHA-256: c638c1dd0504500ae96f286f7bfc26b925fb7f9f06ab415cef534f6ff848b1ca
		Secure: false
	Object:
		Variable: $r27
		Type: javax.crypto.spec.SecretKeySpec
		Statement: specialinvoke $r27.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r25, varReplacer6221)
		Method: <com.amap.api.mapcore.util.he: com.amap.api.mapcore.util.he$a a(android.content.Context,com.amap.api.mapcore.util.ho,java.lang.String,java.util.Map,boolean)>
		SHA-256: 111e4d2841f429c7a9b601016cf36a778fa869c020f214ad8f24c76065d7bcb9
		Secure: false
	Object:
		Variable: $r2
		Type: byte[]
		Statement: $r2 = virtualinvoke $r6.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r2)
		Method: <com.amap.api.mapcore.util.i: byte[] a(byte[])>
		SHA-256: 68151ed31aba35f0db4bab9ed40cb4b8a75462bfb519e177812d399495b02a64
		Secure: false
	Object:
		Variable: $r3
		Type: byte[]
		Statement: $r3 = virtualinvoke $r1.<javax.crypto.Cipher: byte[] doFinal(byte[],int,int)>($r0, $i2, $i3)
		Method: <com.xiaomi.push.service.bs: byte[] a(javax.crypto.Cipher,int,byte[],int)>
		SHA-256: 609a953dd4ed7773d2ee040e4f172c009fedc1194461758d9399bb67630abe1f
		Secure: false
	Object:
		Variable: $r0
		Type: byte[]
		Statement: $r0 = virtualinvoke $r4.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r0)
		Method: <com.huawei.secure.android.common.encrypt.aes.AesCbc: byte[] decrypt(byte[],byte[],byte[])>
		SHA-256: 58e0c6b23997ca89a2dab3ca523c642bfbbddb68ecb5f26c855757c4aadc58b3
		Secure: false
	Object:
		Variable: $r7
		Type: java.security.PublicKey
		Statement: $r7 = virtualinvoke $r6.<java.security.KeyFactory: java.security.PublicKey generatePublic(java.security.spec.KeySpec)>($r0)
		Method: <com.vivo.push.util.u: java.security.PublicKey a(java.lang.String)>
		SHA-256: 6e86ce4085686bfb835bab4894aef62378d5b829334b728f0f9e317d320a2320
		Secure: false
	Object:
		Variable: $r8
		Type: javax.crypto.CipherInputStream
		Statement: specialinvoke $r8.<javax.crypto.CipherInputStream: void <init>(java.io.InputStream,javax.crypto.Cipher)>($r6, $r1)
		Method: <com.google.android.exoplayer2.source.hls.Aes128DataSource: long open(com.google.android.exoplayer2.upstream.DataSpec)>
		SHA-256: e899dee01d55d270e79a5441cb05f39cda46030c1ce70bb65798863cf7de103a
		Secure: true
	Object:
		Variable: $r2
		Type: byte[]
		Statement: $z0 = virtualinvoke $r4.<java.security.Signature: boolean verify(byte[])>($r2)
		Method: <com.huawei.hms.device.a: boolean a(java.security.cert.X509Certificate,byte[],byte[])>
		SHA-256: fdcf983e0ef6d174be91a921af8422959e90c66c16e6e375a330c320c6802141
		Secure: false
	Object:
		Variable: varReplacer133109
		Type: java.lang.String
		Statement: specialinvoke $r3.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r2, varReplacer133109)
		Method: <org.litepal.util.cipher.AESCrypt: javax.crypto.spec.SecretKeySpec generateKey(java.lang.String)>
		SHA-256: 512d951b0998d65abbd85346088a1b1b45305be51665603bdb47a5783da4ce83
		Secure: false
	Object:
		Variable: $r2
		Type: javax.crypto.KeyGenerator
		Statement: $r2 = staticinvoke <javax.crypto.KeyGenerator: javax.crypto.KeyGenerator getInstance(java.lang.String,java.lang.String)>(varReplacer119893, varReplacer119894)
		Method: <com.vivo.push.c.a: javax.crypto.SecretKey b()>
		SHA-256: 6aea60fd5eade0a18e20b3782994be43ae0a5b2308fb2153ccd6d25b39d6ab78
		Secure: true
	Object:
		Variable: $r1
		Type: javax.crypto.SecretKey
		Statement: $r1 = virtualinvoke $r2.<javax.crypto.KeyGenerator: javax.crypto.SecretKey generateKey()>()
		Method: <com.vivo.push.c.a: javax.crypto.SecretKey b()>
		SHA-256: c31a1f28a5a16dc53ab148e4a4329fe3bd54172f04ec22e4a97e1a783d33d047
		Secure: true
	Object:
		Variable: $r6
		Type: byte[]
		Statement: $r6 = virtualinvoke $r7.<java.security.MessageDigest: byte[] digest()>()
		Method: <com.huawei.hms.opendevice.r: java.lang.String a(java.lang.String,java.lang.String)>
		SHA-256: 863aceb5cf497fc518a44ad0ab9afae922e7fa19ec8fe4ff36c3ced59dc1c2ae
		Secure: true
	Object:
		Variable: $r2
		Type: java.security.MessageDigest
		Statement: $r2 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer13259)
		Method: <com.amap.api.mapcore.util.i: java.lang.String a(java.lang.String)>
		SHA-256: 5824f87039a3574087f83b852075d1eb9aae2b03c31757a833d83107d41d6727
		Secure: false
	Object:
		Variable: varReplacer123853
		Type: java.lang.String
		Statement: specialinvoke $r3.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r1, varReplacer123853)
		Method: <com.amap.api.mapcore.util.kr: byte[] a(byte[])>
		SHA-256: 4e1934a5d3dc16cda1f97044c59bebd54a3c373205abd0651b6e99b026950b28
		Secure: false
	Object:
		Variable: $r7
		Type: java.security.MessageDigest
		Statement: $r7 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer6927)
		Method: <com.amap.api.mapcore.util.hd: java.lang.String e(android.content.Context)>
		SHA-256: a5259a6abb997064caed1dc46ce6e7ad6e84bc366d9159af10227df3d2e28b13
		Secure: false
	Object:
		Variable: $r4
		Type: javax.crypto.spec.SecretKeySpec
		Statement: specialinvoke $r4.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r2, varReplacer150444)
		Method: <com.amap.api.mapcore.util.eo: java.lang.String a(byte[],byte[],byte[])>
		SHA-256: 7ee52c4f461ab2dad7c8493b3e5746f2b7aa179b1bf99b7cf2434396b3e272bb
		Secure: false
	Object:
		Variable: $r0
		Type: byte[]
		Statement: virtualinvoke $r6.<javax.crypto.Cipher: int doFinal(byte[],int)>($r0, $i0)
		Method: <com.mob.tools.utils.Data: byte[] AES128Encode(java.lang.String,java.lang.String)>
		SHA-256: 1562a4f7c1d2ceb90c559bdafc209437a327d0832b48757a5af63e2faded0d54
		Secure: false
	Object:
		Variable: $r2
		Type: byte[]
		Statement: $r2 = virtualinvoke $r4.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r2)
		Method: <com.amap.api.mapcore.util.kr: byte[] a(byte[])>
		SHA-256: 256cde0ce165518695e305ac3961e359fdc3255d7e113e4d8dd0e46e4df936dc
		Secure: false
	Object:
		Variable: $z0
		Type: boolean
		Statement: $z0 = virtualinvoke $r4.<java.security.Signature: boolean verify(byte[])>($r2)
		Method: <com.huawei.hms.device.a: boolean a(java.security.cert.X509Certificate,byte[],byte[])>
		SHA-256: 135487d4a2a03e56040691c164eb5c470711b691262e75cc1125ab6509ada58a
		Secure: false
	Object:
		Variable: $r1
		Type: byte[]
		Statement: $r1 = virtualinvoke $r3.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r1)
		Method: <com.huawei.secure.android.common.encrypt.keystore.aes.AesGcmKS: byte[] encrypt(javax.crypto.SecretKey,byte[])>
		SHA-256: 77246f48f5c0bd98a5ccaffaf5281642c8103b767ec315bc58baa93a355097c9
		Secure: false
	Object:
		Variable: $r3
		Type: javax.net.ssl.TrustManagerFactory
		Statement: $r3 = staticinvoke <javax.net.ssl.TrustManagerFactory: javax.net.ssl.TrustManagerFactory getInstance(java.lang.String)>($r2)
		Method: <com.qcymall.earphonesetup.network.retrofit.HttpSSLUtils$MyTrustManager: void <init>(javax.net.ssl.X509TrustManager)>
		SHA-256: 167355f40eb84275171c4e471a8b91d4f43f74b2816f24df46d43c913d4f3a15
		Secure: false
	Object:
		Variable: $r2
		Type: byte[]
		Statement: virtualinvoke $r3.<java.security.SecureRandom: void nextBytes(byte[])>($r2)
		Method: <com.huawei.secure.android.common.encrypt.utils.EncryptUtil: byte[] generateSecureRandom(int)>
		SHA-256: 493a35939d473001f58c9a67e342d4cdbd59d77558b012ccfb19d679c523af12
		Secure: true
	Object:
		Variable: $r3
		Type: javax.crypto.SecretKeyFactory
		Statement: $r3 = staticinvoke <javax.crypto.SecretKeyFactory: javax.crypto.SecretKeyFactory getInstance(java.lang.String)>(varReplacer2463)
		Method: <com.huawei.secure.android.common.encrypt.hash.PBKDF2: byte[] a(char[],byte[],int,int,boolean)>
		SHA-256: f29fb3b16f38a06617f15191cbb00a79815361340c2fba23c159c7c0196e0e4a
		Secure: false
	Object:
		Variable: $r0
		Type: javax.net.ssl.SSLContext
		Statement: $r0 = staticinvoke <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String)>(varReplacer32344)
		Method: <com.huawei.secure.android.common.ssl.SSLUtil: javax.net.ssl.SSLContext setSSLContext()>
		SHA-256: fbc8cb30ab34b39621629b1e6b273f2ef05bb44e5b0ac8add98f4fa861812a8
		Secure: false
	Object:
		Variable: $r1
		Type: byte[]
		Statement: $r1 = virtualinvoke $r2.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r0)
		Method: <com.xiaomi.push.h: byte[] b(byte[],byte[])>
		SHA-256: e23fc34cffb0d7415a372bb75ac44d2ef1f6237d3b6b4afc917460a87826cd4e
		Secure: false
	Object:
		Variable: $r1
		Type: javax.crypto.spec.SecretKeySpec
		Statement: specialinvoke $r1.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r4, varReplacer144887)
		Method: <com.vivo.push.util.f: byte[] a(java.lang.String,java.lang.String,byte[])>
		SHA-256: 612fe3cc2f60416b24ac73dd843cb3c60ee3b1ea739b548da2bbbecb0d249446
		Secure: false
	Object:
		Variable: $r3
		Type: java.security.MessageDigest
		Statement: $r3 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer14611)
		Method: <com.xiaomi.push.bm: java.lang.String a(java.lang.String)>
		SHA-256: 14f183074b5a551120297c86ca0702741496de8a87a395d32f413871b06fde56
		Secure: false
	Object:
		Variable: $r6
		Type: javax.net.ssl.SSLContext
		Statement: $r6 = staticinvoke <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String)>(varReplacer73728)
		Method: <com.tencent.bugly.proguard.s: java.net.HttpURLConnection a(java.lang.String,byte[],java.lang.String,java.util.Map)>
		SHA-256: a813cfd5c956cb76f2e6c0c3efd1f199d72617b7332bacfec98c54bb25ef457
		Secure: false
	Object:
		Variable: varReplacer3277
		Type: java.lang.String
		Statement: specialinvoke $r3.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r2, varReplacer3277)
		Method: <com.mob.tools.utils.Data: byte[] AES128Decode(byte[],byte[])>
		SHA-256: dbfea092c3ae175e91a1c2d255ec1265bb996224e32991cd8ea2ef3c63cc91ec
		Secure: false
	Object:
		Variable: $r4
		Type: java.lang.String
		Statement: $r6 = staticinvoke <java.security.KeyFactory: java.security.KeyFactory getInstance(java.lang.String)>($r4)
		Method: <com.vivo.push.util.u: java.security.PublicKey a(java.lang.String)>
		SHA-256: 14f09f41b6ea0f008ae6e949d0edf108a209ac56fd4e9513baf85ce553872d1f
		Secure: false
	Object:
		Variable: $r3
		Type: javax.net.ssl.TrustManagerFactory
		Statement: $r3 = staticinvoke <javax.net.ssl.TrustManagerFactory: javax.net.ssl.TrustManagerFactory getInstance(java.lang.String)>(varReplacer104058)
		Method: <com.huawei.secure.android.common.ssl.SecureX509TrustManager: void a(java.io.InputStream,java.lang.String)>
		SHA-256: 82ba3adfddc57d928199b124099306f2bf56c52be65fc00412b0e2440836f77d
		Secure: false
	Object:
		Variable: $r2
		Type: byte[]
		Statement: $r2 = virtualinvoke $r5.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r0)
		Method: <com.amap.api.mapcore.util.hj: byte[] c(byte[],byte[],byte[])>
		SHA-256: b02b1cd3f280e6bb02a750050a59d99a9fef77ef5c67efaa4068ab2ddf8badb3
		Secure: false
	Object:
		Variable: $r13
		Type: byte[]
		Statement: $r13 = virtualinvoke $r10.<java.security.MessageDigest: byte[] digest(byte[])>($r13)
		Method: <org.apache.http.impl.auth.DigestScheme: java.lang.String createDigest(org.apache.http.auth.Credentials)>
		SHA-256: 12673c138b1f7bed0c70268aebaa47f0acb7ab52f165dd68e93940af0eb1553f
		Secure: false
	Object:
		Variable: $r1
		Type: byte[]
		Statement: $z0 = virtualinvoke $r3.<java.security.Signature: boolean verify(byte[])>($r1)
		Method: <com.vivo.push.util.u: boolean a(byte[],java.security.PublicKey,byte[])>
		SHA-256: f5ae8eceb695ec09c9ca33b4fe1e32b145fc4ccabf6025306adef14abcba6d69
		Secure: false

Findings in Java Class: com.xiaomi.push.bn

	 in Method: java.lang.String b(java.lang.String)
		ConstraintError violating CrySL rule for java.security.MessageDigest (on Object #3d2c29f557ef905d79511e0ed5df80b347d04ae664d2e7bc68046d0151fb2fdf)
			First parameter (with value "SHA1") should be any of {SHA-256, SHA-384, SHA-512}
			at statement: $r2 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer2055)


	 in Method: java.lang.String a(java.lang.String)
		ConstraintError violating CrySL rule for java.security.MessageDigest (on Object #98462ddd7a7319d1aa5b5367cccb5f3a58ea02f7f346b78c474ec28a597e54f)
			First parameter (with value "MD5") should be any of {SHA-256, SHA-384, SHA-512}
			at statement: $r2 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer11155)


	 in Method: java.lang.String a(byte[])
		ConstraintError violating CrySL rule for java.security.MessageDigest (on Object #6844e834a38aeec7d657225e2bed970c573e8f163b6b8c7a0c34ec445cc225ff)
			First parameter (with value "MD5") should be any of {SHA-256, SHA-384, SHA-512}
			at statement: $r2 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer84253)


Findings in Java Class: com.huawei.secure.android.common.encrypt.hash.PBKDF2

	 in Method: byte[] a(char[],byte[],int,int,boolean)
		RequiredPredicateError violating CrySL rule for javax.crypto.SecretKeyFactory
			First parameter was not properly generated as speccedKey
			at statement: $r4 = virtualinvoke $r3.<javax.crypto.SecretKeyFactory: javax.crypto.SecretKey generateSecret(java.security.spec.KeySpec)>($r0)

		HardCodedError violating CrySL rule for javax.crypto.spec.PBEKeySpec (on Object #f584823212a2f4cc22b4d2fb1fbbed7e07150ad984c4171d663daeedce8b38db)
			First parameter should never be hardcoded.
			at statement: specialinvoke $r9.<javax.crypto.spec.PBEKeySpec: void <init>(char[],byte[],int,int)>($r1, $r2, $i0, $i1)

		IncompleteOperationError violating CrySL rule for javax.crypto.spec.PBEKeySpec (on Object #f584823212a2f4cc22b4d2fb1fbbed7e07150ad984c4171d663daeedce8b38db)
			Operation on object of type javax.crypto.spec.PBEKeySpec object not completed. Expected call to clearPassword
			at statement: specialinvoke $r9.<javax.crypto.spec.PBEKeySpec: void <init>(char[],byte[],int,int)>($r1, $r2, $i0, $i1)

		ConstraintError violating CrySL rule for javax.crypto.SecretKeyFactory (on Object #ef898f21c32324daca2a8a9a0ae93cb02da8f5c42aaa36a25e1506793a65019)
			First parameter (with value "PBKDF2WithHmacSHA1") should be any of {PBKDF2WithHmacSHA512, PBKDF2WithHmacSHA384, PBKDF2WithHmacSHA256, PBKDF2WithHmacSHA224, PBEWithHmacSHA512AndAES_128, PBEWithHmacSHA384AndAES_128, PBEWithHmacSHA384AndAES_128, PBEWithHmacSHA224AndAES_128, PBEWithHmacSHA256AndAES_128, PBEWithHmacSHA224AndAES_256, PBEWithHmacSHA256AndAES_256, PBEWithHmacSHA384AndAES_256, PBEWithHmacSHA512AndAES_256}
			at statement: $r3 = staticinvoke <javax.crypto.SecretKeyFactory: javax.crypto.SecretKeyFactory getInstance(java.lang.String)>(varReplacer2464)

		RequiredPredicateError violating CrySL rule for javax.crypto.spec.PBEKeySpec
			Second parameter was not properly generated as randomized
			at statement: specialinvoke $r9.<javax.crypto.spec.PBEKeySpec: void <init>(char[],byte[],int,int)>($r1, $r2, $i0, $i1)

		HardCodedError violating CrySL rule for javax.crypto.spec.PBEKeySpec (on Object #f584823212a2f4cc22b4d2fb1fbbed7e07150ad984c4171d663daeedce8b38db)
			First parameter should never be hardcoded.
			at statement: specialinvoke $r9.<javax.crypto.spec.PBEKeySpec: void <init>(char[],byte[],int,int)>($r1, $r2, $i0, $i1)


Findings in Java Class: com.mob.tools.utils.Data

	 in Method: javax.crypto.Cipher getCipher(java.lang.String,java.lang.String)
		IncompleteOperationError violating CrySL rule for javax.crypto.Cipher (on Object #95eb67e152191fae33f3b96af6f335adf7c85696274c05f20b8b928bcf8d5efc)
			Operation on object of type javax.crypto.Cipher object not completed. Expected call to init
			at statement: $r5 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String,java.security.Provider)>($r0, $r4)


	 in Method: byte[] rawMD5(java.io.InputStream)
		ConstraintError violating CrySL rule for java.security.MessageDigest (on Object #834d55cc8d59ec549501cfada4422d86c52622700ffc10b2397ab3120c80a009)
			First parameter (with value "MD5") should be any of {SHA-256, SHA-384, SHA-512}
			at statement: $r2 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer3380)

		TypestateError violating CrySL rule for java.security.MessageDigest (on Object #834d55cc8d59ec549501cfada4422d86c52622700ffc10b2397ab3120c80a009)
			Unexpected call to method <java.security.MessageDigest: byte[] digest()> on object of type java.security.MessageDigest. Expect a call to one of the following methods java.security.MessageDigest: void update(byte[],int,int),java.security.MessageDigest: void update(java.nio.ByteBuffer),java.security.MessageDigest: byte[] digest(byte[]),java.security.MessageDigest: void update(byte),java.security.MessageDigest: void update(byte[])
			at statement: $r1 = virtualinvoke $r2.<java.security.MessageDigest: byte[] digest()>()


	 in Method: byte[] SHA1(byte[])
		ConstraintError violating CrySL rule for java.security.MessageDigest (on Object #9f5e34bccf4ab3fbfa99504db995bcf35e0ff8513326b06ca93a26de97a61478)
			First parameter (with value "SHA-1") should be any of {SHA-256, SHA-384, SHA-512}
			at statement: $r1 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer48037)


	 in Method: byte[] AES128Decode(byte[],byte[])
		RequiredPredicateError violating CrySL rule for javax.crypto.spec.SecretKeySpec
			First parameter was not properly generated as preparedKeyMaterial
			at statement: specialinvoke $r3.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r2, varReplacer3277)


	 in Method: byte[] AES128Encode(java.lang.String,java.lang.String)
		RequiredPredicateError violating CrySL rule for javax.crypto.Cipher
			Second parameter was not properly generated as generatedKey
			at statement: virtualinvoke $r6.<javax.crypto.Cipher: void init(int,java.security.Key)>(varReplacer3314, $r4)

		RequiredPredicateError violating CrySL rule for javax.crypto.spec.SecretKeySpec
			First parameter was not properly generated as preparedKeyMaterial
			at statement: specialinvoke $r4.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r0, varReplacer3313)


	 in Method: byte[] AES128Encode(byte[],byte[])
		RequiredPredicateError violating CrySL rule for javax.crypto.spec.SecretKeySpec
			First parameter was not properly generated as preparedKeyMaterial
			at statement: specialinvoke $r2.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r0, varReplacer3363)


Findings in Java Class: com.amap.api.mapcore.util.he

	 in Method: com.amap.api.mapcore.util.he$a a(android.content.Context,com.amap.api.mapcore.util.ho,java.lang.String,java.util.Map,boolean)
		RequiredPredicateError violating CrySL rule for javax.crypto.spec.IvParameterSpec
			First parameter was not properly generated as randomized
			at statement: specialinvoke $r29.<javax.crypto.spec.IvParameterSpec: void <init>(byte[])>($r25)

		NeverTypeOfError violating CrySL rule for javax.crypto.spec.SecretKeySpec (on Object #111e4d2841f429c7a9b601016cf36a778fa869c020f214ad8f24c76065d7bcb9)
			First parameter should never be of type java.lang.String.
			at statement: specialinvoke $r27.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r25, varReplacer6221)

		RequiredPredicateError violating CrySL rule for javax.crypto.Cipher
			Second parameter was not properly generated as generatedKey
			at statement: virtualinvoke $r28.<javax.crypto.Cipher: void init(int,java.security.Key,java.security.spec.AlgorithmParameterSpec)>(varReplacer6206, $r27, $r29)

		RequiredPredicateError violating CrySL rule for javax.crypto.spec.SecretKeySpec
			First parameter was not properly generated as preparedKeyMaterial
			at statement: specialinvoke $r27.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r25, varReplacer6221)


Findings in Java Class: com.amap.api.mapcore.util.hd

	 in Method: java.lang.String e(android.content.Context)
		ConstraintError violating CrySL rule for java.security.MessageDigest (on Object #a5259a6abb997064caed1dc46ce6e7ad6e84bc366d9159af10227df3d2e28b13)
			First parameter (with value "SHA1") should be any of {SHA-256, SHA-384, SHA-512}
			at statement: $r7 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer6927)


Findings in Java Class: com.amap.api.mapcore.util.hl

	 in Method: byte[] f(java.lang.String)
		ConstraintError violating CrySL rule for java.security.MessageDigest (on Object #a338d1b66ad940e5287fe0a0f42394b81581f68c1bc6ba2b6b09fd6b5fbd5c5a)
			First parameter (with value "MD5") should be any of {SHA-256, SHA-384, SHA-512}
			at statement: $r1 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer7276)


	 in Method: java.lang.String a(java.lang.String)
		ConstraintError violating CrySL rule for java.security.MessageDigest (on Object #95aed0981862b8d00b90629ddf0c98174b145743d47ae0a6c30749c5cd1cc239)
			First parameter (with value "MD5") should be any of {SHA-256, SHA-384, SHA-512}
			at statement: $r3 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer10156)

		TypestateError violating CrySL rule for java.security.MessageDigest (on Object #95aed0981862b8d00b90629ddf0c98174b145743d47ae0a6c30749c5cd1cc239)
			Unexpected call to method <java.security.MessageDigest: byte[] digest()> on object of type java.security.MessageDigest. Expect a call to one of the following methods java.security.MessageDigest: void update(byte[],int,int),java.security.MessageDigest: void update(java.nio.ByteBuffer),java.security.MessageDigest: byte[] digest(byte[]),java.security.MessageDigest: void update(byte),java.security.MessageDigest: void update(byte[])
			at statement: $r2 = virtualinvoke $r3.<java.security.MessageDigest: byte[] digest()>()


	 in Method: byte[] a(byte[],java.lang.String)
		ConstraintError violating CrySL rule for java.security.MessageDigest (on Object #380393f0143c4292400a22ab0bf46cb06e586c7389cd62a23b9b8a13554e42ed)
			First parameter (with value "MD5") should be any of {SHA-256, SHA-384, SHA-512}
			at statement: $r2 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>($r1)


Findings in Java Class: com.amap.api.mapcore.util.i

	 in Method: java.lang.String a(java.lang.String)
		ConstraintError violating CrySL rule for java.security.MessageDigest (on Object #5824f87039a3574087f83b852075d1eb9aae2b03c31757a833d83107d41d6727)
			First parameter (with value "MD5") should be any of {SHA-256, SHA-384, SHA-512}
			at statement: $r2 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer13259)


	 in Method: byte[] b(byte[])
		RequiredPredicateError violating CrySL rule for javax.crypto.spec.SecretKeySpec
			First parameter was not properly generated as preparedKeyMaterial
			at statement: specialinvoke $r1.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r4, varReplacer104088)

		RequiredPredicateError violating CrySL rule for javax.crypto.spec.IvParameterSpec
			First parameter was not properly generated as randomized
			at statement: specialinvoke $r0.<javax.crypto.spec.IvParameterSpec: void <init>(byte[])>($r4)

		RequiredPredicateError violating CrySL rule for javax.crypto.Cipher
			Second parameter was not properly generated as generatedKey
			at statement: virtualinvoke $r7.<javax.crypto.Cipher: void init(int,java.security.Key,java.security.spec.AlgorithmParameterSpec)>(varReplacer104085, $r1, $r0)


	 in Method: byte[] a(byte[])
		RequiredPredicateError violating CrySL rule for javax.crypto.Cipher
			Second parameter was not properly generated as generatedKey
			at statement: virtualinvoke $r6.<javax.crypto.Cipher: void init(int,java.security.Key,java.security.spec.AlgorithmParameterSpec)>(varReplacer6374, $r1, $r0)

		RequiredPredicateError violating CrySL rule for javax.crypto.spec.SecretKeySpec
			First parameter was not properly generated as preparedKeyMaterial
			at statement: specialinvoke $r1.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r3, varReplacer6372)

		RequiredPredicateError violating CrySL rule for javax.crypto.Cipher
			Third parameter was not properly generated as preparedIV [ with CBC, It's required to use IVParameterSpec]
			at statement: virtualinvoke $r6.<javax.crypto.Cipher: void init(int,java.security.Key,java.security.spec.AlgorithmParameterSpec)>(varReplacer6374, $r1, $r0)

		RequiredPredicateError violating CrySL rule for javax.crypto.spec.IvParameterSpec
			First parameter was not properly generated as randomized
			at statement: specialinvoke $r0.<javax.crypto.spec.IvParameterSpec: void <init>(byte[])>($r3)


Findings in Java Class: com.tencent.bugly.proguard.ab

	 in Method: java.lang.String a(byte[])
		ConstraintError violating CrySL rule for java.security.MessageDigest (on Object #ff771967691bb317580eac0bd722fd8df1dc43a18aa848b90e3330d2ee1158e1)
			First parameter (with value "SHA-1") should be any of {SHA-256, SHA-384, SHA-512}
			at statement: $r1 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer13823)


Findings in Java Class: com.xiaomi.push.bm

	 in Method: java.lang.String a(java.lang.String)
		ConstraintError violating CrySL rule for java.security.MessageDigest (on Object #14f183074b5a551120297c86ca0702741496de8a87a395d32f413871b06fde56)
			First parameter (with value "MD5") should be any of {SHA-256, SHA-384, SHA-512}
			at statement: $r3 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer14611)


	 in Method: byte[] a(java.lang.String)
		ConstraintError violating CrySL rule for java.security.MessageDigest (on Object #1d41689212ddf0f9de908e6e57dfedda525130bdff8ced3166ef66f7ae69bd04)
			First parameter (with value "MD5") should be any of {SHA-256, SHA-384, SHA-512}
			at statement: $r2 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer87871)


Findings in Java Class: com.facebook.common.util.SecureHashUtil

	 in Method: java.lang.String makeSHA1HashBase64(byte[])
		ConstraintError violating CrySL rule for java.security.MessageDigest (on Object #56022ce6c919421f3b16986fa18a1e82386eaed02a366b190e32737fd350f56a)
			First parameter (with value "SHA-1") should be any of {SHA-256, SHA-384, SHA-512}
			at statement: $r1 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer15181)


Findings in Java Class: com.heytap.mcssdk.f.b

	 in Method: java.lang.String a(java.lang.String,java.lang.String)
		ConstraintError violating CrySL rule for javax.crypto.Cipher (on Object #e50b901649145a948993bd390b7e7d350c1359f2d3bcbe4bb884a3dcbd33ca3)
			First parameter (with value "DES") should be any of {AES, PBEWithHmacSHA224AndAES_128, PBEWithHmacSHA256AndAES_128, PBEWithHmacSHA384AndAES_128, PBEWithHmacSHA512AndAES_128, PBEWithHmacSHA224AndAES_256, PBEWithHmacSHA256AndAES_256, PBEWithHmacSHA384AndAES_256, PBEWithHmacSHA512AndAES_256}
			at statement: $r2 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer15335)

		RequiredPredicateError violating CrySL rule for javax.crypto.Cipher
			Second parameter was not properly generated as generatedKey
			at statement: virtualinvoke $r2.<javax.crypto.Cipher: void init(int,java.security.Key)>(varReplacer15334, $r3)


	 in Method: java.security.Key a(java.lang.String)
		ConstraintError violating CrySL rule for javax.crypto.SecretKeyFactory (on Object #e997c236e33e795541e574708f00d696907a07b1e30edcb72a16b477f545ed04)
			First parameter (with value "DES") should be any of {PBKDF2WithHmacSHA512, PBKDF2WithHmacSHA384, PBKDF2WithHmacSHA256, PBKDF2WithHmacSHA224, PBEWithHmacSHA512AndAES_128, PBEWithHmacSHA384AndAES_128, PBEWithHmacSHA384AndAES_128, PBEWithHmacSHA224AndAES_128, PBEWithHmacSHA256AndAES_128, PBEWithHmacSHA224AndAES_256, PBEWithHmacSHA256AndAES_256, PBEWithHmacSHA384AndAES_256, PBEWithHmacSHA512AndAES_256}
			at statement: $r3 = staticinvoke <javax.crypto.SecretKeyFactory: javax.crypto.SecretKeyFactory getInstance(java.lang.String)>(varReplacer15782)

		RequiredPredicateError violating CrySL rule for javax.crypto.SecretKeyFactory
			First parameter was not properly generated as speccedKey
			at statement: $r4 = virtualinvoke $r3.<javax.crypto.SecretKeyFactory: javax.crypto.SecretKey generateSecret(java.security.spec.KeySpec)>($r0)


Findings in Java Class: com.huawei.secure.android.common.encrypt.keystore.aes.AesGcmKS

	 in Method: javax.crypto.SecretKey a(java.lang.String)
		ConstraintError violating CrySL rule for java.security.KeyStore (on Object #3c1d3bd9be97425d3724317de6d17521a2dcdbdf7830865332422dc1488b8581)
			First parameter (with value "AndroidKeyStore") should be any of {JCEKS, JKS, DKS, PKCS11, PKCS12}
			at statement: $r2 = staticinvoke <java.security.KeyStore: java.security.KeyStore getInstance(java.lang.String)>(varReplacer15992)


	 in Method: byte[] decrypt(javax.crypto.SecretKey,byte[])
		RequiredPredicateError violating CrySL rule for javax.crypto.Cipher
			Second parameter was not properly generated as generatedKey
			at statement: virtualinvoke $r5.<javax.crypto.Cipher: void init(int,java.security.Key,java.security.spec.AlgorithmParameterSpec)>(varReplacer132976, $r1, $r0)

		RequiredPredicateError violating CrySL rule for javax.crypto.spec.GCMParameterSpec
			Second parameter was not properly generated as randomized
			at statement: specialinvoke $r15.<javax.crypto.spec.GCMParameterSpec: void <init>(int,byte[])>(varReplacer132963, $r4)

		RequiredPredicateError violating CrySL rule for javax.crypto.Cipher
			Third parameter was not properly generated as preparedGCM
			at statement: virtualinvoke $r5.<javax.crypto.Cipher: void init(int,java.security.Key,java.security.spec.AlgorithmParameterSpec)>(varReplacer132976, $r1, $r0)


	 in Method: byte[] encrypt(javax.crypto.SecretKey,byte[])
		RequiredPredicateError violating CrySL rule for javax.crypto.Cipher
			Second parameter was not properly generated as generatedKey
			at statement: virtualinvoke $r3.<javax.crypto.Cipher: void init(int,java.security.Key)>(varReplacer15875, $r0)


Findings in Java Class: com.sina.weibo.sdk.b.d

	 in Method: java.lang.String a(byte[])
		ConstraintError violating CrySL rule for java.security.MessageDigest (on Object #6d15d225e54dc314be3bedd5748eeef96b222cef3290aa09cfd9b8e7c8d3f67c)
			First parameter (with value "MD5") should be any of {SHA-256, SHA-384, SHA-512}
			at statement: $r2 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer27742)


Findings in Java Class: cn.smssdk.net.h.f

	 in Method: java.lang.String a(java.lang.String,java.lang.String)
		ConstraintError violating CrySL rule for java.security.MessageDigest (on Object #c1c78401a731a4a147dfd038cc260c5176d3878a82d20b400ec1389a116b45dd)
			First parameter (with value "MD5") should be any of {SHA-256, SHA-384, SHA-512}
			at statement: $r5 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer29186)


Findings in Java Class: com.huawei.secure.android.common.ssl.SSLUtil

	 in Method: javax.net.ssl.SSLContext setSSLContext()
		ConstraintError violating CrySL rule for javax.net.ssl.SSLContext (on Object #d316bf84fbc5b3be496128351429099fe15cf3043d98aaf958df4d9c87f6d4e8)
			First parameter (with value "TLSv1.3") should be any of {TLSv1.2}
			at statement: $r0 = staticinvoke <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String)>(varReplacer32345)

		ConstraintError violating CrySL rule for javax.net.ssl.SSLContext (on Object #69a67211f980f42e0d73ed0603dfaf035856300ea41d392e630571a146522df6)
			First parameter (with value "TLS") should be any of {TLSv1.2}
			at statement: $r0 = staticinvoke <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String)>(varReplacer32343)


Findings in Java Class: com.huawei.hms.framework.network.grs.h.f.a

	 in Method: javax.net.ssl.HttpsURLConnection a(java.lang.String,android.content.Context,java.lang.String)
		IncompleteOperationError violating CrySL rule for javax.net.ssl.SSLContext (on Object #d316bf84fbc5b3be496128351429099fe15cf3043d98aaf958df4d9c87f6d4e8)
			Operation on object of type javax.net.ssl.SSLContext object not completed. Expected call to init
			at statement: virtualinvoke $r6.<javax.net.ssl.HttpsURLConnection: void setSSLSocketFactory(javax.net.ssl.SSLSocketFactory)>($r7)

		IncompleteOperationError violating CrySL rule for javax.net.ssl.SSLContext (on Object #fbc8cb30ab34b39621629b1e6b273f2ef05bb44e5b0ac8add98f4fa861812a8)
			Operation on object of type javax.net.ssl.SSLContext object not completed. Expected call to init
			at statement: virtualinvoke $r6.<javax.net.ssl.HttpsURLConnection: void setSSLSocketFactory(javax.net.ssl.SSLSocketFactory)>($r7)

		IncompleteOperationError violating CrySL rule for javax.net.ssl.SSLContext (on Object #69a67211f980f42e0d73ed0603dfaf035856300ea41d392e630571a146522df6)
			Operation on object of type javax.net.ssl.SSLContext object not completed. Expected call to init
			at statement: virtualinvoke $r6.<javax.net.ssl.HttpsURLConnection: void setSSLSocketFactory(javax.net.ssl.SSLSocketFactory)>($r7)


Findings in Java Class: com.google.android.gms.common.util.AndroidUtilsLight

	 in Method: java.security.MessageDigest zza(java.lang.String)
		ConstraintError violating CrySL rule for java.security.MessageDigest (on Object #c613dcbe025721f48d3fcab4e003017d7cb704971fc9d0296bae42be0b7eb30a)
			First parameter (with value "SHA-1") should be any of {SHA-256, SHA-384, SHA-512}
			at statement: $r0 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>($r2)

		IncompleteOperationError violating CrySL rule for java.security.MessageDigest (on Object #c613dcbe025721f48d3fcab4e003017d7cb704971fc9d0296bae42be0b7eb30a)
			Operation on object of type java.security.MessageDigest object not completed. Expected call to digest, update
			at statement: $r0 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>($r2)


Findings in Java Class: com.xiaomi.push.service.bs

	 in Method: java.lang.String a(java.lang.String)
		ConstraintError violating CrySL rule for javax.crypto.Cipher (on Object #33276afcac7b3a18b47840ee0f0ee24374e8fbea721ffcc23a776758b817d11f)
			First parameter (with value "RSA/ECB/PKCS1Padding") should be any of {AES, PBEWithHmacSHA224AndAES_128, PBEWithHmacSHA256AndAES_128, PBEWithHmacSHA384AndAES_128, PBEWithHmacSHA512AndAES_128, PBEWithHmacSHA224AndAES_256, PBEWithHmacSHA256AndAES_256, PBEWithHmacSHA384AndAES_256, PBEWithHmacSHA512AndAES_256}
			at statement: $r2 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer46452)

		IncompleteOperationError violating CrySL rule for javax.crypto.Cipher (on Object #33276afcac7b3a18b47840ee0f0ee24374e8fbea721ffcc23a776758b817d11f)
			Operation on object of type javax.crypto.Cipher object not completed. Expected call to update, wrap, doFinal
			at statement: $r4 = staticinvoke <com.xiaomi.push.service.bs: byte[] a(javax.crypto.Cipher,int,byte[],int)>($r2, varReplacer46453, $r4, $i0)

		RequiredPredicateError violating CrySL rule for javax.crypto.Cipher
			Second parameter was not properly generated as generatedKey
			at statement: virtualinvoke $r2.<javax.crypto.Cipher: void init(int,java.security.Key)>(varReplacer46457, $r3)


	 in Method: void <clinit>()
		RequiredPredicateError violating CrySL rule for java.security.KeyFactory
			First parameter was not properly generated as speccedKey
			at statement: $r4 = virtualinvoke $r3.<java.security.KeyFactory: java.security.PublicKey generatePublic(java.security.spec.KeySpec)>($r0)

		RequiredPredicateError violating CrySL rule for java.security.spec.X509EncodedKeySpec
			First parameter was not properly generated as preparedKeyMaterial
			at statement: specialinvoke $r0.<java.security.spec.X509EncodedKeySpec: void <init>(byte[])>($r2)


Findings in Java Class: com.tencent.wxop.stat.common.l

	 in Method: java.lang.String a(java.lang.String)
		ConstraintError violating CrySL rule for java.security.MessageDigest (on Object #9ca73159fa9778e482c31d58b3b9f3145335fb67964d9fb79f53eb66cd3a956)
			First parameter (with value "MD5") should be any of {SHA-256, SHA-384, SHA-512}
			at statement: $r2 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer48084)


Findings in Java Class: com.xiaomi.push.az

	 in Method: java.lang.String b()
		ConstraintError violating CrySL rule for java.security.MessageDigest (on Object #b8479b64f170eb71d32e44529f06fce6a62ccd4dcbad0936e97f6c5d4bf78bdb)
			First parameter (with value "SHA1") should be any of {SHA-256, SHA-384, SHA-512}
			at statement: $r7 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer48830)


Findings in Java Class: com.vivo.push.c.e

	 in Method: void b()
		ConstraintError violating CrySL rule for java.security.KeyStore (on Object #8cd143a716446b33a74289c67e5fa951bc6138084df0232c0c4b53db77ad5dd2)
			First parameter (with value "AndroidKeyStore") should be any of {JCEKS, JKS, DKS, PKCS11, PKCS12}
			at statement: $r0 = staticinvoke <java.security.KeyStore: java.security.KeyStore getInstance(java.lang.String)>(varReplacer50035)


	 in Method: java.security.PrivateKey b(android.content.Context)
		TypestateError violating CrySL rule for java.security.KeyStore (on Object #8cd143a716446b33a74289c67e5fa951bc6138084df0232c0c4b53db77ad5dd2)
			Unexpected call to method getEntry on object of type java.security.KeyStore. Expect a call to one of the following methods load
			at statement: $r3 = virtualinvoke $r2.<java.security.KeyStore: java.security.KeyStore$Entry getEntry(java.lang.String,java.security.KeyStore$ProtectionParameter)>(varReplacer50003, varReplacer50004)


	 in Method: java.lang.String a(java.lang.String)
		RequiredPredicateError violating CrySL rule for java.security.Signature
			First parameter was not properly generated as generatedPrivkey
			at statement: virtualinvoke $r5.<java.security.Signature: void initSign(java.security.PrivateKey)>($r3)


	 in Method: void a(android.content.Context)
		RequiredPredicateError violating CrySL rule for java.security.KeyPairGenerator
			First parameter was not properly generated as preparedRSA
			at statement: virtualinvoke $r8.<java.security.KeyPairGenerator: void initialize(java.security.spec.AlgorithmParameterSpec)>($r7)


	 in Method: boolean a(byte[],java.security.PublicKey,byte[])
		RequiredPredicateError violating CrySL rule for java.security.Signature
			First parameter was not properly generated as generatedPubkey
			at statement: virtualinvoke $r4.<java.security.Signature: void initVerify(java.security.PublicKey)>($r2)


Findings in Java Class: com.mob.tools.network.NetworkHelper

	 in Method: java.net.HttpURLConnection getConnection(java.lang.String,com.mob.tools.network.NetworkHelper$NetworkTimeOut)
		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			Second parameter was not properly generated as generatedTrustManagers
			at statement: virtualinvoke $r14.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>(varReplacer61009, $r20, $r19)

		ConstraintError violating CrySL rule for javax.net.ssl.SSLContext (on Object #edbbd1d687e424866b703c9502847cca844d383f90ba33ef9bd0f298b32f16ad)
			First parameter (with value "TLS") should be any of {TLSv1.2}
			at statement: $r14 = staticinvoke <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String)>(varReplacer61011)

		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			First parameter was not properly generated as generatedKeyManagers
			at statement: virtualinvoke $r14.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>(varReplacer61009, $r20, $r19)


Findings in Java Class: com.tencent.bugly.proguard.s

	 in Method: java.net.HttpURLConnection a(java.lang.String,byte[],java.lang.String,java.util.Map)
		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			Second parameter was not properly generated as generatedTrustManagers
			at statement: virtualinvoke $r6.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>(varReplacer73717, $r20, $r7)

		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			Third parameter was not properly generated as randomized
			at statement: virtualinvoke $r6.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>(varReplacer73717, $r20, $r7)

		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			First parameter was not properly generated as generatedKeyManagers
			at statement: virtualinvoke $r6.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>(varReplacer73717, $r20, $r7)

		ConstraintError violating CrySL rule for javax.net.ssl.SSLContext (on Object #a813cfd5c956cb76f2e6c0c3efd1f199d72617b7332bacfec98c54bb25ef457)
			First parameter (with value "TLS") should be any of {TLSv1.2}
			at statement: $r6 = staticinvoke <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String)>(varReplacer73728)


Findings in Java Class: com.google.android.exoplayer2.source.hls.Aes128DataSource

	 in Method: long open(com.google.android.exoplayer2.upstream.DataSpec)
		IncompleteOperationError violating CrySL rule for javax.crypto.Cipher (on Object #46e1646a1626a9e3cca49fbb75b1b2c6afd2cc5fd7654df0d0bcbd14695dbf34)
			Operation on object of type javax.crypto.Cipher object not completed. Expected call to update, wrap, doFinal
			at statement: specialinvoke $r8.<javax.crypto.CipherInputStream: void <init>(java.io.InputStream,javax.crypto.Cipher)>($r6, $r1)

		RequiredPredicateError violating CrySL rule for javax.crypto.spec.SecretKeySpec
			First parameter was not properly generated as preparedKeyMaterial
			at statement: specialinvoke $r3.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r4, varReplacer75336)

		RequiredPredicateError violating CrySL rule for javax.crypto.Cipher
			Second parameter was not properly generated as generatedKey
			at statement: virtualinvoke $r1.<javax.crypto.Cipher: void init(int,java.security.Key,java.security.spec.AlgorithmParameterSpec)>(varReplacer75333, $r3, $r5)

		ConstraintError violating CrySL rule for javax.crypto.Cipher (on Object #46e1646a1626a9e3cca49fbb75b1b2c6afd2cc5fd7654df0d0bcbd14695dbf34)
			First parameter (with value "AES/CBC/PKCS7Padding") should be any of AES/CBC/{PKCS5Padding, ISO10126Padding}
			at statement: $r1 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer75335)

		RequiredPredicateError violating CrySL rule for javax.crypto.spec.IvParameterSpec
			First parameter was not properly generated as randomized
			at statement: specialinvoke $r5.<javax.crypto.spec.IvParameterSpec: void <init>(byte[])>($r4)


Findings in Java Class: com.vivo.push.util.u

	 in Method: boolean a(byte[],java.security.PublicKey,byte[])
		ConstraintError violating CrySL rule for java.security.Signature (on Object #e30f09dec76a9726ad46a459bae314c4b2efed0ce560dfeac57d77794cc1c8b2)
			First parameter (with value "MD5withRSA") should be any of {SHA256withRSA, SHA256withECDSA, SHA256withDSA, SHA224withDSA, NONEwithDSA, SHA1withDSA}
			at statement: $r3 = staticinvoke <java.security.Signature: java.security.Signature getInstance(java.lang.String)>(varReplacer83784)

		RequiredPredicateError violating CrySL rule for java.security.Signature
			First parameter was not properly generated as generatedPubkey
			at statement: virtualinvoke $r3.<java.security.Signature: void initVerify(java.security.PublicKey)>($r0)


	 in Method: java.security.PublicKey a(java.lang.String)
		RequiredPredicateError violating CrySL rule for java.security.KeyFactory
			First parameter was not properly generated as speccedKey
			at statement: $r7 = virtualinvoke $r6.<java.security.KeyFactory: java.security.PublicKey generatePublic(java.security.spec.KeySpec)>($r0)

		RequiredPredicateError violating CrySL rule for java.security.spec.X509EncodedKeySpec
			First parameter was not properly generated as preparedKeyMaterial
			at statement: specialinvoke $r0.<java.security.spec.X509EncodedKeySpec: void <init>(byte[])>($r5)


Findings in Java Class: com.xiaomi.push.bl

	 in Method: java.lang.String a(java.lang.String)
		ConstraintError violating CrySL rule for java.security.MessageDigest (on Object #213fa627d2e6c7360d643f527b80d4559d4f9cdbb60ec0a97f0ac362d145925f)
			First parameter (with value "SHA1") should be any of {SHA-256, SHA-384, SHA-512}
			at statement: $r1 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer83981)


Findings in Java Class: com.amap.api.mapcore.util.hj

	 in Method: byte[] a(byte[])
		IncompleteOperationError violating CrySL rule for javax.crypto.KeyGenerator (on Object #8c5ad0ab81e2c3387ce2a9ccb9c31b887ff2ddd459b330e2400d5e37505a05dc)
			Operation on object of type javax.crypto.KeyGenerator object not completed. Expected call to generateKey, init
			at statement: $r1 = staticinvoke <javax.crypto.KeyGenerator: javax.crypto.KeyGenerator getInstance(java.lang.String)>(varReplacer84982)


	 in Method: byte[] c(byte[],byte[],byte[])
		RequiredPredicateError violating CrySL rule for javax.crypto.Cipher
			Third parameter was not properly generated as preparedIV [ with CBC, It's required to use IVParameterSpec]
			at statement: virtualinvoke $r5.<javax.crypto.Cipher: void init(int,java.security.Key,java.security.spec.AlgorithmParameterSpec)>(varReplacer67253, $r4, $r1)

		RequiredPredicateError violating CrySL rule for javax.crypto.spec.IvParameterSpec
			First parameter was not properly generated as randomized
			at statement: specialinvoke $r7.<javax.crypto.spec.IvParameterSpec: void <init>(byte[])>($r3)

		RequiredPredicateError violating CrySL rule for javax.crypto.spec.SecretKeySpec
			First parameter was not properly generated as preparedKeyMaterial
			at statement: specialinvoke $r8.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r2, varReplacer67251)

		RequiredPredicateError violating CrySL rule for javax.crypto.Cipher
			Second parameter was not properly generated as generatedKey
			at statement: virtualinvoke $r5.<javax.crypto.Cipher: void init(int,java.security.Key,java.security.spec.AlgorithmParameterSpec)>(varReplacer67253, $r4, $r1)


	 in Method: byte[] d(byte[],byte[],byte[])
		RequiredPredicateError violating CrySL rule for javax.crypto.spec.SecretKeySpec
			First parameter was not properly generated as preparedKeyMaterial
			at statement: specialinvoke $r4.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r2, varReplacer67235)

		RequiredPredicateError violating CrySL rule for javax.crypto.Cipher
			Second parameter was not properly generated as generatedKey
			at statement: virtualinvoke $r5.<javax.crypto.Cipher: void init(int,java.security.Key,java.security.spec.AlgorithmParameterSpec)>(varReplacer67237, $r4, $r1)

		RequiredPredicateError violating CrySL rule for javax.crypto.spec.IvParameterSpec
			First parameter was not properly generated as randomized
			at statement: specialinvoke $r1.<javax.crypto.spec.IvParameterSpec: void <init>(byte[])>($r3)


	 in Method: byte[] a(byte[],java.security.Key)
		RequiredPredicateError violating CrySL rule for javax.crypto.Cipher
			Second parameter was not properly generated as generatedKey
			at statement: virtualinvoke $r3.<javax.crypto.Cipher: void init(int,java.security.Key)>(varReplacer7316, $r0)


Findings in Java Class: com.huawei.hms.utils.ReadApkFileUtil

	 in Method: boolean a(byte[],byte[],byte[],java.lang.String)
		ConstraintError violating CrySL rule for java.security.Signature (on Object #c10b61aa6ce0669983687c2a3876e5ab4e9fa84d8755aa772540712ea363191f)
			First parameter (with value "SHA384withRSA") should be any of {SHA256withRSA, SHA256withECDSA, SHA256withDSA, SHA224withDSA, NONEwithDSA, SHA1withDSA}
			at statement: $r5 = staticinvoke <java.security.Signature: java.security.Signature getInstance(java.lang.String)>($r4)

		RequiredPredicateError violating CrySL rule for java.security.KeyFactory
			First parameter was not properly generated as speccedKey
			at statement: $r7 = virtualinvoke $r6.<java.security.KeyFactory: java.security.PublicKey generatePublic(java.security.spec.KeySpec)>($r2)

		RequiredPredicateError violating CrySL rule for java.security.spec.X509EncodedKeySpec
			First parameter was not properly generated as preparedKeyMaterial
			at statement: specialinvoke $r2.<java.security.spec.X509EncodedKeySpec: void <init>(byte[])>($r3)

		RequiredPredicateError violating CrySL rule for java.security.Signature
			First parameter was not properly generated as generatedPubkey
			at statement: virtualinvoke $r5.<java.security.Signature: void initVerify(java.security.PublicKey)>($r7)


Findings in Java Class: com.vivo.push.util.t

	 in Method: java.lang.String g(android.content.Context,java.lang.String)
		ConstraintError violating CrySL rule for java.security.MessageDigest (on Object #4fd0ff56feed627f9233989c290fe5bc86823631cd1949d38487f42b623979a4)
			First parameter (with value "SHA256") should be any of {SHA-256, SHA-384, SHA-512}
			at statement: $r7 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer93699)


Findings in Java Class: com.mob.tools.network.NetworkHelper$SimpleX509TrustManager

	 in Method: void <init>(java.security.KeyStore,java.lang.String)
		ConstraintError violating CrySL rule for javax.net.ssl.TrustManagerFactory (on Object #cf1e6bc48abace38710c776c1d058f8ae05386ce34bfea402f8a8f8aa15ce6f6)
			First parameter (with value "X509") should be any of {PKIX, SunX509}
			at statement: $r4 = staticinvoke <javax.net.ssl.TrustManagerFactory: javax.net.ssl.TrustManagerFactory getInstance(java.lang.String)>(varReplacer96554)

		RequiredPredicateError violating CrySL rule for javax.net.ssl.TrustManagerFactory
			First parameter was not properly generated as generatedKeyStore
			at statement: virtualinvoke $r4.<javax.net.ssl.TrustManagerFactory: void init(java.security.KeyStore)>($r2)


Findings in Java Class: cn.sharesdk.wechat.utils.j

	 in Method: byte[] a(java.lang.String,java.lang.String,int)
		ConstraintError violating CrySL rule for java.security.MessageDigest (on Object #16eb6fc6418a0bc43ca77b442ba98b07b9f20db1ca726a7206eed56634da9a7)
			First parameter (with value "MD5") should be any of {SHA-256, SHA-384, SHA-512}
			at statement: $r6 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer97658)


Findings in Java Class: com.tencent.mm.opensdk.utils.b

	 in Method: java.lang.String e(byte[])
		ConstraintError violating CrySL rule for java.security.MessageDigest (on Object #624fe096ce121f8503c0ea2acdd72a99ca5d3bc0b82035de652bc94b5706d39)
			First parameter (with value "MD5") should be any of {SHA-256, SHA-384, SHA-512}
			at statement: $r3 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer98126)


Findings in Java Class: com.qcymall.earphonesetup.network.retrofit.HttpSSLUtils

	 in Method: com.qcymall.earphonesetup.network.retrofit.HttpSSLUtils$SSLParams getSslSocketFactory()
		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			Second parameter was not properly generated as generatedTrustManagers
			at statement: virtualinvoke $r4.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>($r3, $r14, varReplacer98141)

		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			First parameter was not properly generated as generatedKeyManagers
			at statement: virtualinvoke $r4.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>($r3, $r14, varReplacer98141)

		ConstraintError violating CrySL rule for javax.net.ssl.SSLContext (on Object #52400615a253c221162cc366cc748e741b3e2f76eeed44dae5647c7945deb1f7)
			First parameter (with value "TLS") should be any of {TLSv1.2}
			at statement: $r4 = staticinvoke <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String)>(varReplacer98143)

		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			Third parameter was not properly generated as randomized
			at statement: virtualinvoke $r4.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>($r3, $r14, varReplacer98141)


	 in Method: javax.net.ssl.KeyManager[] prepareKeyManager(java.io.InputStream,java.lang.String)
		ConstraintError violating CrySL rule for java.security.KeyStore (on Object #3e359c01465754d5f3d4684b1bbb64034068dc1f4b66d82994b8a12a8bb08edc)
			First parameter (with value "BKS") should be any of {JCEKS, JKS, DKS, PKCS11, PKCS12}
			at statement: $r2 = staticinvoke <java.security.KeyStore: java.security.KeyStore getInstance(java.lang.String)>(varReplacer98150)

		NeverTypeOfError violating CrySL rule for java.security.KeyStore (on Object #3e359c01465754d5f3d4684b1bbb64034068dc1f4b66d82994b8a12a8bb08edc)
			Second parameter should never be of type java.lang.String.
			at statement: virtualinvoke $r2.<java.security.KeyStore: void load(java.io.InputStream,char[])>($r0, $r3)

		HardCodedError violating CrySL rule for java.security.KeyStore (on Object #3e359c01465754d5f3d4684b1bbb64034068dc1f4b66d82994b8a12a8bb08edc)
			Second parameter should never be hardcoded.
			at statement: virtualinvoke $r2.<java.security.KeyStore: void load(java.io.InputStream,char[])>($r0, $r3)

		RequiredPredicateError violating CrySL rule for javax.net.ssl.KeyManagerFactory
			First parameter was not properly generated as generatedKeyStore
			at statement: virtualinvoke $r5.<javax.net.ssl.KeyManagerFactory: void init(java.security.KeyStore,char[])>($r2, $r3)

		NeverTypeOfError violating CrySL rule for javax.net.ssl.KeyManagerFactory (on Object #623034483ac328a8e392b198b5382a2f602f865c40426187261865fb306cb696)
			Second parameter should never be of type java.lang.String.
			at statement: virtualinvoke $r5.<javax.net.ssl.KeyManagerFactory: void init(java.security.KeyStore,char[])>($r2, $r3)

		HardCodedError violating CrySL rule for javax.net.ssl.KeyManagerFactory (on Object #623034483ac328a8e392b198b5382a2f602f865c40426187261865fb306cb696)
			Second parameter should never be hardcoded.
			at statement: virtualinvoke $r5.<javax.net.ssl.KeyManagerFactory: void init(java.security.KeyStore,char[])>($r2, $r3)


Findings in Java Class: com.google.android.exoplayer2.upstream.cache.CachedContentIndex

	 in Method: boolean readFile()
		RequiredPredicateError violating CrySL rule for javax.crypto.spec.IvParameterSpec
			First parameter was not properly generated as randomized
			at statement: specialinvoke $r14.<javax.crypto.spec.IvParameterSpec: void <init>(byte[])>($r13)

		IncompleteOperationError violating CrySL rule for javax.crypto.CipherInputStream (on Object #bf95858fa5669389fe34388a27c4eb4fcb288c679f0b110e90c5c5b8dcf04a30)
			Operation on object of type javax.crypto.CipherInputStream object not completed. Expected call to read
			at statement: specialinvoke $r7.<java.io.DataInputStream: void <init>(java.io.InputStream)>($r15)


	 in Method: void writeFile()
		RequiredPredicateError violating CrySL rule for javax.crypto.spec.IvParameterSpec
			First parameter was not properly generated as randomized
			at statement: specialinvoke $r8.<javax.crypto.spec.IvParameterSpec: void <init>(byte[])>($r6)

		IncompleteOperationError violating CrySL rule for javax.crypto.CipherOutputStream (on Object #dadc3abd80ab175e2a8cb465d21ff9cca1f3896811eda25fff2b253d3368c9f5)
			Operation on object of type javax.crypto.CipherOutputStream object not completed. Expected call to write
			at statement: specialinvoke $r1.<java.io.DataOutputStream: void <init>(java.io.OutputStream)>($r11)


Findings in Java Class: com.amap.api.mapcore.util.iv

	 in Method: void <init>(int,int,java.net.Proxy,boolean,com.amap.api.mapcore.util.is$a)
		ConstraintError violating CrySL rule for javax.net.ssl.SSLContext (on Object #cdbd777fda8727894bc5e00b1710e8697bed07d9e69a8320e240b5d6c248b119)
			First parameter (with value "TLS") should be any of {TLSv1.2}
			at statement: $r4 = staticinvoke <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String)>(varReplacer103437)

		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			First parameter was not properly generated as generatedKeyManagers
			at statement: virtualinvoke $r4.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>(varReplacer103434, varReplacer103434, varReplacer103434)

		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			Third parameter was not properly generated as randomized
			at statement: virtualinvoke $r4.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>(varReplacer103434, varReplacer103434, varReplacer103434)

		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			Second parameter was not properly generated as generatedTrustManagers
			at statement: virtualinvoke $r4.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>(varReplacer103434, varReplacer103434, varReplacer103434)


Findings in Java Class: com.huawei.secure.android.common.ssl.SecureX509TrustManager

	 in Method: void a(java.io.InputStream,java.lang.String)
		ConstraintError violating CrySL rule for java.security.KeyStore (on Object #5148d04fdc352d03b4604eb13f357392312f2c07913c995da2af6075dcb7d341)
			First parameter (with value "bks") should be any of {JCEKS, JKS, DKS, PKCS11, PKCS12}
			at statement: $r4 = staticinvoke <java.security.KeyStore: java.security.KeyStore getInstance(java.lang.String)>(varReplacer104061)

		ConstraintError violating CrySL rule for javax.net.ssl.TrustManagerFactory (on Object #82ba3adfddc57d928199b124099306f2bf56c52be65fc00412b0e2440836f77d)
			First parameter (with value "X509") should be any of {PKIX, SunX509}
			at statement: $r3 = staticinvoke <javax.net.ssl.TrustManagerFactory: javax.net.ssl.TrustManagerFactory getInstance(java.lang.String)>(varReplacer104058)

		RequiredPredicateError violating CrySL rule for javax.net.ssl.TrustManagerFactory
			First parameter was not properly generated as generatedKeyStore
			at statement: virtualinvoke $r3.<javax.net.ssl.TrustManagerFactory: void init(java.security.KeyStore)>($r4)

		NeverTypeOfError violating CrySL rule for java.security.KeyStore (on Object #5148d04fdc352d03b4604eb13f357392312f2c07913c995da2af6075dcb7d341)
			Second parameter should never be of type java.lang.String.
			at statement: virtualinvoke $r4.<java.security.KeyStore: void load(java.io.InputStream,char[])>($r1, $r5)

		HardCodedError violating CrySL rule for java.security.KeyStore (on Object #5148d04fdc352d03b4604eb13f357392312f2c07913c995da2af6075dcb7d341)
			Second parameter should never be hardcoded.
			at statement: virtualinvoke $r4.<java.security.KeyStore: void load(java.io.InputStream,char[])>($r1, $r5)


Findings in Java Class: okhttp3.internal.platform.ConscryptPlatform

	 in Method: javax.net.ssl.SSLContext newSSLContext()
		ConstraintError violating CrySL rule for javax.net.ssl.SSLContext (on Object #9f6c3f9e4094dac175a2b8a764528257139e03a9b7bad126370aa427c625b799)
			First parameter (with value "TLS") should be any of {TLSv1.2}
			at statement: $r1 = staticinvoke <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String,java.security.Provider)>(varReplacer104408, $r2)


	 in Method: javax.net.ssl.X509TrustManager platformTrustManager()
		RequiredPredicateError violating CrySL rule for javax.net.ssl.TrustManagerFactory
			First parameter was not properly generated as generatedKeyStore
			at statement: virtualinvoke $r2.<javax.net.ssl.TrustManagerFactory: void init(java.security.KeyStore)>(varReplacer69004)


	 in Method: javax.net.ssl.SSLSocketFactory newSslSocketFactory(javax.net.ssl.X509TrustManager)
		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			Third parameter was not properly generated as randomized
			at statement: virtualinvoke $r2.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>(varReplacer69025, $r3, varReplacer69025)


Findings in Java Class: okhttp3.internal.platform.OpenJSSEPlatform

	 in Method: javax.net.ssl.SSLContext newSSLContext()
		ConstraintError violating CrySL rule for javax.net.ssl.SSLContext (on Object #f0adba4d455b941069e04f1c6f875a79af8026253d38eb374e27440be8b7fefa)
			First parameter (with value "TLSv1.3") should be any of {TLSv1.2}
			at statement: $r1 = staticinvoke <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String,java.security.Provider)>(varReplacer104411, $r2)


	 in Method: javax.net.ssl.X509TrustManager platformTrustManager()
		RequiredPredicateError violating CrySL rule for javax.net.ssl.TrustManagerFactory
			First parameter was not properly generated as generatedKeyStore
			at statement: virtualinvoke $r3.<javax.net.ssl.TrustManagerFactory: void init(java.security.KeyStore)>(varReplacer69009)


Findings in Java Class: okhttp3.internal.platform.Platform

	 in Method: javax.net.ssl.SSLContext newSSLContext()
		ConstraintError violating CrySL rule for javax.net.ssl.SSLContext (on Object #e346e70c3ec630759c2cf893db8eea91edef64e8a2697a1309b6cb72d644444d)
			First parameter (with value "TLS") should be any of {TLSv1.2}
			at statement: $r1 = staticinvoke <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String)>(varReplacer104412)


	 in Method: javax.net.ssl.SSLSocketFactory newSslSocketFactory(javax.net.ssl.X509TrustManager)
		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			Second parameter was not properly generated as generatedTrustManagers
			at statement: virtualinvoke $r2.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>(varReplacer69028, $r3, varReplacer69028)

		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			First parameter was not properly generated as generatedKeyManagers
			at statement: virtualinvoke $r2.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>(varReplacer69028, $r3, varReplacer69028)

		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			Third parameter was not properly generated as randomized
			at statement: virtualinvoke $r2.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>(varReplacer69028, $r3, varReplacer69028)


	 in Method: javax.net.ssl.X509TrustManager platformTrustManager()
		RequiredPredicateError violating CrySL rule for javax.net.ssl.TrustManagerFactory
			First parameter was not properly generated as generatedKeyStore
			at statement: virtualinvoke $r2.<javax.net.ssl.TrustManagerFactory: void init(java.security.KeyStore)>(varReplacer69013)


Findings in Java Class: okhttp3.internal.platform.BouncyCastlePlatform

	 in Method: javax.net.ssl.SSLContext newSSLContext()
		ConstraintError violating CrySL rule for javax.net.ssl.SSLContext (on Object #26cc40f26cc398002cc0e0582b11b55b2c65fabf70c9214677bc3f430036b2f4)
			First parameter (with value "TLS") should be any of {TLSv1.2}
			at statement: $r1 = staticinvoke <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String,java.security.Provider)>(varReplacer104414, $r2)


	 in Method: javax.net.ssl.X509TrustManager platformTrustManager()
		RequiredPredicateError violating CrySL rule for javax.net.ssl.TrustManagerFactory
			First parameter was not properly generated as generatedKeyStore
			at statement: virtualinvoke $r1.<javax.net.ssl.TrustManagerFactory: void init(java.security.KeyStore)>(varReplacer69022)


Findings in Java Class: com.huawei.agconnect.config.impl.i

	 in Method: javax.crypto.SecretKey a(byte[],byte[],byte[],byte[],int)
		RequiredPredicateError violating CrySL rule for javax.crypto.SecretKeyFactory
			First parameter was not properly generated as speccedKey
			at statement: $r8 = virtualinvoke $r5.<javax.crypto.SecretKeyFactory: javax.crypto.SecretKey generateSecret(java.security.spec.KeySpec)>($r6)

		IncompleteOperationError violating CrySL rule for javax.crypto.spec.PBEKeySpec (on Object #9b1515b54c0bb50958091e5d3c67020da8cdd179c6779bacb010d0c831f6db97)
			Operation on object of type javax.crypto.spec.PBEKeySpec object not completed. Expected call to clearPassword
			at statement: $r8 = virtualinvoke $r5.<javax.crypto.SecretKeyFactory: javax.crypto.SecretKey generateSecret(java.security.spec.KeySpec)>($r6)

		RequiredPredicateError violating CrySL rule for javax.crypto.spec.PBEKeySpec
			Second parameter was not properly generated as randomized
			at statement: specialinvoke $r6.<javax.crypto.spec.PBEKeySpec: void <init>(char[],byte[],int,int)>($r7, $r0, $i0, varReplacer104625)

		RequiredPredicateError violating CrySL rule for javax.crypto.spec.SecretKeySpec
			First parameter was not properly generated as preparedKeyMaterial
			at statement: specialinvoke $r9.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r1, varReplacer104628)

		NeverTypeOfError violating CrySL rule for javax.crypto.spec.PBEKeySpec (on Object #9b1515b54c0bb50958091e5d3c67020da8cdd179c6779bacb010d0c831f6db97)
			First parameter should never be of type java.lang.String.
			at statement: specialinvoke $r6.<javax.crypto.spec.PBEKeySpec: void <init>(char[],byte[],int,int)>($r7, $r0, $i0, varReplacer104625)

		HardCodedError violating CrySL rule for javax.crypto.spec.PBEKeySpec (on Object #9b1515b54c0bb50958091e5d3c67020da8cdd179c6779bacb010d0c831f6db97)
			First parameter should never be hardcoded.
			at statement: specialinvoke $r6.<javax.crypto.spec.PBEKeySpec: void <init>(char[],byte[],int,int)>($r7, $r0, $i0, varReplacer104625)

		ConstraintError violating CrySL rule for javax.crypto.SecretKeyFactory (on Object #db2485e661087a466d8103c920740eaad2b273c4f923b16c6eaaa3e3c38e35e3)
			First parameter (with value "PBKDF2WithHmacSHA1") should be any of {PBKDF2WithHmacSHA512, PBKDF2WithHmacSHA384, PBKDF2WithHmacSHA256, PBKDF2WithHmacSHA224, PBEWithHmacSHA512AndAES_128, PBEWithHmacSHA384AndAES_128, PBEWithHmacSHA384AndAES_128, PBEWithHmacSHA224AndAES_128, PBEWithHmacSHA256AndAES_128, PBEWithHmacSHA224AndAES_256, PBEWithHmacSHA256AndAES_256, PBEWithHmacSHA384AndAES_256, PBEWithHmacSHA512AndAES_256}
			at statement: $r5 = staticinvoke <javax.crypto.SecretKeyFactory: javax.crypto.SecretKeyFactory getInstance(java.lang.String)>(varReplacer104627)

		ConstraintError violating CrySL rule for javax.crypto.spec.PBEKeySpec (on Object #9b1515b54c0bb50958091e5d3c67020da8cdd179c6779bacb010d0c831f6db97)
			Third parameter (with value 5000)Variable iterationCountmust be  at least 10000
			at statement: specialinvoke $r6.<javax.crypto.spec.PBEKeySpec: void <init>(char[],byte[],int,int)>($r7, $r0, $i0, varReplacer104625)


	 in Method: byte[] a(javax.crypto.SecretKey,byte[])
		RequiredPredicateError violating CrySL rule for javax.crypto.spec.IvParameterSpec
			First parameter was not properly generated as randomized
			at statement: specialinvoke $r0.<javax.crypto.spec.IvParameterSpec: void <init>(byte[])>($r3)

		RequiredPredicateError violating CrySL rule for javax.crypto.Cipher
			Second parameter was not properly generated as generatedKey
			at statement: virtualinvoke $r4.<javax.crypto.Cipher: void init(int,java.security.Key,java.security.spec.AlgorithmParameterSpec)>(varReplacer99652, $r1, $r0)


Findings in Java Class: com.google.android.exoplayer2.source.hls.HlsMediaChunk

	 in Method: void maybeLoadInitData()
		IncompleteOperationError violating CrySL rule for javax.crypto.Cipher (on Object #edbe0506ad6dbea1c27946bbae618d47af4a6f873049cdb0788f3c941182f678)
			Operation on object of type javax.crypto.Cipher object not completed. Expected call to init, update, wrap, doFinal
			at statement: $l2 = interfaceinvoke $r4.<com.google.android.exoplayer2.upstream.DataSource: long open(com.google.android.exoplayer2.upstream.DataSpec)>($r2)


	 in Method: void loadMedia()
		IncompleteOperationError violating CrySL rule for javax.crypto.Cipher (on Object #edbe0506ad6dbea1c27946bbae618d47af4a6f873049cdb0788f3c941182f678)
			Operation on object of type javax.crypto.Cipher object not completed. Expected call to init, update, wrap, doFinal
			at statement: $l4 = interfaceinvoke $r5.<com.google.android.exoplayer2.upstream.DataSource: long open(com.google.android.exoplayer2.upstream.DataSpec)>($r2)


Findings in Java Class: com.google.android.exoplayer2.upstream.cache.CacheDataSource

	 in Method: long open(com.google.android.exoplayer2.upstream.DataSpec)
		IncompleteOperationError violating CrySL rule for javax.crypto.Cipher (on Object #edbe0506ad6dbea1c27946bbae618d47af4a6f873049cdb0788f3c941182f678)
			Operation on object of type javax.crypto.Cipher object not completed. Expected call to init, update, wrap, doFinal
			at statement: specialinvoke r0.<com.google.android.exoplayer2.upstream.cache.CacheDataSource: void handleBeforeThrow(java.io.IOException)>($r8)

		IncompleteOperationError violating CrySL rule for javax.crypto.Cipher (on Object #edbe0506ad6dbea1c27946bbae618d47af4a6f873049cdb0788f3c941182f678)
			Operation on object of type javax.crypto.Cipher object not completed. Expected call to init, update, wrap, doFinal
			at statement: $i0 = specialinvoke r0.<com.google.android.exoplayer2.upstream.cache.CacheDataSource: int shouldIgnoreCacheForRequest(com.google.android.exoplayer2.upstream.DataSpec)>($r1)

		IncompleteOperationError violating CrySL rule for javax.crypto.Cipher (on Object #edbe0506ad6dbea1c27946bbae618d47af4a6f873049cdb0788f3c941182f678)
			Operation on object of type javax.crypto.Cipher object not completed. Expected call to init, update, wrap, doFinal
			at statement: specialinvoke r0.<com.google.android.exoplayer2.upstream.cache.CacheDataSource: void notifyCacheIgnored(int)>($i0)


	 in Method: void close()
		IncompleteOperationError violating CrySL rule for javax.crypto.Cipher (on Object #edbe0506ad6dbea1c27946bbae618d47af4a6f873049cdb0788f3c941182f678)
			Operation on object of type javax.crypto.Cipher object not completed. Expected call to init, update, wrap, doFinal
			at statement: specialinvoke r0.<com.google.android.exoplayer2.upstream.cache.CacheDataSource: void handleBeforeThrow(java.io.IOException)>($r2)


	 in Method: int read(byte[],int,int)
		IncompleteOperationError violating CrySL rule for javax.crypto.Cipher (on Object #edbe0506ad6dbea1c27946bbae618d47af4a6f873049cdb0788f3c941182f678)
			Operation on object of type javax.crypto.Cipher object not completed. Expected call to init, update, wrap, doFinal
			at statement: specialinvoke r0.<com.google.android.exoplayer2.upstream.cache.CacheDataSource: void handleBeforeThrow(java.io.IOException)>($r4)


Findings in Java Class: com.google.android.exoplayer2.upstream.AssetDataSource

	 in Method: void close()
		IncompleteOperationError violating CrySL rule for javax.crypto.Cipher (on Object #edbe0506ad6dbea1c27946bbae618d47af4a6f873049cdb0788f3c941182f678)
			Operation on object of type javax.crypto.Cipher object not completed. Expected call to init, update, wrap, doFinal
			at statement: interfaceinvoke $r3.<com.google.android.exoplayer2.upstream.TransferListener: void onTransferEnd(java.lang.Object)>(r0)


Findings in Java Class: com.google.android.exoplayer2.offline.ProgressiveDownloader

	 in Method: void download()
		IncompleteOperationError violating CrySL rule for javax.crypto.Cipher (on Object #edbe0506ad6dbea1c27946bbae618d47af4a6f873049cdb0788f3c941182f678)
			Operation on object of type javax.crypto.Cipher object not completed. Expected call to init, update, wrap, doFinal
			at statement: staticinvoke <com.google.android.exoplayer2.upstream.cache.CacheUtil: void cache(com.google.android.exoplayer2.upstream.DataSpec,com.google.android.exoplayer2.upstream.cache.Cache,com.google.android.exoplayer2.upstream.cache.CacheDataSource,byte[],com.google.android.exoplayer2.util.PriorityTaskManager,int,com.google.android.exoplayer2.upstream.cache.CacheUtil$CachingCounters,java.util.concurrent.atomic.AtomicBoolean,boolean)>($r7, $r1, $r2, $r3, $r4, varReplacer40399, $r5, $r6, varReplacer40400)


Findings in Java Class: com.google.android.exoplayer2.upstream.FileDataSource

	 in Method: void close()
		IncompleteOperationError violating CrySL rule for javax.crypto.Cipher (on Object #edbe0506ad6dbea1c27946bbae618d47af4a6f873049cdb0788f3c941182f678)
			Operation on object of type javax.crypto.Cipher object not completed. Expected call to init, update, wrap, doFinal
			at statement: interfaceinvoke $r3.<com.google.android.exoplayer2.upstream.TransferListener: void onTransferEnd(java.lang.Object)>(r0)


Findings in Java Class: com.google.android.exoplayer2.upstream.ContentDataSource

	 in Method: void close()
		IncompleteOperationError violating CrySL rule for javax.crypto.Cipher (on Object #edbe0506ad6dbea1c27946bbae618d47af4a6f873049cdb0788f3c941182f678)
			Operation on object of type javax.crypto.Cipher object not completed. Expected call to init, update, wrap, doFinal
			at statement: interfaceinvoke $r3.<com.google.android.exoplayer2.upstream.TransferListener: void onTransferEnd(java.lang.Object)>(r0)

		IncompleteOperationError violating CrySL rule for javax.crypto.Cipher (on Object #edbe0506ad6dbea1c27946bbae618d47af4a6f873049cdb0788f3c941182f678)
			Operation on object of type javax.crypto.Cipher object not completed. Expected call to init, update, wrap, doFinal
			at statement: interfaceinvoke $r3.<com.google.android.exoplayer2.upstream.TransferListener: void onTransferEnd(java.lang.Object)>(r0)

		IncompleteOperationError violating CrySL rule for javax.crypto.Cipher (on Object #edbe0506ad6dbea1c27946bbae618d47af4a6f873049cdb0788f3c941182f678)
			Operation on object of type javax.crypto.Cipher object not completed. Expected call to init, update, wrap, doFinal
			at statement: interfaceinvoke $r3.<com.google.android.exoplayer2.upstream.TransferListener: void onTransferEnd(java.lang.Object)>(r0)


Findings in Java Class: com.google.android.exoplayer2.source.chunk.ContainerMediaChunk

	 in Method: void load()
		IncompleteOperationError violating CrySL rule for javax.crypto.Cipher (on Object #edbe0506ad6dbea1c27946bbae618d47af4a6f873049cdb0788f3c941182f678)
			Operation on object of type javax.crypto.Cipher object not completed. Expected call to init, update, wrap, doFinal
			at statement: $l2 = interfaceinvoke $r4.<com.google.android.exoplayer2.upstream.DataSource: long open(com.google.android.exoplayer2.upstream.DataSpec)>($r2)


Findings in Java Class: com.google.android.exoplayer2.upstream.DefaultHttpDataSource

	 in Method: long open(com.google.android.exoplayer2.upstream.DataSpec)
		IncompleteOperationError violating CrySL rule for javax.crypto.Cipher (on Object #edbe0506ad6dbea1c27946bbae618d47af4a6f873049cdb0788f3c941182f678)
			Operation on object of type javax.crypto.Cipher object not completed. Expected call to init, update, wrap, doFinal
			at statement: specialinvoke r0.<com.google.android.exoplayer2.upstream.DefaultHttpDataSource: void closeConnectionQuietly()>()

		IncompleteOperationError violating CrySL rule for javax.crypto.Cipher (on Object #edbe0506ad6dbea1c27946bbae618d47af4a6f873049cdb0788f3c941182f678)
			Operation on object of type javax.crypto.Cipher object not completed. Expected call to init, update, wrap, doFinal
			at statement: specialinvoke r0.<com.google.android.exoplayer2.upstream.DefaultHttpDataSource: void closeConnectionQuietly()>()

		IncompleteOperationError violating CrySL rule for javax.crypto.Cipher (on Object #edbe0506ad6dbea1c27946bbae618d47af4a6f873049cdb0788f3c941182f678)
			Operation on object of type javax.crypto.Cipher object not completed. Expected call to init, update, wrap, doFinal
			at statement: specialinvoke r0.<com.google.android.exoplayer2.upstream.DefaultHttpDataSource: void closeConnectionQuietly()>()

		IncompleteOperationError violating CrySL rule for javax.crypto.Cipher (on Object #edbe0506ad6dbea1c27946bbae618d47af4a6f873049cdb0788f3c941182f678)
			Operation on object of type javax.crypto.Cipher object not completed. Expected call to init, update, wrap, doFinal
			at statement: specialinvoke r0.<com.google.android.exoplayer2.upstream.DefaultHttpDataSource: void closeConnectionQuietly()>()


	 in Method: void skipInternal()
		IncompleteOperationError violating CrySL rule for javax.crypto.Cipher (on Object #edbe0506ad6dbea1c27946bbae618d47af4a6f873049cdb0788f3c941182f678)
			Operation on object of type javax.crypto.Cipher object not completed. Expected call to init, update, wrap, doFinal
			at statement: interfaceinvoke $r6.<com.google.android.exoplayer2.upstream.TransferListener: void onBytesTransferred(java.lang.Object,int)>(r0, $i3)


	 in Method: void close()
		IncompleteOperationError violating CrySL rule for javax.crypto.Cipher (on Object #edbe0506ad6dbea1c27946bbae618d47af4a6f873049cdb0788f3c941182f678)
			Operation on object of type javax.crypto.Cipher object not completed. Expected call to init, update, wrap, doFinal
			at statement: interfaceinvoke $r6.<com.google.android.exoplayer2.upstream.TransferListener: void onTransferEnd(java.lang.Object)>(r0)

		IncompleteOperationError violating CrySL rule for javax.crypto.Cipher (on Object #edbe0506ad6dbea1c27946bbae618d47af4a6f873049cdb0788f3c941182f678)
			Operation on object of type javax.crypto.Cipher object not completed. Expected call to init, update, wrap, doFinal
			at statement: specialinvoke r0.<com.google.android.exoplayer2.upstream.DefaultHttpDataSource: void closeConnectionQuietly()>()


	 in Method: java.net.HttpURLConnection makeConnection(com.google.android.exoplayer2.upstream.DataSpec)
		IncompleteOperationError violating CrySL rule for javax.crypto.Cipher (on Object #edbe0506ad6dbea1c27946bbae618d47af4a6f873049cdb0788f3c941182f678)
			Operation on object of type javax.crypto.Cipher object not completed. Expected call to init, update, wrap, doFinal
			at statement: $r6 = specialinvoke r0.<com.google.android.exoplayer2.upstream.DefaultHttpDataSource: java.net.HttpURLConnection makeConnection(java.net.URL,byte[],long,long,boolean,boolean)>($r2, $r5, $l2, $l0, $z0, varReplacer109788)


Findings in Java Class: com.google.android.exoplayer2.upstream.DataSourceInputStream

	 in Method: int read(byte[],int,int)
		IncompleteOperationError violating CrySL rule for javax.crypto.Cipher (on Object #edbe0506ad6dbea1c27946bbae618d47af4a6f873049cdb0788f3c941182f678)
			Operation on object of type javax.crypto.Cipher object not completed. Expected call to init, update, wrap, doFinal
			at statement: $i1 = interfaceinvoke $r2.<com.google.android.exoplayer2.upstream.DataSource: int read(byte[],int,int)>($r1, $i1, $i0)


	 in Method: void checkOpened()
		IncompleteOperationError violating CrySL rule for javax.crypto.Cipher (on Object #edbe0506ad6dbea1c27946bbae618d47af4a6f873049cdb0788f3c941182f678)
			Operation on object of type javax.crypto.Cipher object not completed. Expected call to init, update, wrap, doFinal
			at statement: interfaceinvoke $r2.<com.google.android.exoplayer2.upstream.DataSource: long open(com.google.android.exoplayer2.upstream.DataSpec)>($r1)


Findings in Java Class: com.google.android.exoplayer2.upstream.cache.CacheUtil

	 in Method: void cache(com.google.android.exoplayer2.upstream.DataSpec,com.google.android.exoplayer2.upstream.cache.Cache,com.google.android.exoplayer2.upstream.cache.CacheDataSource,byte[],com.google.android.exoplayer2.util.PriorityTaskManager,int,com.google.android.exoplayer2.upstream.cache.CacheUtil$CachingCounters,java.util.concurrent.atomic.AtomicBoolean,boolean)
		IncompleteOperationError violating CrySL rule for javax.crypto.Cipher (on Object #edbe0506ad6dbea1c27946bbae618d47af4a6f873049cdb0788f3c941182f678)
			Operation on object of type javax.crypto.Cipher object not completed. Expected call to init, update, wrap, doFinal
			at statement: $l6 = staticinvoke <com.google.android.exoplayer2.upstream.cache.CacheUtil: long readAndDiscard(com.google.android.exoplayer2.upstream.DataSpec,long,long,com.google.android.exoplayer2.upstream.DataSource,byte[],com.google.android.exoplayer2.util.PriorityTaskManager,int,com.google.android.exoplayer2.upstream.cache.CacheUtil$CachingCounters)>($r0, $l2, $l5, $r2, $r3, $r4, $i0, $r5)

		IncompleteOperationError violating CrySL rule for javax.crypto.Cipher (on Object #edbe0506ad6dbea1c27946bbae618d47af4a6f873049cdb0788f3c941182f678)
			Operation on object of type javax.crypto.Cipher object not completed. Expected call to init, update, wrap, doFinal
			at statement: staticinvoke <com.google.android.exoplayer2.util.Assertions: java.lang.Object checkNotNull(java.lang.Object)>($r2)


	 in Method: long readAndDiscard(com.google.android.exoplayer2.upstream.DataSpec,long,long,com.google.android.exoplayer2.upstream.DataSource,byte[],com.google.android.exoplayer2.util.PriorityTaskManager,int,com.google.android.exoplayer2.upstream.cache.CacheUtil$CachingCounters)
		IncompleteOperationError violating CrySL rule for javax.crypto.Cipher (on Object #edbe0506ad6dbea1c27946bbae618d47af4a6f873049cdb0788f3c941182f678)
			Operation on object of type javax.crypto.Cipher object not completed. Expected call to init, update, wrap, doFinal
			at statement: $i3 = interfaceinvoke $r1.<com.google.android.exoplayer2.upstream.DataSource: int read(byte[],int,int)>($r2, varReplacer40404, $i3)

		IncompleteOperationError violating CrySL rule for javax.crypto.Cipher (on Object #edbe0506ad6dbea1c27946bbae618d47af4a6f873049cdb0788f3c941182f678)
			Operation on object of type javax.crypto.Cipher object not completed. Expected call to init, update, wrap, doFinal
			at statement: $l4 = interfaceinvoke $r1.<com.google.android.exoplayer2.upstream.DataSource: long open(com.google.android.exoplayer2.upstream.DataSpec)>($r10)

		IncompleteOperationError violating CrySL rule for javax.crypto.Cipher (on Object #edbe0506ad6dbea1c27946bbae618d47af4a6f873049cdb0788f3c941182f678)
			Operation on object of type javax.crypto.Cipher object not completed. Expected call to init, update, wrap, doFinal
			at statement: staticinvoke <com.google.android.exoplayer2.util.Util: void closeQuietly(com.google.android.exoplayer2.upstream.DataSource)>($r1)

		IncompleteOperationError violating CrySL rule for javax.crypto.Cipher (on Object #edbe0506ad6dbea1c27946bbae618d47af4a6f873049cdb0788f3c941182f678)
			Operation on object of type javax.crypto.Cipher object not completed. Expected call to init, update, wrap, doFinal
			at statement: staticinvoke <com.google.android.exoplayer2.util.Util: void closeQuietly(com.google.android.exoplayer2.upstream.DataSource)>($r1)


Findings in Java Class: com.google.android.exoplayer2.offline.SegmentDownloader

	 in Method: void download()
		IncompleteOperationError violating CrySL rule for javax.crypto.Cipher (on Object #edbe0506ad6dbea1c27946bbae618d47af4a6f873049cdb0788f3c941182f678)
			Operation on object of type javax.crypto.Cipher object not completed. Expected call to init, update, wrap, doFinal
			at statement: staticinvoke <com.google.android.exoplayer2.upstream.cache.CacheUtil: void cache(com.google.android.exoplayer2.upstream.DataSpec,com.google.android.exoplayer2.upstream.cache.Cache,com.google.android.exoplayer2.upstream.cache.CacheDataSource,byte[],com.google.android.exoplayer2.util.PriorityTaskManager,int,com.google.android.exoplayer2.upstream.cache.CacheUtil$CachingCounters,java.util.concurrent.atomic.AtomicBoolean,boolean)>($r8, $r9, $r10, $r5, $r1, varReplacer40394, $r3, $r2, varReplacer40395)


Findings in Java Class: com.google.android.exoplayer2.source.chunk.InitializationChunk

	 in Method: void load()
		IncompleteOperationError violating CrySL rule for javax.crypto.Cipher (on Object #edbe0506ad6dbea1c27946bbae618d47af4a6f873049cdb0788f3c941182f678)
			Operation on object of type javax.crypto.Cipher object not completed. Expected call to init, update, wrap, doFinal
			at statement: $l2 = interfaceinvoke $r4.<com.google.android.exoplayer2.upstream.DataSource: long open(com.google.android.exoplayer2.upstream.DataSpec)>($r2)


Findings in Java Class: com.google.android.exoplayer2.extractor.DefaultExtractorInput

	 in Method: int readFromDataSource(byte[],int,int,int,boolean)
		IncompleteOperationError violating CrySL rule for javax.crypto.Cipher (on Object #edbe0506ad6dbea1c27946bbae618d47af4a6f873049cdb0788f3c941182f678)
			Operation on object of type javax.crypto.Cipher object not completed. Expected call to init, update, wrap, doFinal
			at statement: $i0 = interfaceinvoke $r2.<com.google.android.exoplayer2.upstream.DataSource: int read(byte[],int,int)>($r1, $i0, $i1)


Findings in Java Class: com.google.android.exoplayer2.upstream.RawResourceDataSource

	 in Method: void close()
		IncompleteOperationError violating CrySL rule for javax.crypto.Cipher (on Object #edbe0506ad6dbea1c27946bbae618d47af4a6f873049cdb0788f3c941182f678)
			Operation on object of type javax.crypto.Cipher object not completed. Expected call to init, update, wrap, doFinal
			at statement: interfaceinvoke $r3.<com.google.android.exoplayer2.upstream.TransferListener: void onTransferEnd(java.lang.Object)>(r0)

		IncompleteOperationError violating CrySL rule for javax.crypto.Cipher (on Object #edbe0506ad6dbea1c27946bbae618d47af4a6f873049cdb0788f3c941182f678)
			Operation on object of type javax.crypto.Cipher object not completed. Expected call to init, update, wrap, doFinal
			at statement: interfaceinvoke $r3.<com.google.android.exoplayer2.upstream.TransferListener: void onTransferEnd(java.lang.Object)>(r0)

		IncompleteOperationError violating CrySL rule for javax.crypto.Cipher (on Object #edbe0506ad6dbea1c27946bbae618d47af4a6f873049cdb0788f3c941182f678)
			Operation on object of type javax.crypto.Cipher object not completed. Expected call to init, update, wrap, doFinal
			at statement: interfaceinvoke $r3.<com.google.android.exoplayer2.upstream.TransferListener: void onTransferEnd(java.lang.Object)>(r0)


Findings in Java Class: com.vivo.push.c.a

	 in Method: void a()
		ConstraintError violating CrySL rule for java.security.KeyStore (on Object #3a328381ae9c6dc3da1ceaac7521f9577e04a16d1d2c88bf0f91c59ac514cff6)
			First parameter (with value "AndroidKeyStore") should be any of {JCEKS, JKS, DKS, PKCS11, PKCS12}
			at statement: $r1 = staticinvoke <java.security.KeyStore: java.security.KeyStore getInstance(java.lang.String)>(varReplacer119888)


Findings in Java Class: com.huawei.hms.device.a

	 in Method: java.security.cert.X509Certificate a(android.content.Context,java.lang.String)
		NeverTypeOfError violating CrySL rule for java.security.KeyStore (on Object #714b410de53c49d18c719029ed8fab1ae2e917210a86c3ed20120551a87a72e7)
			Second parameter should never be of type java.lang.String.
			at statement: virtualinvoke $r3.<java.security.KeyStore: void load(java.io.InputStream,char[])>($r5, $r8)

		HardCodedError violating CrySL rule for java.security.KeyStore (on Object #714b410de53c49d18c719029ed8fab1ae2e917210a86c3ed20120551a87a72e7)
			Second parameter should never be hardcoded.
			at statement: virtualinvoke $r3.<java.security.KeyStore: void load(java.io.InputStream,char[])>($r5, $r8)

		ConstraintError violating CrySL rule for java.security.KeyStore (on Object #714b410de53c49d18c719029ed8fab1ae2e917210a86c3ed20120551a87a72e7)
			First parameter (with value "bks") should be any of {JCEKS, JKS, DKS, PKCS11, PKCS12}
			at statement: $r3 = staticinvoke <java.security.KeyStore: java.security.KeyStore getInstance(java.lang.String)>(varReplacer120075)


	 in Method: boolean a(java.security.cert.X509Certificate,byte[],byte[])
		RequiredPredicateError violating CrySL rule for java.security.Signature
			First parameter was not properly generated as generatedPubkey
			at statement: virtualinvoke $r4.<java.security.Signature: void initVerify(java.security.PublicKey)>($r5)


Findings in Java Class: cn.smssdk.net.h.c

	 in Method: byte[] a(byte[],byte[])
		ConstraintError violating CrySL rule for javax.crypto.Cipher (on Object #8b4dc1facbb2f7d60040e991dbe700340868187d56b6dff3e78d14aac12b2a40)
			First parameter (with value "DES/CBC/PKCS5Padding") should be any of {AES, PBEWithHmacSHA224AndAES_128, PBEWithHmacSHA256AndAES_128, PBEWithHmacSHA384AndAES_128, PBEWithHmacSHA512AndAES_128, PBEWithHmacSHA224AndAES_256, PBEWithHmacSHA256AndAES_256, PBEWithHmacSHA384AndAES_256, PBEWithHmacSHA512AndAES_256}
			at statement: $r6 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>($r5)

		RequiredPredicateError violating CrySL rule for javax.crypto.Cipher
			Second parameter was not properly generated as generatedKey
			at statement: virtualinvoke $r6.<javax.crypto.Cipher: void init(int,java.security.Key,java.security.spec.AlgorithmParameterSpec)>(varReplacer126718, $r4, $r1)


	 in Method: java.security.Key a(byte[])
		RequiredPredicateError violating CrySL rule for javax.crypto.SecretKeyFactory
			First parameter was not properly generated as speccedKey
			at statement: $r3 = virtualinvoke $r2.<javax.crypto.SecretKeyFactory: javax.crypto.SecretKey generateSecret(java.security.spec.KeySpec)>($r0)

		ConstraintError violating CrySL rule for javax.crypto.SecretKeyFactory (on Object #d16c6482950b57252d0c1daf5ded9a50afffa313380a9c0808d0094a077a0e18)
			First parameter (with value "DES") should be any of {PBKDF2WithHmacSHA512, PBKDF2WithHmacSHA384, PBKDF2WithHmacSHA256, PBKDF2WithHmacSHA224, PBEWithHmacSHA512AndAES_128, PBEWithHmacSHA384AndAES_128, PBEWithHmacSHA384AndAES_128, PBEWithHmacSHA224AndAES_128, PBEWithHmacSHA256AndAES_128, PBEWithHmacSHA224AndAES_256, PBEWithHmacSHA256AndAES_256, PBEWithHmacSHA384AndAES_256, PBEWithHmacSHA512AndAES_256}
			at statement: $r2 = staticinvoke <javax.crypto.SecretKeyFactory: javax.crypto.SecretKeyFactory getInstance(java.lang.String)>(varReplacer126719)


	 in Method: void <init>(java.lang.String,byte[])
		RequiredPredicateError violating CrySL rule for javax.crypto.spec.IvParameterSpec
			First parameter was not properly generated as randomized
			at statement: specialinvoke $r3.<javax.crypto.spec.IvParameterSpec: void <init>(byte[])>($r1)


Findings in Java Class: org.litepal.util.cipher.CipherUtil

	 in Method: java.lang.String md5Encrypt(java.lang.String)
		ConstraintError violating CrySL rule for java.security.MessageDigest (on Object #3afd92175c147a34aa5f9d219a6d2aa19f0226df784f60d1e9b2bd33a664829d)
			First parameter (with value "MD5") should be any of {SHA-256, SHA-384, SHA-512}
			at statement: $r1 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer133089)


Findings in Java Class: org.litepal.util.cipher.AESCrypt

	 in Method: byte[] encrypt(javax.crypto.spec.SecretKeySpec,byte[],byte[])
		RequiredPredicateError violating CrySL rule for javax.crypto.Cipher
			Second parameter was not properly generated as generatedKey
			at statement: virtualinvoke $r4.<javax.crypto.Cipher: void init(int,java.security.Key,java.security.spec.AlgorithmParameterSpec)>(varReplacer133103, $r2, $r1)

		ConstraintError violating CrySL rule for javax.crypto.Cipher (on Object #c9d2de794500eb2f2c606875c3e57d67832f8d337439cad50d103d5b5125673f)
			First parameter (with value "AES/CBC/PKCS7Padding") should be any of AES/CBC/{PKCS5Padding, ISO10126Padding}
			at statement: $r4 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer133102)

		RequiredPredicateError violating CrySL rule for javax.crypto.Cipher
			Third parameter was not properly generated as preparedIV [ with CBC, It's required to use IVParameterSpec]
			at statement: virtualinvoke $r4.<javax.crypto.Cipher: void init(int,java.security.Key,java.security.spec.AlgorithmParameterSpec)>(varReplacer133103, $r2, $r1)

		RequiredPredicateError violating CrySL rule for javax.crypto.spec.IvParameterSpec
			First parameter was not properly generated as randomized
			at statement: specialinvoke $r1.<javax.crypto.spec.IvParameterSpec: void <init>(byte[])>($r3)


	 in Method: byte[] decrypt(javax.crypto.spec.SecretKeySpec,byte[],byte[])
		ConstraintError violating CrySL rule for javax.crypto.Cipher (on Object #483338827adb69933c4c8b6757c79def06a7fb29b8f6c34df854e6dbd28ddca6)
			First parameter (with value "AES/CBC/PKCS7Padding") should be any of AES/CBC/{PKCS5Padding, ISO10126Padding}
			at statement: $r4 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer146786)

		RequiredPredicateError violating CrySL rule for javax.crypto.spec.IvParameterSpec
			First parameter was not properly generated as randomized
			at statement: specialinvoke $r1.<javax.crypto.spec.IvParameterSpec: void <init>(byte[])>($r3)

		RequiredPredicateError violating CrySL rule for javax.crypto.Cipher
			Second parameter was not properly generated as generatedKey
			at statement: virtualinvoke $r4.<javax.crypto.Cipher: void init(int,java.security.Key,java.security.spec.AlgorithmParameterSpec)>(varReplacer146787, $r2, $r1)


	 in Method: javax.crypto.spec.SecretKeySpec generateKey(java.lang.String)
		RequiredPredicateError violating CrySL rule for javax.crypto.spec.SecretKeySpec
			First parameter was not properly generated as preparedKeyMaterial
			at statement: specialinvoke $r3.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r2, varReplacer133109)


Findings in Java Class: com.amap.api.mapcore.util.fv

	 in Method: java.lang.String c(java.lang.String)
		ConstraintError violating CrySL rule for java.security.MessageDigest (on Object #145bb29596a87d51a33ad10f6590b03e58eec0aa0ed8907d6fccff6e9f6f286)
			First parameter (with value "MD5") should be any of {SHA-256, SHA-384, SHA-512}
			at statement: $r2 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer133868)


Findings in Java Class: okio.ByteString

	 in Method: okio.ByteString digest$okio(java.lang.String)
		ConstraintError violating CrySL rule for java.security.MessageDigest (on Object #ae39b036c5eeeba58d380660f68e23806935f12d2f5c9cefe65440425aa34f4a)
			First parameter (with value "MD5") should be any of {SHA-256, SHA-384, SHA-512}
			at statement: $r3 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>($r1)

		ConstraintError violating CrySL rule for java.security.MessageDigest (on Object #ae39b036c5eeeba58d380660f68e23806935f12d2f5c9cefe65440425aa34f4a)
			First parameter (with value "SHA-1") should be any of {SHA-256, SHA-384, SHA-512}
			at statement: $r3 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>($r1)


Findings in Java Class: okio.SegmentedByteString

	 in Method: okio.ByteString digest$okio(java.lang.String)
		ConstraintError violating CrySL rule for java.security.MessageDigest (on Object #6c960e488f21ae2f1d37981b7f790ff5823030d9f242d798118968e0f93ba357)
			First parameter (with value "MD5") should be any of {SHA-256, SHA-384, SHA-512}
			at statement: $r2 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>($r1)

		TypestateError violating CrySL rule for java.security.MessageDigest (on Object #6c960e488f21ae2f1d37981b7f790ff5823030d9f242d798118968e0f93ba357)
			Unexpected call to method <java.security.MessageDigest: byte[] digest()> on object of type java.security.MessageDigest. Expect a call to one of the following methods java.security.MessageDigest: void update(byte[],int,int),java.security.MessageDigest: void update(java.nio.ByteBuffer),java.security.MessageDigest: byte[] digest(byte[]),java.security.MessageDigest: void update(byte),java.security.MessageDigest: void update(byte[])
			at statement: $r6 = virtualinvoke $r2.<java.security.MessageDigest: byte[] digest()>()

		ConstraintError violating CrySL rule for java.security.MessageDigest (on Object #6c960e488f21ae2f1d37981b7f790ff5823030d9f242d798118968e0f93ba357)
			First parameter (with value "SHA-1") should be any of {SHA-256, SHA-384, SHA-512}
			at statement: $r2 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>($r1)


Findings in Java Class: com.qualcomm.qti.gaiaclient.core.utils.BytesUtils

	 in Method: byte[] getMD5FromUri(android.content.Context,android.net.Uri)
		TypestateError violating CrySL rule for java.security.MessageDigest (on Object #e788bcd1d9165c752b0256b1580c97ff4e5bda79a73292b6297ca1228285614c)
			Unexpected call to method <java.security.MessageDigest: byte[] digest()> on object of type java.security.MessageDigest. Expect a call to one of the following methods java.security.MessageDigest: void update(byte[],int,int),java.security.MessageDigest: void update(java.nio.ByteBuffer),java.security.MessageDigest: byte[] digest(byte[]),java.security.MessageDigest: void update(byte),java.security.MessageDigest: void update(byte[])
			at statement: $r5 = virtualinvoke $r6.<java.security.MessageDigest: byte[] digest()>()

		ConstraintError violating CrySL rule for java.security.MessageDigest (on Object #e788bcd1d9165c752b0256b1580c97ff4e5bda79a73292b6297ca1228285614c)
			First parameter (with value "MD5") should be any of {SHA-256, SHA-384, SHA-512}
			at statement: $r6 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer141673)


Findings in Java Class: com.amap.api.mapcore.util.eo

	 in Method: java.lang.String a(byte[],byte[],byte[])
		ConstraintError violating CrySL rule for javax.crypto.Cipher (on Object #1b16e5cd5da1981fba96b16f2d0b87f4599f34f48973ca3ba459568c96815aba)
			First parameter (with value "AES/CBC/NoPadding") should be any of AES/CBC/{PKCS5Padding, ISO10126Padding}
			at statement: $r5 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer150441)

		RequiredPredicateError violating CrySL rule for javax.crypto.spec.IvParameterSpec
			First parameter was not properly generated as randomized
			at statement: specialinvoke $r0.<javax.crypto.spec.IvParameterSpec: void <init>(byte[])>($r3)

		RequiredPredicateError violating CrySL rule for javax.crypto.spec.SecretKeySpec
			First parameter was not properly generated as preparedKeyMaterial
			at statement: specialinvoke $r4.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r2, varReplacer150444)

		RequiredPredicateError violating CrySL rule for javax.crypto.Cipher
			Second parameter was not properly generated as generatedKey
			at statement: virtualinvoke $r5.<javax.crypto.Cipher: void init(int,java.security.Key,java.security.spec.AlgorithmParameterSpec)>(varReplacer150442, $r4, $r0)


Findings in Java Class: com.huawei.hms.hatool.e

	 in Method: byte[] a(byte[],java.security.PublicKey)
		ConstraintError violating CrySL rule for javax.crypto.Cipher (on Object #7f872fd9a03c539c4fc47d7d8fce8ede704396da7fc4c826096582bc4723b44d)
			First parameter (with value "RSA/ECB/OAEPWITHSHA-1ANDMGF1PADDING") should be any of RSA/ECB/{NoPadding, PKCS1Padding, OAEPWithMD5AndMGF1Padding, OAEPWithSHA-224AndMGF1Padding, OAEPWithSHA-256AndMGF1Padding, OAEPWithSHA-384AndMGF1Padding, OAEPWithSHA-512AndMGF1Padding}
			at statement: $r8 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer163511)

		RequiredPredicateError violating CrySL rule for javax.crypto.Cipher
			Second parameter was not properly generated as generatedKey
			at statement: virtualinvoke $r8.<javax.crypto.Cipher: void init(int,java.security.Key)>(varReplacer163513, $r7)


	 in Method: java.security.PublicKey a(byte[])
		RequiredPredicateError violating CrySL rule for java.security.spec.X509EncodedKeySpec
			First parameter was not properly generated as preparedKeyMaterial
			at statement: specialinvoke $r0.<java.security.spec.X509EncodedKeySpec: void <init>(byte[])>($r1)

		RequiredPredicateError violating CrySL rule for java.security.KeyFactory
			First parameter was not properly generated as speccedKey
			at statement: $r3 = virtualinvoke $r2.<java.security.KeyFactory: java.security.PublicKey generatePublic(java.security.spec.KeySpec)>($r0)


Findings in Java Class: com.danikula.videocache.ProxyCacheUtils

	 in Method: java.lang.String computeMD5(java.lang.String)
		ConstraintError violating CrySL rule for java.security.MessageDigest (on Object #65449edf4f2fa3040d51678fe3b18755c055fb3c1a03028241cc3d162634498b)
			First parameter (with value "MD5") should be any of {SHA-256, SHA-384, SHA-512}
			at statement: $r1 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer167923)


Findings in Java Class: org.apache.http.impl.auth.DigestScheme

	 in Method: java.security.MessageDigest createMessageDigest(java.lang.String)
		ConstraintError violating CrySL rule for java.security.MessageDigest (on Object #bafd683999767fa653a59f6561b5fb73a4ec80f20b87a366e3f277c0d9c77bd)
			First parameter (with value "MD5") should be any of {SHA-256, SHA-384, SHA-512}
			at statement: $r4 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>($r3)


Findings in Java Class: net.lingala.zip4j.crypto.PBKDF2.MacBasedPRF

	 in Method: byte[] doFinal()
		TypestateError violating CrySL rule for javax.crypto.Mac (on Object #fe86d6df4f79d1062ebbc1599317d6572713990c2d231593223a215eef0fe89e)
			Unexpected call to method doFinal on object of type javax.crypto.Mac.
			at statement: $r1 = virtualinvoke $r2.<javax.crypto.Mac: byte[] doFinal()>()


	 in Method: void update(byte[],int,int)
		TypestateError violating CrySL rule for javax.crypto.Mac (on Object #fe86d6df4f79d1062ebbc1599317d6572713990c2d231593223a215eef0fe89e)
			Unexpected call to method update on object of type javax.crypto.Mac.
			at statement: virtualinvoke $r1.<javax.crypto.Mac: void update(byte[],int,int)>($r2, $i1, $i0)


	 in Method: byte[] doFinal(byte[])
		TypestateError violating CrySL rule for javax.crypto.Mac (on Object #fe86d6df4f79d1062ebbc1599317d6572713990c2d231593223a215eef0fe89e)
			Unexpected call to method <javax.crypto.Mac: byte[] doFinal(byte[])> on object of type javax.crypto.Mac. Expect a call to one of the following methods javax.crypto.Mac: void update(byte[]),javax.crypto.Mac: void doFinal(byte[],int),javax.crypto.Mac: byte[] doFinal(),javax.crypto.Mac: void update(byte),javax.crypto.Mac: void update(byte[],int,int)
			at statement: $r2 = virtualinvoke $r1.<javax.crypto.Mac: byte[] doFinal(byte[])>($r2)


	 in Method: void init(byte[])
		RequiredPredicateError violating CrySL rule for javax.crypto.Mac
			First parameter was not properly generated as generatedKey
			at statement: virtualinvoke $r4.<javax.crypto.Mac: void init(java.security.Key)>($r1)

		ConstraintError violating CrySL rule for javax.crypto.spec.SecretKeySpec (on Object #2c8b6542a35e929698f4560c93b5cf68fb53e0b3268e298dc399955f0bfa617b)
			Second parameter (with value "HmacSHA1") should be any of {AES, HmacSHA224, HmacSHA256, HmacSHA384, HmacSHA512}
			at statement: specialinvoke $r1.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r3, $r2)

		RequiredPredicateError violating CrySL rule for javax.crypto.spec.SecretKeySpec
			First parameter was not properly generated as preparedKeyMaterial
			at statement: specialinvoke $r1.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r3, $r2)


Findings in Java Class: net.lingala.zip4j.tasks.ExtractFileTask

	 in Method: void executeTask(net.lingala.zip4j.tasks.ExtractFileTask$ExtractFileTaskParameters,net.lingala.zip4j.progress.ProgressMonitor)
		IncompleteOperationError violating CrySL rule for javax.crypto.Mac (on Object #fe86d6df4f79d1062ebbc1599317d6572713990c2d231593223a215eef0fe89e)
			Operation on object of type javax.crypto.Mac object not completed. Expected call to update, doFinal
			at statement: virtualinvoke $r5.<net.lingala.zip4j.io.inputstream.ZipInputStream: void close()>()

		IncompleteOperationError violating CrySL rule for javax.crypto.Mac (on Object #fe86d6df4f79d1062ebbc1599317d6572713990c2d231593223a215eef0fe89e)
			Operation on object of type javax.crypto.Mac object not completed. Expected call to update, doFinal
			at statement: virtualinvoke r0.<net.lingala.zip4j.tasks.ExtractFileTask: void extractFile(net.lingala.zip4j.io.inputstream.ZipInputStream,net.lingala.zip4j.model.FileHeader,java.lang.String,java.lang.String,net.lingala.zip4j.progress.ProgressMonitor)>($r5, $r4, $r6, $r7, $r3)


Findings in Java Class: net.lingala.zip4j.io.outputstream.ZipOutputStream

	 in Method: void verifyZipParameters(net.lingala.zip4j.model.ZipParameters)
		IncompleteOperationError violating CrySL rule for javax.crypto.Mac (on Object #fe86d6df4f79d1062ebbc1599317d6572713990c2d231593223a215eef0fe89e)
			Operation on object of type javax.crypto.Mac object not completed. Expected call to update, doFinal
			at statement: $z0 = specialinvoke r0.<net.lingala.zip4j.io.outputstream.ZipOutputStream: boolean isEntryDirectory(java.lang.String)>($r4)


Findings in Java Class: net.lingala.zip4j.io.inputstream.InflaterInputStream

	 in Method: void fill()
		IncompleteOperationError violating CrySL rule for javax.crypto.Mac (on Object #fe86d6df4f79d1062ebbc1599317d6572713990c2d231593223a215eef0fe89e)
			Operation on object of type javax.crypto.Mac object not completed. Expected call to update, doFinal
			at statement: $i0 = specialinvoke r0.<net.lingala.zip4j.io.inputstream.DecompressedInputStream: int read(byte[],int,int)>($r1, varReplacer88908, $i0)


Findings in Java Class: net.lingala.zip4j.io.inputstream.ZipInputStream

	 in Method: void verifyCrc()
		IncompleteOperationError violating CrySL rule for javax.crypto.Mac (on Object #fe86d6df4f79d1062ebbc1599317d6572713990c2d231593223a215eef0fe89e)
			Operation on object of type javax.crypto.Mac object not completed. Expected call to update, doFinal
			at statement: $z0 = specialinvoke r0.<net.lingala.zip4j.io.inputstream.ZipInputStream: boolean isEncryptionMethodZipStandard(net.lingala.zip4j.model.LocalFileHeader)>($r1)


	 in Method: int read(byte[],int,int)
		IncompleteOperationError violating CrySL rule for javax.crypto.Mac (on Object #fe86d6df4f79d1062ebbc1599317d6572713990c2d231593223a215eef0fe89e)
			Operation on object of type javax.crypto.Mac object not completed. Expected call to update, doFinal
			at statement: $z0 = specialinvoke r0.<net.lingala.zip4j.io.inputstream.ZipInputStream: boolean isEncryptionMethodZipStandard(net.lingala.zip4j.model.LocalFileHeader)>($r2)


	 in Method: void verifyLocalFileHeader(net.lingala.zip4j.model.LocalFileHeader)
		IncompleteOperationError violating CrySL rule for javax.crypto.Mac (on Object #fe86d6df4f79d1062ebbc1599317d6572713990c2d231593223a215eef0fe89e)
			Operation on object of type javax.crypto.Mac object not completed. Expected call to update, doFinal
			at statement: $z0 = specialinvoke r0.<net.lingala.zip4j.io.inputstream.ZipInputStream: boolean isEntryDirectory(java.lang.String)>($r2)


Findings in Java Class: net.lingala.zip4j.crypto.AESDecrypter

	 in Method: byte[] deriveKey(byte[],char[],int,int)
		IncompleteOperationError violating CrySL rule for javax.crypto.Mac (on Object #fe86d6df4f79d1062ebbc1599317d6572713990c2d231593223a215eef0fe89e)
			Operation on object of type javax.crypto.Mac object not completed. Expected call to update, doFinal
			at statement: $r3 = virtualinvoke $r4.<net.lingala.zip4j.crypto.PBKDF2.PBKDF2Engine: byte[] deriveKey(char[],int)>($r1, $i1)


Findings in Java Class: net.lingala.zip4j.crypto.AESEncrpyter

	 in Method: byte[] deriveKey(byte[],char[],int,int)
		IncompleteOperationError violating CrySL rule for javax.crypto.Mac (on Object #fe86d6df4f79d1062ebbc1599317d6572713990c2d231593223a215eef0fe89e)
			Operation on object of type javax.crypto.Mac object not completed. Expected call to update, doFinal
			at statement: $r2 = virtualinvoke $r4.<net.lingala.zip4j.crypto.PBKDF2.PBKDF2Engine: byte[] deriveKey(char[],int)>($r3, $i1)


Findings in Java Class: net.lingala.zip4j.tasks.AbstractExtractFileTask

	 in Method: void extractFile(net.lingala.zip4j.io.inputstream.ZipInputStream,net.lingala.zip4j.model.FileHeader,java.lang.String,java.lang.String,net.lingala.zip4j.progress.ProgressMonitor)
		IncompleteOperationError violating CrySL rule for javax.crypto.Mac (on Object #fe86d6df4f79d1062ebbc1599317d6572713990c2d231593223a215eef0fe89e)
			Operation on object of type javax.crypto.Mac object not completed. Expected call to update, doFinal
			at statement: specialinvoke r0.<net.lingala.zip4j.tasks.AbstractExtractFileTask: void verifyNextEntry(net.lingala.zip4j.io.inputstream.ZipInputStream,net.lingala.zip4j.model.FileHeader)>($r3, $r4)


	 in Method: void verifyNextEntry(net.lingala.zip4j.io.inputstream.ZipInputStream,net.lingala.zip4j.model.FileHeader)
		IncompleteOperationError violating CrySL rule for javax.crypto.Mac (on Object #fe86d6df4f79d1062ebbc1599317d6572713990c2d231593223a215eef0fe89e)
			Operation on object of type javax.crypto.Mac object not completed. Expected call to update, doFinal
			at statement: $r4 = virtualinvoke $r2.<net.lingala.zip4j.io.inputstream.ZipInputStream: net.lingala.zip4j.model.LocalFileHeader getNextEntry(net.lingala.zip4j.model.FileHeader)>($r3)


Findings in Java Class: net.lingala.zip4j.tasks.AbstractAddFileToZipTask

	 in Method: void addFilesToZip(java.util.List,net.lingala.zip4j.progress.ProgressMonitor,net.lingala.zip4j.model.ZipParameters,java.nio.charset.Charset)
		IncompleteOperationError violating CrySL rule for javax.crypto.Mac (on Object #fe86d6df4f79d1062ebbc1599317d6572713990c2d231593223a215eef0fe89e)
			Operation on object of type javax.crypto.Mac object not completed. Expected call to update, doFinal
			at statement: virtualinvoke $r8.<net.lingala.zip4j.io.outputstream.ZipOutputStream: net.lingala.zip4j.model.FileHeader closeEntry()>()

		IncompleteOperationError violating CrySL rule for javax.crypto.Mac (on Object #fe86d6df4f79d1062ebbc1599317d6572713990c2d231593223a215eef0fe89e)
			Operation on object of type javax.crypto.Mac object not completed. Expected call to update, doFinal
			at statement: $r15 = virtualinvoke $r8.<net.lingala.zip4j.io.outputstream.ZipOutputStream: net.lingala.zip4j.model.FileHeader closeEntry()>()

		IncompleteOperationError violating CrySL rule for javax.crypto.Mac (on Object #fe86d6df4f79d1062ebbc1599317d6572713990c2d231593223a215eef0fe89e)
			Operation on object of type javax.crypto.Mac object not completed. Expected call to update, doFinal
			at statement: virtualinvoke $r8.<net.lingala.zip4j.io.outputstream.ZipOutputStream: void close()>()

		IncompleteOperationError violating CrySL rule for javax.crypto.Mac (on Object #fe86d6df4f79d1062ebbc1599317d6572713990c2d231593223a215eef0fe89e)
			Operation on object of type javax.crypto.Mac object not completed. Expected call to update, doFinal
			at statement: $r8 = virtualinvoke r0.<net.lingala.zip4j.tasks.AbstractAddFileToZipTask: net.lingala.zip4j.io.outputstream.ZipOutputStream initializeOutputStream(net.lingala.zip4j.io.outputstream.SplitOutputStream,java.nio.charset.Charset)>($r1, $r5)


Findings in Java Class: net.lingala.zip4j.tasks.AddStreamToZipTask

	 in Method: void executeTask(net.lingala.zip4j.tasks.AddStreamToZipTask$AddStreamToZipTaskParameters,net.lingala.zip4j.progress.ProgressMonitor)
		IncompleteOperationError violating CrySL rule for javax.crypto.Mac (on Object #fe86d6df4f79d1062ebbc1599317d6572713990c2d231593223a215eef0fe89e)
			Operation on object of type javax.crypto.Mac object not completed. Expected call to update, doFinal
			at statement: $r14 = virtualinvoke $r11.<net.lingala.zip4j.io.outputstream.ZipOutputStream: net.lingala.zip4j.model.FileHeader closeEntry()>()

		IncompleteOperationError violating CrySL rule for javax.crypto.Mac (on Object #fe86d6df4f79d1062ebbc1599317d6572713990c2d231593223a215eef0fe89e)
			Operation on object of type javax.crypto.Mac object not completed. Expected call to update, doFinal
			at statement: virtualinvoke $r11.<net.lingala.zip4j.io.outputstream.ZipOutputStream: void close()>()


Findings in Java Class: net.lingala.zip4j.tasks.ExtractAllFilesTask

	 in Method: void executeTask(net.lingala.zip4j.tasks.ExtractAllFilesTask$ExtractAllFilesTaskParameters,net.lingala.zip4j.progress.ProgressMonitor)
		IncompleteOperationError violating CrySL rule for javax.crypto.Mac (on Object #fe86d6df4f79d1062ebbc1599317d6572713990c2d231593223a215eef0fe89e)
			Operation on object of type javax.crypto.Mac object not completed. Expected call to update, doFinal
			at statement: virtualinvoke $r4.<net.lingala.zip4j.io.inputstream.ZipInputStream: void close()>()

		IncompleteOperationError violating CrySL rule for javax.crypto.Mac (on Object #fe86d6df4f79d1062ebbc1599317d6572713990c2d231593223a215eef0fe89e)
			Operation on object of type javax.crypto.Mac object not completed. Expected call to update, doFinal
			at statement: virtualinvoke r0.<net.lingala.zip4j.tasks.ExtractAllFilesTask: void extractFile(net.lingala.zip4j.io.inputstream.ZipInputStream,net.lingala.zip4j.model.FileHeader,java.lang.String,java.lang.String,net.lingala.zip4j.progress.ProgressMonitor)>($r4, $r10, $r11, varReplacer132343, $r2)

		IncompleteOperationError violating CrySL rule for javax.crypto.Mac (on Object #fe86d6df4f79d1062ebbc1599317d6572713990c2d231593223a215eef0fe89e)
			Operation on object of type javax.crypto.Mac object not completed. Expected call to update, doFinal
			at statement: $r4 = specialinvoke r0.<net.lingala.zip4j.tasks.ExtractAllFilesTask: net.lingala.zip4j.io.inputstream.ZipInputStream prepareZipInputStream(java.nio.charset.Charset)>($r3)


Findings in Java Class: com.amap.api.mapcore.util.h

	 in Method: byte[] a(byte[],java.security.PublicKey)
		RequiredPredicateError violating CrySL rule for javax.crypto.Cipher
			Second parameter was not properly generated as generatedKey
			at statement: virtualinvoke $r3.<javax.crypto.Cipher: void init(int,java.security.Key)>(varReplacer13244, $r0)


	 in Method: java.security.PublicKey a(java.lang.String)
		RequiredPredicateError violating CrySL rule for java.security.KeyFactory
			First parameter was not properly generated as speccedKey
			at statement: $r7 = virtualinvoke $r6.<java.security.KeyFactory: java.security.PublicKey generatePublic(java.security.spec.KeySpec)>($r0)

		RequiredPredicateError violating CrySL rule for java.security.spec.X509EncodedKeySpec
			First parameter was not properly generated as preparedKeyMaterial
			at statement: specialinvoke $r0.<java.security.spec.X509EncodedKeySpec: void <init>(byte[])>($r5)


Findings in Java Class: com.amap.api.mapcore.util.kr

	 in Method: void <clinit>()
		RequiredPredicateError violating CrySL rule for javax.crypto.spec.IvParameterSpec
			First parameter was not properly generated as randomized
			at statement: specialinvoke $r2.<javax.crypto.spec.IvParameterSpec: void <init>(byte[])>($r1)


	 in Method: byte[] a(byte[])
		RequiredPredicateError violating CrySL rule for javax.crypto.Cipher
			Second parameter was not properly generated as generatedKey
			at statement: virtualinvoke $r4.<javax.crypto.Cipher: void init(int,java.security.Key,java.security.spec.AlgorithmParameterSpec)>(varReplacer123859, $r3, $r5)

		RequiredPredicateError violating CrySL rule for javax.crypto.spec.SecretKeySpec
			First parameter was not properly generated as preparedKeyMaterial
			at statement: specialinvoke $r3.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r1, varReplacer123853)

		RequiredPredicateError violating CrySL rule for javax.crypto.spec.IvParameterSpec
			First parameter was not properly generated as randomized
			at statement: specialinvoke $r5.<javax.crypto.spec.IvParameterSpec: void <init>(byte[])>($r1)


Findings in Java Class: com.huawei.secure.android.common.encrypt.aes.AesCbc

	 in Method: byte[] decrypt(byte[],byte[],byte[])
		RequiredPredicateError violating CrySL rule for javax.crypto.spec.SecretKeySpec
			First parameter was not properly generated as preparedKeyMaterial
			at statement: specialinvoke $r14.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r1, varReplacer50079)

		RequiredPredicateError violating CrySL rule for javax.crypto.Cipher
			Second parameter was not properly generated as generatedKey
			at statement: virtualinvoke $r4.<javax.crypto.Cipher: void init(int,java.security.Key,java.security.spec.AlgorithmParameterSpec)>(varReplacer50074, $r3, $r5)

		RequiredPredicateError violating CrySL rule for javax.crypto.spec.IvParameterSpec
			First parameter was not properly generated as randomized
			at statement: specialinvoke $r15.<javax.crypto.spec.IvParameterSpec: void <init>(byte[])>($r2)


	 in Method: byte[] encrypt(byte[],byte[],byte[])
		RequiredPredicateError violating CrySL rule for javax.crypto.Cipher
			Third parameter was not properly generated as preparedIV [ with CBC, It's required to use IVParameterSpec]
			at statement: virtualinvoke $r4.<javax.crypto.Cipher: void init(int,java.security.Key,java.security.spec.AlgorithmParameterSpec)>(varReplacer2454, $r3, $r5)

		RequiredPredicateError violating CrySL rule for javax.crypto.spec.SecretKeySpec
			First parameter was not properly generated as preparedKeyMaterial
			at statement: specialinvoke $r14.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r1, varReplacer2445)

		RequiredPredicateError violating CrySL rule for javax.crypto.Cipher
			Second parameter was not properly generated as generatedKey
			at statement: virtualinvoke $r4.<javax.crypto.Cipher: void init(int,java.security.Key,java.security.spec.AlgorithmParameterSpec)>(varReplacer2454, $r3, $r5)


Findings in Java Class: com.amap.api.mapcore.util.hp

	 in Method: java.security.PublicKey d()
		RequiredPredicateError violating CrySL rule for java.security.KeyFactory
			First parameter was not properly generated as speccedKey
			at statement: $r6 = virtualinvoke $r4.<java.security.KeyFactory: java.security.PublicKey generatePublic(java.security.spec.KeySpec)>($r0)

		RequiredPredicateError violating CrySL rule for java.security.spec.X509EncodedKeySpec
			First parameter was not properly generated as preparedKeyMaterial
			at statement: specialinvoke $r0.<java.security.spec.X509EncodedKeySpec: void <init>(byte[])>($r2)


Findings in Java Class: com.vivo.push.util.a

	 in Method: java.lang.String a(java.lang.String)
		RequiredPredicateError violating CrySL rule for javax.crypto.Cipher
			Second parameter was not properly generated as generatedKey
			at statement: virtualinvoke $r7.<javax.crypto.Cipher: void init(int,java.security.Key,java.security.spec.AlgorithmParameterSpec)>(varReplacer49957, $r1, $r8)

		RequiredPredicateError violating CrySL rule for javax.crypto.spec.IvParameterSpec
			First parameter was not properly generated as randomized
			at statement: specialinvoke $r8.<javax.crypto.spec.IvParameterSpec: void <init>(byte[])>($r6)

		RequiredPredicateError violating CrySL rule for javax.crypto.Cipher
			Third parameter was not properly generated as preparedIV [ with CBC, It's required to use IVParameterSpec]
			at statement: virtualinvoke $r7.<javax.crypto.Cipher: void init(int,java.security.Key,java.security.spec.AlgorithmParameterSpec)>(varReplacer49957, $r1, $r8)

		RequiredPredicateError violating CrySL rule for javax.crypto.spec.SecretKeySpec
			First parameter was not properly generated as preparedKeyMaterial
			at statement: specialinvoke $r1.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r6, varReplacer49961)


Findings in Java Class: com.vivo.push.util.f

	 in Method: byte[] a(java.lang.String,java.lang.String,byte[])
		RequiredPredicateError violating CrySL rule for javax.crypto.spec.IvParameterSpec
			First parameter was not properly generated as randomized
			at statement: specialinvoke $r6.<javax.crypto.spec.IvParameterSpec: void <init>(byte[])>($r4)

		RequiredPredicateError violating CrySL rule for javax.crypto.Cipher
			Second parameter was not properly generated as generatedKey
			at statement: virtualinvoke $r5.<javax.crypto.Cipher: void init(int,java.security.Key,java.security.spec.AlgorithmParameterSpec)>(varReplacer144888, $r1, $r6)

		RequiredPredicateError violating CrySL rule for javax.crypto.spec.SecretKeySpec
			First parameter was not properly generated as preparedKeyMaterial
			at statement: specialinvoke $r1.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r4, varReplacer144887)


Findings in Java Class: com.google.android.exoplayer2.upstream.crypto.AesFlushingCipher

	 in Method: void <init>(int,byte[],long,long)
		RequiredPredicateError violating CrySL rule for javax.crypto.spec.SecretKeySpec
			First parameter was not properly generated as preparedKeyMaterial
			at statement: specialinvoke $r1.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r2, $r5)

		RequiredPredicateError violating CrySL rule for javax.crypto.Cipher
			Second parameter was not properly generated as generatedKey
			at statement: virtualinvoke $r3.<javax.crypto.Cipher: void init(int,java.security.Key,java.security.spec.AlgorithmParameterSpec)>($i0, $r1, $r7)

		RequiredPredicateError violating CrySL rule for javax.crypto.spec.IvParameterSpec
			First parameter was not properly generated as randomized
			at statement: specialinvoke $r7.<javax.crypto.spec.IvParameterSpec: void <init>(byte[])>($r2)


Findings in Java Class: com.huawei.secure.android.common.ssl.SecureSSLSocketFactoryNew

	 in Method: void <init>(javax.net.ssl.X509TrustManager)
		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			Second parameter was not properly generated as generatedTrustManagers
			at statement: virtualinvoke $r2.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>(varReplacer107641, $r3, varReplacer107641)

		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			Third parameter was not properly generated as randomized
			at statement: virtualinvoke $r2.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>(varReplacer107641, $r3, varReplacer107641)

		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			First parameter was not properly generated as generatedKeyManagers
			at statement: virtualinvoke $r2.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>(varReplacer107641, $r3, varReplacer107641)


Findings in Java Class: com.xiaomi.push.h

	 in Method: javax.crypto.Cipher a(byte[],int)
		RequiredPredicateError violating CrySL rule for javax.crypto.spec.IvParameterSpec
			First parameter was not properly generated as randomized
			at statement: specialinvoke $r3.<javax.crypto.spec.IvParameterSpec: void <init>(byte[])>($r2)

		RequiredPredicateError violating CrySL rule for javax.crypto.spec.SecretKeySpec
			First parameter was not properly generated as preparedKeyMaterial
			at statement: specialinvoke $r0.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r2, varReplacer15670)

		RequiredPredicateError violating CrySL rule for javax.crypto.Cipher
			Second parameter was not properly generated as generatedKey
			at statement: virtualinvoke $r1.<javax.crypto.Cipher: void init(int,java.security.Key,java.security.spec.AlgorithmParameterSpec)>($i0, $r0, $r3)


Findings in Java Class: com.qcymall.earphonesetup.network.retrofit.HttpSSLUtils$MyTrustManager

	 in Method: void <init>(javax.net.ssl.X509TrustManager)
		RequiredPredicateError violating CrySL rule for javax.net.ssl.TrustManagerFactory
			First parameter was not properly generated as generatedKeyStore
			at statement: virtualinvoke $r3.<javax.net.ssl.TrustManagerFactory: void init(java.security.KeyStore)>(varReplacer126636)


======================= CryptoAnalysis Summary ==========================
	Number of CrySL rules: 47
	Number of Objects Analyzed: 329

	CryptoAnalysis found the following violations. For details see description above.
	NeverTypeOfError: 6
	IncompleteOperationError: 68
	TypestateError: 8
	HardCodedError: 7
	ConstraintError: 66
	RequiredPredicateError: 124
=====================================================================
