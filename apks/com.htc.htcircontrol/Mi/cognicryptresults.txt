SLF4J: Failed to load class "org.slf4j.impl.StaticLoggerBinder".
SLF4J: Defaulting to no-operation (NOP) logger implementation
SLF4J: See http://www.slf4j.org/codes.html#StaticLoggerBinder for further details.
0    [main] WARN  pes.access.impl.DeclaredTypeFactory  - --- xtext.common.types ---------------------------------------------------
1    [main] WARN  pes.access.impl.DeclaredTypeFactory  - ASM library is too old. Falling back to java.lang.reflect API.
1    [main] WARN  pes.access.impl.DeclaredTypeFactory  - Please note that no information about compile time constants is available.
1    [main] WARN  pes.access.impl.DeclaredTypeFactory  - It's recommended to use org.objectweb.asm 9.3.0 or better (Maven group id: org.ow2.asm).
1    [main] WARN  pes.access.impl.DeclaredTypeFactory  - --------------------------------------------------------------------------
Alive 29006  5000
Alive 32442  5000
Ruleset: 
	javax.net.ssl.KeyStoreBuilderParameters
	javax.crypto.spec.PBEKeySpec
	java.security.spec.MGF1ParameterSpec
	java.security.MessageDigest
	javax.crypto.Cipher
	java.security.KeyPair
	javax.crypto.SecretKeyFactory
	java.security.cert.PKIXBuilderParameters
	javax.crypto.SecretKey
	javax.crypto.spec.IvParameterSpec
	javax.crypto.spec.PBEParameterSpec
	javax.net.ssl.TrustManagerFactory
	javax.crypto.spec.GCMParameterSpec
	javax.crypto.spec.SecretKeySpec
	javax.net.ssl.CertPathTrustManagerParameters
	java.security.spec.DSAParameterSpec
	javax.crypto.KeyAgreement
	java.security.cert.TrustAnchor
	javax.crypto.spec.DHParameterSpec
	javax.net.ssl.SSLParameters
	javax.net.ssl.SSLContext
	java.security.Key
	java.security.KeyFactory
	void
	java.security.DigestOutputStream
	java.security.SecureRandom
	java.security.cert.PKIXParameters
	java.security.spec.X509EncodedKeySpec
	javax.crypto.spec.DHGenParameterSpec
	javax.net.ssl.SSLEngine
	java.security.spec.RSAKeyGenParameterSpec
	java.security.Signature
	javax.crypto.CipherOutputStream
	javax.xml.crypto.dsig.spec.HMACParameterSpec
	java.security.AlgorithmParameterGenerator
	javax.crypto.Mac
	javax.crypto.spec.OAEPParameterSpec
	java.security.AlgorithmParameters
	javax.crypto.CipherInputStream
	java.security.DigestInputStream
	java.security.spec.ECParameterSpec
	javax.crypto.KeyGenerator
	java.security.KeyStore
	java.security.spec.ECGenParameterSpec
	java.security.KeyPairGenerator
	javax.net.ssl.KeyManagerFactory
	java.security.spec.DSAGenParameterSpec

Analyzed Objects: 
	Object:
		Variable: varReplacer20449
		Type: java.lang.String
		Statement: $r3 = virtualinvoke $r2.<javax.crypto.KeyAgreement: javax.crypto.SecretKey generateSecret(java.lang.String)>(varReplacer20449)
		Method: <s8.g: javax.crypto.SecretKey n(java.security.PrivateKey,java.security.PublicKey)>
		SHA-256: ecdd521f5a4f13c05f211fb5015466f52e7bb5957e302785763a55a431f67c6
		Secure: false
	Object:
		Variable: $r2
		Type: javax.crypto.Cipher
		Statement: $r2 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer69935)
		Method: <com.xiaomi.onetrack.d.b: java.lang.String a(android.content.Context,java.lang.String)>
		SHA-256: 718c0328e12f07c95ec8fe32115dc92c3c4b2e8da7bfef2d2b57d508fbfdb820
		Secure: false
	Object:
		Variable: $r4
		Type: java.security.spec.ECParameterSpec
		Statement: specialinvoke $r4.<java.security.spec.ECParameterSpec: void <init>(java.security.spec.EllipticCurve,java.security.spec.ECPoint,java.math.BigInteger,int)>($r10, $r11, $r7, $i0)
		Method: <qn.a: void <init>(java.lang.String,an.b0,qn.b,java.security.spec.ECParameterSpec)>
		SHA-256: 1a4fc000f71ef172a90e322c31bbd07806e82097bba32293e072885e9f8bb2fa
		Secure: true
	Object:
		Variable: varReplacer8424
		Type: java.lang.String
		Statement: specialinvoke $r0.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r2, varReplacer8424)
		Method: <com.xiaomi.onetrack.d.a: byte[] a(byte[],byte[])>
		SHA-256: 359b35c383608a6ed724f8964d1877e772ca9ab23c1b78b8f600293b993d1900
		Secure: false
	Object:
		Variable: $r9
		Type: java.security.spec.DSAParameterSpec
		Statement: specialinvoke $r9.<java.security.spec.DSAParameterSpec: void <init>(java.math.BigInteger,java.math.BigInteger,java.math.BigInteger)>($r5, $r10, $r11)
		Method: <nn.d: void <init>(em.c1)>
		SHA-256: f0c8c4508bf52ab94d879368c4d60d1ca3c7122761919d075906d0de7295efe5
		Secure: true
	Object:
		Variable: $r8
		Type: java.security.KeyPairGenerator
		Statement: $r8 = staticinvoke <java.security.KeyPairGenerator: java.security.KeyPairGenerator getInstance(java.lang.String,java.lang.String)>(varReplacer69977, varReplacer69978)
		Method: <com.xiaomi.onetrack.d.b: void a(android.content.Context)>
		SHA-256: 936bb4ecfcd4b8bda7bdb5f716603c7076c1c09f1367ee048c257b4f0dbd1b14
		Secure: false
	Object:
		Variable: $r2
		Type: byte[]
		Statement: $r2 = virtualinvoke $r1.<java.security.MessageDigest: byte[] digest()>()
		Method: <com.miui.privacypolicy.NetUtils: java.lang.String getMd5Digest(java.lang.String)>
		SHA-256: 6dc307f6eed5f1f972a1d77a7c447bc8b529984d30dafcb6b2b6cdb3f7e2722
		Secure: false
	Object:
		Variable: $r13
		Type: java.security.Key
		Statement: $r13 = virtualinvoke $r7.<java.security.KeyStore: java.security.Key getKey(java.lang.String,char[])>($r3, varReplacer119535)
		Method: <y8.b: void e(android.content.Context,int,java.lang.String,java.util.Date,java.util.Date,int,boolean)>
		SHA-256: ab8a132799854d742aa0edb4ad99b0d0f5584e95d9d3c95a07f1bb879995c28
		Secure: false
	Object:
		Variable: $r11
		Type: java.security.spec.ECParameterSpec
		Statement: specialinvoke $r11.<java.security.spec.ECParameterSpec: void <init>(java.security.spec.EllipticCurve,java.security.spec.ECPoint,java.math.BigInteger,int)>($r10, $r12, $r7, $i0)
		Method: <on.a: void <init>(java.lang.String,an.b0,on.b,mo.e)>
		SHA-256: 7242f24bb28aa696df451a05cbb10355e3dd3027b77dcf57f0a11dad8fb3314e
		Secure: true
	Object:
		Variable: $r12
		Type: java.security.KeyPair
		Statement: specialinvoke $r12.<java.security.KeyPair: void <init>(java.security.PublicKey,java.security.PrivateKey)>($r9, $r13)
		Method: <pn.h$a: java.security.KeyPair generateKeyPair()>
		SHA-256: 4883a98b869758e77bb30eb00bf80b863181f08b12a934463d5dd47c51186227
		Secure: false
	Object:
		Variable: $r1
		Type: byte[]
		Statement: $r1 = virtualinvoke $r3.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r1)
		Method: <com.xiaomi.onetrack.d.a: byte[] a(byte[],byte[])>
		SHA-256: 5f95bebc5b140a14b62a7ac59d965534e08e67eb7b9373afec57c40b2af2fc5d
		Secure: false
	Object:
		Variable: $r10
		Type: java.security.KeyPair
		Statement: specialinvoke $r10.<java.security.KeyPair: void <init>(java.security.PublicKey,java.security.PrivateKey)>($r8, $r11)
		Method: <qn.d: java.security.KeyPair generateKeyPair()>
		SHA-256: 77a910c0058575722cff03f6894f44cbbe7185a895b3a5778efbcde1a936da27
		Secure: false
	Object:
		Variable: $r11
		Type: java.security.spec.ECParameterSpec
		Statement: specialinvoke $r11.<java.security.spec.ECParameterSpec: void <init>(java.security.spec.EllipticCurve,java.security.spec.ECPoint,java.math.BigInteger,int)>($r10, $r12, $r7, $i0)
		Method: <qn.a: void <init>(java.lang.String,an.b0,qn.b,mo.e)>
		SHA-256: 7242f24bb28aa696df451a05cbb10355e3dd3027b77dcf57f0a11dad8fb3314e
		Secure: true
	Object:
		Variable: $r2
		Type: java.security.SecureRandom
		Statement: specialinvoke $r2.<java.security.SecureRandom: void <init>()>()
		Method: <ap.m: ap.m$c c()>
		SHA-256: dbf0b0f4a87ec5be3013f5ffe8f5b6f4f1ca456a74dcc9db5e1a58f57d46b377
		Secure: true
	Object:
		Variable: $r0
		Type: byte[]
		Statement: $r0 = virtualinvoke $r1.<java.security.MessageDigest: byte[] digest()>()
		Method: <com.xiaomi.accountsdk.utils.Coder: java.lang.String getDataMd5Digest(byte[])>
		SHA-256: e6624f84f826c4dfa6c3a35c66f6a7e590d5999805dc5d83fa70cfcc0e80885b
		Secure: false
	Object:
		Variable: $r12
		Type: javax.crypto.spec.DHParameterSpec
		Statement: specialinvoke $r12.<javax.crypto.spec.DHParameterSpec: void <init>(java.math.BigInteger,java.math.BigInteger)>($r5, $r13)
		Method: <mn.d: void <init>(em.c1)>
		SHA-256: 2e1d3e3018821e7bd949cd3bdecb445c437ea83fd72b41edcb36e099d6ce18f4
		Secure: true
	Object:
		Variable: $r3
		Type: java.security.KeyFactory
		Statement: $r3 = staticinvoke <java.security.KeyFactory: java.security.KeyFactory getInstance(java.lang.String)>(varReplacer7577)
		Method: <yb.b: java.security.PublicKey d(java.lang.String)>
		SHA-256: e4a262f739bee1cc1012a439fd0a96a723460c0e4c99261cd286ec4f489ab64b
		Secure: false
	Object:
		Variable: $r11
		Type: java.security.spec.ECParameterSpec
		Statement: specialinvoke $r11.<java.security.spec.ECParameterSpec: void <init>(java.security.spec.EllipticCurve,java.security.spec.ECPoint,java.math.BigInteger,int)>($r10, $r12, $r7, $i0)
		Method: <qn.a: void <init>(java.lang.String,an.b0,qn.b,mo.e)>
		SHA-256: 7242f24bb28aa696df451a05cbb10355e3dd3027b77dcf57f0a11dad8fb3314e
		Secure: true
	Object:
		Variable: $r1
		Type: java.security.SecureRandom
		Statement: specialinvoke $r1.<java.security.SecureRandom: void <init>()>()
		Method: <com.xiaomi.verificationsdk.internal.a: javax.crypto.SecretKey f()>
		SHA-256: a0c2a098de5c1ad0658d05209cc229a78e819f4f318d82cacb5ae7aba081d6a1
		Secure: true
	Object:
		Variable: $r2
		Type: java.security.spec.ECGenParameterSpec
		Statement: specialinvoke $r2.<java.security.spec.ECGenParameterSpec: void <init>(java.lang.String)>(varReplacer65477)
		Method: <pn.h$a: void <clinit>()>
		SHA-256: bcbe72420d1ff91b192e831394c08c22cc7a31860c766fda45ca314f823cccff
		Secure: true
	Object:
		Variable: $i4
		Type: int
		Statement: $i4 = virtualinvoke $r6.<java.util.Random: int nextInt()>()
		Method: <bp.c: void h()>
		SHA-256: 59878ad51ec63100eeba7800df783f2911f6dd8c2ebeb0199dc15860373c4ac
		Secure: true
	Object:
		Variable: $r1
		Type: java.security.MessageDigest
		Statement: $r1 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer7587)
		Method: <nf.e: java.lang.String c(java.lang.String)>
		SHA-256: f3e7d5cedcd6f90abad8e87a0037e478c777faa1f06f0f4125a69701ce48355c
		Secure: true
	Object:
		Variable: $r3
		Type: java.security.SecureRandom
		Statement: specialinvoke $r3.<java.security.SecureRandom: void <init>()>()
		Method: <zo.l: void d(im.y)>
		SHA-256: 9a0d9e913d424ce460839e76a84fbded768a82af9691a23a2285a5a81c57847c
		Secure: true
	Object:
		Variable: $r0
		Type: javax.crypto.spec.SecretKeySpec
		Statement: specialinvoke $r0.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r2, varReplacer97040)
		Method: <com.xiaomi.mitv.socialtv.common.utils.SignatureUtil: java.lang.String getSignature(byte[],byte[])>
		SHA-256: 46abe97dedcbc4dea1083058dca25c9e3fd0b5162a970a51ae5049942c26c05e
		Secure: false
	Object:
		Variable: $r1
		Type: java.security.MessageDigest
		Statement: $r1 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer102465)
		Method: <k3.m$a: k3.m$b b()>
		SHA-256: 30b1fc44f13129618b2b33d4b9c2fd4d215249c4097d1096035f75e02a610cbe
		Secure: true
	Object:
		Variable: $r3
		Type: java.security.spec.X509EncodedKeySpec
		Statement: specialinvoke $r3.<java.security.spec.X509EncodedKeySpec: void <init>(byte[])>($r2)
		Method: <s8.c: byte[] h(byte[],java.lang.String)>
		SHA-256: d3c44184ba8bafbd825112718749e4ccc5bb6cfeee822278885834ac26c6055
		Secure: false
	Object:
		Variable: $r6
		Type: java.security.Signature
		Statement: $r6 = staticinvoke <java.security.Signature: java.security.Signature getInstance(java.lang.String)>($r5)
		Method: <lo.s0: void verify(java.security.PublicKey)>
		SHA-256: bc04963af6e8fab71065cd6b5d31ce5f68aecdb4a2189fed3eb363a7dbc5674f
		Secure: false
	Object:
		Variable: $r3
		Type: java.security.SecureRandom
		Statement: specialinvoke $r3.<java.security.SecureRandom: void <init>()>()
		Method: <com.xiaomi.accountsdk.utils.AESWithIVCoder: java.lang.String encrypt(java.lang.String)>
		SHA-256: 800c20fde8330a87591af04638521d7abb2514c60cfa12c917e1a809bfda69e6
		Secure: true
	Object:
		Variable: $r12
		Type: java.security.MessageDigest
		Statement: $r12 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer94608)
		Method: <com.xiaomi.onetrack.util.oaid.helpers.i: java.lang.String a(java.lang.String,android.content.Context)>
		SHA-256: 29712d7785bfb82c880686ce9c9ba79acf1d9d06c90f19574e6b0420bae2044c
		Secure: false
	Object:
		Variable: $r4
		Type: byte[]
		Statement: $r4 = virtualinvoke $r3.<java.security.MessageDigest: byte[] digest(byte[])>($r4)
		Method: <nf.b: java.lang.String d(java.lang.String)>
		SHA-256: de418cc9ba995e12b98ad56777ecd80e3117509f63d174f46029ae6f543b26ab
		Secure: false
	Object:
		Variable: $r3
		Type: javax.crypto.Cipher
		Statement: $r3 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer7913)
		Method: <com.xiaomi.onetrack.d.a: byte[] b(byte[],byte[])>
		SHA-256: b1dd01efdb335ae78c3ddfbb8b238f013fa29034bfaed6b94b3db14b230ae4d2
		Secure: false
	Object:
		Variable: $r2
		Type: java.security.MessageDigest
		Statement: $r2 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer8509)
		Method: <com.hzy.tvmao.utils.c: java.lang.String a(byte[])>
		SHA-256: 8a1146b18db97d013f2ea9bc2cfabf59178de91bac535f88d0807308f07b7cbc
		Secure: false
	Object:
		Variable: $r1
		Type: java.security.KeyFactory
		Statement: $r1 = staticinvoke <java.security.KeyFactory: java.security.KeyFactory getInstance(java.lang.String,java.lang.String)>(varReplacer69953, varReplacer69954)
		Method: <com.xiaomi.onetrack.d.e: java.security.interfaces.RSAPublicKey a(java.lang.String)>
		SHA-256: 4dc20d7ab225316ef64dac9b5a734a21dfc1855d45677737cdb18d072e76d8cd
		Secure: false
	Object:
		Variable: $r2
		Type: java.security.SecureRandom
		Statement: specialinvoke $r2.<java.security.SecureRandom: void <init>()>()
		Method: <zo.c: void c()>
		SHA-256: e29eb0b0c9e059c83d1173f47f6d0a3c046e04bb2187b52e68f46b8c80b3b9e6
		Secure: true
	Object:
		Variable: $r0
		Type: byte[]
		Statement: $r0 = virtualinvoke $r1.<java.security.MessageDigest: byte[] digest(byte[])>($r0)
		Method: <com.xiaomi.accountsdk.utils.Coder: byte[] hash4SHA1(byte[])>
		SHA-256: ff2533c82100fa731fe805eb1d56cf16cd9770c5bd6bac06a722a4e1558ffa37
		Secure: false
	Object:
		Variable: $r11
		Type: java.security.MessageDigest
		Statement: $r11 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>($r0)
		Method: <com.xiaomi.accountsdk.account.utils.PackageUtils: java.lang.String getSignatureDigestByType(android.content.Context,java.lang.String,java.lang.String)>
		SHA-256: a3201bbfb465bb30687644e1c65581134287cb66d3a04b37ee9cf421197716a6
		Secure: false
	Object:
		Variable: $r3
		Type: java.security.KeyFactory
		Statement: $r3 = staticinvoke <java.security.KeyFactory: java.security.KeyFactory getInstance(java.lang.String)>(varReplacer20452)
		Method: <s8.g: java.security.PrivateKey p(java.lang.String)>
		SHA-256: 9b97c81c32e217d5d2f289630be83f98f387a4be3a1169113fc3d8d970ed380d
		Secure: false
	Object:
		Variable: $r10
		Type: java.security.KeyPair
		Statement: specialinvoke $r10.<java.security.KeyPair: void <init>(java.security.PublicKey,java.security.PrivateKey)>($r8, $r11)
		Method: <qn.d: java.security.KeyPair generateKeyPair()>
		SHA-256: 77a910c0058575722cff03f6894f44cbbe7185a895b3a5778efbcde1a936da27
		Secure: false
	Object:
		Variable: $r1
		Type: byte[]
		Statement: $r1 = virtualinvoke $r2.<java.security.MessageDigest: byte[] digest()>()
		Method: <s8.h: java.lang.String b(byte[])>
		SHA-256: 28c2a5ee136078b1be35b2b2567896153d4974183d03e9ce37d3f04521a0fca8
		Secure: false
	Object:
		Variable: $r3
		Type: javax.crypto.Cipher
		Statement: $r3 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer8425)
		Method: <com.xiaomi.onetrack.d.a: byte[] a(byte[],byte[])>
		SHA-256: eebb74cf282c90a8b58088a70606933aeef19bbc8fc852552f143664c3bf38b0
		Secure: false
	Object:
		Variable: $r4
		Type: java.security.KeyFactory
		Statement: $r4 = staticinvoke <java.security.KeyFactory: java.security.KeyFactory getInstance(java.lang.String)>(varReplacer83393)
		Method: <s8.c: byte[] h(byte[],java.lang.String)>
		SHA-256: 964064d3499ec6b14f5fef2429d8d2721a093b3c76b14a7840153385dea12330
		Secure: false
	Object:
		Variable: $r2
		Type: java.security.SecureRandom
		Statement: specialinvoke $r2.<java.security.SecureRandom: void <init>()>()
		Method: <ap.m: ap.m$c c()>
		SHA-256: dbf0b0f4a87ec5be3013f5ffe8f5b6f4f1ca456a74dcc9db5e1a58f57d46b377
		Secure: true
	Object:
		Variable: $r5
		Type: javax.crypto.Cipher
		Statement: $r5 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer1930)
		Method: <com.xiaomi.mitv.phone.remotecontroller.utils.EncryptUtil: java.lang.String encryptDES(java.lang.String,java.lang.String)>
		SHA-256: 4fcdc35b572d670f598dd537376751332e2d5c17ce2008c2b0a0fcb4e1b7e0d
		Secure: false
	Object:
		Variable: $r2
		Type: java.security.Signature
		Statement: $r2 = staticinvoke <java.security.Signature: java.security.Signature getInstance(java.lang.String,java.security.Provider)>($r3, $r1)
		Method: <go.h: java.security.Signature k(java.lang.String)>
		SHA-256: 30a036f94eb19302b9746b806614b128842e2391aefebfd0930c54cb07dc8c23
		Secure: false
	Object:
		Variable: $r9
		Type: javax.crypto.spec.IvParameterSpec
		Statement: specialinvoke $r9.<javax.crypto.spec.IvParameterSpec: void <init>(byte[])>($r2)
		Method: <org.apache.commons.compress.archivers.sevenz.AES256SHA256Decoder$1: javax.crypto.CipherInputStream init()>
		SHA-256: c17421c9044aaad49761f9cd19147df7d237b870f86c00a4c3f759ad8875e0fe
		Secure: false
	Object:
		Variable: $r10
		Type: java.security.KeyPair
		Statement: specialinvoke $r10.<java.security.KeyPair: void <init>(java.security.PublicKey,java.security.PrivateKey)>($r11, $r12)
		Method: <nn.h: java.security.KeyPair generateKeyPair()>
		SHA-256: 589910c013294c7bd6e0aaee8936602b08f6e989053ad1291b6a5317a95e047
		Secure: false
	Object:
		Variable: $r1
		Type: java.security.KeyPair
		Statement: specialinvoke $r1.<java.security.KeyPair: void <init>(java.security.PublicKey,java.security.PrivateKey)>($r2, $r8)
		Method: <fp.j$b: java.security.KeyPair generateKeyPair()>
		SHA-256: ce354f984bf1dc604d09aa2d6ee8733dcb45f21ac86ca1a8455d35d5e305589e
		Secure: false
	Object:
		Variable: $r10
		Type: javax.crypto.SecretKey
		Statement: $r2 = interfaceinvoke $r10.<java.security.Key: byte[] getEncoded()>()
		Method: <s8.e$c: void c(java.lang.String,byte[])>
		SHA-256: 1eee4811681038ea86bb5a5ad5335a3a78bca4c329a1fecb4390465290da2e9e
		Secure: true
	Object:
		Variable: $r4
		Type: java.security.PublicKey
		Statement: $r4 = virtualinvoke $r3.<java.security.KeyFactory: java.security.PublicKey generatePublic(java.security.spec.KeySpec)>($r0)
		Method: <s8.g: java.security.PublicKey q(java.lang.String)>
		SHA-256: 3bae67ce5a340277e9d71abc8f92da0246864757c6af060d7309c6fa73159d3a
		Secure: false
	Object:
		Variable: $r0
		Type: java.security.MessageDigest
		Statement: $r0 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer60336)
		Method: <com.google.android.gms.measurement.internal.zzfx: java.security.MessageDigest getMessageDigest()>
		SHA-256: 4a31aa537dd1cc73478b686f28614be5986e246bcedda21035b8a936bf12dc97
		Secure: false
	Object:
		Variable: $r7
		Type: javax.crypto.Cipher
		Statement: $r7 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer63247)
		Method: <s8.c: java.lang.String g(java.lang.String,java.lang.String)>
		SHA-256: ad670aad101bfffeb4a1eb541480b8bd58af1b358c0cd2e40a65468a3b9aaf52
		Secure: false
	Object:
		Variable: $i4
		Type: int
		Statement: $i4 = virtualinvoke $r1.<java.util.Random: int nextInt()>()
		Method: <jp.e: void k(int,java.security.SecureRandom)>
		SHA-256: 8adadf7f68acef75f89411d4f2acec4c1bbf08e674e3c3cd35b56bf4a946d29b
		Secure: true
	Object:
		Variable: $r3
		Type: javax.crypto.Mac
		Statement: $r3 = staticinvoke <javax.crypto.Mac: javax.crypto.Mac getInstance(java.lang.String)>(varReplacer42927)
		Method: <com.xiaomi.account.auth.AuthorizeHelper: byte[] encryptHMACSha1(byte[],byte[])>
		SHA-256: 3658869775659179e3816cd72e2310df3faa0ced214506d83b9038ce2e9dcebd
		Secure: false
	Object:
		Variable: varReplacer25797
		Type: java.lang.String
		Statement: specialinvoke $r2.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r1, varReplacer25797)
		Method: <com.xiaomi.accountsdk.utils.AESCoder: void <init>(byte[])>
		SHA-256: 17423bbbb2da53301712b58580904024bb5a251baf10670383c260cb6464f53e
		Secure: true
	Object:
		Variable: $r11
		Type: byte[]
		Statement: $r11 = virtualinvoke $r4.<java.security.MessageDigest: byte[] digest(byte[])>($r11)
		Method: <com.google.android.gms.measurement.internal.zzfx: long zzd(android.content.Context,java.lang.String)>
		SHA-256: 42624a5e4bd0470d4482cfa04d3dd5cc5bf0876461e77603b67c03216ce5da00
		Secure: false
	Object:
		Variable: $r3
		Type: javax.net.ssl.SSLContext
		Statement: $r3 = staticinvoke <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String)>(varReplacer68255)
		Method: <okhttp3.OkHttpClient: javax.net.ssl.SSLSocketFactory systemDefaultSslSocketFactory(javax.net.ssl.X509TrustManager)>
		SHA-256: 371c4958edf2fc1b2d33b33dcc24912f8bc28f9909d0dffe5d9f905b2943a223
		Secure: false
	Object:
		Variable: $r2
		Type: java.security.MessageDigest
		Statement: $r2 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>($r1)
		Method: <com.xiaomi.onetrack.d.d: java.security.MessageDigest a(java.lang.String)>
		SHA-256: 13178eabcf9b2ef4cd6e37b88f32e7623b24d78fda890ffb87007cfee52e529f
		Secure: false
	Object:
		Variable: $r0
		Type: javax.crypto.spec.SecretKeySpec
		Statement: specialinvoke $r0.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r2, varReplacer42928)
		Method: <com.xiaomi.account.auth.AuthorizeHelper: byte[] encryptHMACSha1(byte[],byte[])>
		SHA-256: 705fd8b74f34561e2c3aad6dea20dee5d6dc559fa31c89cd56084755eaa77cb3
		Secure: false
	Object:
		Variable: $r0
		Type: java.security.SecureRandom
		Statement: specialinvoke $r0.<java.security.SecureRandom: void <init>()>()
		Method: <nf.b: void <clinit>()>
		SHA-256: 3d425707cdb6650dff821a6f07e1b4c3cc3c8d38b9bf8d5c7e5e68d2549a99b4
		Secure: true
	Object:
		Variable: $r14
		Type: java.security.spec.ECParameterSpec
		Statement: specialinvoke $r14.<java.security.spec.ECParameterSpec: void <init>(java.security.spec.EllipticCurve,java.security.spec.ECPoint,java.math.BigInteger,int)>($r7, $r0, $r12, varReplacer74713)
		Method: <vn.i: java.security.spec.ECParameterSpec h(hm.j,oo.e)>
		SHA-256: 96a196c3522e8275132a16ea4bd8ced663b2c604de272e380f2c0eeb023bcebf
		Secure: true
	Object:
		Variable: $r3
		Type: javax.net.ssl.TrustManagerFactory
		Statement: $r3 = staticinvoke <javax.net.ssl.TrustManagerFactory: javax.net.ssl.TrustManagerFactory getInstance(java.lang.String)>($r2)
		Method: <okhttp3.OkHttpClient: javax.net.ssl.X509TrustManager systemDefaultTrustManager()>
		SHA-256: 131be75562789377964b01a1048670ba51f7fa7f9f94e1fbf399e843541d1155
		Secure: false
	Object:
		Variable: varReplacer1931
		Type: java.lang.String
		Statement: specialinvoke $r4.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r3, varReplacer1931)
		Method: <com.xiaomi.mitv.phone.remotecontroller.utils.EncryptUtil: java.lang.String encryptDES(java.lang.String,java.lang.String)>
		SHA-256: d9ec4af418af14aab221f592fe29eab54453b8c5e774872e82aa47b988499a7
		Secure: false
	Object:
		Variable: $r1
		Type: javax.crypto.spec.DHParameterSpec
		Statement: specialinvoke $r1.<javax.crypto.spec.DHParameterSpec: void <init>(java.math.BigInteger,java.math.BigInteger)>($r3, $r4)
		Method: <lo.p: javax.crypto.spec.DHParameterSpec getParams()>
		SHA-256: c5fac983062ec1f3886e2201d18826849eb5337c69687c6555fa1db16662bc2d
		Secure: true
	Object:
		Variable: $r0
		Type: java.security.KeyPairGenerator
		Statement: $r0 = staticinvoke <java.security.KeyPairGenerator: java.security.KeyPairGenerator getInstance(java.lang.String)>(varReplacer79922)
		Method: <com.google.firebase.iid.zza: java.security.KeyPair zzc()>
		SHA-256: d267cc86a0d85caaa2d4218c818755200237dbd5b81f82feaea7d7ccffed75cd
		Secure: false
	Object:
		Variable: $r3
		Type: byte[]
		Statement: $r3 = virtualinvoke $r2.<java.security.MessageDigest: byte[] digest(byte[])>($r3)
		Method: <com.xiaomi.accountsdk.hasheddeviceidlib.DeviceIdHasher: java.lang.String hashDeviceInfo(java.lang.String,int)>
		SHA-256: 73039b4c5ed1ebceba644e0832b8cb24f2a7885fa1013ad754e8a2c9fef607d4
		Secure: false
	Object:
		Variable: $r6
		Type: javax.crypto.Cipher
		Statement: $r6 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer1620)
		Method: <com.xiaomi.mitv.phone.remotecontroller.utils.EncryptUtil: java.lang.String decryptDES(java.lang.String,java.lang.String)>
		SHA-256: 7b056aada4f13739840539de23988a2f1cbd1820ff4e9d5f5f0cfc921cac261c
		Secure: false
	Object:
		Variable: $r2
		Type: java.security.MessageDigest
		Statement: $r2 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>($r1)
		Method: <og.i: java.lang.String D(java.io.InputStream,java.lang.String)>
		SHA-256: edbc5fd942e6750bb5f1c82086ef07f85768d5f57e2ae772b42d083378df1283
		Secure: false
	Object:
		Variable: $r18
		Type: javax.net.ssl.SSLContext
		Statement: $r18 = staticinvoke <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String)>(varReplacer40069)
		Method: <com.xiaomi.mitv.epg.downloader.Downloader: javax.net.ssl.SSLContext createSSLContext(android.content.Context,java.lang.String[])>
		SHA-256: 6d3afb52c54c7c5f23ae98370bc1a4436ac46dae77606dec1b0dbdaefff36a3e
		Secure: false
	Object:
		Variable: $r1
		Type: java.security.SecureRandom
		Statement: specialinvoke $r1.<java.security.SecureRandom: void <init>()>()
		Method: <pn.h$a: java.security.KeyPair generateKeyPair()>
		SHA-256: b641885aa72392652ccdb9e689282fb99252bbc18d711f39a1ba9db66d830a21
		Secure: true
	Object:
		Variable: $r0
		Type: java.security.MessageDigest
		Statement: $r0 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>($r2)
		Method: <com.google.android.gms.common.util.AndroidUtilsLight: java.security.MessageDigest zzi(java.lang.String)>
		SHA-256: 51cfca83351a25bd8651306a7c82d4ba539b1b3d22d2bd39903653877efadf76
		Secure: false
	Object:
		Variable: $r3
		Type: java.security.KeyFactory
		Statement: $r3 = staticinvoke <java.security.KeyFactory: java.security.KeyFactory getInstance(java.lang.String)>(varReplacer20453)
		Method: <s8.g: java.security.PublicKey q(java.lang.String)>
		SHA-256: 582eb62090fd5079779c51981b6989c8024638309c6cb4681ac214b605c0300c
		Secure: false
	Object:
		Variable: $r1
		Type: byte[]
		Statement: $r1 = virtualinvoke $r2.<java.security.MessageDigest: byte[] digest()>()
		Method: <com.xiaomi.mitv.phone.remotecontroller.utils.EncryptUtil: java.lang.String getMD5(byte[])>
		SHA-256: bb7c102470c170bf267775c361b6efcaf26759547994404cdf3aa1503c9e8c91
		Secure: false
	Object:
		Variable: $r5
		Type: java.security.MessageDigest
		Statement: $r5 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer46256)
		Method: <org.apache.commons.compress.archivers.sevenz.AES256SHA256Decoder$1: javax.crypto.CipherInputStream init()>
		SHA-256: 737b953e7558423668ce6f37c3a4a6c29fcea562417d4f19d880f6e0d68aff9
		Secure: true
	Object:
		Variable: $r2
		Type: javax.crypto.spec.IvParameterSpec
		Statement: specialinvoke $r2.<javax.crypto.spec.IvParameterSpec: void <init>(byte[])>($r4)
		Method: <com.xiaomi.accountsdk.logger.EncryptLogSender: java.lang.String encryptString(java.lang.String,byte[])>
		SHA-256: cfdad34b714a8863589c86baf44d1d505f3227c25ccde2fe6697f01b32092469
		Secure: false
	Object:
		Variable: $r1
		Type: byte[]
		Statement: $r4 = virtualinvoke $r3.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r1)
		Method: <com.xiaomi.onetrack.d.a: byte[] b(byte[],byte[])>
		SHA-256: 2df09997f23679e48b9df4b2a3282760d74f2b3dcd8a5bb683571a54f82f3cce
		Secure: false
	Object:
		Variable: $r8
		Type: byte[]
		Statement: $z0 = virtualinvoke $r2.<java.security.Signature: boolean verify(byte[])>($r8)
		Method: <wn.h: void h(java.security.PublicKey,java.security.Signature)>
		SHA-256: d3c0409181c2bc956bb7377b8bba89b3baa14275289c29dd2eb1078ca78cacca
		Secure: false
	Object:
		Variable: $r8
		Type: javax.crypto.Cipher
		Statement: $r8 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer46254)
		Method: <org.apache.commons.compress.archivers.sevenz.AES256SHA256Decoder$1: javax.crypto.CipherInputStream init()>
		SHA-256: ec3abcd3d775b97fd82be12afd7fcac67a049144197961f33e1f1aa692a20254
		Secure: false
	Object:
		Variable: $r12
		Type: java.security.spec.X509EncodedKeySpec
		Statement: specialinvoke $r12.<java.security.spec.X509EncodedKeySpec: void <init>(byte[])>($r2)
		Method: <com.google.firebase.iid.zzy: java.security.KeyPair zzc(java.lang.String,java.lang.String)>
		SHA-256: c698f40eb2f9dcf45e817fa11087b44917240f511f4a4266e1225806907f1f24
		Secure: false
	Object:
		Variable: $i1
		Type: int
		Statement: $i1 = virtualinvoke $r0.<java.util.Random: int nextInt()>()
		Method: <jp.b0: int a(java.security.SecureRandom,int)>
		SHA-256: eb09d9d691215f0bedd27a09f43cf3ab139e8c54c887510bc101d8b09ee0794a
		Secure: true
	Object:
		Variable: $r5
		Type: java.security.PublicKey
		Statement: $r5 = virtualinvoke $r4.<java.security.KeyFactory: java.security.PublicKey generatePublic(java.security.spec.KeySpec)>($r3)
		Method: <s8.c: byte[] h(byte[],java.lang.String)>
		SHA-256: 6d3833806304b5eb86286c8ee5d94b750a2cf6b8f2bc675217dfa1576b773506
		Secure: false
	Object:
		Variable: $r12
		Type: java.security.spec.ECParameterSpec
		Statement: specialinvoke $r12.<java.security.spec.ECParameterSpec: void <init>(java.security.spec.EllipticCurve,java.security.spec.ECPoint,java.math.BigInteger,int)>($r11, $r13, $r8, $i0)
		Method: <pn.b: void <init>(java.lang.String,an.b0,pn.c,mo.e,xn.c)>
		SHA-256: ea5af3105d6840f08f49ce3df2fd6796b8ae3177daeda1378ec921538640ef91
		Secure: true
	Object:
		Variable: $r5
		Type: java.security.SecureRandom
		Statement: specialinvoke $r5.<java.security.SecureRandom: void <init>()>()
		Method: <rm.o0: void b(boolean,im.j)>
		SHA-256: b97ef1b6754a9e93be43224f5020bba1104bc831c87d12ebab0afb89d5ed5407
		Secure: true
	Object:
		Variable: $r0
		Type: byte[]
		Statement: $r2 = virtualinvoke $r7.<javax.crypto.Cipher: byte[] doFinal(byte[],int,int)>($r0, $i3, $i1)
		Method: <s8.c: byte[] h(byte[],java.lang.String)>
		SHA-256: cae1dbb715b2bf772da6a143a987561bd2d40a3f75854cbb095dca6f419e95df
		Secure: false
	Object:
		Variable: $r3
		Type: byte[]
		Statement: $r3 = virtualinvoke $r2.<java.security.MessageDigest: byte[] digest(byte[])>($r3)
		Method: <okio.ByteString: okio.ByteString digest(java.lang.String)>
		SHA-256: a79a1700ae9d8d44f13ea218f751e7024f8f1222b1b2ae17cdbab7b56d352181
		Secure: false
	Object:
		Variable: $r5
		Type: byte[]
		Statement: $r5 = virtualinvoke $r4.<java.security.MessageDigest: byte[] digest(byte[])>($r5)
		Method: <com.google.android.gms.common.zzm: java.lang.String zza(java.lang.String,com.google.android.gms.common.zze,boolean,boolean)>
		SHA-256: 1ad14fc2bf2af5501529412ee54dd50b754eee0a24f18af778d3e338376ceaa8
		Secure: false
	Object:
		Variable: $r16
		Type: byte[]
		Statement: $r16 = interfaceinvoke $r17.<java.security.Key: byte[] getEncoded()>()
		Method: <sp.a: boolean match(java.security.cert.Certificate)>
		SHA-256: f0018901d3e96ff716a71c9fdb5bce25c7e394ebe42260bab16d1f2403d64969
		Secure: true
	Object:
		Variable: $r3
		Type: byte[]
		Statement: $r3 = virtualinvoke $r4.<java.security.MessageDigest: byte[] digest(byte[])>($r3)
		Method: <com.google.firebase.iid.zzan: java.lang.String zza(java.security.KeyPair)>
		SHA-256: e946c234a6a6cfc49c34b62e7afc52b556d780beae3d50d88d040b54e984fb57
		Secure: false
	Object:
		Variable: $r4
		Type: java.security.KeyStore
		Statement: $r4 = staticinvoke <java.security.KeyStore: java.security.KeyStore getInstance(java.lang.String)>($r3)
		Method: <com.xiaomi.mitv.epg.downloader.Downloader: javax.net.ssl.SSLContext createSSLContext(android.content.Context,java.lang.String[])>
		SHA-256: 2091f4f79656172c934289d10861370a40a99d32ad63f8dc8d17f7da8700c77c
		Secure: true
	Object:
		Variable: $r1
		Type: byte[]
		Statement: virtualinvoke $r4.<java.security.SecureRandom: void nextBytes(byte[])>($r1)
		Method: <qm.c: byte[] h(byte[],int,int)>
		SHA-256: 76f1011b39a75d38761f347f99cbd88f3d93a07758837270278b3222cc368222
		Secure: true
	Object:
		Variable: $r4
		Type: byte[]
		Statement: $r4 = interfaceinvoke $r3.<java.security.Key: byte[] getEncoded()>()
		Method: <ko.a: org.spongycastle.asn1.v p()>
		SHA-256: feb3bbd6db969e3b66141343125b646b6e78b434e257d1b6b3e5b450f59e8029
		Secure: true
	Object:
		Variable: $r5
		Type: javax.crypto.Cipher
		Statement: $r5 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer49726)
		Method: <y4.a: boolean f(java.lang.String)>
		SHA-256: a025ce7064f640df4bfe2ed24544a5f8e1718e311f086fc1b1fa334eb151cab8
		Secure: false
	Object:
		Variable: $i4
		Type: int
		Statement: $i4 = virtualinvoke $r4.<java.util.Random: int nextInt()>()
		Method: <qm.c: byte[] h(byte[],int,int)>
		SHA-256: c0c92a1cd157c1555d4a958d0ec708d156c2f97231bfa53cd289a6314d30210e
		Secure: true
	Object:
		Variable: $r4
		Type: java.security.SecureRandom
		Statement: specialinvoke $r4.<java.security.SecureRandom: void <init>()>()
		Method: <rm.s: void b(boolean,im.j)>
		SHA-256: 8489d4170448ec128245794cbb83ad77ec98837535213f2fe3d106aabc157d04
		Secure: true
	Object:
		Variable: $r2
		Type: byte[]
		Statement: $r2 = virtualinvoke $r1.<java.security.MessageDigest: byte[] digest()>()
		Method: <nf.e: java.lang.String c(java.lang.String)>
		SHA-256: e19443296299cb33fcb068902f1b59c240077d7409b2810a05695a996bb99665
		Secure: true
	Object:
		Variable: $r3
		Type: java.security.MessageDigest
		Statement: $r3 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer47315)
		Method: <nf.b: java.lang.String d(java.lang.String)>
		SHA-256: f10fdb207fb2a5ee44c8497ce941bd8c4d196d858d0ef60a860a18e2ec495ece
		Secure: false
	Object:
		Variable: $r5
		Type: java.security.PublicKey
		Statement: $r3 = interfaceinvoke $r5.<java.security.Key: byte[] getEncoded()>()
		Method: <u8.a: void <init>(java.security.KeyPair,int)>
		SHA-256: 14cf538bb86f47a1963165e0850c7ea208c8e5d490c05d9f4438e4f5bba52abd
		Secure: true
	Object:
		Variable: $r2
		Type: javax.crypto.spec.SecretKeySpec
		Statement: specialinvoke $r2.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r0, varReplacer7911)
		Method: <com.xiaomi.onetrack.d.a: byte[] b(byte[],byte[])>
		SHA-256: b1a396fb9dd65639faec438056b2629c1950f026e942b9233729be29f68a88b2
		Secure: true
	Object:
		Variable: $r2
		Type: javax.crypto.Cipher
		Statement: $r2 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String,java.lang.String)>(varReplacer69944, varReplacer69945)
		Method: <com.xiaomi.onetrack.d.e: byte[] a(byte[])>
		SHA-256: 860546cf56035c1e57b73cb9622635c63855a1f680caeeee9b8374181c4d5a8c
		Secure: false
	Object:
		Variable: $r3
		Type: java.security.SecureRandom
		Statement: specialinvoke $r3.<java.security.SecureRandom: void <init>()>()
		Method: <ap.b: void <init>(int,int,int,int,int,int,int,int,boolean,byte[],boolean,boolean,im.r)>
		SHA-256: 1b0a43487cf53147814bbadf7571d0f41725654f6363842d88baca73e195e65c
		Secure: true
	Object:
		Variable: $r3
		Type: java.security.SecureRandom
		Statement: specialinvoke $r3.<java.security.SecureRandom: void <init>()>()
		Method: <zo.c: void a(im.y)>
		SHA-256: 1339ac13754a37eced58cdd9fbc2cc3735e1de12dcb2351d708a6ab74d5f4162
		Secure: true
	Object:
		Variable: $r2
		Type: java.security.SecureRandom
		Statement: specialinvoke $r2.<java.security.SecureRandom: void <init>()>()
		Method: <zo.l: void e()>
		SHA-256: c7f13bafc02bdf851fe839d81aadb899f746532964e329b9348b3f5643e80955
		Secure: true
	Object:
		Variable: $r2
		Type: byte[]
		Statement: $r2 = interfaceinvoke $r1.<java.security.Key: byte[] getEncoded()>()
		Method: <okhttp3.CertificatePinner: okio.ByteString sha1(java.security.cert.X509Certificate)>
		SHA-256: cc6f30d0e2f5a42681ff50bfdf47ebe9ff3673944e14c9dbe1b5856f9637b74
		Secure: true
	Object:
		Variable: $r9
		Type: javax.crypto.spec.SecretKeySpec
		Statement: specialinvoke $r9.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r10, varReplacer115791)
		Method: <y8.b: byte[] a(java.lang.String,int)>
		SHA-256: 86748ec710994f40db03e43dda752a71bc056bc2b5151cd220d437777ffebf49
		Secure: false
	Object:
		Variable: $r4
		Type: java.security.spec.ECParameterSpec
		Statement: specialinvoke $r4.<java.security.spec.ECParameterSpec: void <init>(java.security.spec.EllipticCurve,java.security.spec.ECPoint,java.math.BigInteger,int)>($r11, $r12, $r8, $i0)
		Method: <pn.b: void <init>(java.lang.String,an.b0,pn.c,java.security.spec.ECParameterSpec,xn.c)>
		SHA-256: ac65c7584b6686c0d09f3b9562578964ba5ba5dde48b1cceb1e61d6dd4bf862d
		Secure: true
	Object:
		Variable: $r1
		Type: java.security.MessageDigest
		Statement: $r1 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer7582)
		Method: <kf.c0: java.lang.String e(java.lang.String)>
		SHA-256: f971a2ececda2d5546060493457a20a7c8d1d56485fc9479e56ebcc06ce914ef
		Secure: false
	Object:
		Variable: $r11
		Type: java.security.MessageDigest
		Statement: $r11 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer94617)
		Method: <com.xiaomi.onetrack.util.oaid.helpers.j: java.lang.String a(java.lang.String,android.content.Context)>
		SHA-256: dcf503546e2711eb0a8885e21c060dd6074c3a9305787cee7d743d330c906337
		Secure: false
	Object:
		Variable: $i5
		Type: int
		Statement: $i5 = virtualinvoke $r1.<java.util.Random: int nextInt()>()
		Method: <jp.e: void m(int,java.security.SecureRandom)>
		SHA-256: c791e3f8ba1fafa80799c29309a508a0a4ce695c2131250827cb2f7951dba36a
		Secure: true
	Object:
		Variable: $r1
		Type: java.security.PublicKey
		Statement: $r2 = interfaceinvoke $r1.<java.security.Key: byte[] getEncoded()>()
		Method: <okhttp3.CertificatePinner: okio.ByteString sha1(java.security.cert.X509Certificate)>
		SHA-256: 2be9d15c1ec12d52e497f21f71bc5e95edf75a5e4d9fb2d913844c14b3bbafaf
		Secure: true
	Object:
		Variable: $r1
		Type: java.security.SecureRandom
		Statement: specialinvoke $r1.<java.security.SecureRandom: void <init>()>()
		Method: <com.google.android.gms.measurement.internal.zzfx: java.security.SecureRandom zzmk()>
		SHA-256: 3f89ad8b89c6ac9acb93b3a5ab5d77b9c508bf48eca9ba37acffc62f02d96f4b
		Secure: true
	Object:
		Variable: $r0
		Type: byte[]
		Statement: $r0 = virtualinvoke $r3.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r0)
		Method: <com.xiaomi.verificationsdk.internal.a: byte[] e(byte[],java.security.Key,java.lang.String)>
		SHA-256: aba2667adeec3b99892f32ca0d24a64f283316590f9f65221cafc0610047c865
		Secure: false
	Object:
		Variable: $r2
		Type: java.security.spec.ECGenParameterSpec
		Statement: specialinvoke $r2.<java.security.spec.ECGenParameterSpec: void <init>(java.lang.String)>(varReplacer65488)
		Method: <pn.h$a: void <clinit>()>
		SHA-256: ef42f12d3e36298fa305e8bcb5610e97488eca420dce028e6c2e5d79bce0af83
		Secure: true
	Object:
		Variable: $r1
		Type: byte[]
		Statement: $r1 = virtualinvoke $r2.<java.security.MessageDigest: byte[] digest()>()
		Method: <com.hzy.tvmao.utils.c: java.lang.String a(byte[])>
		SHA-256: 992df8e39b4a011f787bb9dc8abb05de9f10216e5c8ca21d29fdc6c7cfa5b0a7
		Secure: false
	Object:
		Variable: r0
		Type: mo.d
		Statement: specialinvoke r0.<java.security.spec.ECParameterSpec: void <init>(java.security.spec.EllipticCurve,java.security.spec.ECPoint,java.math.BigInteger,int)>($r7, $r8, $r2, $i0)
		Method: <mo.d: void <init>(java.lang.String,oo.e,oo.i,java.math.BigInteger,java.math.BigInteger,byte[])>
		SHA-256: fbd2141c8cb2cabeef9e8c2d1f7a65ba2e2aad61bcdf729df0b220143209e225
		Secure: true
	Object:
		Variable: $r2
		Type: java.security.spec.ECParameterSpec
		Statement: specialinvoke $r2.<java.security.spec.ECParameterSpec: void <init>(java.security.spec.EllipticCurve,java.security.spec.ECPoint,java.math.BigInteger,int)>($r1, $r3, $r7, $i0)
		Method: <qn.b: java.security.spec.ECParameterSpec b(java.security.spec.EllipticCurve,an.x)>
		SHA-256: 9b8bf366778bb003031f2fd6130c044589819c74bbf63220e190faa4681c8fbb
		Secure: true
	Object:
		Variable: $r6
		Type: java.security.SecureRandom
		Statement: specialinvoke $r6.<java.security.SecureRandom: void <init>()>()
		Method: <sn.f: java.security.KeyPair generateKeyPair()>
		SHA-256: e658131d771a283cc4dbcfecbc609907751442ee5fac95139da906282f01ae60
		Secure: true
	Object:
		Variable: varReplacer20453
		Type: java.lang.String
		Statement: $r3 = staticinvoke <java.security.KeyFactory: java.security.KeyFactory getInstance(java.lang.String)>(varReplacer20453)
		Method: <s8.g: java.security.PublicKey q(java.lang.String)>
		SHA-256: b4b722563443233e8bc7ff8cd4601dd0f40ea48b174ba9595188a8df51e005ee
		Secure: false
	Object:
		Variable: $r3
		Type: java.security.SecureRandom
		Statement: specialinvoke $r3.<java.security.SecureRandom: void <init>()>()
		Method: <tm.o: void a(im.y)>
		SHA-256: 3d549f653ee7afb1badf6d71b2c1ad7e6c3a3f9e02931bfe58c4a523638f559b
		Secure: true
	Object:
		Variable: $r10
		Type: byte[]
		Statement: $r10 = virtualinvoke $r11.<java.security.MessageDigest: byte[] digest(byte[])>($r10)
		Method: <com.xiaomi.onetrack.util.oaid.helpers.j: java.lang.String a(java.lang.String,android.content.Context)>
		SHA-256: 101fcc9e4d0656b93ae43bee1156787952e49dc6808c900820de1b2798eef1bd
		Secure: false
	Object:
		Variable: $r1
		Type: java.security.MessageDigest
		Statement: $r1 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer25184)
		Method: <com.xiaomi.accountsdk.utils.Coder: byte[] hash4SHA1(byte[])>
		SHA-256: 27765afef9cc863302744a880104f22e602c078da3228165b069088b9c5899d9
		Secure: false
	Object:
		Variable: $r1
		Type: javax.crypto.spec.DHParameterSpec
		Statement: specialinvoke $r1.<javax.crypto.spec.DHParameterSpec: void <init>(java.math.BigInteger,java.math.BigInteger)>($r3, $r4)
		Method: <lo.q: javax.crypto.spec.DHParameterSpec getParams()>
		SHA-256: 8f0fa522ffc7095891b1f88a648eadc7bd185f06aa196d74e52dee4e5d9abbdf
		Secure: true
	Object:
		Variable: $r1
		Type: java.security.SecureRandom
		Statement: specialinvoke $r1.<java.security.SecureRandom: void <init>()>()
		Method: <com.google.android.gms.measurement.internal.zzfx: void zzgz()>
		SHA-256: 7376e683daa4bad5b476a7eb9a81d62c8e55f6c139258abda99a7f53901be14c
		Secure: true
	Object:
		Variable: $r3
		Type: byte[]
		Statement: $r3 = virtualinvoke $r5.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r3)
		Method: <com.xiaomi.mitv.phone.remotecontroller.utils.EncryptUtil: java.lang.String encryptDES(java.lang.String,java.lang.String)>
		SHA-256: b442968b60c06db52266771145ebd9fd3fe9be3fa9ef5adb157e5af8a9fafcd1
		Secure: false
	Object:
		Variable: $r0
		Type: byte[]
		Statement: $r0 = virtualinvoke $r7.<javax.crypto.Cipher: byte[] doFinal(byte[],int,int)>($r0, $i0, $i1)
		Method: <s8.c: byte[] h(byte[],java.lang.String)>
		SHA-256: ccc7635b517c0da327ecb090f1d7d2c56a1b84b6c3dfec2183d8d600bde83330
		Secure: false
	Object:
		Variable: varReplacer42928
		Type: java.lang.String
		Statement: specialinvoke $r0.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r2, varReplacer42928)
		Method: <com.xiaomi.account.auth.AuthorizeHelper: byte[] encryptHMACSha1(byte[],byte[])>
		SHA-256: c2a0e4bbeb4ebbd17d9830da56b049fb6885bcf326474e6c60bec095e8583c41
		Secure: false
	Object:
		Variable: $r1
		Type: java.security.KeyPair
		Statement: specialinvoke $r1.<java.security.KeyPair: void <init>(java.security.PublicKey,java.security.PrivateKey)>($r2, $r12)
		Method: <sn.f: java.security.KeyPair generateKeyPair()>
		SHA-256: d5e97a692aa453ecaff46e7f4c1040c9cef0ec33ec3fb63eee010901ca68deed
		Secure: false
	Object:
		Variable: $r3
		Type: byte[]
		Statement: $r2 = virtualinvoke $r8.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r3)
		Method: <s8.c: java.lang.String d(java.lang.String,java.lang.String)>
		SHA-256: eb88bfecbdab737d629d62a41455335841b65dd1051b945a87fb330f5efecd28
		Secure: false
	Object:
		Variable: $r7
		Type: javax.crypto.spec.IvParameterSpec
		Statement: specialinvoke $r7.<javax.crypto.spec.IvParameterSpec: void <init>(byte[])>($r4)
		Method: <s8.c: java.lang.String b(java.lang.String,u8.d,boolean)>
		SHA-256: 6767021c207d15a26ebe0b1afca0e88872fbf27b847c7b664583d5b99f2efc6
		Secure: false
	Object:
		Variable: $r3
		Type: java.security.SecureRandom
		Statement: specialinvoke $r3.<java.security.SecureRandom: void <init>()>()
		Method: <en.d: void b(boolean,im.j)>
		SHA-256: 969bb1abdb99da43df606e420763e559a00c6b0fc46ed2c6ad06a105d9125f7d
		Secure: true
	Object:
		Variable: $r5
		Type: java.security.PublicKey
		Statement: $r5 = virtualinvoke $r3.<java.security.KeyFactory: java.security.PublicKey generatePublic(java.security.spec.KeySpec)>($r4)
		Method: <s8.c: java.lang.String g(java.lang.String,java.lang.String)>
		SHA-256: 9a346af0b872fc22db277801152d1a2b997a053ac91954b6fff33aa124fe3608
		Secure: false
	Object:
		Variable: $r3
		Type: java.security.MessageDigest
		Statement: $r3 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer7354)
		Method: <com.xiaomi.ai.utils.UploadHelper: java.lang.String getRandomRequestId()>
		SHA-256: f9df46ff7e389cbc2e383c7317873a0b12d14ee907f5115eaeec200b6960c61e
		Secure: false
	Object:
		Variable: $r2
		Type: java.security.spec.ECGenParameterSpec
		Statement: specialinvoke $r2.<java.security.spec.ECGenParameterSpec: void <init>(java.lang.String)>(varReplacer65478)
		Method: <pn.h$a: void <clinit>()>
		SHA-256: 9dcfb9d2548e447a6d8aa890d56ac25e48c0ae55c2df9a69a2ecc7f523f15030
		Secure: true
	Object:
		Variable: $r4
		Type: java.security.Key
		Statement: $r4 = virtualinvoke $r3.<java.security.KeyStore: java.security.Key getKey(java.lang.String,char[])>(varReplacer69929, varReplacer69930)
		Method: <com.xiaomi.onetrack.d.b: java.lang.String b(android.content.Context,java.lang.String)>
		SHA-256: c02d9f93ef186d865c9a0f1998539dda0e5cdd2be0611cd3daa9b9f41edc1b73
		Secure: false
	Object:
		Variable: $r0
		Type: javax.crypto.KeyGenerator
		Statement: $r0 = staticinvoke <javax.crypto.KeyGenerator: javax.crypto.KeyGenerator getInstance(java.lang.String)>(varReplacer7918)
		Method: <com.xiaomi.onetrack.d.a: void <clinit>()>
		SHA-256: e83cfb877512de9b32440ddc8150f7868e4a2b2dba7fac8ebd03490f419d0463
		Secure: true
	Object:
		Variable: $r11
		Type: byte[]
		Statement: $r11 = virtualinvoke $r12.<java.security.MessageDigest: byte[] digest(byte[])>($r11)
		Method: <com.xiaomi.onetrack.util.oaid.helpers.i: java.lang.String a(java.lang.String,android.content.Context)>
		SHA-256: a445efd7a85a92c1a19054da416c6faceb63f26864952775230c24f86b2fdb8e
		Secure: false
	Object:
		Variable: $r3
		Type: java.security.SecureRandom
		Statement: specialinvoke $r3.<java.security.SecureRandom: void <init>()>()
		Method: <bp.c: void i(im.y)>
		SHA-256: 853180c7230cb25016bde871f4e525e8c4aa7e55855d89b93f31f2dd14a4585c
		Secure: true
	Object:
		Variable: $r2
		Type: byte[]
		Statement: $r2 = interfaceinvoke $r10.<java.security.Key: byte[] getEncoded()>()
		Method: <s8.e$c: void c(java.lang.String,byte[])>
		SHA-256: c03fcc9cefb7a2ea16a71337b75413c0e68fba18e5f20d8fb1375c8e1ebaae32
		Secure: true
	Object:
		Variable: $r2
		Type: javax.crypto.Cipher
		Statement: $r2 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer69927)
		Method: <com.xiaomi.onetrack.d.b: java.lang.String b(android.content.Context,java.lang.String)>
		SHA-256: 8f540cb7f34c9469cede844228f73ebd4d4828381bf2d508abe1b588f3b70c10
		Secure: false
	Object:
		Variable: $r4
		Type: java.security.spec.DSAParameterSpec
		Statement: specialinvoke $r4.<java.security.spec.DSAParameterSpec: void <init>(java.math.BigInteger,java.math.BigInteger,java.math.BigInteger)>($r3, $r6, $r7)
		Method: <nn.c: void <init>(an.u)>
		SHA-256: dd509f1b66aa40d8d57fd2317226649b16fdc5a2f4d4fbf581883d1afac29bb3
		Secure: true
	Object:
		Variable: $r7
		Type: java.security.Signature
		Statement: $r7 = staticinvoke <java.security.Signature: java.security.Signature getInstance(java.lang.String)>($r6)
		Method: <wn.h: void verify(java.security.PublicKey)>
		SHA-256: 48b0fdd3e7bbf7a4c63b7e7e985992f077f85294549d9556bc12332b6ebbaa68
		Secure: false
	Object:
		Variable: $r2
		Type: javax.crypto.SecretKey
		Statement: $r4 = interfaceinvoke $r2.<java.security.Key: byte[] getEncoded()>()
		Method: <com.xiaomi.verificationsdk.internal.a: com.xiaomi.verificationsdk.internal.a$b b(java.lang.String)>
		SHA-256: e4abe3669a785cd2ed6ae526a54a013d6d29c86591da3682cce7cf599a5d0b3d
		Secure: true
	Object:
		Variable: $r2
		Type: javax.crypto.spec.SecretKeySpec
		Statement: specialinvoke $r2.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r4, varReplacer49719)
		Method: <y4.a: boolean f(java.lang.String)>
		SHA-256: 20a0cf9258fbe6fd96d0cec147d2acca84c1186a08e29ffc5a8d4ad7ab1bb0c
		Secure: false
	Object:
		Variable: $r5
		Type: java.security.AlgorithmParameters
		Statement: $r5 = staticinvoke <java.security.AlgorithmParameters: java.security.AlgorithmParameters getInstance(java.lang.String,java.security.Provider)>($r3, $r4)
		Method: <wn.i: void c(java.security.Signature,org.spongycastle.asn1.f)>
		SHA-256: 98666eef762b785dd3b7f7af622fdffd8561d67da3e58b40d2cbd741fc8abea7
		Secure: false
	Object:
		Variable: varReplacer115791
		Type: java.lang.String
		Statement: specialinvoke $r9.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r10, varReplacer115791)
		Method: <y8.b: byte[] a(java.lang.String,int)>
		SHA-256: 4e7a7a7078015e73130a2ebc6bdfadb0c0052d8eccd0dee510ccad5fd86c6ee3
		Secure: false
	Object:
		Variable: $r2
		Type: java.security.MessageDigest
		Statement: $r2 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer20455)
		Method: <s8.h: java.lang.String b(byte[])>
		SHA-256: 728dafc701eddcbe34a331c240ea8c9460e60aedaa7ef34e11be1902041f9475
		Secure: false
	Object:
		Variable: $r0
		Type: java.security.SecureRandom
		Statement: specialinvoke $r0.<java.security.SecureRandom: void <init>()>()
		Method: <yb.c: byte[] a(int)>
		SHA-256: c73ce44bcf4088f1e72ed057635fe94c1a4ef9f585d7fe602cf4a54651ddcafe
		Secure: true
	Object:
		Variable: $r4
		Type: byte[]
		Statement: $r4 = interfaceinvoke $r2.<java.security.Key: byte[] getEncoded()>()
		Method: <com.xiaomi.verificationsdk.internal.a: com.xiaomi.verificationsdk.internal.a$b b(java.lang.String)>
		SHA-256: 4f5858ee4446f28759ac2491c5608de616c0f1b1b6d829ae6cfd3a9c622c589
		Secure: true
	Object:
		Variable: $r0
		Type: javax.crypto.spec.IvParameterSpec
		Statement: specialinvoke $r0.<javax.crypto.spec.IvParameterSpec: void <init>(byte[])>($r3)
		Method: <yb.a: java.lang.String b(java.lang.String,byte[],byte[])>
		SHA-256: f74aad17bfa529a270cb506c5c57390ba64bcc5c2483edac588e028fc1e3a89d
		Secure: false
	Object:
		Variable: $r3
		Type: byte[]
		Statement: virtualinvoke $r4.<java.security.SecureRandom: void nextBytes(byte[])>($r3)
		Method: <qm.c: byte[] g(byte[],int,int)>
		SHA-256: 5432566f26bbf0dba25a616b489adefa4cea9daffd9e52af33179bbc69e3a787
		Secure: true
	Object:
		Variable: $i4
		Type: int
		Statement: $i4 = virtualinvoke $r6.<java.util.Random: int nextInt()>()
		Method: <bp.c: void g()>
		SHA-256: 4ed1ab0a6450be07dba5d6f4a03dcb3dfc3f0614a46026f6841eab911d3e09cc
		Secure: true
	Object:
		Variable: $r0
		Type: javax.crypto.Mac
		Statement: $r0 = staticinvoke <javax.crypto.Mac: javax.crypto.Mac getInstance(java.lang.String)>($r1)
		Method: <com.google.common.hash.y: javax.crypto.Mac l(java.lang.String,java.security.Key)>
		SHA-256: b27c7be48a3625bee2feb3c148e24f89f93a62b71699a7dd3d6c5d5d80456d60
		Secure: false
	Object:
		Variable: $i0
		Type: int
		Statement: $i0 = virtualinvoke $r0.<java.util.Random: int nextInt()>()
		Method: <jp.b0: int a(java.security.SecureRandom,int)>
		SHA-256: d6614fdbdebc8270a3326603c8a70153c3e91b71197788223ac11c345cccefc
		Secure: true
	Object:
		Variable: $r4
		Type: java.security.PublicKey
		Statement: $r4 = virtualinvoke $r1.<java.security.KeyFactory: java.security.PublicKey generatePublic(java.security.spec.KeySpec)>($r2)
		Method: <com.xiaomi.onetrack.d.e: java.security.interfaces.RSAPublicKey a(java.lang.String)>
		SHA-256: 31d97d7ac2b727819867301cc9a18e0a331bb4ca9a0335fe8da479771ba00357
		Secure: false
	Object:
		Variable: varReplacer83393
		Type: java.lang.String
		Statement: $r4 = staticinvoke <java.security.KeyFactory: java.security.KeyFactory getInstance(java.lang.String)>(varReplacer83393)
		Method: <s8.c: byte[] h(byte[],java.lang.String)>
		SHA-256: 24910e94bfb6d29d2d0e75b3a46f7a83aa2ae826ee87f1795a51e8f80a32c606
		Secure: false
	Object:
		Variable: $r12
		Type: javax.crypto.spec.DHParameterSpec
		Statement: specialinvoke $r12.<javax.crypto.spec.DHParameterSpec: void <init>(java.math.BigInteger,java.math.BigInteger)>($r5, $r13)
		Method: <mn.d: void <init>(em.c1)>
		SHA-256: 2e1d3e3018821e7bd949cd3bdecb445c437ea83fd72b41edcb36e099d6ce18f4
		Secure: true
	Object:
		Variable: $r1
		Type: java.security.MessageDigest
		Statement: $r1 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer7311)
		Method: <com.xiaomi.ai.utils.n: java.lang.String a(java.lang.String)>
		SHA-256: 914d7e607782b1739de1b478175f8070362f7e6963aa403758e59acd1b5ca4d7
		Secure: false
	Object:
		Variable: $r6
		Type: java.security.PublicKey
		Statement: $r6 = virtualinvoke $r4.<java.security.KeyFactory: java.security.PublicKey generatePublic(java.security.spec.KeySpec)>($r5)
		Method: <com.google.firebase.iid.zzy: java.security.KeyPair zzc(java.lang.String,java.lang.String)>
		SHA-256: aaaf8af6e34bf42b6331ccbf317a2dd3f09e6d2e3bd57c74923603c3aac116
		Secure: false
	Object:
		Variable: $r2
		Type: java.security.spec.ECGenParameterSpec
		Statement: specialinvoke $r2.<java.security.spec.ECGenParameterSpec: void <init>(java.lang.String)>(varReplacer65483)
		Method: <pn.h$a: void <clinit>()>
		SHA-256: 361b3153e0bcede5bded7e357bcd1d0c822fb1954922133dd63155ef166cb744
		Secure: true
	Object:
		Variable: $r3
		Type: byte[]
		Statement: $r3 = interfaceinvoke $r2.<java.security.Key: byte[] getEncoded()>()
		Method: <u8.a: void <init>(java.security.KeyPair,int)>
		SHA-256: d6ce2bc128bed293b84df7b66c8dd9c51376873eb7919b417d65da7b42528335
		Secure: true
	Object:
		Variable: $r3
		Type: byte[]
		Statement: virtualinvoke $r4.<java.security.SecureRandom: void nextBytes(byte[])>($r3)
		Method: <en.k: byte[] f()>
		SHA-256: 6710375a48f6b3e0ad39e0d854e70d18717de6a4d7f381ed4e9486be07818b60
		Secure: true
	Object:
		Variable: $r6
		Type: byte[]
		Statement: $r6 = virtualinvoke $r2.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r6)
		Method: <com.xiaomi.onetrack.d.b: java.lang.String b(android.content.Context,java.lang.String)>
		SHA-256: 59322b71cbfed1b41943a9cbb510c8e2ce0372209cb55d9faf070d3829145c7f
		Secure: false
	Object:
		Variable: r0
		Type: sp.h
		Statement: specialinvoke r0.<java.security.cert.PKIXParameters: void <init>(java.util.Set)>($r1)
		Method: <sp.h: void <init>(java.util.Set)>
		SHA-256: bc96298ccab0613ff85983cc9fb5a762cc1cc37f75dfdb264d4de04c28ddfe30
		Secure: true
	Object:
		Variable: $r5
		Type: java.security.AlgorithmParameters
		Statement: $r5 = staticinvoke <java.security.AlgorithmParameters: java.security.AlgorithmParameters getInstance(java.lang.String,java.security.Provider)>($r3, $r4)
		Method: <lo.u0: void c(java.security.Signature,org.spongycastle.asn1.f)>
		SHA-256: cc43c259a26a25842d10192194c7ff29d150c9f8b03aa13e10508aea84a04de6
		Secure: false
	Object:
		Variable: $r2
		Type: javax.crypto.spec.SecretKeySpec
		Statement: specialinvoke $r2.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r1, varReplacer25797)
		Method: <com.xiaomi.accountsdk.utils.AESCoder: void <init>(byte[])>
		SHA-256: 90081560c03a50b663cd32f2c52daec887f63ed9d11ede5e812cd100e8b3400e
		Secure: true
	Object:
		Variable: $r5
		Type: javax.crypto.Cipher
		Statement: $r5 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer49728)
		Method: <y4.a: boolean f(java.lang.String)>
		SHA-256: 6773bb0d20b520b912af345586633fdb4c56e822da7d0a91d8bc54bdd2638cc
		Secure: false
	Object:
		Variable: varReplacer63246
		Type: java.lang.String
		Statement: $r3 = staticinvoke <java.security.KeyFactory: java.security.KeyFactory getInstance(java.lang.String)>(varReplacer63246)
		Method: <s8.c: java.lang.String g(java.lang.String,java.lang.String)>
		SHA-256: 811fe59bdc0c83ace37b7714d6d0baa5f4a44fbbe26c971a7e12607ad1ca3aa
		Secure: false
	Object:
		Variable: $r2
		Type: java.security.spec.ECParameterSpec
		Statement: specialinvoke $r2.<java.security.spec.ECParameterSpec: void <init>(java.security.spec.EllipticCurve,java.security.spec.ECPoint,java.math.BigInteger,int)>($r1, $r3, $r7, $i0)
		Method: <pn.c: java.security.spec.ECParameterSpec b(java.security.spec.EllipticCurve,an.x)>
		SHA-256: c6ddd1139f7381cd71918e3c776a6ebb40e6e1511bea998da5872d0b365e8d0c
		Secure: true
	Object:
		Variable: $r10
		Type: java.security.KeyPair
		Statement: specialinvoke $r10.<java.security.KeyPair: void <init>(java.security.PublicKey,java.security.PrivateKey)>($r8, $r11)
		Method: <on.d: java.security.KeyPair generateKeyPair()>
		SHA-256: 77a910c0058575722cff03f6894f44cbbe7185a895b3a5778efbcde1a936da27
		Secure: false
	Object:
		Variable: $r7
		Type: javax.crypto.spec.SecretKeySpec
		Statement: specialinvoke $r7.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r4, varReplacer46249)
		Method: <org.apache.commons.compress.archivers.sevenz.AES256SHA256Decoder$1: javax.crypto.CipherInputStream init()>
		SHA-256: 69f1fdf78543bf6d409e97b926d40d82958b2ec7cde95423841f39448fede7a4
		Secure: false
	Object:
		Variable: $r1
		Type: java.security.MessageDigest
		Statement: $r1 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer47310)
		Method: <of.a: byte[] l(byte[])>
		SHA-256: bcc37115a57aecada728108a6f9bb952b6f9484d136558ee51324ae01d0ab73e
		Secure: true
	Object:
		Variable: $r2
		Type: java.security.PrivateKey
		Statement: $r3 = interfaceinvoke $r2.<java.security.Key: byte[] getEncoded()>()
		Method: <u8.a: void <init>(java.security.KeyPair,int)>
		SHA-256: 49e2d25524325085d00f5328dc6cb11f3ff6cde3d590b8d30ad10fe4b3b3f74c
		Secure: true
	Object:
		Variable: $r10
		Type: byte[]
		Statement: $r10 = virtualinvoke $r8.<javax.crypto.Mac: byte[] doFinal()>()
		Method: <y8.b: byte[] a(java.lang.String,int)>
		SHA-256: b7fd9595f1666abf5c07081f5781667e4ebd7cdd8f2baaa8e56eaa0ac5a48900
		Secure: false
	Object:
		Variable: $z0
		Type: boolean
		Statement: $z0 = virtualinvoke $r2.<java.security.Signature: boolean verify(byte[])>($r8)
		Method: <wn.h: void h(java.security.PublicKey,java.security.Signature)>
		SHA-256: ac220e66f85aad005462db0417470cbf823e9cfc8c40d0947cc52394e7cd74ac
		Secure: false
	Object:
		Variable: $r4
		Type: byte[]
		Statement: $r4 = virtualinvoke $r5.<java.security.MessageDigest: byte[] digest()>()
		Method: <org.apache.commons.compress.archivers.sevenz.AES256SHA256Decoder$1: javax.crypto.CipherInputStream init()>
		SHA-256: 671980c38541e5f4635e5df9b14b3f2382c28342263daa27d76a6e21eb43fded
		Secure: true
	Object:
		Variable: $r17
		Type: javax.net.ssl.TrustManagerFactory
		Statement: $r17 = staticinvoke <javax.net.ssl.TrustManagerFactory: javax.net.ssl.TrustManagerFactory getInstance(java.lang.String)>($r3)
		Method: <com.xiaomi.mitv.epg.downloader.Downloader: javax.net.ssl.SSLContext createSSLContext(android.content.Context,java.lang.String[])>
		SHA-256: 80d79524bdd3f230848f5099a9df7aa5b9f4d2c2667c20bc7f36ca7d51674328
		Secure: true
	Object:
		Variable: $r1
		Type: java.security.MessageDigest
		Statement: $r1 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>($r2)
		Method: <com.google.common.hash.z: java.security.MessageDigest l(java.lang.String)>
		SHA-256: df06042544464ca872fee3281ea44a118606c1212a7cc38ec57e7f589064058b
		Secure: true
	Object:
		Variable: $r2
		Type: byte[]
		Statement: virtualinvoke $r3.<java.security.SecureRandom: void nextBytes(byte[])>($r2)
		Method: <com.xiaomi.accountsdk.utils.AESWithIVCoder: java.lang.String encrypt(java.lang.String)>
		SHA-256: e06adf48174cd344ace6a09ce6d239b6e26118e40efc49d98ebe008f0846010e
		Secure: true
	Object:
		Variable: $r3
		Type: byte[]
		Statement: $r10 = virtualinvoke $r7.<java.security.MessageDigest: byte[] digest(byte[])>($r3)
		Method: <com.google.android.gms.measurement.internal.zzt: long zza(com.google.android.gms.internal.measurement.zzfw)>
		SHA-256: 4abc8628b1f73f8b88ece2136525c8c81d560a53364acea2108b58edacaba265
		Secure: false
	Object:
		Variable: $r2
		Type: java.security.SecureRandom
		Statement: specialinvoke $r2.<java.security.SecureRandom: void <init>()>()
		Method: <bp.c: void j()>
		SHA-256: b9e92aac85475fea7bfc26c318815dd242b2d4e308d036948e91dcaf60e288d2
		Secure: true
	Object:
		Variable: varReplacer69955
		Type: java.lang.String
		Statement: $r1 = staticinvoke <java.security.KeyFactory: java.security.KeyFactory getInstance(java.lang.String)>(varReplacer69955)
		Method: <com.xiaomi.onetrack.d.e: java.security.interfaces.RSAPublicKey a(java.lang.String)>
		SHA-256: 7af886ae7914b31ff80e398daa3f7f3d45cc43233fc2230279ea415268b0aa1c
		Secure: false
	Object:
		Variable: $r12
		Type: javax.crypto.spec.DHParameterSpec
		Statement: specialinvoke $r12.<javax.crypto.spec.DHParameterSpec: void <init>(java.math.BigInteger,java.math.BigInteger,int)>($r5, $r13, $i0)
		Method: <mn.d: void <init>(em.c1)>
		SHA-256: e1814344e29936163d13fd9ad7e532616b887771b6a8c4e55e6a1a2f922abe86
		Secure: true
	Object:
		Variable: $r1
		Type: java.security.MessageDigest
		Statement: $r1 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer67436)
		Method: <com.xiaomi.accountsdk.hasheddeviceidlib.DeviceIDCoder: java.lang.String getDataMd5Digest(byte[])>
		SHA-256: 61e0c92ca2e6cdf01d44459d964c3b77e748da1025bb64c0624e7c4b349222b3
		Secure: false
	Object:
		Variable: $i4
		Type: int
		Statement: $i4 = virtualinvoke $r1.<java.util.Random: int nextInt()>()
		Method: <jp.e: void m(int,java.security.SecureRandom)>
		SHA-256: fd5f6e03436b16d9b0a04eabdb892dd6485d6a3aeba5ad7ea6cbad8948c61333
		Secure: true
	Object:
		Variable: varReplacer94029
		Type: java.lang.String
		Statement: $r4 = staticinvoke <java.security.KeyFactory: java.security.KeyFactory getInstance(java.lang.String)>(varReplacer94029)
		Method: <com.google.firebase.iid.zzy: java.security.KeyPair zzc(java.lang.String,java.lang.String)>
		SHA-256: 9477a89c0adc6a712cdb9592a9200a09c1850d1b9f5ebffeda7373f41bbea07e
		Secure: false
	Object:
		Variable: varReplacer1622
		Type: java.lang.String
		Statement: specialinvoke $r5.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r4, varReplacer1622)
		Method: <com.xiaomi.mitv.phone.remotecontroller.utils.EncryptUtil: java.lang.String decryptDES(java.lang.String,java.lang.String)>
		SHA-256: f008915d4aa3a46c35adbd96b769cbc0e773f46a34c1fcb1a275dc5f0011d09f
		Secure: false
	Object:
		Variable: $r6
		Type: byte[]
		Statement: $r6 = virtualinvoke $r2.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r6)
		Method: <com.xiaomi.onetrack.d.b: java.lang.String a(android.content.Context,java.lang.String)>
		SHA-256: e08c78004ba96c49f049ed8d21beafb16ee81ef4338f19be7f640b81812ca5ba
		Secure: false
	Object:
		Variable: $r4
		Type: java.security.Key
		Statement: $r4 = virtualinvoke $r2.<java.security.KeyStore: java.security.Key getKey(java.lang.String,char[])>($r3, varReplacer115782)
		Method: <y8.b: byte[] a(java.lang.String,int)>
		SHA-256: e7ed1e3446a86c9f3679e8654dbcf4fa08d3027991f46d60f288d1f85fe5f342
		Secure: false
	Object:
		Variable: $r1
		Type: javax.crypto.spec.IvParameterSpec
		Statement: specialinvoke $r1.<javax.crypto.spec.IvParameterSpec: void <init>(byte[])>($r4)
		Method: <com.xiaomi.accountsdk.utils.AESCoder: byte[] encryptWithIv(byte[],byte[])>
		SHA-256: ea72925ea496939812986c9ee54c342f175b6aa6f19f5627b975c40f36d87dd6
		Secure: false
	Object:
		Variable: $r0
		Type: javax.crypto.KeyGenerator
		Statement: $r0 = staticinvoke <javax.crypto.KeyGenerator: javax.crypto.KeyGenerator getInstance(java.lang.String)>(varReplacer7670)
		Method: <com.xiaomi.verificationsdk.internal.a: javax.crypto.SecretKey f()>
		SHA-256: f3858cc65a202409f91b0fe259398f64b32927fa22ede7f3677ea1f5dee67199
		Secure: true
	Object:
		Variable: $r3
		Type: java.security.KeyStore
		Statement: $r3 = staticinvoke <java.security.KeyStore: java.security.KeyStore getInstance(java.lang.String)>(varReplacer69939)
		Method: <com.xiaomi.onetrack.d.b: java.lang.String a(android.content.Context,java.lang.String)>
		SHA-256: cfb78372f22f0a29cb95ea62d6be7d32a0e5323916903b5eb1abc66cd1862b9b
		Secure: false
	Object:
		Variable: $r15
		Type: java.security.MessageDigest
		Statement: $r15 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String,java.lang.String)>($r14, varReplacer74458)
		Method: <sp.a: boolean match(java.security.cert.Certificate)>
		SHA-256: ccf6be00edfaf43fef45c7baaa788ef5586db89a5ee223f0292153e93ba5a077
		Secure: true
	Object:
		Variable: $r2
		Type: byte[]
		Statement: $r2 = virtualinvoke $r3.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r2)
		Method: <com.xiaomi.accountsdk.utils.AESCoder: byte[] decrypt(byte[])>
		SHA-256: e497d952cabb0419a75d1293b7cf5a4f40d8ffc320282bfd8172a60e8f39fada
		Secure: false
	Object:
		Variable: $r14
		Type: java.security.spec.ECParameterSpec
		Statement: specialinvoke $r14.<java.security.spec.ECParameterSpec: void <init>(java.security.spec.EllipticCurve,java.security.spec.ECPoint,java.math.BigInteger,int)>($r7, $r0, $r12, $i0)
		Method: <vn.i: java.security.spec.ECParameterSpec h(hm.j,oo.e)>
		SHA-256: 4127fb3baa5448da26e74531265bd601ca56c84f6d0a10571b6c151e735ff147
		Secure: true
	Object:
		Variable: $r1
		Type: java.security.KeyFactory
		Statement: $r1 = staticinvoke <java.security.KeyFactory: java.security.KeyFactory getInstance(java.lang.String)>(varReplacer69955)
		Method: <com.xiaomi.onetrack.d.e: java.security.interfaces.RSAPublicKey a(java.lang.String)>
		SHA-256: 3ebbe67a6b1a17019e7b0187b56d669b95c668ad1aea6b0b769221e0db1a68b3
		Secure: false
	Object:
		Variable: $r0
		Type: javax.crypto.spec.SecretKeySpec
		Statement: specialinvoke $r0.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r2, varReplacer8424)
		Method: <com.xiaomi.onetrack.d.a: byte[] a(byte[],byte[])>
		SHA-256: 8e9367dc298b7f744e29d40cfb9ce31f1b5178e98105f521d024f98919e4f35d
		Secure: false
	Object:
		Variable: varReplacer20452
		Type: java.lang.String
		Statement: $r3 = staticinvoke <java.security.KeyFactory: java.security.KeyFactory getInstance(java.lang.String)>(varReplacer20452)
		Method: <s8.g: java.security.PrivateKey p(java.lang.String)>
		SHA-256: 15890c8fb686b4d30862f08b7ce7a0cd2a444a91d5cd640dfcdc53430197a972
		Secure: false
	Object:
		Variable: $r1
		Type: javax.net.ssl.SSLContext
		Statement: $r1 = staticinvoke <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String)>(varReplacer107131)
		Method: <rg.f: javax.net.ssl.SSLSocketFactory a(rg.g)>
		SHA-256: 8aec640abd88084bf65b62261565910a19facd0fa9b46ee4b6f4f5d7f7c799e5
		Secure: false
	Object:
		Variable: $r3
		Type: java.security.SecureRandom
		Statement: specialinvoke $r3.<java.security.SecureRandom: void <init>()>()
		Method: <en.f: void b(boolean,im.j)>
		SHA-256: 17ad246734302ab3072559636f777912ba775747132f25560683e7ce1641b2bc
		Secure: true
	Object:
		Variable: $r19
		Type: javax.net.ssl.TrustManager[]
		Statement: $r19 = virtualinvoke $r17.<javax.net.ssl.TrustManagerFactory: javax.net.ssl.TrustManager[] getTrustManagers()>()
		Method: <com.xiaomi.mitv.epg.downloader.Downloader: javax.net.ssl.SSLContext createSSLContext(android.content.Context,java.lang.String[])>
		SHA-256: c58995733e34e569fbd1a9c6b165355d886935a980cfebf593d502ed700c6938
		Secure: true
	Object:
		Variable: $r3
		Type: byte[]
		Statement: $r3 = interfaceinvoke $r2.<java.security.Key: byte[] getEncoded()>()
		Method: <com.google.firebase.iid.zzan: java.lang.String zza(java.security.KeyPair)>
		SHA-256: c4550db96774446d61209c4c7c0b5fa85cda9727921f656e16c11d14b477aa3e
		Secure: true
	Object:
		Variable: $r0
		Type: byte[]
		Statement: $r0 = virtualinvoke $r2.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r0)
		Method: <com.xiaomi.onetrack.d.e: byte[] a(byte[])>
		SHA-256: 20738642fd8122fab1cb2327fe327ebd649651e3055ba06d00696fa588e8360a
		Secure: false
	Object:
		Variable: $r19
		Type: java.security.KeyPair
		Statement: specialinvoke $r19.<java.security.KeyPair: void <init>(java.security.PublicKey,java.security.PrivateKey)>($r20, $r21)
		Method: <mn.h: java.security.KeyPair generateKeyPair()>
		SHA-256: 5d088789ab01ef0563d32651cb17f092fe7cc5b00718bf8e63899b1652496d4e
		Secure: false
	Object:
		Variable: $r2
		Type: java.security.MessageDigest
		Statement: $r2 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>($r1)
		Method: <com.xiaomi.ai.utils.g: java.lang.String a(java.lang.String,byte[])>
		SHA-256: 1a48b0d7eb96a77c72e3b9b44c62f7d34720fe2d04beae266e5057912a13534
		Secure: false
	Object:
		Variable: $r1
		Type: java.security.SecureRandom
		Statement: specialinvoke $r1.<java.security.SecureRandom: void <init>()>()
		Method: <en.c: java.security.SecureRandom e(boolean,java.security.SecureRandom)>
		SHA-256: d2e6df3060ff21a2c97ef53c8ed97fd58aa287e1fc395a51237fbc1a3f47e23e
		Secure: true
	Object:
		Variable: $z0
		Type: boolean
		Statement: $z0 = virtualinvoke $r2.<java.security.Signature: boolean verify(byte[])>($r8)
		Method: <lo.s0: void i(java.security.PublicKey,java.security.Signature)>
		SHA-256: 784d3ebfc3570ff024c9a3e437fccc1ca7c65689702eb44ac497e4fe3ae0eb14
		Secure: false
	Object:
		Variable: $r3
		Type: byte[]
		Statement: $r3 = virtualinvoke $r2.<java.security.MessageDigest: byte[] digest()>()
		Method: <og.i: java.lang.String D(java.io.InputStream,java.lang.String)>
		SHA-256: be5b85423fae5fcbaf478a7d1c46eac7bbcbd571429fc19f04741814862927e0
		Secure: false
	Object:
		Variable: varReplacer6719
		Type: java.lang.String
		Statement: specialinvoke $r4.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r2, varReplacer6719)
		Method: <yb.a: java.lang.String b(java.lang.String,byte[],byte[])>
		SHA-256: 5cdf86113e3665afa0b16d53fc959f6b33a6c755dbc61f2484c33c45a3ac777c
		Secure: false
	Object:
		Variable: $r1
		Type: java.security.Signature
		Statement: $r1 = staticinvoke <java.security.Signature: java.security.Signature getInstance(java.lang.String)>($r2)
		Method: <go.c: java.security.Signature k(java.lang.String)>
		SHA-256: 54670065ea36b8c7224a23e3ffa906cedb6e10d14f3c0a3154362583e722a56d
		Secure: false
	Object:
		Variable: $r0
		Type: byte[]
		Statement: $r0 = virtualinvoke $r1.<java.security.MessageDigest: byte[] digest()>()
		Method: <com.xiaomi.accountsdk.hasheddeviceidlib.DeviceIDCoder: java.lang.String getDataMd5Digest(byte[])>
		SHA-256: 738769a855bf4183afc55d3714f5109e65575dff5299f279c31ed80adc0cdc45
		Secure: false
	Object:
		Variable: varReplacer7707
		Type: java.lang.String
		Statement: specialinvoke $r1.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r3, varReplacer7707)
		Method: <s8.b: java.lang.String c(byte[],int)>
		SHA-256: 49b396aff81c6cba5226e9920a618901926f709938b0c44f2d5561caf6bc8e34
		Secure: false
	Object:
		Variable: varReplacer97040
		Type: java.lang.String
		Statement: specialinvoke $r0.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r2, varReplacer97040)
		Method: <com.xiaomi.mitv.socialtv.common.utils.SignatureUtil: java.lang.String getSignature(byte[],byte[])>
		SHA-256: 48d9851ef1f5a53460129d55128eaea07978c9c5e42425145cebe19dd7bf31b7
		Secure: false
	Object:
		Variable: $r4
		Type: java.security.SecureRandom
		Statement: specialinvoke $r4.<java.security.SecureRandom: void <init>()>()
		Method: <en.k: void b(boolean,im.j)>
		SHA-256: e2140d63ab87e4aa9c8e041f6f785be11c40071635ab3e86c42ba81ed5991178
		Secure: true
	Object:
		Variable: $i4
		Type: int
		Statement: $i4 = virtualinvoke $r1.<java.util.Random: int nextInt()>()
		Method: <bp.a: void <init>(int,int,java.security.SecureRandom)>
		SHA-256: cd393fada0476f5153cb0c23aa67f473554d76085c0256609c03d83e0b180d8
		Secure: true
	Object:
		Variable: $r11
		Type: java.security.SecureRandom
		Statement: specialinvoke $r11.<java.security.SecureRandom: void <init>()>()
		Method: <zf.a$j: void run()>
		SHA-256: 93ca01c79069de7358b2e6722b40bbfecf956e89a66a4d75590b92a6cb56a572
		Secure: true
	Object:
		Variable: $r3
		Type: byte[]
		Statement: $r3 = interfaceinvoke $r2.<java.security.Key: byte[] getEncoded()>()
		Method: <com.xiaomi.verificationsdk.internal.a: java.lang.String a(java.lang.String,javax.crypto.SecretKey)>
		SHA-256: 16e1d31186957479ca83be12060cb0cfd66ab3a5ba2db0514d8930c0f1f126d1
		Secure: true
	Object:
		Variable: varReplacer23193
		Type: java.lang.String
		Statement: specialinvoke $r5.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r4, varReplacer23193)
		Method: <s8.c: java.lang.String b(java.lang.String,u8.d,boolean)>
		SHA-256: e3e9d4e9d3bc7388b81236fd19a6c7b34c9e5c403c8d498677ce13778e9a6873
		Secure: false
	Object:
		Variable: $r0
		Type: byte[]
		Statement: $r0 = virtualinvoke $r2.<java.security.MessageDigest: byte[] digest()>()
		Method: <com.xiaomi.ai.utils.g: java.lang.String a(java.lang.String,byte[])>
		SHA-256: 930757de62f3711fff5fe49c12131065222ee94917c8cd23a2e1a237ba82b80c
		Secure: false
	Object:
		Variable: $r1
		Type: java.security.MessageDigest
		Statement: $r1 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer25081)
		Method: <com.xiaomi.accountsdk.utils.Coder: java.lang.String getDataMd5Digest(byte[])>
		SHA-256: edcbf839ae29ae48bc61294c970adb34191e4f2f432cd901449d70106c97eb4
		Secure: false
	Object:
		Variable: $r4
		Type: java.security.PrivateKey
		Statement: $r4 = virtualinvoke $r3.<java.security.KeyFactory: java.security.PrivateKey generatePrivate(java.security.spec.KeySpec)>($r0)
		Method: <s8.g: java.security.PrivateKey p(java.lang.String)>
		SHA-256: 314ef77f7b96bb667d636d421e2a38de1f606a215a615e406ffebcb5a4cd1d39
		Secure: false
	Object:
		Variable: $r4
		Type: java.security.KeyStore
		Statement: $r4 = staticinvoke <java.security.KeyStore: java.security.KeyStore getInstance(java.lang.String)>(varReplacer114465)
		Method: <rg.i: java.security.KeyStore b(java.io.InputStream,java.lang.String)>
		SHA-256: 155f2774dd717651d09a0f30cdb4f7695f3ceb6f78e87e107fb04705effb67a4
		Secure: false
	Object:
		Variable: varReplacer49719
		Type: java.lang.String
		Statement: specialinvoke $r2.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r4, varReplacer49719)
		Method: <y4.a: boolean f(java.lang.String)>
		SHA-256: 1d3ac38bdceec61cec9ee42022f253fc7e48d55027b1b659d2c4d3de4dfa751
		Secure: false
	Object:
		Variable: $r3
		Type: javax.crypto.Cipher
		Statement: $r3 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer77949)
		Method: <com.xiaomi.accountsdk.utils.AESCoder: byte[] decrypt(byte[])>
		SHA-256: 13347acefd604f103095d5d7c578b354be80ff571dec30389697b33e2213e2c
		Secure: false
	Object:
		Variable: varReplacer74575
		Type: java.lang.String
		Statement: specialinvoke $r0.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r2, varReplacer74575)
		Method: <ob.a: java.lang.String i(byte[],byte[])>
		SHA-256: 11354f12575bd85a8dfe15a239f2bee4f6c68067bc937c39d02cf5285a29424f
		Secure: false
	Object:
		Variable: $r3
		Type: java.security.SecureRandom
		Statement: specialinvoke $r3.<java.security.SecureRandom: void <init>()>()
		Method: <ap.h: void b(boolean,im.j)>
		SHA-256: d2498efd7e00106f9d948c364277831db5ff5591e747fbdee213dac64decb8f8
		Secure: true
	Object:
		Variable: $r1
		Type: javax.crypto.SecretKey
		Statement: $r2 = interfaceinvoke $r1.<java.security.Key: byte[] getEncoded()>()
		Method: <com.xiaomi.onetrack.d.a: byte[] a()>
		SHA-256: 30c268f553f6b09658b32ac622d71bcf38df46803f676bf6cd1e5a1c2b9a7360
		Secure: true
	Object:
		Variable: $r2
		Type: byte[]
		Statement: $r2 = virtualinvoke $r1.<java.security.MessageDigest: byte[] digest()>()
		Method: <nf.e: java.lang.String b(java.lang.String)>
		SHA-256: f94e1ea46a840d40bb2a747683f1b00b967026db1974cb5f001897d09e58ffa5
		Secure: false
	Object:
		Variable: $r1
		Type: java.security.PublicKey
		Statement: $r2 = interfaceinvoke $r1.<java.security.Key: byte[] getEncoded()>()
		Method: <okhttp3.CertificatePinner: okio.ByteString sha256(java.security.cert.X509Certificate)>
		SHA-256: 68b292282d048c6f5ba780a48670db982a1c5028273fcdea0a75df84e6eac511
		Secure: true
	Object:
		Variable: $r10
		Type: javax.crypto.CipherInputStream
		Statement: specialinvoke $r10.<javax.crypto.CipherInputStream: void <init>(java.io.InputStream,javax.crypto.Cipher)>($r11, $r8)
		Method: <org.apache.commons.compress.archivers.sevenz.AES256SHA256Decoder$1: javax.crypto.CipherInputStream init()>
		SHA-256: c45dba96a483e3e9ebfded9c6fc9988af7c1739a549f04c3576d99624449a7d1
		Secure: true
	Object:
		Variable: $r3
		Type: byte[]
		Statement: $r3 = virtualinvoke $r5.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r3)
		Method: <com.xiaomi.accountsdk.utils.AESCoder: byte[] encryptWithIv(byte[],byte[])>
		SHA-256: 60794e48c43345ababf3c55592ba4f4df19eeed5f511eecd6a63c83d226d9cfd
		Secure: false
	Object:
		Variable: $i5
		Type: int
		Statement: $i5 = virtualinvoke $r1.<java.util.Random: int nextInt()>()
		Method: <jp.e: void k(int,java.security.SecureRandom)>
		SHA-256: d83d01dca1218489ac0b875ec1588da07130799c75ec2e7f118027f0d1055999
		Secure: true
	Object:
		Variable: r0
		Type: mo.d
		Statement: specialinvoke r0.<java.security.spec.ECParameterSpec: void <init>(java.security.spec.EllipticCurve,java.security.spec.ECPoint,java.math.BigInteger,int)>($r2, $r3, $r4, $i0)
		Method: <mo.d: void <init>(java.lang.String,java.security.spec.EllipticCurve,java.security.spec.ECPoint,java.math.BigInteger,java.math.BigInteger)>
		SHA-256: 7e9b05a9fade4d91041d4f4e2c7f0ba14fb1f3e9dccbc5e7eae98ca435376130
		Secure: true
	Object:
		Variable: $r11
		Type: java.security.KeyPair
		Statement: specialinvoke $r11.<java.security.KeyPair: void <init>(java.security.PublicKey,java.security.PrivateKey)>($r12, $r13)
		Method: <gp.d: java.security.KeyPair generateKeyPair()>
		SHA-256: 54b3097e78164f81679fc93f3d7ffdffa7ecc670cbca776dae3715a8bf451ee3
		Secure: false
	Object:
		Variable: $r14
		Type: java.security.KeyPair
		Statement: specialinvoke $r14.<java.security.KeyPair: void <init>(java.security.PublicKey,java.security.PrivateKey)>($r6, $r8)
		Method: <com.google.firebase.iid.zzy: java.security.KeyPair zzc(java.lang.String,java.lang.String)>
		SHA-256: 669e1d51147edb5337b0a36e49fe966a6b0354e66f55788db58e5ad1d0a6df91
		Secure: false
	Object:
		Variable: $r4
		Type: javax.crypto.spec.SecretKeySpec
		Statement: specialinvoke $r4.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r3, varReplacer1931)
		Method: <com.xiaomi.mitv.phone.remotecontroller.utils.EncryptUtil: java.lang.String encryptDES(java.lang.String,java.lang.String)>
		SHA-256: 3d574946526012691a9181029f0103a58345c8995548448c2ffce8632dc31a88
		Secure: false
	Object:
		Variable: $r1
		Type: byte[]
		Statement: $r1 = virtualinvoke $r3.<javax.crypto.Mac: byte[] doFinal()>()
		Method: <com.xiaomi.account.auth.AuthorizeHelper: byte[] encryptHMACSha1(byte[],byte[])>
		SHA-256: 567cc7ee24ff7d967715d00464d2d78d2189fbbb25cde0dde24ced1b0d850696
		Secure: false
	Object:
		Variable: $r0
		Type: byte[]
		Statement: $r0 = virtualinvoke $r1.<java.security.MessageDigest: byte[] digest(byte[])>($r0)
		Method: <com.xiaomi.onetrack.d.d: byte[] a(byte[])>
		SHA-256: 9cb20356173b56d7832069e42cb888615960f31d571dd230cb95515bcd00491c
		Secure: false
	Object:
		Variable: $r4
		Type: byte[]
		Statement: $r4 = virtualinvoke $r6.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r4)
		Method: <s8.c: java.lang.String b(java.lang.String,u8.d,boolean)>
		SHA-256: 9df1ac531c3c846fafca14fd1af7b37d5321751cac4e72c8023834afb2c667d5
		Secure: false
	Object:
		Variable: $r1
		Type: java.security.MessageDigest
		Statement: $r1 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer24692)
		Method: <nf.e: java.lang.String b(java.lang.String)>
		SHA-256: 874f6e228dc71d733b8879c335f063c6f9bdf2ac930cbb48e315fa469d8c294
		Secure: false
	Object:
		Variable: $r33
		Type: java.security.spec.ECParameterSpec
		Statement: specialinvoke $r33.<java.security.spec.ECParameterSpec: void <init>(java.security.spec.EllipticCurve,java.security.spec.ECPoint,java.math.BigInteger,int)>($r24, $r31, $r1, $i0)
		Method: <on.b: void g(em.c1)>
		SHA-256: a88f08e5513f15295245546e4c2af2390f158931eef5034479da15d989c6d367
		Secure: true
	Object:
		Variable: $r4
		Type: javax.net.ssl.TrustManager[]
		Statement: $r4 = virtualinvoke $r3.<javax.net.ssl.TrustManagerFactory: javax.net.ssl.TrustManager[] getTrustManagers()>()
		Method: <okhttp3.OkHttpClient: javax.net.ssl.X509TrustManager systemDefaultTrustManager()>
		SHA-256: 1a27914d4fa0cccd4258c31d2327789a4c4f86227090a14ea854b6b35086568
		Secure: false
	Object:
		Variable: $r3
		Type: java.security.KeyStore
		Statement: $r3 = staticinvoke <java.security.KeyStore: java.security.KeyStore getInstance(java.lang.String)>(varReplacer69923)
		Method: <com.xiaomi.onetrack.d.b: java.lang.String b(android.content.Context,java.lang.String)>
		SHA-256: 5c95fe0f41c3fa841afb2a9f3ca9618a8b4d59026e348c6cadac56e0c9b1e816
		Secure: false
	Object:
		Variable: $r12
		Type: byte[]
		Statement: $r12 = virtualinvoke $r11.<java.security.MessageDigest: byte[] digest()>()
		Method: <com.xiaomi.accountsdk.account.utils.PackageUtils: java.lang.String getSignatureDigestByType(android.content.Context,java.lang.String,java.lang.String)>
		SHA-256: 599c81c242c74833eafb74dac3f032b0cf9f2878f1845c97f8c6bb99bae885a1
		Secure: false
	Object:
		Variable: $r3
		Type: java.security.SecureRandom
		Statement: specialinvoke $r3.<java.security.SecureRandom: void <init>()>()
		Method: <en.g: void b(boolean,im.j)>
		SHA-256: 80b4aa7806d2d95c133b661b362fdb38dec8b17d49848313e49e9390939dce58
		Secure: true
	Object:
		Variable: $r3
		Type: java.security.KeyFactory
		Statement: $r3 = staticinvoke <java.security.KeyFactory: java.security.KeyFactory getInstance(java.lang.String)>(varReplacer63246)
		Method: <s8.c: java.lang.String g(java.lang.String,java.lang.String)>
		SHA-256: d2741003d696dc2c6d56a6e2760bd108e76b6507787a310435730a57d36e8f4f
		Secure: false
	Object:
		Variable: $r3
		Type: java.security.SecureRandom
		Statement: specialinvoke $r3.<java.security.SecureRandom: void <init>()>()
		Method: <en.h: void b(boolean,im.j)>
		SHA-256: d2498efd7e00106f9d948c364277831db5ff5591e747fbdee213dac64decb8f8
		Secure: true
	Object:
		Variable: $r14
		Type: java.security.KeyPair
		Statement: specialinvoke $r14.<java.security.KeyPair: void <init>(java.security.PublicKey,java.security.PrivateKey)>($r15, $r16)
		Method: <rn.h: java.security.KeyPair generateKeyPair()>
		SHA-256: c71ee463b103a12fd71b7e429f23f40890284613a4327838ba88e7899e526bf6
		Secure: false
	Object:
		Variable: $r10
		Type: java.security.KeyPair
		Statement: specialinvoke $r10.<java.security.KeyPair: void <init>(java.security.PublicKey,java.security.PrivateKey)>($r8, $r11)
		Method: <on.d: java.security.KeyPair generateKeyPair()>
		SHA-256: 77a910c0058575722cff03f6894f44cbbe7185a895b3a5778efbcde1a936da27
		Secure: false
	Object:
		Variable: $r9
		Type: javax.crypto.spec.SecretKeySpec
		Statement: specialinvoke $r9.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r10, varReplacer115787)
		Method: <y8.b: byte[] a(java.lang.String,int)>
		SHA-256: cfbec65eec7f728578f3c8fbedb638690e25ac2d6d8643811e86ebc133d6d82b
		Secure: false
	Object:
		Variable: $r3
		Type: byte[]
		Statement: $r3 = interfaceinvoke $r2.<java.security.Key: byte[] getEncoded()>()
		Method: <com.google.firebase.iid.zzz: java.lang.String zzv()>
		SHA-256: 74b57cb407d20e9914a752f5ee9550f22b30425ba2a82692aea88e71e56f081
		Secure: true
	Object:
		Variable: $r2
		Type: byte[]
		Statement: $r2 = virtualinvoke $r1.<java.security.MessageDigest: byte[] digest()>()
		Method: <kf.c0: java.lang.String e(java.lang.String)>
		SHA-256: 99d1a75a949ebce31e1d1f7dd0ed937a3b61739d1dee2343e303d59221539fea
		Secure: false
	Object:
		Variable: $r3
		Type: byte[]
		Statement: $r3 = interfaceinvoke $r2.<java.security.Key: byte[] getEncoded()>()
		Method: <com.google.firebase.iid.zzz: java.lang.String zzw()>
		SHA-256: 2a6dff741aad569ec47f5df0ac100ffe47f835f7e933b9ac2266805e0d7a30e4
		Secure: true
	Object:
		Variable: $r2
		Type: java.security.Signature
		Statement: $r2 = staticinvoke <java.security.Signature: java.security.Signature getInstance(java.lang.String,java.lang.String)>($r3, $r1)
		Method: <go.g: java.security.Signature k(java.lang.String)>
		SHA-256: 8ec8a197e74bf8e9546f7571b7bdfcd9197c89b8728e1950f631434c8c4a469c
		Secure: false
	Object:
		Variable: $r1
		Type: javax.crypto.spec.SecretKeySpec
		Statement: specialinvoke $r1.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r3, varReplacer7707)
		Method: <s8.b: java.lang.String c(byte[],int)>
		SHA-256: 2c7649b4a663754b4e67fea9a95b8ff8b3766b95462f0ebe0ae3e870303fceda
		Secure: false
	Object:
		Variable: $r4
		Type: java.security.MessageDigest
		Statement: $r4 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer45627)
		Method: <com.google.firebase.iid.zzan: java.lang.String zza(java.security.KeyPair)>
		SHA-256: ce5e3818d9ed8080faa2de74637976d0e8afdde3d3952a61cbf0db471e509d40
		Secure: false
	Object:
		Variable: $i2
		Type: int
		Statement: $i2 = virtualinvoke $r6.<java.util.Random: int nextInt()>()
		Method: <bp.c: void g()>
		SHA-256: 439d85eda2d10c475e3ecdc7aee997e4e6154839140239051a08de3929def7a2
		Secure: true
	Object:
		Variable: $r2
		Type: java.security.PrivateKey
		Statement: $r3 = interfaceinvoke $r2.<java.security.Key: byte[] getEncoded()>()
		Method: <com.google.firebase.iid.zzz: java.lang.String zzw()>
		SHA-256: f5d637a74bf3513856d48d59cb8f337c05303efd80d97e7ed73b7e2844faf110
		Secure: true
	Object:
		Variable: $r2
		Type: javax.crypto.SecretKey
		Statement: $r2 = virtualinvoke $r0.<javax.crypto.KeyGenerator: javax.crypto.SecretKey generateKey()>()
		Method: <com.xiaomi.verificationsdk.internal.a: javax.crypto.SecretKey f()>
		SHA-256: 924fbcf8d0bea7cb1be4481fd6dd87f13055428c17a97cdc4a2ab48e14c5bdef
		Secure: true
	Object:
		Variable: $r5
		Type: java.security.PublicKey
		Statement: $r3 = interfaceinvoke $r5.<java.security.Key: byte[] getEncoded()>()
		Method: <u8.a: void <init>(java.security.KeyPair,int)>
		SHA-256: 14cf538bb86f47a1963165e0850c7ea208c8e5d490c05d9f4438e4f5bba52abd
		Secure: true
	Object:
		Variable: $r4
		Type: java.security.KeyFactory
		Statement: $r4 = staticinvoke <java.security.KeyFactory: java.security.KeyFactory getInstance(java.lang.String)>(varReplacer94029)
		Method: <com.google.firebase.iid.zzy: java.security.KeyPair zzc(java.lang.String,java.lang.String)>
		SHA-256: ccff83a976e9357f608965d1ac705765321bb0be151c23f8352615c4a574e63
		Secure: false
	Object:
		Variable: $r8
		Type: javax.crypto.Cipher
		Statement: $r8 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer23996)
		Method: <s8.c: java.lang.String d(java.lang.String,java.lang.String)>
		SHA-256: c729a7fec3f577f7b6cb6ffc419ba9637f8f5a54ff10ecc7d61c1ef6667c87f5
		Secure: false
	Object:
		Variable: $r6
		Type: java.security.Signature
		Statement: $r6 = staticinvoke <java.security.Signature: java.security.Signature getInstance(java.lang.String)>(varReplacer115790)
		Method: <y8.b: byte[] a(java.lang.String,int)>
		SHA-256: 74198a59be40dd6cf92aa1de64013578d39a042c04917bd40138ee1e4db5c238
		Secure: false
	Object:
		Variable: $r10
		Type: java.security.KeyPair
		Statement: specialinvoke $r10.<java.security.KeyPair: void <init>(java.security.PublicKey,java.security.PrivateKey)>($r8, $r11)
		Method: <on.d: java.security.KeyPair generateKeyPair()>
		SHA-256: 77a910c0058575722cff03f6894f44cbbe7185a895b3a5778efbcde1a936da27
		Secure: false
	Object:
		Variable: $r1
		Type: javax.crypto.spec.DHParameterSpec
		Statement: specialinvoke $r1.<javax.crypto.spec.DHParameterSpec: void <init>(java.math.BigInteger,java.math.BigInteger)>($r3, $r4)
		Method: <rn.c: javax.crypto.spec.DHParameterSpec getParams()>
		SHA-256: f385eab808693770b6d681c333f207aab09900af14afd367ff0b4c9952d82a14
		Secure: true
	Object:
		Variable: $r2
		Type: java.security.spec.ECParameterSpec
		Statement: specialinvoke $r2.<java.security.spec.ECParameterSpec: void <init>(java.security.spec.EllipticCurve,java.security.spec.ECPoint,java.math.BigInteger,int)>($r1, $r3, $r7, $i0)
		Method: <on.b: java.security.spec.ECParameterSpec b(java.security.spec.EllipticCurve,an.x)>
		SHA-256: 9b8bf366778bb003031f2fd6130c044589819c74bbf63220e190faa4681c8fbb
		Secure: true
	Object:
		Variable: $r2
		Type: byte[]
		Statement: $r2 = virtualinvoke $r6.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r2)
		Method: <com.xiaomi.mitv.phone.remotecontroller.utils.EncryptUtil: java.lang.String decryptDES(java.lang.String,java.lang.String)>
		SHA-256: 44f550b9d1d18a44efc9bdf8b9bb41a44ce7b7bc6cd54db847823295a7bdda77
		Secure: false
	Object:
		Variable: $r8
		Type: javax.crypto.Mac
		Statement: $r8 = staticinvoke <javax.crypto.Mac: javax.crypto.Mac getInstance(java.lang.String)>(varReplacer115789)
		Method: <y8.b: byte[] a(java.lang.String,int)>
		SHA-256: d1ba6d111f7f55d857246e3b943af8c1b77b4b341ff057edcc60e080280b512c
		Secure: false
	Object:
		Variable: $r10
		Type: java.security.spec.ECParameterSpec
		Statement: specialinvoke $r10.<java.security.spec.ECParameterSpec: void <init>(java.security.spec.EllipticCurve,java.security.spec.ECPoint,java.math.BigInteger,int)>($r0, $r1, $r8, $i0)
		Method: <vn.i: java.security.spec.ECParameterSpec f(java.security.spec.EllipticCurve,mo.e)>
		SHA-256: ad78e877ad8a19d8d2dfd266d63ad77e9f206f300163605c2b31d6ac6f9432
		Secure: true
	Object:
		Variable: $r7
		Type: javax.crypto.Cipher
		Statement: $r7 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer83390)
		Method: <s8.c: byte[] h(byte[],java.lang.String)>
		SHA-256: 2c963f5dbe552c23b6c6bac68a2e286610b0ebf94d1cc286511b993acbeb1534
		Secure: false
	Object:
		Variable: $r1
		Type: java.security.KeyStore
		Statement: $r1 = staticinvoke <java.security.KeyStore: java.security.KeyStore getInstance(java.lang.String)>(varReplacer118029)
		Method: <y8.b: java.security.KeyStore h()>
		SHA-256: 8217830f7779fd225b15538f9f1caa9b92bcc5aafe7abdfc220c1d0d9dc78b35
		Secure: false
	Object:
		Variable: $r5
		Type: javax.crypto.Cipher
		Statement: $r5 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer52967)
		Method: <com.xiaomi.accountsdk.logger.EncryptLogSender: java.lang.String encryptString(java.lang.String,byte[])>
		SHA-256: 715579843d597af3017bcd0808e619b61cf5b8db042adb9c1f2bc93485116f21
		Secure: false
	Object:
		Variable: $i2
		Type: int
		Statement: $i2 = virtualinvoke $r6.<java.util.Random: int nextInt()>()
		Method: <bp.c: void h()>
		SHA-256: 970630cdb4269de4a4a75bc95d13373cb995606b89fdb42123cf86ca22fe11
		Secure: true
	Object:
		Variable: $r5
		Type: javax.crypto.spec.SecretKeySpec
		Statement: specialinvoke $r5.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r4, varReplacer1622)
		Method: <com.xiaomi.mitv.phone.remotecontroller.utils.EncryptUtil: java.lang.String decryptDES(java.lang.String,java.lang.String)>
		SHA-256: 91c0e80c9fe750bceb1028b6218026ec16d18ec2f3e1a1a72e5c51474f5ab94f
		Secure: false
	Object:
		Variable: $r0
		Type: java.security.spec.X509EncodedKeySpec
		Statement: specialinvoke $r0.<java.security.spec.X509EncodedKeySpec: void <init>(byte[])>($r2)
		Method: <s8.g: java.security.PublicKey q(java.lang.String)>
		SHA-256: d26316903be979a927974ccec47432d1813b81128efec78f2b6f0e73c0fc9779
		Secure: false
	Object:
		Variable: $r2
		Type: java.security.PublicKey
		Statement: $r3 = interfaceinvoke $r2.<java.security.Key: byte[] getEncoded()>()
		Method: <com.google.firebase.iid.zzan: java.lang.String zza(java.security.KeyPair)>
		SHA-256: 14ace5091d68240c4612722422b5cd8ba850eee2ad3c5ee80b05798e052c9c5b
		Secure: true
	Object:
		Variable: $r4
		Type: java.security.spec.ECParameterSpec
		Statement: specialinvoke $r4.<java.security.spec.ECParameterSpec: void <init>(java.security.spec.EllipticCurve,java.security.spec.ECPoint,java.math.BigInteger,int)>($r10, $r11, $r7, $i0)
		Method: <on.a: void <init>(java.lang.String,an.b0,on.b,java.security.spec.ECParameterSpec)>
		SHA-256: 1a4fc000f71ef172a90e322c31bbd07806e82097bba32293e072885e9f8bb2fa
		Secure: true
	Object:
		Variable: $r7
		Type: byte[]
		Statement: $r7 = virtualinvoke $r6.<java.security.Signature: byte[] sign()>()
		Method: <y8.b: byte[] a(java.lang.String,int)>
		SHA-256: 4bde639e267ebbc7ad9f88f48411dee71a4f2e6a116e883a60f48fba41524769
		Secure: false
	Object:
		Variable: $r1
		Type: java.security.SecureRandom
		Statement: specialinvoke $r1.<java.security.SecureRandom: void <init>()>()
		Method: <fp.j$a: void initialize(java.security.spec.AlgorithmParameterSpec)>
		SHA-256: 24d2b5c236762481c430f1c3dc115888f01cbb427e5b553fbd104ab580f59b08
		Secure: true
	Object:
		Variable: $r1
		Type: java.security.SecureRandom
		Statement: specialinvoke $r1.<java.security.SecureRandom: void <init>()>()
		Method: <en.e: java.security.SecureRandom g(boolean,java.security.SecureRandom)>
		SHA-256: 7b60adc6398b81f36edb4d787677e9da44ab82b137330842e760141d88bc3eb0
		Secure: true
	Object:
		Variable: $r4
		Type: byte[]
		Statement: $r4 = virtualinvoke $r6.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r4)
		Method: <s8.c: java.lang.String b(java.lang.String,u8.d,boolean)>
		SHA-256: 9df1ac531c3c846fafca14fd1af7b37d5321751cac4e72c8023834afb2c667d5
		Secure: false
	Object:
		Variable: $r8
		Type: byte[]
		Statement: $z0 = virtualinvoke $r2.<java.security.Signature: boolean verify(byte[])>($r8)
		Method: <lo.s0: void i(java.security.PublicKey,java.security.Signature)>
		SHA-256: 61b9750a8eda9c9a641fc360a49c323c5126fc06736321190fb39d040116bb1f
		Secure: false
	Object:
		Variable: $r4
		Type: java.security.PublicKey
		Statement: $r4 = virtualinvoke $r3.<java.security.KeyFactory: java.security.PublicKey generatePublic(java.security.spec.KeySpec)>($r2)
		Method: <yb.b: java.security.PublicKey d(java.lang.String)>
		SHA-256: f8daa06f0338888fc515d0e73c52a6fdbe57cecedccd074cebadb92cc6d44e3c
		Secure: false
	Object:
		Variable: $r5
		Type: javax.crypto.Cipher
		Statement: $r5 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer6723)
		Method: <yb.b: java.lang.String b(byte[])>
		SHA-256: 917ff065b882d4225997800cd42ad26401fcd1468f44e197703b98b513356c96
		Secure: false
	Object:
		Variable: $r4
		Type: javax.crypto.spec.DHParameterSpec
		Statement: specialinvoke $r4.<javax.crypto.spec.DHParameterSpec: void <init>(java.math.BigInteger,java.math.BigInteger,int)>($r3, $r6, $i0)
		Method: <mn.c: void <init>(an.n)>
		SHA-256: 692bcf0f9d63c6e9fd60e0905ab70f7c568cfac80f859f60c120d95d93cbc9d7
		Secure: true
	Object:
		Variable: $r2
		Type: java.security.SecureRandom
		Statement: specialinvoke $r2.<java.security.SecureRandom: void <init>()>()
		Method: <ap.l: void <init>(int,int,int,int,int,int,int,double,double,double,boolean,boolean,int,im.r)>
		SHA-256: 17f656b0f33f1134c9327f263d1670ae9bc236d282f0055fd5f098421f2fc17e
		Secure: true
	Object:
		Variable: $r3
		Type: java.security.Key
		Statement: $r3 = virtualinvoke $r1.<java.security.KeyStore: java.security.Key getKey(java.lang.String,char[])>($r2, varReplacer115780)
		Method: <y8.b: boolean c()>
		SHA-256: ee2ea70bf3ef9f0794ca2223b0b4c587ba78ca0efc320856f55937470656b54e
		Secure: false
	Object:
		Variable: $r3
		Type: byte[]
		Statement: $r3 = interfaceinvoke $r5.<java.security.Key: byte[] getEncoded()>()
		Method: <u8.a: void <init>(java.security.KeyPair,int)>
		SHA-256: ea116021fb8a1ec921af95626d0fc5d208d99a508e6b01c3e64756e6550e7c84
		Secure: true
	Object:
		Variable: $r6
		Type: javax.crypto.Cipher
		Statement: $r6 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer23188)
		Method: <s8.c: java.lang.String b(java.lang.String,u8.d,boolean)>
		SHA-256: 36cd81b4b934b7a09f3052ef66a7b97df9e514ee844ba9ec95507c1eb033cacd
		Secure: false
	Object:
		Variable: $r2
		Type: java.security.MessageDigest
		Statement: $r2 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer79218)
		Method: <com.xiaomi.accountsdk.hasheddeviceidlib.DeviceIdHasher: java.lang.String hashDeviceInfo(java.lang.String,int)>
		SHA-256: a4fb8aaff9501996fbb47fb12ff3814b9f76b5bf32c6548e815ce65173e777fa
		Secure: false
	Object:
		Variable: $i2
		Type: int
		Statement: $i2 = virtualinvoke $r1.<java.util.Random: int nextInt()>()
		Method: <bp.a: void <init>(int,int,java.security.SecureRandom)>
		SHA-256: 62b92713692c4a8660b6a8266e3ab839029856098e08d4af625cbeb98f63c6bb
		Secure: true
	Object:
		Variable: $r2
		Type: java.security.SecureRandom
		Statement: specialinvoke $r2.<java.security.SecureRandom: void <init>()>()
		Method: <ap.m: ap.m$c c()>
		SHA-256: dbf0b0f4a87ec5be3013f5ffe8f5b6f4f1ca456a74dcc9db5e1a58f57d46b377
		Secure: true
	Object:
		Variable: $r2
		Type: byte[]
		Statement: $r2 = virtualinvoke $r7.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r2)
		Method: <s8.c: java.lang.String g(java.lang.String,java.lang.String)>
		SHA-256: f115b8464724308ceabc3e3d0fa51d92cf1a14abddc4f1258dd656baa6b148e5
		Secure: false
	Object:
		Variable: $r2
		Type: byte[]
		Statement: virtualinvoke $r3.<java.security.SecureRandom: void nextBytes(byte[])>($r2)
		Method: <en.n: byte[] f()>
		SHA-256: 7d6ad3fd9024da71c8e6e3c3c2d9b48ece4e57b1678e2374645a58da8d16cdef
		Secure: true
	Object:
		Variable: varReplacer7577
		Type: java.lang.String
		Statement: $r3 = staticinvoke <java.security.KeyFactory: java.security.KeyFactory getInstance(java.lang.String)>(varReplacer7577)
		Method: <yb.b: java.security.PublicKey d(java.lang.String)>
		SHA-256: f08018477528e6d9635b1314a22830bce2da6ff24475f46ba2d5db1f79215878
		Secure: false
	Object:
		Variable: $r0
		Type: javax.crypto.spec.IvParameterSpec
		Statement: specialinvoke $r0.<javax.crypto.spec.IvParameterSpec: void <init>(byte[])>($r3)
		Method: <com.xiaomi.mitv.phone.remotecontroller.utils.EncryptUtil: java.lang.String encryptDES(java.lang.String,java.lang.String)>
		SHA-256: 8712ecef7ce56ce85252e11f107fcaac5c57a3571e0bf96f65a4de3181bbf4a0
		Secure: false
	Object:
		Variable: $r0
		Type: byte[]
		Statement: $r0 = virtualinvoke $r1.<java.security.MessageDigest: byte[] digest()>()
		Method: <of.a: byte[] l(byte[])>
		SHA-256: 69c3a40180159ec40b535bb9ee620cb158a45a356e931236cbaef83f7025d28e
		Secure: true
	Object:
		Variable: $r3
		Type: java.security.SecureRandom
		Statement: specialinvoke $r3.<java.security.SecureRandom: void <init>()>()
		Method: <qm.c: void b(boolean,im.j)>
		SHA-256: f441a70e7f1628771f6766cc806eae55ee7fffa7dc64e1480c4862f6933e09ef
		Secure: true
	Object:
		Variable: $r2
		Type: java.security.spec.ECGenParameterSpec
		Statement: specialinvoke $r2.<java.security.spec.ECGenParameterSpec: void <init>(java.lang.String)>(varReplacer65487)
		Method: <pn.h$a: void <clinit>()>
		SHA-256: 70862746392a24257a5f4a077420c3c061a87f63fbc773af3c06423d9d6d372c
		Secure: true
	Object:
		Variable: $i5
		Type: int
		Statement: $i5 = virtualinvoke $r1.<java.util.Random: int nextInt()>()
		Method: <bp.a: void <init>(int,int,java.security.SecureRandom)>
		SHA-256: 240ff4617f9de2709a66f716087ed3befa240f0a71a463e29bd698b74b332629
		Secure: true
	Object:
		Variable: varReplacer115787
		Type: java.lang.String
		Statement: specialinvoke $r9.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r10, varReplacer115787)
		Method: <y8.b: byte[] a(java.lang.String,int)>
		SHA-256: 7ff4af2247fdf4ebd1d511aa06c0aceb2832f1f370f5c882cec910a08767b644
		Secure: false
	Object:
		Variable: $r3
		Type: javax.crypto.spec.IvParameterSpec
		Statement: specialinvoke $r3.<javax.crypto.spec.IvParameterSpec: void <init>(byte[])>($r4)
		Method: <com.xiaomi.mitv.phone.remotecontroller.utils.EncryptUtil: java.lang.String decryptDES(java.lang.String,java.lang.String)>
		SHA-256: f6ac3de8abc92021cdb7d1ec4d230ee9667e23b5b7ea6619acf1833cbd3a4c07
		Secure: false
	Object:
		Variable: $r2
		Type: java.security.MessageDigest
		Statement: $r2 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>($r1)
		Method: <okio.ByteString: okio.ByteString digest(java.lang.String)>
		SHA-256: b336d574501b28a5bd90db22472c23a68acb0c1b99c4f14746fdc2a23c69a24e
		Secure: false
	Object:
		Variable: $r10
		Type: java.security.KeyPair
		Statement: specialinvoke $r10.<java.security.KeyPair: void <init>(java.security.PublicKey,java.security.PrivateKey)>($r8, $r11)
		Method: <qn.d: java.security.KeyPair generateKeyPair()>
		SHA-256: 77a910c0058575722cff03f6894f44cbbe7185a895b3a5778efbcde1a936da27
		Secure: false
	Object:
		Variable: $r1
		Type: java.security.SecureRandom
		Statement: specialinvoke $r1.<java.security.SecureRandom: void <init>()>()
		Method: <fp.j$b: void initialize(java.security.spec.AlgorithmParameterSpec)>
		SHA-256: 6d1f8e089dfadb5c733a580ea8fca510f6dbb86cb8a5eea0b2b7ec0a60d107ad
		Secure: true
	Object:
		Variable: $r2
		Type: byte[]
		Statement: $r2 = interfaceinvoke $r1.<java.security.Key: byte[] getEncoded()>()
		Method: <com.xiaomi.onetrack.d.a: byte[] a()>
		SHA-256: 81bfbf6e283c3c40810f934114d0e6a75179a3d9f6f4e719a89b2e33f0b98a4c
		Secure: true
	Object:
		Variable: $r6
		Type: java.security.Signature
		Statement: $r6 = staticinvoke <java.security.Signature: java.security.Signature getInstance(java.lang.String,java.lang.String)>($r5, varReplacer122059)
		Method: <lo.s0: void verify(java.security.PublicKey)>
		SHA-256: 9552c06cbd4d21d12f8b2d8d8c497ff8fbf1eabc3fae74025121fffc7a245af4
		Secure: false
	Object:
		Variable: $r2
		Type: javax.crypto.KeyAgreement
		Statement: $r2 = staticinvoke <javax.crypto.KeyAgreement: javax.crypto.KeyAgreement getInstance(java.lang.String,java.lang.String)>(varReplacer20446, varReplacer20447)
		Method: <s8.g: javax.crypto.SecretKey n(java.security.PrivateKey,java.security.PublicKey)>
		SHA-256: 8a14c7da5d3533f90ee6e092d0a08b35da3509589d3d959215b923a894fbd261
		Secure: false
	Object:
		Variable: $r4
		Type: java.security.SecureRandom
		Statement: specialinvoke $r4.<java.security.SecureRandom: void <init>()>()
		Method: <en.n: void b(boolean,im.j)>
		SHA-256: 2ff915048443a5f9f7276e64d6ca7c8a76d135ebc38224433be16c25c57b42cf
		Secure: true
	Object:
		Variable: $r2
		Type: byte[]
		Statement: $r2 = virtualinvoke $r1.<java.security.MessageDigest: byte[] digest(byte[])>($r2)
		Method: <com.xiaomi.ai.utils.n: java.lang.String a(java.lang.String)>
		SHA-256: 6afe60aaa0d6621cc5a9869bfdd9a77345fe46e7934238776fa4d73828ed0469
		Secure: false
	Object:
		Variable: $r1
		Type: java.security.KeyPair
		Statement: $r1 = virtualinvoke $r0.<java.security.KeyPairGenerator: java.security.KeyPair generateKeyPair()>()
		Method: <com.google.firebase.iid.zza: java.security.KeyPair zzc()>
		SHA-256: 9931d8c533ed3ab6b6b0c54b2eef15b255f6da4e30fac17cf9385c51ef10d824
		Secure: true
	Object:
		Variable: $r2
		Type: byte[]
		Statement: $r2 = virtualinvoke $r1.<java.security.MessageDigest: byte[] digest()>()
		Method: <com.google.common.hash.z$b: com.google.common.hash.o o()>
		SHA-256: 1128df81de4d1567a2f08dab57c12ea122c816ed7cd08facbace8cdfcb98b77a
		Secure: true
	Object:
		Variable: $r2
		Type: java.security.MessageDigest
		Statement: $r2 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer1636)
		Method: <com.xiaomi.mitv.phone.remotecontroller.utils.EncryptUtil: java.lang.String getMD5(byte[])>
		SHA-256: fad55c35f865f78ed933a0dacf3d22188e050a57377039c6b4c5e4f182380c3e
		Secure: false
	Object:
		Variable: $r1
		Type: java.security.KeyPair
		Statement: specialinvoke $r1.<java.security.KeyPair: void <init>(java.security.PublicKey,java.security.PrivateKey)>($r2, $r8)
		Method: <fp.j$a: java.security.KeyPair generateKeyPair()>
		SHA-256: ab7849d1ad91328c48ac4c112c3544c17ed1b84d80a7f6d2a4e23c6550235c8c
		Secure: false
	Object:
		Variable: $r4
		Type: java.security.spec.X509EncodedKeySpec
		Statement: specialinvoke $r4.<java.security.spec.X509EncodedKeySpec: void <init>(byte[])>($r2)
		Method: <s8.c: java.lang.String g(java.lang.String,java.lang.String)>
		SHA-256: 1a6f60632ee4b552b38f39baba9da8eca240e3ea6a3620befd1f89bc58799d9c
		Secure: false
	Object:
		Variable: $r1
		Type: javax.crypto.spec.DHParameterSpec
		Statement: specialinvoke $r1.<javax.crypto.spec.DHParameterSpec: void <init>(java.math.BigInteger,java.math.BigInteger)>($r3, $r4)
		Method: <rn.d: javax.crypto.spec.DHParameterSpec getParams()>
		SHA-256: 8ef56b3b82a8c937bf511a4089cd60877e23859132d9c86664527f527bea12d3
		Secure: true
	Object:
		Variable: $r20
		Type: java.security.SecureRandom
		Statement: specialinvoke $r20.<java.security.SecureRandom: void <init>()>()
		Method: <com.xiaomi.mitv.epg.downloader.Downloader: javax.net.ssl.SSLContext createSSLContext(android.content.Context,java.lang.String[])>
		SHA-256: ee8cb965901f376d97d5ae60ce756fd844ab783da2e0dc5d4c08d8dd530fd676
		Secure: true
	Object:
		Variable: $r3
		Type: javax.crypto.Mac
		Statement: $r3 = staticinvoke <javax.crypto.Mac: javax.crypto.Mac getInstance(java.lang.String)>(varReplacer97039)
		Method: <com.xiaomi.mitv.socialtv.common.utils.SignatureUtil: java.lang.String getSignature(byte[],byte[])>
		SHA-256: 80f780a2a526f5ff4a6094f843acdae3903eedc91de87d86e93036cdd2690b45
		Secure: false
	Object:
		Variable: $r6
		Type: java.security.PrivateKey
		Statement: $r6 = virtualinvoke $r4.<java.security.KeyFactory: java.security.PrivateKey generatePrivate(java.security.spec.KeySpec)>($r5)
		Method: <s8.c: java.lang.String d(java.lang.String,java.lang.String)>
		SHA-256: 28dbc8834b1ba365ed1cd7bfbd2c1f1156a1ed639048d312da9d2827170aaf29
		Secure: false
	Object:
		Variable: $r2
		Type: javax.net.ssl.TrustManagerFactory
		Statement: $r2 = staticinvoke <javax.net.ssl.TrustManagerFactory: javax.net.ssl.TrustManagerFactory getInstance(java.lang.String)>(varReplacer114466)
		Method: <rg.h: javax.net.ssl.TrustManager[] d(rg.i)>
		SHA-256: aa8a201e001b3a88b6de0ede828679354d22097fb28caf8a2d68aded475a23c7
		Secure: false
	Object:
		Variable: $r4
		Type: java.security.KeyFactory
		Statement: $r4 = staticinvoke <java.security.KeyFactory: java.security.KeyFactory getInstance(java.lang.String)>(varReplacer23997)
		Method: <s8.c: java.lang.String d(java.lang.String,java.lang.String)>
		SHA-256: 137b9cabccaa08d31092a19e91e288c7b26587f6bf9fb8af90a3290e84d46211
		Secure: false
	Object:
		Variable: $r1
		Type: java.security.KeyPairGenerator
		Statement: $r1 = staticinvoke <java.security.KeyPairGenerator: java.security.KeyPairGenerator getInstance(java.lang.String)>(varReplacer21586)
		Method: <s8.c: u8.a n(int)>
		SHA-256: 6da7347f42b92b470eaf6f0033f2dea277ca6b701acef3f431945ad1e171f79c
		Secure: false
	Object:
		Variable: $r4
		Type: javax.net.ssl.TrustManager[]
		Statement: $r4 = virtualinvoke $r2.<javax.net.ssl.TrustManagerFactory: javax.net.ssl.TrustManager[] getTrustManagers()>()
		Method: <rg.h: javax.net.ssl.TrustManager[] d(rg.i)>
		SHA-256: c83a64cbea646de766b719e0f99dc251d0509e1da258f321f51f7d920a344446
		Secure: false
	Object:
		Variable: $r8
		Type: javax.crypto.Mac
		Statement: $r8 = staticinvoke <javax.crypto.Mac: javax.crypto.Mac getInstance(java.lang.String)>(varReplacer115788)
		Method: <y8.b: byte[] a(java.lang.String,int)>
		SHA-256: 3da33727922a6445c2b95a64265189dc51b857db62cd698ea911dd89a1d26fa3
		Secure: false
	Object:
		Variable: $r1
		Type: java.security.KeyPair
		Statement: specialinvoke $r1.<java.security.KeyPair: void <init>(java.security.PublicKey,java.security.PrivateKey)>($r2, $r8)
		Method: <un.i: java.security.KeyPair generateKeyPair()>
		SHA-256: 7b10e0f5b40beaa4a8c34a9ca883643be5f6b6346a111913fbeaaba514eb628
		Secure: false
	Object:
		Variable: $r3
		Type: javax.crypto.spec.DHParameterSpec
		Statement: specialinvoke $r3.<javax.crypto.spec.DHParameterSpec: void <init>(java.math.BigInteger,java.math.BigInteger,int)>($r2, $r5, $i0)
		Method: <mn.d: void <init>(an.o)>
		SHA-256: 97ffbe77b404b31a2e8dc5abcbf989da5c79bf4d6cf5435c69ffaf55a508ee4e
		Secure: true
	Object:
		Variable: $r3
		Type: java.security.SecureRandom
		Statement: specialinvoke $r3.<java.security.SecureRandom: void <init>()>()
		Method: <ap.b: void <init>(int,int,int,int,int,int,int,int,int,int,boolean,byte[],boolean,boolean,im.r)>
		SHA-256: 1b0a43487cf53147814bbadf7571d0f41725654f6363842d88baca73e195e65c
		Secure: true
	Object:
		Variable: $r1
		Type: java.security.MessageDigest
		Statement: $r1 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer60183)
		Method: <com.miui.privacypolicy.NetUtils: java.lang.String getMd5Digest(java.lang.String)>
		SHA-256: b853afac8254283b23a76c67d123ce98034311afb9e2638d373b8acea7c0cb00
		Secure: false
	Object:
		Variable: varReplacer69953
		Type: java.lang.String
		Statement: $r1 = staticinvoke <java.security.KeyFactory: java.security.KeyFactory getInstance(java.lang.String,java.lang.String)>(varReplacer69953, varReplacer69954)
		Method: <com.xiaomi.onetrack.d.e: java.security.interfaces.RSAPublicKey a(java.lang.String)>
		SHA-256: 8e020e898c58246107051b1ac16eb99e6e5f217f699b81797395cbb9d07eb00f
		Secure: false
	Object:
		Variable: $r1
		Type: java.security.MessageDigest
		Statement: $r1 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer7836)
		Method: <com.xiaomi.onetrack.d.d: java.lang.String e(byte[])>
		SHA-256: 61e0c51b801e587b6243c32540942869dcee45c29c543249e7e49e5c6b6f1de1
		Secure: false
	Object:
		Variable: $r12
		Type: java.security.KeyPair
		Statement: specialinvoke $r12.<java.security.KeyPair: void <init>(java.security.PublicKey,java.security.PrivateKey)>($r9, $r13)
		Method: <pn.h$a: java.security.KeyPair generateKeyPair()>
		SHA-256: 4883a98b869758e77bb30eb00bf80b863181f08b12a934463d5dd47c51186227
		Secure: false
	Object:
		Variable: $r0
		Type: byte[]
		Statement: $r0 = virtualinvoke $r4.<javax.crypto.Mac: byte[] doFinal()>()
		Method: <s8.b: java.lang.String c(byte[],int)>
		SHA-256: b649de6563b88f8ff80b9ec82863a3d680562d5d9d7930becbe821041537222
		Secure: false
	Object:
		Variable: $r3
		Type: byte[]
		Statement: $r3 = interfaceinvoke $r5.<java.security.Key: byte[] getEncoded()>()
		Method: <u8.a: void <init>(java.security.KeyPair,int)>
		SHA-256: ea116021fb8a1ec921af95626d0fc5d208d99a508e6b01c3e64756e6550e7c84
		Secure: true
	Object:
		Variable: $r3
		Type: java.security.PublicKey
		Statement: $r4 = interfaceinvoke $r3.<java.security.Key: byte[] getEncoded()>()
		Method: <ko.a: org.spongycastle.asn1.v p()>
		SHA-256: a17557def3d9e9442ac44dc81d3ebec4c85db268a73c15b5ca3f31571289d5e2
		Secure: true
	Object:
		Variable: $r2
		Type: java.security.SecureRandom
		Statement: specialinvoke $r2.<java.security.SecureRandom: void <init>()>()
		Method: <qm.b: void b(boolean,im.j)>
		SHA-256: c6501d07500f0fdf920c34ff00601a378eca5229b37f22825e2d0ed88541ec8c
		Secure: true
	Object:
		Variable: $r3
		Type: java.security.SecureRandom
		Statement: specialinvoke $r3.<java.security.SecureRandom: void <init>()>()
		Method: <xo.k: void b(boolean,im.j)>
		SHA-256: e6dfc6427bbbe7485a35501c3e687fd673ae31626138438123ece1ee0ac661a2
		Secure: true
	Object:
		Variable: $r1
		Type: java.security.SecureRandom
		Statement: specialinvoke $r1.<java.security.SecureRandom: void <init>()>()
		Method: <jp.e: void <init>(int,char)>
		SHA-256: f1950104eb0f159253d0763ca0162e7412c8a7fb4efd70249daf268c2902f265
		Secure: true
	Object:
		Variable: $r12
		Type: java.security.KeyPair
		Statement: specialinvoke $r12.<java.security.KeyPair: void <init>(java.security.PublicKey,java.security.PrivateKey)>($r9, $r13)
		Method: <pn.h$a: java.security.KeyPair generateKeyPair()>
		SHA-256: 4883a98b869758e77bb30eb00bf80b863181f08b12a934463d5dd47c51186227
		Secure: false
	Object:
		Variable: $r5
		Type: javax.crypto.Cipher
		Statement: $r5 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer67869)
		Method: <com.xiaomi.accountsdk.utils.AESCoder: byte[] encryptWithIv(byte[],byte[])>
		SHA-256: 74dc3beaa5fae6efa57c544f74b480e288a9f4e63e26434836e5b39d5a2f0ab8
		Secure: false
	Object:
		Variable: $r3
		Type: javax.crypto.Mac
		Statement: $r3 = staticinvoke <javax.crypto.Mac: javax.crypto.Mac getInstance(java.lang.String)>(varReplacer74574)
		Method: <ob.a: java.lang.String i(byte[],byte[])>
		SHA-256: 300f37b7f6f13e9e775b8b4960f8d2c9b02c22aa84da7117f0abf3598904937f
		Secure: false
	Object:
		Variable: $r2
		Type: byte[]
		Statement: $r2 = virtualinvoke $r8.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r3)
		Method: <s8.c: java.lang.String d(java.lang.String,java.lang.String)>
		SHA-256: 2f15197729182580be279bd413d6c4df68209828833cc3d719b330adf3b18faa
		Secure: false
	Object:
		Variable: varReplacer46249
		Type: java.lang.String
		Statement: specialinvoke $r7.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r4, varReplacer46249)
		Method: <org.apache.commons.compress.archivers.sevenz.AES256SHA256Decoder$1: javax.crypto.CipherInputStream init()>
		SHA-256: 108645f2a284f14f2d4b61a5ab0e150f2a3d3a379ffe042d6c1990ae4415cc43
		Secure: false
	Object:
		Variable: $r4
		Type: byte[]
		Statement: $r4 = virtualinvoke $r3.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r1)
		Method: <com.xiaomi.onetrack.d.a: byte[] b(byte[],byte[])>
		SHA-256: 5ce502593fe5b37fd188b42cd989d51c668dcc1b078a1d570e7933e2d2cdd85a
		Secure: false
	Object:
		Variable: varReplacer7911
		Type: java.lang.String
		Statement: specialinvoke $r2.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r0, varReplacer7911)
		Method: <com.xiaomi.onetrack.d.a: byte[] b(byte[],byte[])>
		SHA-256: 27f47a86ec787782f16b0ab3a4f02b8148d6ec14d25746dcbd61b158a9cb9cd8
		Secure: true
	Object:
		Variable: $r3
		Type: java.security.SecureRandom
		Statement: specialinvoke $r3.<java.security.SecureRandom: void <init>()>()
		Method: <bp.h: void b(boolean,im.j)>
		SHA-256: d2498efd7e00106f9d948c364277831db5ff5591e747fbdee213dac64decb8f8
		Secure: true
	Object:
		Variable: $r17
		Type: java.security.PublicKey
		Statement: $r16 = interfaceinvoke $r17.<java.security.Key: byte[] getEncoded()>()
		Method: <sp.a: boolean match(java.security.cert.Certificate)>
		SHA-256: 85754b7a1c61daf55f2d805bdeced4faad6457875a3e7dbdcfb5cea8524efd87
		Secure: true
	Object:
		Variable: $r4
		Type: byte[]
		Statement: $r4 = virtualinvoke $r3.<java.security.MessageDigest: byte[] digest(byte[])>($r4)
		Method: <com.xiaomi.ai.utils.UploadHelper: java.lang.String getRandomRequestId()>
		SHA-256: 1affedb216bf2ce981227449dace66846fcf8386e2d9fc1d62f34088f3510a31
		Secure: false
	Object:
		Variable: $r11
		Type: java.security.KeyPairGenerator
		Statement: $r11 = staticinvoke <java.security.KeyPairGenerator: java.security.KeyPairGenerator getInstance(java.lang.String,java.lang.String)>(varReplacer119533, varReplacer119534)
		Method: <y8.b: void e(android.content.Context,int,java.lang.String,java.util.Date,java.util.Date,int,boolean)>
		SHA-256: 6e455c01d1150be332dc9dd98c052c8f618a83e837091fbc2469be6c3ecb239a
		Secure: false
	Object:
		Variable: $r2
		Type: java.security.spec.X509EncodedKeySpec
		Statement: specialinvoke $r2.<java.security.spec.X509EncodedKeySpec: void <init>(byte[])>($r3)
		Method: <com.xiaomi.onetrack.d.e: java.security.interfaces.RSAPublicKey a(java.lang.String)>
		SHA-256: 5d08f6efe75062490b231ef42f056e83ff9fcbea25702d51357385af061bb7e7
		Secure: false
	Object:
		Variable: $r4
		Type: javax.crypto.spec.IvParameterSpec
		Statement: specialinvoke $r4.<javax.crypto.spec.IvParameterSpec: void <init>(byte[])>($r5)
		Method: <com.xiaomi.accountsdk.utils.AESCoder: byte[] decrypt(byte[])>
		SHA-256: 61a3644170bf861eed89a9e66fb148ae654cd81e2e1005df6aded91c32642628
		Secure: false
	Object:
		Variable: $r3
		Type: javax.crypto.Cipher
		Statement: $r3 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>($r2)
		Method: <com.xiaomi.verificationsdk.internal.a: byte[] e(byte[],java.security.Key,java.lang.String)>
		SHA-256: cd27c533a3946144ed76de8b141187627953fd63f4e848f52c1dcc37b3957e63
		Secure: false
	Object:
		Variable: $r16
		Type: byte[]
		Statement: $r16 = virtualinvoke $r15.<java.security.MessageDigest: byte[] digest()>()
		Method: <sp.a: boolean match(java.security.cert.Certificate)>
		SHA-256: d4c045621f982f0d70cade71b33a4a455d9eb948ef4e4bbd38fe4d5821c3523d
		Secure: true
	Object:
		Variable: $r2
		Type: byte[]
		Statement: $r2 = virtualinvoke $r1.<java.security.MessageDigest: byte[] digest()>()
		Method: <com.google.common.hash.z$b: com.google.common.hash.o o()>
		SHA-256: 1128df81de4d1567a2f08dab57c12ea122c816ed7cd08facbace8cdfcb98b77a
		Secure: true
	Object:
		Variable: $r5
		Type: javax.crypto.Cipher
		Statement: $r5 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer6717)
		Method: <yb.a: java.lang.String b(java.lang.String,byte[],byte[])>
		SHA-256: 9070bb584ee63b598adae5b5ebd9399ffeeac7786b8c7e39e7730e2e8db7d51c
		Secure: false
	Object:
		Variable: $r4
		Type: byte[]
		Statement: $r4 = virtualinvoke $r5.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r4)
		Method: <com.xiaomi.accountsdk.logger.EncryptLogSender: java.lang.String encryptString(java.lang.String,byte[])>
		SHA-256: 1a3386cc52f09ff8514e4b54248fe3d53fc4a0c7432ac701db95a866502ae7b9
		Secure: false
	Object:
		Variable: $r10
		Type: byte[]
		Statement: $r10 = virtualinvoke $r7.<java.security.MessageDigest: byte[] digest(byte[])>($r3)
		Method: <com.google.android.gms.measurement.internal.zzt: long zza(com.google.android.gms.internal.measurement.zzfw)>
		SHA-256: ef72a9226a39ed9c0803810b8f8b05015c82f8246b552d0f0cdd1e5de2987a7
		Secure: false
	Object:
		Variable: $r4
		Type: javax.crypto.Mac
		Statement: $r4 = staticinvoke <javax.crypto.Mac: javax.crypto.Mac getInstance(java.lang.String)>(varReplacer7709)
		Method: <s8.b: java.lang.String c(byte[],int)>
		SHA-256: aa505571cd2e3638cc0fd39d5167b95563c335fcb6b60544fea1748efa5726a4
		Secure: false
	Object:
		Variable: $r3
		Type: java.security.KeyPair
		Statement: $r3 = virtualinvoke $r1.<java.security.KeyPairGenerator: java.security.KeyPair generateKeyPair()>()
		Method: <s8.c: u8.a n(int)>
		SHA-256: 2b03e48243205555952e5d41d6b7ea54486554343696820b03e33a274163373c
		Secure: false
	Object:
		Variable: $r3
		Type: java.security.spec.DSAParameterSpec
		Statement: specialinvoke $r3.<java.security.spec.DSAParameterSpec: void <init>(java.math.BigInteger,java.math.BigInteger,java.math.BigInteger)>($r2, $r5, $r6)
		Method: <nn.d: void <init>(an.v)>
		SHA-256: f84e82045f698596d7e317475713c381e4cb7662c3bfd08a2183c136a6966c21
		Secure: true
	Object:
		Variable: $r0
		Type: byte[]
		Statement: $r0 = virtualinvoke $r2.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r0)
		Method: <com.xiaomi.accountsdk.utils.RSACoder: byte[] cipher(byte[],java.security.Key,int)>
		SHA-256: a436e9394a745afb5ab3688c7e06697338ad2bbc52f16793e502787698a9b97c
		Secure: false
	Object:
		Variable: $r8
		Type: byte[]
		Statement: $r8 = virtualinvoke $r7.<java.security.MessageDigest: byte[] digest(byte[])>($r8)
		Method: <com.google.android.gms.measurement.internal.zzbd: java.lang.String zzca(java.lang.String)>
		SHA-256: a33c26728dd6c9be498354cd086c4daf8d336654ae082e8c1e7087c550dcfce5
		Secure: false
	Object:
		Variable: $r5
		Type: javax.crypto.spec.SecretKeySpec
		Statement: specialinvoke $r5.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r4, varReplacer23193)
		Method: <s8.c: java.lang.String b(java.lang.String,u8.d,boolean)>
		SHA-256: 5a53e96ea9ae31685222f213c894f0340b3f7bec97a4a354ba0709795ac89861
		Secure: false
	Object:
		Variable: $r2
		Type: byte[]
		Statement: $r2 = virtualinvoke $r5.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r2)
		Method: <yb.a: java.lang.String b(java.lang.String,byte[],byte[])>
		SHA-256: 7e9d41cebad014e6a2ab40bbe590fd23e5acc4d16094ac7d47c5adf36e2078d
		Secure: false
	Object:
		Variable: $r0
		Type: byte[]
		Statement: $r0 = virtualinvoke $r2.<java.security.MessageDigest: byte[] digest()>()
		Method: <og.i: java.lang.String F(byte[],java.lang.String)>
		SHA-256: 1dbafe9f8c712df3c133f2189a57f8b73805f9881e7efc0736b539a9b3883c04
		Secure: false
	Object:
		Variable: $r8
		Type: java.security.PrivateKey
		Statement: $r8 = virtualinvoke $r4.<java.security.KeyFactory: java.security.PrivateKey generatePrivate(java.security.spec.KeySpec)>($r7)
		Method: <com.google.firebase.iid.zzy: java.security.KeyPair zzc(java.lang.String,java.lang.String)>
		SHA-256: 1c2ab7c9ba1e299096678737a545e3303a07173a3802e339f3da6139cd981be7
		Secure: false
	Object:
		Variable: $r0
		Type: byte[]
		Statement: $r0 = virtualinvoke $r1.<java.security.MessageDigest: byte[] digest()>()
		Method: <com.xiaomi.onetrack.d.d: java.lang.String e(byte[])>
		SHA-256: f5802024f1c5b95356b108c6d1b52e8646424949b44fdab40950ff4074cc8add
		Secure: false
	Object:
		Variable: $r2
		Type: javax.crypto.SecretKey
		Statement: $r3 = interfaceinvoke $r2.<java.security.Key: byte[] getEncoded()>()
		Method: <com.xiaomi.verificationsdk.internal.a: java.lang.String a(java.lang.String,javax.crypto.SecretKey)>
		SHA-256: a096781bdefc560d8eb34e95dc341af44f4c54871e24227b52432f66dce57d6f
		Secure: true
	Object:
		Variable: $r2
		Type: java.security.SecureRandom
		Statement: specialinvoke $r2.<java.security.SecureRandom: void <init>()>()
		Method: <ap.m: ap.m$c c()>
		SHA-256: dbf0b0f4a87ec5be3013f5ffe8f5b6f4f1ca456a74dcc9db5e1a58f57d46b377
		Secure: true
	Object:
		Variable: $i5
		Type: int
		Statement: $i5 = virtualinvoke $r1.<java.util.Random: int nextInt()>()
		Method: <bp.a: void <init>(int,int,java.security.SecureRandom)>
		SHA-256: 240ff4617f9de2709a66f716087ed3befa240f0a71a463e29bd698b74b332629
		Secure: true
	Object:
		Variable: $r2
		Type: byte[]
		Statement: $r2 = virtualinvoke $r7.<javax.crypto.Cipher: byte[] doFinal(byte[],int,int)>($r0, $i3, $i1)
		Method: <s8.c: byte[] h(byte[],java.lang.String)>
		SHA-256: b0193f31679b249cbf19d66597b39aad79679f2861b98fccd3226758fa267e0e
		Secure: false
	Object:
		Variable: $r2
		Type: javax.crypto.Cipher
		Statement: $r2 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer3643)
		Method: <com.xiaomi.accountsdk.utils.RSACoder: byte[] cipher(byte[],java.security.Key,int)>
		SHA-256: b3fce4bb9c02dbea376f062787f808ebfe4062a1fb566a57ce9ba20d9c34d302
		Secure: false
	Object:
		Variable: $r2
		Type: java.security.PrivateKey
		Statement: $r3 = interfaceinvoke $r2.<java.security.Key: byte[] getEncoded()>()
		Method: <u8.a: void <init>(java.security.KeyPair,int)>
		SHA-256: 49e2d25524325085d00f5328dc6cb11f3ff6cde3d590b8d30ad10fe4b3b3f74c
		Secure: true
	Object:
		Variable: $r2
		Type: java.security.spec.ECGenParameterSpec
		Statement: specialinvoke $r2.<java.security.spec.ECGenParameterSpec: void <init>(java.lang.String)>(varReplacer65484)
		Method: <pn.h$a: void <clinit>()>
		SHA-256: 2080ea88e6bcab8cc673a6fc88683a7e33252000a688bcd48de442ac65109375
		Secure: true
	Object:
		Variable: $r11
		Type: java.security.spec.ECParameterSpec
		Statement: specialinvoke $r11.<java.security.spec.ECParameterSpec: void <init>(java.security.spec.EllipticCurve,java.security.spec.ECPoint,java.math.BigInteger,int)>($r10, $r12, $r7, $i0)
		Method: <on.a: void <init>(java.lang.String,an.b0,on.b,mo.e)>
		SHA-256: 7242f24bb28aa696df451a05cbb10355e3dd3027b77dcf57f0a11dad8fb3314e
		Secure: true
	Object:
		Variable: $r2
		Type: byte[]
		Statement: $r2 = interfaceinvoke $r1.<java.security.Key: byte[] getEncoded()>()
		Method: <okhttp3.CertificatePinner: okio.ByteString sha256(java.security.cert.X509Certificate)>
		SHA-256: 8dbaf082df5338f5f27d774cda8913a4a816a3b83f499abadba8f5f4ce681575
		Secure: true
	Object:
		Variable: $r1
		Type: byte[]
		Statement: $r1 = virtualinvoke $r5.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r1)
		Method: <yb.b: java.lang.String b(byte[])>
		SHA-256: a6783ab355b20a4b524d7cc0c73be9687a1d61b2a030a2733d8d7dab080303a
		Secure: false
	Object:
		Variable: $r0
		Type: byte[]
		Statement: $r0 = virtualinvoke $r7.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r0)
		Method: <s8.c: byte[] h(byte[],java.lang.String)>
		SHA-256: 57e99e2c4881fe567eda3c504ba6acf29ee557c10c616d18fa366f742c7b00f1
		Secure: false
	Object:
		Variable: $r2
		Type: java.security.PublicKey
		Statement: $r3 = interfaceinvoke $r2.<java.security.Key: byte[] getEncoded()>()
		Method: <com.google.firebase.iid.zzz: java.lang.String zzv()>
		SHA-256: 3c979700e8b4f453751758f31d7541472c8d8efa293c5ba3cdbfcddd1173f2f
		Secure: true
	Object:
		Variable: $r3
		Type: byte[]
		Statement: $r3 = interfaceinvoke $r2.<java.security.Key: byte[] getEncoded()>()
		Method: <u8.a: void <init>(java.security.KeyPair,int)>
		SHA-256: d6ce2bc128bed293b84df7b66c8dd9c51376873eb7919b417d65da7b42528335
		Secure: true
	Object:
		Variable: $r2
		Type: java.security.SecureRandom
		Statement: specialinvoke $r2.<java.security.SecureRandom: void <init>()>()
		Method: <ap.l: void <init>(int,int,int,int,int,double,double,double,boolean,boolean,int,im.r)>
		SHA-256: 17f656b0f33f1134c9327f263d1670ae9bc236d282f0055fd5f098421f2fc17e
		Secure: true
	Object:
		Variable: $r2
		Type: java.security.MessageDigest
		Statement: $r2 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>($r1)
		Method: <og.i: java.lang.String F(byte[],java.lang.String)>
		SHA-256: c06798555f4be0f24203f83fce7f47c6d91f130c86f28f0beb3c0015a38de946
		Secure: false
	Object:
		Variable: $r2
		Type: java.security.spec.X509EncodedKeySpec
		Statement: specialinvoke $r2.<java.security.spec.X509EncodedKeySpec: void <init>(byte[])>($r1)
		Method: <yb.b: java.security.PublicKey d(java.lang.String)>
		SHA-256: 9948a35a8b23a69872bb72cbdeee34017289b255a2794bd58b325c696119fcb7
		Secure: false
	Object:
		Variable: $r0
		Type: javax.crypto.spec.SecretKeySpec
		Statement: specialinvoke $r0.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r2, varReplacer74575)
		Method: <ob.a: java.lang.String i(byte[],byte[])>
		SHA-256: 4d33487061bcbd34cc10449a91f0b6d96dfcb1f7f4a10d48176b2a33ec0eeaa4
		Secure: false
	Object:
		Variable: $r4
		Type: javax.crypto.spec.SecretKeySpec
		Statement: specialinvoke $r4.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r2, varReplacer6719)
		Method: <yb.a: java.lang.String b(java.lang.String,byte[],byte[])>
		SHA-256: df001cd2296b805ff9b403ad38d58576ce8e770ffb4c39fbcca77ad6ee0fdc2
		Secure: false
	Object:
		Variable: varReplacer23997
		Type: java.lang.String
		Statement: $r4 = staticinvoke <java.security.KeyFactory: java.security.KeyFactory getInstance(java.lang.String)>(varReplacer23997)
		Method: <s8.c: java.lang.String d(java.lang.String,java.lang.String)>
		SHA-256: 8c6d2b4aa45289bd855db53ef379a74efe15bebcb337db9b5e3308522e888b00
		Secure: false
	Object:
		Variable: $r2
		Type: byte[]
		Statement: $r2 = virtualinvoke $r1.<javax.crypto.Mac: byte[] doFinal()>()
		Method: <com.google.common.hash.y$b: com.google.common.hash.o o()>
		SHA-256: f606bed45ce72e5c64e7ad40cc51d1e2e1bb890d49f9cb23263c03cbd28023c
		Secure: false

Findings in Java Class: com.xiaomi.mitv.phone.remotecontroller.utils.EncryptUtil

	 in Method: java.lang.String decryptDES(java.lang.String,java.lang.String)
		RequiredPredicateError violating CrySL rule for javax.crypto.Cipher
			Second parameter was not properly generated as generatedKey
			at statement: virtualinvoke $r6.<javax.crypto.Cipher: void init(int,java.security.Key,java.security.spec.AlgorithmParameterSpec)>(varReplacer1623, $r5, $r3)

		ConstraintError violating CrySL rule for javax.crypto.Cipher (on Object #7b056aada4f13739840539de23988a2f1cbd1820ff4e9d5f5f0cfc921cac261c)
			First parameter (with value "DES/CBC/PKCS5Padding") should be any of {AES, PBEWithHmacSHA224AndAES_128, PBEWithHmacSHA256AndAES_128, PBEWithHmacSHA384AndAES_128, PBEWithHmacSHA512AndAES_128, PBEWithHmacSHA224AndAES_256, PBEWithHmacSHA256AndAES_256, PBEWithHmacSHA384AndAES_256, PBEWithHmacSHA512AndAES_256}
			at statement: $r6 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer1620)

		ConstraintError violating CrySL rule for javax.crypto.spec.SecretKeySpec (on Object #91c0e80c9fe750bceb1028b6218026ec16d18ec2f3e1a1a72e5c51474f5ab94f)
			Second parameter (with value "DES") should be any of {AES, HmacSHA224, HmacSHA256, HmacSHA384, HmacSHA512}
			at statement: specialinvoke $r5.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r4, varReplacer1622)

		RequiredPredicateError violating CrySL rule for javax.crypto.spec.IvParameterSpec
			First parameter was not properly generated as randomized
			at statement: specialinvoke $r3.<javax.crypto.spec.IvParameterSpec: void <init>(byte[])>($r4)

		RequiredPredicateError violating CrySL rule for javax.crypto.spec.SecretKeySpec
			First parameter was not properly generated as preparedKeyMaterial
			at statement: specialinvoke $r5.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r4, varReplacer1622)


	 in Method: java.lang.String getMD5(byte[])
		ConstraintError violating CrySL rule for java.security.MessageDigest (on Object #fad55c35f865f78ed933a0dacf3d22188e050a57377039c6b4c5e4f182380c3e)
			First parameter (with value "MD5") should be any of {SHA-256, SHA-384, SHA-512}
			at statement: $r2 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer1636)


	 in Method: java.lang.String encryptDES(java.lang.String,java.lang.String)
		RequiredPredicateError violating CrySL rule for javax.crypto.spec.SecretKeySpec
			First parameter was not properly generated as preparedKeyMaterial
			at statement: specialinvoke $r4.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r3, varReplacer1931)

		RequiredPredicateError violating CrySL rule for javax.crypto.Cipher
			Second parameter was not properly generated as generatedKey
			at statement: virtualinvoke $r5.<javax.crypto.Cipher: void init(int,java.security.Key,java.security.spec.AlgorithmParameterSpec)>(varReplacer1929, $r4, $r0)

		RequiredPredicateError violating CrySL rule for javax.crypto.spec.IvParameterSpec
			First parameter was not properly generated as randomized
			at statement: specialinvoke $r0.<javax.crypto.spec.IvParameterSpec: void <init>(byte[])>($r3)

		ConstraintError violating CrySL rule for javax.crypto.Cipher (on Object #4fcdc35b572d670f598dd537376751332e2d5c17ce2008c2b0a0fcb4e1b7e0d)
			First parameter (with value "DES/CBC/PKCS5Padding") should be any of {AES, PBEWithHmacSHA224AndAES_128, PBEWithHmacSHA256AndAES_128, PBEWithHmacSHA384AndAES_128, PBEWithHmacSHA512AndAES_128, PBEWithHmacSHA224AndAES_256, PBEWithHmacSHA256AndAES_256, PBEWithHmacSHA384AndAES_256, PBEWithHmacSHA512AndAES_256}
			at statement: $r5 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer1930)

		RequiredPredicateError violating CrySL rule for javax.crypto.Cipher
			Third parameter was not properly generated as preparedIV [ with CBC, It's required to use IVParameterSpec]
			at statement: virtualinvoke $r5.<javax.crypto.Cipher: void init(int,java.security.Key,java.security.spec.AlgorithmParameterSpec)>(varReplacer1929, $r4, $r0)

		ConstraintError violating CrySL rule for javax.crypto.spec.SecretKeySpec (on Object #3d574946526012691a9181029f0103a58345c8995548448c2ffce8632dc31a88)
			Second parameter (with value "DES") should be any of {AES, HmacSHA224, HmacSHA256, HmacSHA384, HmacSHA512}
			at statement: specialinvoke $r4.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r3, varReplacer1931)


Findings in Java Class: com.xiaomi.accountsdk.utils.RSACoder

	 in Method: byte[] cipher(byte[],java.security.Key,int)
		ConstraintError violating CrySL rule for javax.crypto.Cipher (on Object #b3fce4bb9c02dbea376f062787f808ebfe4062a1fb566a57ce9ba20d9c34d302)
			First parameter (with value "RSA/ECB/OAEPPadding") should be any of RSA/ECB/{NoPadding, PKCS1Padding, OAEPWithMD5AndMGF1Padding, OAEPWithSHA-224AndMGF1Padding, OAEPWithSHA-256AndMGF1Padding, OAEPWithSHA-384AndMGF1Padding, OAEPWithSHA-512AndMGF1Padding}
			at statement: $r2 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer3643)

		RequiredPredicateError violating CrySL rule for javax.crypto.Cipher
			Second parameter was not properly generated as generatedKey
			at statement: virtualinvoke $r2.<javax.crypto.Cipher: void init(int,java.security.Key)>($i0, $r1)


Findings in Java Class: com.xiaomi.ai.utils.n

	 in Method: java.lang.String a(java.lang.String)
		ConstraintError violating CrySL rule for java.security.MessageDigest (on Object #914d7e607782b1739de1b478175f8070362f7e6963aa403758e59acd1b5ca4d7)
			First parameter (with value "MD5") should be any of {SHA-256, SHA-384, SHA-512}
			at statement: $r1 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer7311)


Findings in Java Class: com.xiaomi.ai.utils.UploadHelper

	 in Method: java.lang.String getRandomRequestId()
		ConstraintError violating CrySL rule for java.security.MessageDigest (on Object #f9df46ff7e389cbc2e383c7317873a0b12d14ee907f5115eaeec200b6960c61e)
			First parameter (with value "MD5") should be any of {SHA-256, SHA-384, SHA-512}
			at statement: $r3 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer7354)


Findings in Java Class: kf.c0

	 in Method: java.lang.String e(java.lang.String)
		ConstraintError violating CrySL rule for java.security.MessageDigest (on Object #f971a2ececda2d5546060493457a20a7c8d1d56485fc9479e56ebcc06ce914ef)
			First parameter (with value "MD5") should be any of {SHA-256, SHA-384, SHA-512}
			at statement: $r1 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer7582)


Findings in Java Class: s8.b

	 in Method: java.lang.String c(byte[],int)
		TypestateError violating CrySL rule for javax.crypto.Mac (on Object #aa505571cd2e3638cc0fd39d5167b95563c335fcb6b60544fea1748efa5726a4)
			Unexpected call to method update on object of type javax.crypto.Mac.
			at statement: virtualinvoke $r4.<javax.crypto.Mac: void update(byte[])>($r0)

		IncompleteOperationError violating CrySL rule for javax.crypto.Mac (on Object #aa505571cd2e3638cc0fd39d5167b95563c335fcb6b60544fea1748efa5726a4)
			Operation on object of type javax.crypto.Mac object not completed. Expected call to javax.crypto.Mac: void doFinal(byte[],int), update, javax.crypto.Mac: byte[] doFinal()
			at statement: $r0 = virtualinvoke $r4.<javax.crypto.Mac: byte[] doFinal()>()

		RequiredPredicateError violating CrySL rule for javax.crypto.spec.SecretKeySpec
			First parameter was not properly generated as preparedKeyMaterial
			at statement: specialinvoke $r1.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r3, varReplacer7707)

		RequiredPredicateError violating CrySL rule for javax.crypto.Mac
			First parameter was not properly generated as generatedKey
			at statement: virtualinvoke $r4.<javax.crypto.Mac: void init(java.security.Key)>($r1)

		IncompleteOperationError violating CrySL rule for javax.crypto.Mac (on Object #aa505571cd2e3638cc0fd39d5167b95563c335fcb6b60544fea1748efa5726a4)
			Operation on object of type javax.crypto.Mac object not completed. Expected call to update, doFinal
			at statement: virtualinvoke $r4.<javax.crypto.Mac: void init(java.security.Key)>($r1)


Findings in Java Class: com.xiaomi.onetrack.d.d

	 in Method: java.lang.String e(byte[])
		ConstraintError violating CrySL rule for java.security.MessageDigest (on Object #61e0c51b801e587b6243c32540942869dcee45c29c543249e7e49e5c6b6f1de1)
			First parameter (with value "MD5") should be any of {SHA-256, SHA-384, SHA-512}
			at statement: $r1 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer7836)


	 in Method: java.security.MessageDigest a(java.lang.String)
		ConstraintError violating CrySL rule for java.security.MessageDigest (on Object #13178eabcf9b2ef4cd6e37b88f32e7623b24d78fda890ffb87007cfee52e529f)
			First parameter (with value "MD5") should be any of {SHA-256, SHA-384, SHA-512}
			at statement: $r2 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>($r1)


Findings in Java Class: com.xiaomi.onetrack.d.a

	 in Method: byte[] b(byte[],byte[])
		ConstraintError violating CrySL rule for javax.crypto.Cipher (on Object #b1dd01efdb335ae78c3ddfbb8b238f013fa29034bfaed6b94b3db14b230ae4d2)
			First parameter (with value "AES/ECB/PKCS5Padding") should be any of AES/{CBC, GCM, PCBC, CTR, CTS, CFB, OFB}
			at statement: $r3 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer7913)


	 in Method: byte[] a(byte[],byte[])
		ConstraintError violating CrySL rule for javax.crypto.Cipher (on Object #eebb74cf282c90a8b58088a70606933aeef19bbc8fc852552f143664c3bf38b0)
			First parameter (with value "AES/ECB/PKCS5Padding") should be any of AES/{CBC, GCM, PCBC, CTR, CTS, CFB, OFB}
			at statement: $r3 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer8425)

		RequiredPredicateError violating CrySL rule for javax.crypto.spec.SecretKeySpec
			First parameter was not properly generated as preparedKeyMaterial
			at statement: specialinvoke $r0.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r2, varReplacer8424)

		RequiredPredicateError violating CrySL rule for javax.crypto.Cipher
			Second parameter was not properly generated as generatedKey
			at statement: virtualinvoke $r3.<javax.crypto.Cipher: void init(int,java.security.Key)>(varReplacer8423, $r0)


Findings in Java Class: com.xiaomi.verificationsdk.internal.a

	 in Method: byte[] e(byte[],java.security.Key,java.lang.String)
		ConstraintError violating CrySL rule for javax.crypto.Cipher (on Object #cd27c533a3946144ed76de8b141187627953fd63f4e848f52c1dcc37b3957e63)
			First parameter (with value "RSA/ECB/PKCS1Padding") should be any of {AES, PBEWithHmacSHA224AndAES_128, PBEWithHmacSHA256AndAES_128, PBEWithHmacSHA384AndAES_128, PBEWithHmacSHA512AndAES_128, PBEWithHmacSHA224AndAES_256, PBEWithHmacSHA256AndAES_256, PBEWithHmacSHA384AndAES_256, PBEWithHmacSHA512AndAES_256}
			at statement: $r3 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>($r2)

		RequiredPredicateError violating CrySL rule for javax.crypto.Cipher
			Second parameter was not properly generated as generatedKey
			at statement: virtualinvoke $r3.<javax.crypto.Cipher: void init(int,java.security.Key)>(varReplacer8469, $r1)


Findings in Java Class: com.hzy.tvmao.utils.c

	 in Method: java.lang.String a(byte[])
		ConstraintError violating CrySL rule for java.security.MessageDigest (on Object #8a1146b18db97d013f2ea9bc2cfabf59178de91bac535f88d0807308f07b7cbc)
			First parameter (with value "MD5") should be any of {SHA-256, SHA-384, SHA-512}
			at statement: $r2 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer8509)


Findings in Java Class: com.xiaomi.accountsdk.account.utils.PackageUtils

	 in Method: java.lang.String getSignatureDigestByType(android.content.Context,java.lang.String,java.lang.String)
		ConstraintError violating CrySL rule for java.security.MessageDigest (on Object #a3201bbfb465bb30687644e1c65581134287cb66d3a04b37ee9cf421197716a6)
			First parameter (with value "SHA-1") should be any of {SHA-256, SHA-384, SHA-512}
			at statement: $r11 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>($r0)

		ConstraintError violating CrySL rule for java.security.MessageDigest (on Object #a3201bbfb465bb30687644e1c65581134287cb66d3a04b37ee9cf421197716a6)
			First parameter (with value "MD5") should be any of {SHA-256, SHA-384, SHA-512}
			at statement: $r11 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>($r0)


Findings in Java Class: com.google.android.gms.common.util.AndroidUtilsLight

	 in Method: java.security.MessageDigest zzi(java.lang.String)
		ConstraintError violating CrySL rule for java.security.MessageDigest (on Object #51cfca83351a25bd8651306a7c82d4ba539b1b3d22d2bd39903653877efadf76)
			First parameter (with value "SHA-1") should be any of {SHA-256, SHA-384, SHA-512}
			at statement: $r0 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>($r2)

		IncompleteOperationError violating CrySL rule for java.security.MessageDigest (on Object #51cfca83351a25bd8651306a7c82d4ba539b1b3d22d2bd39903653877efadf76)
			Operation on object of type java.security.MessageDigest object not completed. Expected call to digest, update
			at statement: $r0 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>($r2)


Findings in Java Class: s8.g

	 in Method: javax.crypto.SecretKey n(java.security.PrivateKey,java.security.PublicKey)
		ConstraintError violating CrySL rule for javax.crypto.KeyAgreement (on Object #8a14c7da5d3533f90ee6e092d0a08b35da3509589d3d959215b923a894fbd261)
			First parameter (with value "ECDH") should be any of {DH, DiffieHellman, NH}
			at statement: $r2 = staticinvoke <javax.crypto.KeyAgreement: javax.crypto.KeyAgreement getInstance(java.lang.String,java.lang.String)>(varReplacer20446, varReplacer20447)

		ConstraintError violating CrySL rule for javax.crypto.KeyAgreement (on Object #8a14c7da5d3533f90ee6e092d0a08b35da3509589d3d959215b923a894fbd261)
			First parameter (with value "AES") should be any of {DH, DiffieHellman, NH}
			at statement: $r3 = virtualinvoke $r2.<javax.crypto.KeyAgreement: javax.crypto.SecretKey generateSecret(java.lang.String)>(varReplacer20449)


	 in Method: java.security.PrivateKey p(java.lang.String)
		RequiredPredicateError violating CrySL rule for java.security.KeyFactory
			First parameter was not properly generated as speccedKey
			at statement: $r4 = virtualinvoke $r3.<java.security.KeyFactory: java.security.PrivateKey generatePrivate(java.security.spec.KeySpec)>($r0)

		ConstraintError violating CrySL rule for java.security.KeyFactory (on Object #9b97c81c32e217d5d2f289630be83f98f387a4be3a1169113fc3d8d970ed380d)
			First parameter (with value "ECDH") should be any of {RSA, DiffieHellman, DH, DSA, EC}
			at statement: $r3 = staticinvoke <java.security.KeyFactory: java.security.KeyFactory getInstance(java.lang.String)>(varReplacer20452)


	 in Method: java.security.PublicKey q(java.lang.String)
		RequiredPredicateError violating CrySL rule for java.security.KeyFactory
			First parameter was not properly generated as speccedKey
			at statement: $r4 = virtualinvoke $r3.<java.security.KeyFactory: java.security.PublicKey generatePublic(java.security.spec.KeySpec)>($r0)

		ConstraintError violating CrySL rule for java.security.KeyFactory (on Object #582eb62090fd5079779c51981b6989c8024638309c6cb4681ac214b605c0300c)
			First parameter (with value "ECDH") should be any of {RSA, DiffieHellman, DH, DSA, EC}
			at statement: $r3 = staticinvoke <java.security.KeyFactory: java.security.KeyFactory getInstance(java.lang.String)>(varReplacer20453)

		RequiredPredicateError violating CrySL rule for java.security.spec.X509EncodedKeySpec
			First parameter was not properly generated as preparedKeyMaterial
			at statement: specialinvoke $r0.<java.security.spec.X509EncodedKeySpec: void <init>(byte[])>($r2)


Findings in Java Class: s8.h

	 in Method: java.lang.String b(byte[])
		ConstraintError violating CrySL rule for java.security.MessageDigest (on Object #728dafc701eddcbe34a331c240ea8c9460e60aedaa7ef34e11be1902041f9475)
			First parameter (with value "MD5") should be any of {SHA-256, SHA-384, SHA-512}
			at statement: $r2 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer20455)


Findings in Java Class: s8.c

	 in Method: u8.a n(int)
		IncompleteOperationError violating CrySL rule for java.security.KeyPairGenerator (on Object #6da7347f42b92b470eaf6f0033f2dea277ca6b701acef3f431945ad1e171f79c)
			Operation on object of type java.security.KeyPairGenerator object not completed. Expected call to genKeyPair, java.security.KeyPairGenerator: java.security.KeyPair generateKeyPair(), java.security.KeyPairGeneratorSpi: java.security.KeyPair generateKeyPair()
			at statement: $r3 = virtualinvoke $r1.<java.security.KeyPairGenerator: java.security.KeyPair generateKeyPair()>()

		ConstraintError violating CrySL rule for java.security.KeyPairGenerator (on Object #6da7347f42b92b470eaf6f0033f2dea277ca6b701acef3f431945ad1e171f79c)
			First parameter (with value 1024) should be any of {4096, 3072, 2048}
			at statement: virtualinvoke $r1.<java.security.KeyPairGenerator: void initialize(int)>($i0)


	 in Method: byte[] h(byte[],java.lang.String)
		IncompleteOperationError violating CrySL rule for javax.crypto.Cipher (on Object #2c963f5dbe552c23b6c6bac68a2e286610b0ebf94d1cc286511b993acbeb1534)
			Operation on object of type javax.crypto.Cipher object not completed. Expected call to javax.crypto.Cipher: int doFinal(java.nio.ByteBuffer,java.nio.ByteBuffer), javax.crypto.Cipher: byte[] doFinal(byte[]), javax.crypto.Cipher: int doFinal(byte[],int,int,byte[]), javax.crypto.Cipher: byte[] doFinal(byte[],int,int), javax.crypto.Cipher: int doFinal(byte[],int,int,byte[],int), update, wrap
			at statement: $r0 = virtualinvoke $r7.<javax.crypto.Cipher: byte[] doFinal(byte[],int,int)>($r0, $i0, $i1)

		IncompleteOperationError violating CrySL rule for javax.crypto.Cipher (on Object #2c963f5dbe552c23b6c6bac68a2e286610b0ebf94d1cc286511b993acbeb1534)
			Operation on object of type javax.crypto.Cipher object not completed. Expected call to javax.crypto.Cipher: int doFinal(java.nio.ByteBuffer,java.nio.ByteBuffer), javax.crypto.Cipher: byte[] doFinal(byte[]), javax.crypto.Cipher: int doFinal(byte[],int,int,byte[]), javax.crypto.Cipher: byte[] doFinal(byte[],int,int), javax.crypto.Cipher: int doFinal(byte[],int,int,byte[],int), update, wrap
			at statement: $r2 = virtualinvoke $r7.<javax.crypto.Cipher: byte[] doFinal(byte[],int,int)>($r0, $i3, $i1)

		RequiredPredicateError violating CrySL rule for javax.crypto.Cipher
			Second parameter was not properly generated as generatedKey
			at statement: virtualinvoke $r7.<javax.crypto.Cipher: void init(int,java.security.Key)>(varReplacer83391, $r6)

		RequiredPredicateError violating CrySL rule for java.security.KeyFactory
			First parameter was not properly generated as speccedKey
			at statement: $r5 = virtualinvoke $r4.<java.security.KeyFactory: java.security.PublicKey generatePublic(java.security.spec.KeySpec)>($r3)

		IncompleteOperationError violating CrySL rule for javax.crypto.Cipher (on Object #2c963f5dbe552c23b6c6bac68a2e286610b0ebf94d1cc286511b993acbeb1534)
			Operation on object of type javax.crypto.Cipher object not completed. Expected call to update, wrap, doFinal
			at statement: $i0 = virtualinvoke $r7.<javax.crypto.Cipher: int getOutputSize(int)>(varReplacer83392)

		RequiredPredicateError violating CrySL rule for java.security.spec.X509EncodedKeySpec
			First parameter was not properly generated as preparedKeyMaterial
			at statement: specialinvoke $r3.<java.security.spec.X509EncodedKeySpec: void <init>(byte[])>($r2)


	 in Method: java.lang.String g(java.lang.String,java.lang.String)
		RequiredPredicateError violating CrySL rule for java.security.KeyFactory
			First parameter was not properly generated as speccedKey
			at statement: $r5 = virtualinvoke $r3.<java.security.KeyFactory: java.security.PublicKey generatePublic(java.security.spec.KeySpec)>($r4)

		RequiredPredicateError violating CrySL rule for javax.crypto.Cipher
			Second parameter was not properly generated as generatedKey
			at statement: virtualinvoke $r7.<javax.crypto.Cipher: void init(int,java.security.Key)>(varReplacer63249, $r6)

		RequiredPredicateError violating CrySL rule for java.security.spec.X509EncodedKeySpec
			First parameter was not properly generated as preparedKeyMaterial
			at statement: specialinvoke $r4.<java.security.spec.X509EncodedKeySpec: void <init>(byte[])>($r2)


	 in Method: java.lang.String b(java.lang.String,u8.d,boolean)
		RequiredPredicateError violating CrySL rule for javax.crypto.spec.SecretKeySpec
			First parameter was not properly generated as preparedKeyMaterial
			at statement: specialinvoke $r5.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r4, varReplacer23193)

		RequiredPredicateError violating CrySL rule for javax.crypto.Cipher
			Second parameter was not properly generated as generatedKey
			at statement: virtualinvoke $r6.<javax.crypto.Cipher: void init(int,java.security.Key,java.security.spec.AlgorithmParameterSpec)>(varReplacer23191, $r5, $r7)

		RequiredPredicateError violating CrySL rule for javax.crypto.spec.IvParameterSpec
			First parameter was not properly generated as randomized
			at statement: specialinvoke $r7.<javax.crypto.spec.IvParameterSpec: void <init>(byte[])>($r4)


	 in Method: java.lang.String d(java.lang.String,java.lang.String)
		RequiredPredicateError violating CrySL rule for javax.crypto.Cipher
			Second parameter was not properly generated as generatedKey
			at statement: virtualinvoke $r8.<javax.crypto.Cipher: void init(int,java.security.Key)>(varReplacer23995, $r7)

		RequiredPredicateError violating CrySL rule for java.security.KeyFactory
			First parameter was not properly generated as speccedKey
			at statement: $r6 = virtualinvoke $r4.<java.security.KeyFactory: java.security.PrivateKey generatePrivate(java.security.spec.KeySpec)>($r5)


Findings in Java Class: nf.e

	 in Method: java.lang.String b(java.lang.String)
		ConstraintError violating CrySL rule for java.security.MessageDigest (on Object #874f6e228dc71d733b8879c335f063c6f9bdf2ac930cbb48e315fa469d8c294)
			First parameter (with value "SHA1") should be any of {SHA-256, SHA-384, SHA-512}
			at statement: $r1 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer24692)


Findings in Java Class: com.xiaomi.accountsdk.utils.Coder

	 in Method: java.lang.String getDataMd5Digest(byte[])
		ConstraintError violating CrySL rule for java.security.MessageDigest (on Object #edcbf839ae29ae48bc61294c970adb34191e4f2f432cd901449d70106c97eb4)
			First parameter (with value "MD5") should be any of {SHA-256, SHA-384, SHA-512}
			at statement: $r1 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer25081)


	 in Method: byte[] hash4SHA1(byte[])
		ConstraintError violating CrySL rule for java.security.MessageDigest (on Object #27765afef9cc863302744a880104f22e602c078da3228165b069088b9c5899d9)
			First parameter (with value "SHA1") should be any of {SHA-256, SHA-384, SHA-512}
			at statement: $r1 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer25184)


Findings in Java Class: com.xiaomi.mitv.epg.downloader.Downloader

	 in Method: javax.net.ssl.SSLContext createSSLContext(android.content.Context,java.lang.String[])
		ConstraintError violating CrySL rule for javax.net.ssl.SSLContext (on Object #6d3afb52c54c7c5f23ae98370bc1a4436ac46dae77606dec1b0dbdaefff36a3e)
			First parameter (with value "TLS") should be any of {TLSv1.2}
			at statement: $r18 = staticinvoke <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String)>(varReplacer40069)

		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			First parameter was not properly generated as generatedKeyManagers
			at statement: virtualinvoke $r18.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>(varReplacer40075, $r19, $r20)


Findings in Java Class: com.xiaomi.account.auth.AuthorizeHelper

	 in Method: byte[] encryptHMACSha1(byte[],byte[])
		RequiredPredicateError violating CrySL rule for javax.crypto.spec.SecretKeySpec
			First parameter was not properly generated as preparedKeyMaterial
			at statement: specialinvoke $r0.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r2, varReplacer42928)

		RequiredPredicateError violating CrySL rule for javax.crypto.Mac
			First parameter was not properly generated as generatedKey
			at statement: virtualinvoke $r3.<javax.crypto.Mac: void init(java.security.Key)>($r0)

		ConstraintError violating CrySL rule for javax.crypto.spec.SecretKeySpec (on Object #705fd8b74f34561e2c3aad6dea20dee5d6dc559fa31c89cd56084755eaa77cb3)
			Second parameter (with value "HmacSHA1") should be any of {AES, HmacSHA224, HmacSHA256, HmacSHA384, HmacSHA512}
			at statement: specialinvoke $r0.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r2, varReplacer42928)


Findings in Java Class: com.google.firebase.iid.zzan

	 in Method: java.lang.String zza(java.security.KeyPair)
		ConstraintError violating CrySL rule for java.security.MessageDigest (on Object #ce5e3818d9ed8080faa2de74637976d0e8afdde3d3952a61cbf0db471e509d40)
			First parameter (with value "SHA1") should be any of {SHA-256, SHA-384, SHA-512}
			at statement: $r4 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer45627)


Findings in Java Class: org.apache.commons.compress.archivers.sevenz.AES256SHA256Decoder$1

	 in Method: javax.crypto.CipherInputStream init()
		RequiredPredicateError violating CrySL rule for javax.crypto.Cipher
			Second parameter was not properly generated as generatedKey
			at statement: virtualinvoke $r8.<javax.crypto.Cipher: void init(int,java.security.Key,java.security.spec.AlgorithmParameterSpec)>(varReplacer46258, $r7, $r9)

		TypestateError violating CrySL rule for java.security.MessageDigest (on Object #737b953e7558423668ce6f37c3a4a6c29fcea562417d4f19d880f6e0d68aff9)
			Unexpected call to method <java.security.MessageDigest: byte[] digest()> on object of type java.security.MessageDigest. Expect a call to one of the following methods java.security.MessageDigest: void update(byte[],int,int),java.security.MessageDigest: void update(java.nio.ByteBuffer),java.security.MessageDigest: byte[] digest(byte[]),java.security.MessageDigest: void update(byte),java.security.MessageDigest: void update(byte[])
			at statement: $r4 = virtualinvoke $r5.<java.security.MessageDigest: byte[] digest()>()

		RequiredPredicateError violating CrySL rule for javax.crypto.spec.SecretKeySpec
			First parameter was not properly generated as preparedKeyMaterial
			at statement: specialinvoke $r7.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r4, varReplacer46249)

		RequiredPredicateError violating CrySL rule for javax.crypto.spec.IvParameterSpec
			First parameter was not properly generated as randomized
			at statement: specialinvoke $r9.<javax.crypto.spec.IvParameterSpec: void <init>(byte[])>($r2)

		ConstraintError violating CrySL rule for javax.crypto.Cipher (on Object #ec3abcd3d775b97fd82be12afd7fcac67a049144197961f33e1f1aa692a20254)
			First parameter (with value "AES/CBC/NoPadding") should be any of AES/CBC/{PKCS5Padding, ISO10126Padding}
			at statement: $r8 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer46254)

		IncompleteOperationError violating CrySL rule for javax.crypto.Cipher (on Object #ec3abcd3d775b97fd82be12afd7fcac67a049144197961f33e1f1aa692a20254)
			Operation on object of type javax.crypto.Cipher object not completed. Expected call to update, wrap, doFinal
			at statement: specialinvoke $r10.<javax.crypto.CipherInputStream: void <init>(java.io.InputStream,javax.crypto.Cipher)>($r11, $r8)


Findings in Java Class: nf.b

	 in Method: java.lang.String d(java.lang.String)
		ConstraintError violating CrySL rule for java.security.MessageDigest (on Object #f10fdb207fb2a5ee44c8497ce941bd8c4d196d858d0ef60a860a18e2ec495ece)
			First parameter (with value "SHA1") should be any of {SHA-256, SHA-384, SHA-512}
			at statement: $r3 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer47315)


Findings in Java Class: y4.a

	 in Method: boolean f(java.lang.String)
		ConstraintError violating CrySL rule for javax.crypto.Cipher (on Object #a025ce7064f640df4bfe2ed24544a5f8e1718e311f086fc1b1fa334eb151cab8)
			First parameter (with value "AES/ECB/PKCS5Padding") should be any of AES/{CBC, GCM, PCBC, CTR, CTS, CFB, OFB}
			at statement: $r5 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer49726)

		RequiredPredicateError violating CrySL rule for javax.crypto.spec.SecretKeySpec
			First parameter was not properly generated as preparedKeyMaterial
			at statement: specialinvoke $r2.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r4, varReplacer49719)


Findings in Java Class: q4.j

	 in Method: int K(byte[])
		IncompleteOperationError violating CrySL rule for javax.crypto.Cipher (on Object #6773bb0d20b520b912af345586633fdb4c56e822da7d0a91d8bc54bdd2638cc)
			Operation on object of type javax.crypto.Cipher object not completed. Expected call to init
			at statement: $z0 = virtualinvoke $r10.<y4.a: boolean f(java.lang.String)>($r5)


Findings in Java Class: com.miui.privacypolicy.NetUtils

	 in Method: java.lang.String getMd5Digest(java.lang.String)
		ConstraintError violating CrySL rule for java.security.MessageDigest (on Object #b853afac8254283b23a76c67d123ce98034311afb9e2638d373b8acea7c0cb00)
			First parameter (with value "MD5") should be any of {SHA-256, SHA-384, SHA-512}
			at statement: $r1 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer60183)


Findings in Java Class: com.google.android.gms.measurement.internal.zzfx

	 in Method: java.security.MessageDigest getMessageDigest()
		ConstraintError violating CrySL rule for java.security.MessageDigest (on Object #4a31aa537dd1cc73478b686f28614be5986e246bcedda21035b8a936bf12dc97)
			First parameter (with value "MD5") should be any of {SHA-256, SHA-384, SHA-512}
			at statement: $r0 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer60336)

		IncompleteOperationError violating CrySL rule for java.security.MessageDigest (on Object #4a31aa537dd1cc73478b686f28614be5986e246bcedda21035b8a936bf12dc97)
			Operation on object of type java.security.MessageDigest object not completed. Expected call to digest, update
			at statement: $r0 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer60336)


	 in Method: long zzd(android.content.Context,java.lang.String)
		IncompleteOperationError violating CrySL rule for java.security.MessageDigest (on Object #4a31aa537dd1cc73478b686f28614be5986e246bcedda21035b8a936bf12dc97)
			Operation on object of type java.security.MessageDigest object not completed. Expected call to digest, update
			at statement: $r4 = staticinvoke <com.google.android.gms.measurement.internal.zzfx: java.security.MessageDigest getMessageDigest()>()


Findings in Java Class: com.google.android.gms.measurement.internal.zzt

	 in Method: long zza(com.google.android.gms.internal.measurement.zzfw)
		IncompleteOperationError violating CrySL rule for java.security.MessageDigest (on Object #4a31aa537dd1cc73478b686f28614be5986e246bcedda21035b8a936bf12dc97)
			Operation on object of type java.security.MessageDigest object not completed. Expected call to digest, update
			at statement: $r7 = staticinvoke <com.google.android.gms.measurement.internal.zzfx: java.security.MessageDigest getMessageDigest()>()

		IncompleteOperationError violating CrySL rule for java.security.MessageDigest (on Object #4a31aa537dd1cc73478b686f28614be5986e246bcedda21035b8a936bf12dc97)
			Operation on object of type java.security.MessageDigest object not completed. Expected call to update, java.security.MessageDigest: byte[] digest(byte[])
			at statement: $r10 = virtualinvoke $r7.<java.security.MessageDigest: byte[] digest(byte[])>($r3)


Findings in Java Class: com.google.android.gms.measurement.internal.zzbd

	 in Method: java.lang.String zzca(java.lang.String)
		IncompleteOperationError violating CrySL rule for java.security.MessageDigest (on Object #4a31aa537dd1cc73478b686f28614be5986e246bcedda21035b8a936bf12dc97)
			Operation on object of type java.security.MessageDigest object not completed. Expected call to digest, update
			at statement: $r7 = staticinvoke <com.google.android.gms.measurement.internal.zzfx: java.security.MessageDigest getMessageDigest()>()


Findings in Java Class: com.xiaomi.accountsdk.hasheddeviceidlib.DeviceIDCoder

	 in Method: java.lang.String getDataMd5Digest(byte[])
		ConstraintError violating CrySL rule for java.security.MessageDigest (on Object #61e0c92ca2e6cdf01d44459d964c3b77e748da1025bb64c0624e7c4b349222b3)
			First parameter (with value "MD5") should be any of {SHA-256, SHA-384, SHA-512}
			at statement: $r1 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer67436)


Findings in Java Class: okhttp3.OkHttpClient

	 in Method: javax.net.ssl.SSLSocketFactory systemDefaultSslSocketFactory(javax.net.ssl.X509TrustManager)
		ConstraintError violating CrySL rule for javax.net.ssl.SSLContext (on Object #371c4958edf2fc1b2d33b33dcc24912f8bc28f9909d0dffe5d9f905b2943a223)
			First parameter (with value "TLS") should be any of {TLSv1.2}
			at statement: $r3 = staticinvoke <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String)>(varReplacer68255)

		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			Second parameter was not properly generated as generatedTrustManagers
			at statement: virtualinvoke $r3.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>(varReplacer68253, $r7, varReplacer68253)

		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			First parameter was not properly generated as generatedKeyManagers
			at statement: virtualinvoke $r3.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>(varReplacer68253, $r7, varReplacer68253)

		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			Third parameter was not properly generated as randomized
			at statement: virtualinvoke $r3.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>(varReplacer68253, $r7, varReplacer68253)


	 in Method: javax.net.ssl.X509TrustManager systemDefaultTrustManager()
		RequiredPredicateError violating CrySL rule for javax.net.ssl.TrustManagerFactory
			First parameter was not properly generated as generatedKeyStore
			at statement: virtualinvoke $r3.<javax.net.ssl.TrustManagerFactory: void init(java.security.KeyStore)>(varReplacer68252)


Findings in Java Class: com.xiaomi.onetrack.d.b

	 in Method: java.lang.String b(android.content.Context,java.lang.String)
		ConstraintError violating CrySL rule for java.security.KeyStore (on Object #5c95fe0f41c3fa841afb2a9f3ca9618a8b4d59026e348c6cadac56e0c9b1e816)
			First parameter (with value "AndroidKeyStore") should be any of {JCEKS, JKS, DKS, PKCS11, PKCS12}
			at statement: $r3 = staticinvoke <java.security.KeyStore: java.security.KeyStore getInstance(java.lang.String)>(varReplacer69923)

		RequiredPredicateError violating CrySL rule for javax.crypto.Cipher
			Second parameter was not properly generated as generatedKey
			at statement: virtualinvoke $r2.<javax.crypto.Cipher: void init(int,java.security.Key)>(varReplacer69924, $r5)

		ConstraintError violating CrySL rule for javax.crypto.Cipher (on Object #8f540cb7f34c9469cede844228f73ebd4d4828381bf2d508abe1b588f3b70c10)
			First parameter (with value "RSA/ECB/PKCS1Padding") should be any of {AES, PBEWithHmacSHA224AndAES_128, PBEWithHmacSHA256AndAES_128, PBEWithHmacSHA384AndAES_128, PBEWithHmacSHA512AndAES_128, PBEWithHmacSHA224AndAES_256, PBEWithHmacSHA256AndAES_256, PBEWithHmacSHA384AndAES_256, PBEWithHmacSHA512AndAES_256}
			at statement: $r2 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer69927)


	 in Method: java.lang.String a(android.content.Context,java.lang.String)
		RequiredPredicateError violating CrySL rule for javax.crypto.Cipher
			Second parameter was not properly generated as generatedKey
			at statement: virtualinvoke $r2.<javax.crypto.Cipher: void init(int,java.security.Key)>(varReplacer69938, $r5)

		ConstraintError violating CrySL rule for java.security.KeyStore (on Object #cfb78372f22f0a29cb95ea62d6be7d32a0e5323916903b5eb1abc66cd1862b9b)
			First parameter (with value "AndroidKeyStore") should be any of {JCEKS, JKS, DKS, PKCS11, PKCS12}
			at statement: $r3 = staticinvoke <java.security.KeyStore: java.security.KeyStore getInstance(java.lang.String)>(varReplacer69939)

		IncompleteOperationError violating CrySL rule for javax.crypto.Cipher (on Object #718c0328e12f07c95ec8fe32115dc92c3c4b2e8da7bfef2d2b57d508fbfdb820)
			Operation on object of type javax.crypto.Cipher object not completed. Expected call to init
			at statement: $r2 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer69935)


	 in Method: void a(android.content.Context)
		IncompleteOperationError violating CrySL rule for java.security.KeyPairGenerator (on Object #936bb4ecfcd4b8bda7bdb5f716603c7076c1c09f1367ee048c257b4f0dbd1b14)
			Operation on object of type java.security.KeyPairGenerator object not completed. Expected call to genKeyPair, java.security.KeyPairGenerator: java.security.KeyPair generateKeyPair(), java.security.KeyPairGeneratorSpi: java.security.KeyPair generateKeyPair()
			at statement: virtualinvoke $r8.<java.security.KeyPairGenerator: java.security.KeyPair generateKeyPair()>()

		RequiredPredicateError violating CrySL rule for java.security.KeyPairGenerator
			First parameter was not properly generated as preparedRSA
			at statement: virtualinvoke $r8.<java.security.KeyPairGenerator: void initialize(java.security.spec.AlgorithmParameterSpec)>($r7)


Findings in Java Class: sp.a

	 in Method: boolean match(java.security.cert.Certificate)
		TypestateError violating CrySL rule for java.security.MessageDigest (on Object #ccf6be00edfaf43fef45c7baaa788ef5586db89a5ee223f0292153e93ba5a077)
			Unexpected call to method <java.security.MessageDigest: byte[] digest()> on object of type java.security.MessageDigest. Expect a call to one of the following methods java.security.MessageDigest: void update(byte[],int,int),java.security.MessageDigest: void update(java.nio.ByteBuffer),java.security.MessageDigest: byte[] digest(byte[]),java.security.MessageDigest: void update(byte),java.security.MessageDigest: void update(byte[])
			at statement: $r16 = virtualinvoke $r15.<java.security.MessageDigest: byte[] digest()>()


Findings in Java Class: ob.a

	 in Method: java.lang.String i(byte[],byte[])
		RequiredPredicateError violating CrySL rule for javax.crypto.spec.SecretKeySpec
			First parameter was not properly generated as preparedKeyMaterial
			at statement: specialinvoke $r0.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r2, varReplacer74575)

		ConstraintError violating CrySL rule for javax.crypto.spec.SecretKeySpec (on Object #4d33487061bcbd34cc10449a91f0b6d96dfcb1f7f4a10d48176b2a33ec0eeaa4)
			Second parameter (with value "HmacSHA1") should be any of {AES, HmacSHA224, HmacSHA256, HmacSHA384, HmacSHA512}
			at statement: specialinvoke $r0.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r2, varReplacer74575)

		TypestateError violating CrySL rule for javax.crypto.Mac (on Object #300f37b7f6f13e9e775b8b4960f8d2c9b02c22aa84da7117f0abf3598904937f)
			Unexpected call to method <javax.crypto.Mac: byte[] doFinal(byte[])> on object of type javax.crypto.Mac. Expect a call to one of the following methods javax.crypto.Mac: void doFinal(byte[],int),javax.crypto.Mac: void update(byte[]),javax.crypto.Mac: void update(byte),javax.crypto.Mac: byte[] doFinal(),javax.crypto.Mac: void update(byte[],int,int)
			at statement: $r1 = virtualinvoke $r3.<javax.crypto.Mac: byte[] doFinal(byte[])>($r1)


Findings in Java Class: com.xiaomi.accountsdk.utils.AESCoder

	 in Method: byte[] decrypt(byte[])
		IncompleteOperationError violating CrySL rule for javax.crypto.Cipher (on Object #13347acefd604f103095d5d7c578b354be80ff571dec30389697b33e2213e2c)
			Operation on object of type javax.crypto.Cipher object not completed. Expected call to update, wrap, doFinal
			at statement: virtualinvoke $r3.<javax.crypto.Cipher: void init(int,java.security.Key,java.security.spec.AlgorithmParameterSpec)>(varReplacer77950, $r1, $r4)

		RequiredPredicateError violating CrySL rule for javax.crypto.Cipher
			Second parameter was not properly generated as generatedKey
			at statement: virtualinvoke $r3.<javax.crypto.Cipher: void init(int,java.security.Key,java.security.spec.AlgorithmParameterSpec)>(varReplacer77950, $r1, $r4)

		RequiredPredicateError violating CrySL rule for javax.crypto.spec.IvParameterSpec
			First parameter was not properly generated as randomized
			at statement: specialinvoke $r4.<javax.crypto.spec.IvParameterSpec: void <init>(byte[])>($r5)


	 in Method: byte[] encryptWithIv(byte[],byte[])
		RequiredPredicateError violating CrySL rule for javax.crypto.spec.IvParameterSpec
			First parameter was not properly generated as randomized
			at statement: specialinvoke $r1.<javax.crypto.spec.IvParameterSpec: void <init>(byte[])>($r4)

		RequiredPredicateError violating CrySL rule for javax.crypto.Cipher
			Third parameter was not properly generated as preparedIV [ with CBC, It's required to use IVParameterSpec]
			at statement: virtualinvoke $r5.<javax.crypto.Cipher: void init(int,java.security.Key,java.security.spec.AlgorithmParameterSpec)>(varReplacer67870, $r2, $r1)


Findings in Java Class: og.i

	 in Method: java.lang.String F(byte[],java.lang.String)
		ConstraintError violating CrySL rule for java.security.MessageDigest (on Object #c06798555f4be0f24203f83fce7f47c6d91f130c86f28f0beb3c0015a38de946)
			First parameter (with value "SHA-1") should be any of {SHA-256, SHA-384, SHA-512}
			at statement: $r2 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>($r1)


	 in Method: java.lang.String D(java.io.InputStream,java.lang.String)
		ConstraintError violating CrySL rule for java.security.MessageDigest (on Object #edbc5fd942e6750bb5f1c82086ef07f85768d5f57e2ae772b42d083378df1283)
			First parameter (with value "SHA-1") should be any of {SHA-256, SHA-384, SHA-512}
			at statement: $r2 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>($r1)

		TypestateError violating CrySL rule for java.security.MessageDigest (on Object #edbc5fd942e6750bb5f1c82086ef07f85768d5f57e2ae772b42d083378df1283)
			Unexpected call to method <java.security.MessageDigest: byte[] digest()> on object of type java.security.MessageDigest. Expect a call to one of the following methods java.security.MessageDigest: void update(byte[],int,int),java.security.MessageDigest: void update(java.nio.ByteBuffer),java.security.MessageDigest: byte[] digest(byte[]),java.security.MessageDigest: void update(byte),java.security.MessageDigest: void update(byte[])
			at statement: $r3 = virtualinvoke $r2.<java.security.MessageDigest: byte[] digest()>()


Findings in Java Class: com.xiaomi.accountsdk.hasheddeviceidlib.DeviceIdHasher

	 in Method: java.lang.String hashDeviceInfo(java.lang.String,int)
		ConstraintError violating CrySL rule for java.security.MessageDigest (on Object #a4fb8aaff9501996fbb47fb12ff3814b9f76b5bf32c6548e815ce65173e777fa)
			First parameter (with value "SHA1") should be any of {SHA-256, SHA-384, SHA-512}
			at statement: $r2 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer79218)


Findings in Java Class: com.google.firebase.iid.zza

	 in Method: java.security.KeyPair zzc()
		IncompleteOperationError violating CrySL rule for java.security.KeyPairGenerator (on Object #d267cc86a0d85caaa2d4218c818755200237dbd5b81f82feaea7d7ccffed75cd)
			Operation on object of type java.security.KeyPairGenerator object not completed. Expected call to genKeyPair, java.security.KeyPairGenerator: java.security.KeyPair generateKeyPair(), java.security.KeyPairGeneratorSpi: java.security.KeyPair generateKeyPair()
			at statement: $r1 = virtualinvoke $r0.<java.security.KeyPairGenerator: java.security.KeyPair generateKeyPair()>()


Findings in Java Class: com.google.common.hash.c

	 in Method: com.google.common.hash.o d(java.lang.Object,com.google.common.hash.m)
		IncompleteOperationError violating CrySL rule for javax.crypto.Mac (on Object #b27c7be48a3625bee2feb3c148e24f89f93a62b71699a7dd3d6c5d5d80456d60)
			Operation on object of type javax.crypto.Mac object not completed. Expected call to update, doFinal
			at statement: $r4 = interfaceinvoke $r3.<com.google.common.hash.q: com.google.common.hash.o o()>()

		IncompleteOperationError violating CrySL rule for java.security.MessageDigest (on Object #df06042544464ca872fee3281ea44a118606c1212a7cc38ec57e7f589064058b)
			Operation on object of type java.security.MessageDigest object not completed. Expected call to digest, update
			at statement: $r4 = interfaceinvoke $r3.<com.google.common.hash.q: com.google.common.hash.o o()>()


Findings in Java Class: com.google.common.hash.b

	 in Method: com.google.common.hash.q b()
		IncompleteOperationError violating CrySL rule for java.security.MessageDigest (on Object #df06042544464ca872fee3281ea44a118606c1212a7cc38ec57e7f589064058b)
			Operation on object of type java.security.MessageDigest object not completed. Expected call to digest, update
			at statement: $r4 = virtualinvoke r0.<com.google.common.hash.b: com.google.common.hash.q l(com.google.common.hash.q[])>($r1)

		IncompleteOperationError violating CrySL rule for javax.crypto.Mac (on Object #b27c7be48a3625bee2feb3c148e24f89f93a62b71699a7dd3d6c5d5d80456d60)
			Operation on object of type javax.crypto.Mac object not completed. Expected call to update, doFinal
			at statement: $r4 = virtualinvoke r0.<com.google.common.hash.b: com.google.common.hash.q l(com.google.common.hash.q[])>($r1)


Findings in Java Class: com.google.common.hash.z$b

	 in Method: com.google.common.hash.o o()
		TypestateError violating CrySL rule for java.security.MessageDigest (on Object #df06042544464ca872fee3281ea44a118606c1212a7cc38ec57e7f589064058b)
			Unexpected call to method <java.security.MessageDigest: byte[] digest()> on object of type java.security.MessageDigest. Expect a call to one of the following methods java.security.MessageDigest: void update(byte[],int,int),java.security.MessageDigest: void update(java.nio.ByteBuffer),java.security.MessageDigest: byte[] digest(byte[]),java.security.MessageDigest: void update(byte),java.security.MessageDigest: void update(byte[])
			at statement: $r2 = virtualinvoke $r1.<java.security.MessageDigest: byte[] digest()>()

		TypestateError violating CrySL rule for java.security.MessageDigest (on Object #df06042544464ca872fee3281ea44a118606c1212a7cc38ec57e7f589064058b)
			Unexpected call to method <java.security.MessageDigest: byte[] digest()> on object of type java.security.MessageDigest. Expect a call to one of the following methods java.security.MessageDigest: void update(byte[],int,int),java.security.MessageDigest: void update(java.nio.ByteBuffer),java.security.MessageDigest: byte[] digest(byte[]),java.security.MessageDigest: void update(byte),java.security.MessageDigest: void update(byte[])
			at statement: $r2 = virtualinvoke $r1.<java.security.MessageDigest: byte[] digest()>()


Findings in Java Class: com.xiaomi.onetrack.util.oaid.helpers.i

	 in Method: java.lang.String a(java.lang.String,android.content.Context)
		IncompleteOperationError violating CrySL rule for java.security.MessageDigest (on Object #29712d7785bfb82c880686ce9c9ba79acf1d9d06c90f19574e6b0420bae2044c)
			Operation on object of type java.security.MessageDigest object not completed. Expected call to digest, update
			at statement: $r12 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer94608)

		ConstraintError violating CrySL rule for java.security.MessageDigest (on Object #29712d7785bfb82c880686ce9c9ba79acf1d9d06c90f19574e6b0420bae2044c)
			First parameter (with value "SHA1") should be any of {SHA-256, SHA-384, SHA-512}
			at statement: $r12 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer94608)

		IncompleteOperationError violating CrySL rule for java.security.MessageDigest (on Object #29712d7785bfb82c880686ce9c9ba79acf1d9d06c90f19574e6b0420bae2044c)
			Operation on object of type java.security.MessageDigest object not completed. Expected call to update, java.security.MessageDigest: byte[] digest(byte[])
			at statement: $r11 = virtualinvoke $r12.<java.security.MessageDigest: byte[] digest(byte[])>($r11)


Findings in Java Class: com.xiaomi.onetrack.util.oaid.helpers.j

	 in Method: java.lang.String a(java.lang.String,android.content.Context)
		ConstraintError violating CrySL rule for java.security.MessageDigest (on Object #dcf503546e2711eb0a8885e21c060dd6074c3a9305787cee7d743d330c906337)
			First parameter (with value "SHA1") should be any of {SHA-256, SHA-384, SHA-512}
			at statement: $r11 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer94617)

		IncompleteOperationError violating CrySL rule for java.security.MessageDigest (on Object #dcf503546e2711eb0a8885e21c060dd6074c3a9305787cee7d743d330c906337)
			Operation on object of type java.security.MessageDigest object not completed. Expected call to digest, update
			at statement: $r11 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer94617)

		IncompleteOperationError violating CrySL rule for java.security.MessageDigest (on Object #dcf503546e2711eb0a8885e21c060dd6074c3a9305787cee7d743d330c906337)
			Operation on object of type java.security.MessageDigest object not completed. Expected call to update, java.security.MessageDigest: byte[] digest(byte[])
			at statement: $r10 = virtualinvoke $r11.<java.security.MessageDigest: byte[] digest(byte[])>($r10)


Findings in Java Class: okio.ByteString

	 in Method: okio.ByteString digest(java.lang.String)
		ConstraintError violating CrySL rule for java.security.MessageDigest (on Object #b336d574501b28a5bd90db22472c23a68acb0c1b99c4f14746fdc2a23c69a24e)
			First parameter (with value "SHA-1") should be any of {SHA-256, SHA-384, SHA-512}
			at statement: $r2 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>($r1)

		ConstraintError violating CrySL rule for java.security.MessageDigest (on Object #b336d574501b28a5bd90db22472c23a68acb0c1b99c4f14746fdc2a23c69a24e)
			First parameter (with value "MD5") should be any of {SHA-256, SHA-384, SHA-512}
			at statement: $r2 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>($r1)


Findings in Java Class: com.xiaomi.ai.utils.g

	 in Method: java.lang.String a(java.lang.String,byte[])
		ConstraintError violating CrySL rule for java.security.MessageDigest (on Object #1a48b0d7eb96a77c72e3b9b44c62f7d34720fe2d04beae266e5057912a13534)
			First parameter (with value "SHA-1") should be any of {SHA-256, SHA-384, SHA-512}
			at statement: $r2 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>($r1)

		ConstraintError violating CrySL rule for java.security.MessageDigest (on Object #1a48b0d7eb96a77c72e3b9b44c62f7d34720fe2d04beae266e5057912a13534)
			First parameter (with value "MD5") should be any of {SHA-256, SHA-384, SHA-512}
			at statement: $r2 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>($r1)


Findings in Java Class: com.xiaomi.mitv.socialtv.common.utils.SignatureUtil

	 in Method: java.lang.String getSignature(byte[],byte[])
		TypestateError violating CrySL rule for javax.crypto.Mac (on Object #80f780a2a526f5ff4a6094f843acdae3903eedc91de87d86e93036cdd2690b45)
			Unexpected call to method <javax.crypto.Mac: byte[] doFinal(byte[])> on object of type javax.crypto.Mac. Expect a call to one of the following methods javax.crypto.Mac: void doFinal(byte[],int),javax.crypto.Mac: void update(byte[]),javax.crypto.Mac: void update(byte),javax.crypto.Mac: byte[] doFinal(),javax.crypto.Mac: void update(byte[],int,int)
			at statement: $r1 = virtualinvoke $r3.<javax.crypto.Mac: byte[] doFinal(byte[])>($r1)

		ConstraintError violating CrySL rule for javax.crypto.spec.SecretKeySpec (on Object #46abe97dedcbc4dea1083058dca25c9e3fd0b5162a970a51ae5049942c26c05e)
			Second parameter (with value "HmacSHA1") should be any of {AES, HmacSHA224, HmacSHA256, HmacSHA384, HmacSHA512}
			at statement: specialinvoke $r0.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r2, varReplacer97040)

		RequiredPredicateError violating CrySL rule for javax.crypto.spec.SecretKeySpec
			First parameter was not properly generated as preparedKeyMaterial
			at statement: specialinvoke $r0.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r2, varReplacer97040)


Findings in Java Class: rg.f

	 in Method: javax.net.ssl.SSLSocketFactory a(rg.g)
		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			First parameter was not properly generated as generatedKeyManagers
			at statement: virtualinvoke $r1.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>(varReplacer107129, $r8, varReplacer107129)

		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			Second parameter was not properly generated as generatedTrustManagers
			at statement: virtualinvoke $r1.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>(varReplacer107129, $r8, varReplacer107129)

		ConstraintError violating CrySL rule for javax.net.ssl.SSLContext (on Object #8aec640abd88084bf65b62261565910a19facd0fa9b46ee4b6f4f5d7f7c799e5)
			First parameter (with value "TLS") should be any of {TLSv1.2}
			at statement: $r1 = staticinvoke <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String)>(varReplacer107131)

		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			Third parameter was not properly generated as randomized
			at statement: virtualinvoke $r1.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>(varReplacer107129, $r8, varReplacer107129)


Findings in Java Class: rg.i

	 in Method: java.security.KeyStore b(java.io.InputStream,java.lang.String)
		ConstraintError violating CrySL rule for java.security.KeyStore (on Object #155f2774dd717651d09a0f30cdb4f7695f3ceb6f78e87e107fb04705effb67a4)
			First parameter (with value "BKS") should be any of {JCEKS, JKS, DKS, PKCS11, PKCS12}
			at statement: $r4 = staticinvoke <java.security.KeyStore: java.security.KeyStore getInstance(java.lang.String)>(varReplacer114465)

		NeverTypeOfError violating CrySL rule for java.security.KeyStore (on Object #155f2774dd717651d09a0f30cdb4f7695f3ceb6f78e87e107fb04705effb67a4)
			Second parameter should never be of type java.lang.String.
			at statement: virtualinvoke $r4.<java.security.KeyStore: void load(java.io.InputStream,char[])>($r1, $r5)

		HardCodedError violating CrySL rule for java.security.KeyStore (on Object #155f2774dd717651d09a0f30cdb4f7695f3ceb6f78e87e107fb04705effb67a4)
			Second parameter should never be hardcoded.
			at statement: virtualinvoke $r4.<java.security.KeyStore: void load(java.io.InputStream,char[])>($r1, $r5)


Findings in Java Class: rg.h

	 in Method: javax.net.ssl.TrustManager[] d(rg.i)
		ConstraintError violating CrySL rule for javax.net.ssl.TrustManagerFactory (on Object #aa8a201e001b3a88b6de0ede828679354d22097fb28caf8a2d68aded475a23c7)
			First parameter (with value "X509") should be any of {PKIX, SunX509}
			at statement: $r2 = staticinvoke <javax.net.ssl.TrustManagerFactory: javax.net.ssl.TrustManagerFactory getInstance(java.lang.String)>(varReplacer114466)

		RequiredPredicateError violating CrySL rule for javax.net.ssl.TrustManagerFactory
			First parameter was not properly generated as generatedKeyStore
			at statement: virtualinvoke $r2.<javax.net.ssl.TrustManagerFactory: void init(java.security.KeyStore)>($r3)


Findings in Java Class: y8.b

	 in Method: byte[] a(java.lang.String,int)
		RequiredPredicateError violating CrySL rule for javax.crypto.spec.SecretKeySpec
			First parameter was not properly generated as preparedKeyMaterial
			at statement: specialinvoke $r9.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r10, varReplacer115791)

		RequiredPredicateError violating CrySL rule for javax.crypto.Mac
			First parameter was not properly generated as generatedKey
			at statement: virtualinvoke $r8.<javax.crypto.Mac: void init(java.security.Key)>($r9)

		TypestateError violating CrySL rule for javax.crypto.Mac (on Object #3da33727922a6445c2b95a64265189dc51b857db62cd698ea911dd89a1d26fa3)
			Unexpected call to method <javax.crypto.Mac: byte[] doFinal(byte[])> on object of type javax.crypto.Mac. Expect a call to one of the following methods javax.crypto.Mac: void doFinal(byte[],int),javax.crypto.Mac: void update(byte[]),javax.crypto.Mac: void update(byte),javax.crypto.Mac: byte[] doFinal(),javax.crypto.Mac: void update(byte[],int,int)
			at statement: $r10 = virtualinvoke $r8.<javax.crypto.Mac: byte[] doFinal(byte[])>($r7)

		RequiredPredicateError violating CrySL rule for java.security.Signature
			First parameter was not properly generated as generatedPrivkey
			at statement: virtualinvoke $r6.<java.security.Signature: void initSign(java.security.PrivateKey)>($r5)


	 in Method: java.security.KeyStore h()
		ConstraintError violating CrySL rule for java.security.KeyStore (on Object #8217830f7779fd225b15538f9f1caa9b92bcc5aafe7abdfc220c1d0d9dc78b35)
			First parameter (with value "AndroidKeyStore") should be any of {JCEKS, JKS, DKS, PKCS11, PKCS12}
			at statement: $r1 = staticinvoke <java.security.KeyStore: java.security.KeyStore getInstance(java.lang.String)>(varReplacer118029)


	 in Method: void e(android.content.Context,int,java.lang.String,java.util.Date,java.util.Date,int,boolean)
		IncompleteOperationError violating CrySL rule for java.security.KeyPairGenerator (on Object #6e455c01d1150be332dc9dd98c052c8f618a83e837091fbc2469be6c3ecb239a)
			Operation on object of type java.security.KeyPairGenerator object not completed. Expected call to genKeyPair, java.security.KeyPairGenerator: java.security.KeyPair generateKeyPair(), java.security.KeyPairGeneratorSpi: java.security.KeyPair generateKeyPair()
			at statement: virtualinvoke $r11.<java.security.KeyPairGenerator: java.security.KeyPair generateKeyPair()>()


Findings in Java Class: qm.c

	 in Method: byte[] h(byte[],int,int)
		TypestateError violating CrySL rule for java.security.SecureRandom (on Object #f441a70e7f1628771f6766cc806eae55ee7fffa7dc64e1480c4862f6933e09ef)
			Unexpected call to method nextInt on object of type java.security.SecureRandom. Expect a call to one of the following methods init,getInstanceStrong,getInstance
			at statement: $i4 = virtualinvoke $r4.<java.util.Random: int nextInt()>()

		TypestateError violating CrySL rule for java.security.SecureRandom (on Object #f441a70e7f1628771f6766cc806eae55ee7fffa7dc64e1480c4862f6933e09ef)
			Unexpected call to method nextBytes on object of type java.security.SecureRandom. Expect a call to one of the following methods init,getInstanceStrong,getInstance
			at statement: virtualinvoke $r4.<java.security.SecureRandom: void nextBytes(byte[])>($r1)


	 in Method: byte[] g(byte[],int,int)
		TypestateError violating CrySL rule for java.security.SecureRandom (on Object #f441a70e7f1628771f6766cc806eae55ee7fffa7dc64e1480c4862f6933e09ef)
			Unexpected call to method nextBytes on object of type java.security.SecureRandom. Expect a call to one of the following methods init,getInstanceStrong,getInstance
			at statement: virtualinvoke $r4.<java.security.SecureRandom: void nextBytes(byte[])>($r3)


Findings in Java Class: pn.h$a

	 in Method: java.security.KeyPair generateKeyPair()
		RequiredPredicateError violating CrySL rule for java.security.KeyPair
			Second parameter was not properly generated as generatedPrivkey
			at statement: specialinvoke $r12.<java.security.KeyPair: void <init>(java.security.PublicKey,java.security.PrivateKey)>($r9, $r13)

		RequiredPredicateError violating CrySL rule for java.security.KeyPair
			First parameter was not properly generated as generatedPubkey
			at statement: specialinvoke $r12.<java.security.KeyPair: void <init>(java.security.PublicKey,java.security.PrivateKey)>($r9, $r13)


Findings in Java Class: qn.d

	 in Method: java.security.KeyPair generateKeyPair()
		RequiredPredicateError violating CrySL rule for java.security.KeyPair
			First parameter was not properly generated as generatedPubkey
			at statement: specialinvoke $r10.<java.security.KeyPair: void <init>(java.security.PublicKey,java.security.PrivateKey)>($r8, $r11)

		RequiredPredicateError violating CrySL rule for java.security.KeyPair
			Second parameter was not properly generated as generatedPrivkey
			at statement: specialinvoke $r10.<java.security.KeyPair: void <init>(java.security.PublicKey,java.security.PrivateKey)>($r8, $r11)


Findings in Java Class: yb.b

	 in Method: java.security.PublicKey d(java.lang.String)
		RequiredPredicateError violating CrySL rule for java.security.KeyFactory
			First parameter was not properly generated as speccedKey
			at statement: $r4 = virtualinvoke $r3.<java.security.KeyFactory: java.security.PublicKey generatePublic(java.security.spec.KeySpec)>($r2)

		RequiredPredicateError violating CrySL rule for java.security.spec.X509EncodedKeySpec
			First parameter was not properly generated as preparedKeyMaterial
			at statement: specialinvoke $r2.<java.security.spec.X509EncodedKeySpec: void <init>(byte[])>($r1)


	 in Method: java.lang.String b(byte[])
		RequiredPredicateError violating CrySL rule for javax.crypto.Cipher
			Second parameter was not properly generated as generatedKey
			at statement: virtualinvoke $r5.<javax.crypto.Cipher: void init(int,java.security.Key)>(varReplacer6725, $r3)


Findings in Java Class: lo.s0

	 in Method: void i(java.security.PublicKey,java.security.Signature)
		RequiredPredicateError violating CrySL rule for java.security.Signature
			First parameter was not properly generated as generatedPubkey
			at statement: virtualinvoke $r2.<java.security.Signature: void initVerify(java.security.PublicKey)>($r1)


Findings in Java Class: com.xiaomi.onetrack.d.e

	 in Method: java.security.interfaces.RSAPublicKey a(java.lang.String)
		RequiredPredicateError violating CrySL rule for java.security.KeyFactory
			First parameter was not properly generated as speccedKey
			at statement: $r4 = virtualinvoke $r1.<java.security.KeyFactory: java.security.PublicKey generatePublic(java.security.spec.KeySpec)>($r2)

		RequiredPredicateError violating CrySL rule for java.security.spec.X509EncodedKeySpec
			First parameter was not properly generated as preparedKeyMaterial
			at statement: specialinvoke $r2.<java.security.spec.X509EncodedKeySpec: void <init>(byte[])>($r3)


	 in Method: byte[] a(byte[])
		RequiredPredicateError violating CrySL rule for javax.crypto.Cipher
			Second parameter was not properly generated as generatedKey
			at statement: virtualinvoke $r2.<javax.crypto.Cipher: void init(int,java.security.Key)>(varReplacer69943, $r1)


Findings in Java Class: wn.h

	 in Method: void h(java.security.PublicKey,java.security.Signature)
		RequiredPredicateError violating CrySL rule for java.security.Signature
			First parameter was not properly generated as generatedPubkey
			at statement: virtualinvoke $r2.<java.security.Signature: void initVerify(java.security.PublicKey)>($r1)


Findings in Java Class: nn.h

	 in Method: java.security.KeyPair generateKeyPair()
		RequiredPredicateError violating CrySL rule for java.security.KeyPair
			Second parameter was not properly generated as generatedPrivkey
			at statement: specialinvoke $r10.<java.security.KeyPair: void <init>(java.security.PublicKey,java.security.PrivateKey)>($r11, $r12)

		RequiredPredicateError violating CrySL rule for java.security.KeyPair
			First parameter was not properly generated as generatedPubkey
			at statement: specialinvoke $r10.<java.security.KeyPair: void <init>(java.security.PublicKey,java.security.PrivateKey)>($r11, $r12)


Findings in Java Class: fp.j$b

	 in Method: java.security.KeyPair generateKeyPair()
		RequiredPredicateError violating CrySL rule for java.security.KeyPair
			Second parameter was not properly generated as generatedPrivkey
			at statement: specialinvoke $r1.<java.security.KeyPair: void <init>(java.security.PublicKey,java.security.PrivateKey)>($r2, $r8)

		RequiredPredicateError violating CrySL rule for java.security.KeyPair
			First parameter was not properly generated as generatedPubkey
			at statement: specialinvoke $r1.<java.security.KeyPair: void <init>(java.security.PublicKey,java.security.PrivateKey)>($r2, $r8)


Findings in Java Class: com.xiaomi.accountsdk.logger.EncryptLogSender

	 in Method: java.lang.String encryptString(java.lang.String,byte[])
		RequiredPredicateError violating CrySL rule for javax.crypto.Cipher
			Third parameter was not properly generated as preparedIV [ with CBC, It's required to use IVParameterSpec]
			at statement: virtualinvoke $r5.<javax.crypto.Cipher: void init(int,java.security.Key,java.security.spec.AlgorithmParameterSpec)>(varReplacer52968, $r1, $r2)

		RequiredPredicateError violating CrySL rule for javax.crypto.Cipher
			Second parameter was not properly generated as generatedKey
			at statement: virtualinvoke $r5.<javax.crypto.Cipher: void init(int,java.security.Key,java.security.spec.AlgorithmParameterSpec)>(varReplacer52968, $r1, $r2)

		RequiredPredicateError violating CrySL rule for javax.crypto.spec.IvParameterSpec
			First parameter was not properly generated as randomized
			at statement: specialinvoke $r2.<javax.crypto.spec.IvParameterSpec: void <init>(byte[])>($r4)


Findings in Java Class: com.google.firebase.iid.zzy

	 in Method: java.security.KeyPair zzc(java.lang.String,java.lang.String)
		RequiredPredicateError violating CrySL rule for java.security.KeyFactory
			First parameter was not properly generated as speccedKey
			at statement: $r6 = virtualinvoke $r4.<java.security.KeyFactory: java.security.PublicKey generatePublic(java.security.spec.KeySpec)>($r5)

		RequiredPredicateError violating CrySL rule for java.security.KeyPair
			First parameter was not properly generated as generatedPubkey
			at statement: specialinvoke $r14.<java.security.KeyPair: void <init>(java.security.PublicKey,java.security.PrivateKey)>($r6, $r8)

		RequiredPredicateError violating CrySL rule for java.security.spec.X509EncodedKeySpec
			First parameter was not properly generated as preparedKeyMaterial
			at statement: specialinvoke $r12.<java.security.spec.X509EncodedKeySpec: void <init>(byte[])>($r2)

		RequiredPredicateError violating CrySL rule for java.security.KeyPair
			Second parameter was not properly generated as generatedPrivkey
			at statement: specialinvoke $r14.<java.security.KeyPair: void <init>(java.security.PublicKey,java.security.PrivateKey)>($r6, $r8)


Findings in Java Class: sn.f

	 in Method: java.security.KeyPair generateKeyPair()
		RequiredPredicateError violating CrySL rule for java.security.KeyPair
			Second parameter was not properly generated as generatedPrivkey
			at statement: specialinvoke $r1.<java.security.KeyPair: void <init>(java.security.PublicKey,java.security.PrivateKey)>($r2, $r12)

		RequiredPredicateError violating CrySL rule for java.security.KeyPair
			First parameter was not properly generated as generatedPubkey
			at statement: specialinvoke $r1.<java.security.KeyPair: void <init>(java.security.PublicKey,java.security.PrivateKey)>($r2, $r12)


Findings in Java Class: wn.i

	 in Method: void c(java.security.Signature,org.spongycastle.asn1.f)
		RequiredPredicateError violating CrySL rule for java.security.AlgorithmParameters
			First parameter was not properly generated as preparedAlg
			at statement: virtualinvoke $r5.<java.security.AlgorithmParameters: void init(byte[])>($r7)


Findings in Java Class: yb.a

	 in Method: java.lang.String b(java.lang.String,byte[],byte[])
		RequiredPredicateError violating CrySL rule for javax.crypto.Cipher
			Second parameter was not properly generated as generatedKey
			at statement: virtualinvoke $r5.<javax.crypto.Cipher: void init(int,java.security.Key,java.security.spec.AlgorithmParameterSpec)>(varReplacer6720, $r4, $r0)

		RequiredPredicateError violating CrySL rule for javax.crypto.Cipher
			Third parameter was not properly generated as preparedIV [ with CBC, It's required to use IVParameterSpec]
			at statement: virtualinvoke $r5.<javax.crypto.Cipher: void init(int,java.security.Key,java.security.spec.AlgorithmParameterSpec)>(varReplacer6720, $r4, $r0)

		RequiredPredicateError violating CrySL rule for javax.crypto.spec.IvParameterSpec
			First parameter was not properly generated as randomized
			at statement: specialinvoke $r0.<javax.crypto.spec.IvParameterSpec: void <init>(byte[])>($r3)

		RequiredPredicateError violating CrySL rule for javax.crypto.spec.SecretKeySpec
			First parameter was not properly generated as preparedKeyMaterial
			at statement: specialinvoke $r4.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r2, varReplacer6719)


Findings in Java Class: com.google.common.hash.y

	 in Method: javax.crypto.Mac l(java.lang.String,java.security.Key)
		RequiredPredicateError violating CrySL rule for javax.crypto.Mac
			First parameter was not properly generated as generatedKey
			at statement: virtualinvoke $r0.<javax.crypto.Mac: void init(java.security.Key)>($r2)


Findings in Java Class: lo.u0

	 in Method: void c(java.security.Signature,org.spongycastle.asn1.f)
		RequiredPredicateError violating CrySL rule for java.security.AlgorithmParameters
			First parameter was not properly generated as preparedAlg
			at statement: virtualinvoke $r5.<java.security.AlgorithmParameters: void init(byte[])>($r7)


Findings in Java Class: on.d

	 in Method: java.security.KeyPair generateKeyPair()
		RequiredPredicateError violating CrySL rule for java.security.KeyPair
			Second parameter was not properly generated as generatedPrivkey
			at statement: specialinvoke $r10.<java.security.KeyPair: void <init>(java.security.PublicKey,java.security.PrivateKey)>($r8, $r11)

		RequiredPredicateError violating CrySL rule for java.security.KeyPair
			First parameter was not properly generated as generatedPubkey
			at statement: specialinvoke $r10.<java.security.KeyPair: void <init>(java.security.PublicKey,java.security.PrivateKey)>($r8, $r11)


Findings in Java Class: mn.h

	 in Method: java.security.KeyPair generateKeyPair()
		RequiredPredicateError violating CrySL rule for java.security.KeyPair
			First parameter was not properly generated as generatedPubkey
			at statement: specialinvoke $r19.<java.security.KeyPair: void <init>(java.security.PublicKey,java.security.PrivateKey)>($r20, $r21)

		RequiredPredicateError violating CrySL rule for java.security.KeyPair
			Second parameter was not properly generated as generatedPrivkey
			at statement: specialinvoke $r19.<java.security.KeyPair: void <init>(java.security.PublicKey,java.security.PrivateKey)>($r20, $r21)


Findings in Java Class: gp.d

	 in Method: java.security.KeyPair generateKeyPair()
		RequiredPredicateError violating CrySL rule for java.security.KeyPair
			First parameter was not properly generated as generatedPubkey
			at statement: specialinvoke $r11.<java.security.KeyPair: void <init>(java.security.PublicKey,java.security.PrivateKey)>($r12, $r13)

		RequiredPredicateError violating CrySL rule for java.security.KeyPair
			Second parameter was not properly generated as generatedPrivkey
			at statement: specialinvoke $r11.<java.security.KeyPair: void <init>(java.security.PublicKey,java.security.PrivateKey)>($r12, $r13)


Findings in Java Class: rn.h

	 in Method: java.security.KeyPair generateKeyPair()
		RequiredPredicateError violating CrySL rule for java.security.KeyPair
			First parameter was not properly generated as generatedPubkey
			at statement: specialinvoke $r14.<java.security.KeyPair: void <init>(java.security.PublicKey,java.security.PrivateKey)>($r15, $r16)

		RequiredPredicateError violating CrySL rule for java.security.KeyPair
			Second parameter was not properly generated as generatedPrivkey
			at statement: specialinvoke $r14.<java.security.KeyPair: void <init>(java.security.PublicKey,java.security.PrivateKey)>($r15, $r16)


Findings in Java Class: fp.j$a

	 in Method: java.security.KeyPair generateKeyPair()
		RequiredPredicateError violating CrySL rule for java.security.KeyPair
			Second parameter was not properly generated as generatedPrivkey
			at statement: specialinvoke $r1.<java.security.KeyPair: void <init>(java.security.PublicKey,java.security.PrivateKey)>($r2, $r8)

		RequiredPredicateError violating CrySL rule for java.security.KeyPair
			First parameter was not properly generated as generatedPubkey
			at statement: specialinvoke $r1.<java.security.KeyPair: void <init>(java.security.PublicKey,java.security.PrivateKey)>($r2, $r8)


Findings in Java Class: un.i

	 in Method: java.security.KeyPair generateKeyPair()
		RequiredPredicateError violating CrySL rule for java.security.KeyPair
			Second parameter was not properly generated as generatedPrivkey
			at statement: specialinvoke $r1.<java.security.KeyPair: void <init>(java.security.PublicKey,java.security.PrivateKey)>($r2, $r8)

		RequiredPredicateError violating CrySL rule for java.security.KeyPair
			First parameter was not properly generated as generatedPubkey
			at statement: specialinvoke $r1.<java.security.KeyPair: void <init>(java.security.PublicKey,java.security.PrivateKey)>($r2, $r8)


======================= CryptoAnalysis Summary ==========================
	Number of CrySL rules: 47
	Number of Objects Analyzed: 383

	CryptoAnalysis found the following violations. For details see description above.
	RequiredPredicateError: 98
	IncompleteOperationError: 27
	TypestateError: 12
	NeverTypeOfError: 1
	HardCodedError: 1
	ConstraintError: 55
=====================================================================
