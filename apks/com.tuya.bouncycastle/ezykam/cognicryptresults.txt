SLF4J: Failed to load class "org.slf4j.impl.StaticLoggerBinder".
SLF4J: Defaulting to no-operation (NOP) logger implementation
SLF4J: See http://www.slf4j.org/codes.html#StaticLoggerBinder for further details.
0    [main] WARN  pes.access.impl.DeclaredTypeFactory  - --- xtext.common.types ---------------------------------------------------
0    [main] WARN  pes.access.impl.DeclaredTypeFactory  - ASM library is too old. Falling back to java.lang.reflect API.
0    [main] WARN  pes.access.impl.DeclaredTypeFactory  - Please note that no information about compile time constants is available.
0    [main] WARN  pes.access.impl.DeclaredTypeFactory  - It's recommended to use org.objectweb.asm 9.3.0 or better (Maven group id: org.ow2.asm).
0    [main] WARN  pes.access.impl.DeclaredTypeFactory  - --------------------------------------------------------------------------
Alive 24354  5000
Alive 30827  5000
Alive 42903  5000
Alive 41733  5000
Alive 60849  5000
Alive 72869  5000
Ruleset: 
	javax.net.ssl.KeyStoreBuilderParameters
	javax.crypto.spec.PBEKeySpec
	java.security.spec.MGF1ParameterSpec
	java.security.MessageDigest
	javax.crypto.Cipher
	java.security.KeyPair
	javax.crypto.SecretKeyFactory
	java.security.cert.PKIXBuilderParameters
	javax.crypto.SecretKey
	javax.crypto.spec.IvParameterSpec
	javax.crypto.spec.PBEParameterSpec
	javax.net.ssl.TrustManagerFactory
	javax.crypto.spec.GCMParameterSpec
	javax.crypto.spec.SecretKeySpec
	javax.net.ssl.CertPathTrustManagerParameters
	java.security.spec.DSAParameterSpec
	javax.crypto.KeyAgreement
	java.security.cert.TrustAnchor
	javax.crypto.spec.DHParameterSpec
	javax.net.ssl.SSLParameters
	javax.net.ssl.SSLContext
	java.security.Key
	java.security.KeyFactory
	void
	java.security.DigestOutputStream
	java.security.SecureRandom
	java.security.cert.PKIXParameters
	java.security.spec.X509EncodedKeySpec
	javax.crypto.spec.DHGenParameterSpec
	javax.net.ssl.SSLEngine
	java.security.spec.RSAKeyGenParameterSpec
	java.security.Signature
	javax.crypto.CipherOutputStream
	javax.xml.crypto.dsig.spec.HMACParameterSpec
	java.security.AlgorithmParameterGenerator
	javax.crypto.Mac
	javax.crypto.spec.OAEPParameterSpec
	java.security.AlgorithmParameters
	javax.crypto.CipherInputStream
	java.security.DigestInputStream
	java.security.spec.ECParameterSpec
	javax.crypto.KeyGenerator
	java.security.KeyStore
	java.security.spec.ECGenParameterSpec
	java.security.KeyPairGenerator
	javax.net.ssl.KeyManagerFactory
	java.security.spec.DSAGenParameterSpec

Analyzed Objects: 
	Object:
		Variable: $r2
		Type: java.security.spec.ECGenParameterSpec
		Statement: specialinvoke $r2.<java.security.spec.ECGenParameterSpec: void <init>(java.lang.String)>(varReplacer1886421)
		Method: <com.tuya.bouncycastle.jcajce.provider.asymmetric.ec.KeyPairGeneratorSpi$EC: void <clinit>()>
		SHA-256: 47c7c4fd20885526481a83d59d18d53b4fa23cdd097480513c8a461ed91db3f4
		Secure: true
	Object:
		Variable: $r7
		Type: javax.net.ssl.SSLContext
		Statement: $r7 = staticinvoke <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String,java.lang.String)>($r4, $r3)
		Method: <com.tuya.smart.mqttclient.mqttv3.internal.security.SSLSocketFactoryFactory: javax.net.ssl.SSLContext getSSLContext(java.lang.String)>
		SHA-256: 2de0dbcb962ff3cb3e0d9dc8e9469638e8762c9aa5d9bef5cf875912fda1093
		Secure: false
	Object:
		Variable: $r9
		Type: javax.crypto.spec.IvParameterSpec
		Statement: specialinvoke $r9.<javax.crypto.spec.IvParameterSpec: void <init>(byte[])>($r1)
		Method: <gjc: javax.crypto.Cipher a(byte[],java.lang.String,int)>
		SHA-256: 6a5f48ab9af9c14fcce491197aef478d7140421b1c7fbaceb567907197b22cd4
		Secure: false
	Object:
		Variable: $r2
		Type: byte[]
		Statement: $r2 = interfaceinvoke $r6.<javax.crypto.SecretKey: byte[] getEncoded()>()
		Method: <com.tuya.sdk.security.EncryptionManager: boolean bdpdqbp(android.content.SharedPreferences,byte[])>
		SHA-256: c1120bdf083638a0aa03dd9c637ff45a6302f57c0b8b082041d4bacad8c42d1d
		Secure: true
	Object:
		Variable: $r1
		Type: java.lang.String
		Statement: $r3 = staticinvoke <java.security.KeyFactory: java.security.KeyFactory getInstance(java.lang.String)>($r1)
		Method: <com.tuya.smart.android.common.utils.RSAUtil: java.security.interfaces.RSAPublicKey generateRSAPublicKey(java.lang.String,java.math.BigInteger,java.math.BigInteger)>
		SHA-256: a980fbed0fc2c6bee5aab6d539980b146dbcbfc07039111d6643775170472c91
		Secure: false
	Object:
		Variable: $r1
		Type: javax.net.ssl.SSLContext
		Statement: $r1 = staticinvoke <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String)>(varReplacer1960346)
		Method: <com.facebook.react.modules.network.TLSSocketFactory: void <init>()>
		SHA-256: ca1caaef4e4cb07ebfa55fd19bcd8d3983a2e97876e907237ad15e6218cff5c1
		Secure: false
	Object:
		Variable: r0
		Type: com.tuya.bouncycastle.jce.spec.ECNamedCurveSpec
		Statement: specialinvoke r0.<java.security.spec.ECParameterSpec: void <init>(java.security.spec.EllipticCurve,java.security.spec.ECPoint,java.math.BigInteger,int)>($r7, $r8, $r2, $i0)
		Method: <com.tuya.bouncycastle.jce.spec.ECNamedCurveSpec: void <init>(java.lang.String,com.tuya.bouncycastle.math.ec.ECCurve,com.tuya.bouncycastle.math.ec.ECPoint,java.math.BigInteger,java.math.BigInteger,byte[])>
		SHA-256: bcf570b34f8a17ec2bf4d52452528fe052d0e6bfbcbc0e9448c15568d3730cec
		Secure: true
	Object:
		Variable: $r2
		Type: javax.crypto.Cipher
		Statement: $r2 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>($r3)
		Method: <com.amazon.identity.auth.device.datastore.AESEncryptor: javax.crypto.Cipher createRSACipher(int,java.lang.String,java.security.Key)>
		SHA-256: b82e9385bfb41a5c7d5e9ff715c3efff421dbd6ae9f68ef8c7b60fb635946552
		Secure: false
	Object:
		Variable: $r2
		Type: java.security.MessageDigest
		Statement: $r2 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer1302182)
		Method: <dnk: java.lang.String b(java.lang.String)>
		SHA-256: f6ce8a46a8a667c4e026ad79f988da762fd8c470fcffaa3caa7189504700e8b7
		Secure: false
	Object:
		Variable: $r2
		Type: java.lang.String
		Statement: specialinvoke $r0.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r4, $r2)
		Method: <dnc: byte[] a(byte[],java.lang.String)>
		SHA-256: 787a94e15a785bbd5b09860cb49f17dc5ea760ae00d5482965ececb13391ef80
		Secure: false
	Object:
		Variable: r0
		Type: com.tuya.bouncycastle.jce.spec.ECNamedCurveSpec
		Statement: specialinvoke r0.<java.security.spec.ECParameterSpec: void <init>(java.security.spec.EllipticCurve,java.security.spec.ECPoint,java.math.BigInteger,int)>($r5, $r6, $r2, varReplacer1662900)
		Method: <com.tuya.bouncycastle.jce.spec.ECNamedCurveSpec: void <init>(java.lang.String,com.tuya.bouncycastle.math.ec.ECCurve,com.tuya.bouncycastle.math.ec.ECPoint,java.math.BigInteger)>
		SHA-256: 1d6beaad8634064105491527b6720e1fa41687b73c17090e7c9a989022e6d54
		Secure: true
	Object:
		Variable: $r3
		Type: javax.crypto.Cipher
		Statement: $r3 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer2898855)
		Method: <hhn: java.lang.String a(java.lang.String)>
		SHA-256: 7a55dab8f5262fcd8c2d8384deed9751fd47e761ea20df551c4ee12417b3db0
		Secure: false
	Object:
		Variable: $r1
		Type: java.security.MessageDigest
		Statement: $r1 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer2280778)
		Method: <com.tuya.smart.android.common.utils.SHA256Util: java.lang.String getBase64Hash(java.lang.String)>
		SHA-256: be6ea99c9d8d8ff2c96ce83f695760c2f864241d24abcfc44c8fbb15c138226
		Secure: true
	Object:
		Variable: $r2
		Type: java.security.KeyPairGenerator
		Statement: $r2 = staticinvoke <java.security.KeyPairGenerator: java.security.KeyPairGenerator getInstance(java.lang.String,java.lang.String)>(varReplacer3080237, varReplacer3080238)
		Method: <com.tuya.sdk.bluetooth.dbqpdqd: void bppdpdq()>
		SHA-256: 548c18d85cc49511739eafc20ec757d311a0a3dc8fcc9a581e66e5b26e2402cc
		Secure: false
	Object:
		Variable: $r2
		Type: javax.net.ssl.SSLContext
		Statement: $r2 = staticinvoke <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String)>(varReplacer2967002)
		Method: <com.tuya.sdk.mqtt.dqdbbqp: javax.net.ssl.SSLSocketFactory bdpdqbp(javax.net.ssl.X509TrustManager)>
		SHA-256: 336abbafbf73d2c18cae006410d1f1dc226ccc07e4a6ab7d44a1c3caef2126b0
		Secure: false
	Object:
		Variable: $r4
		Type: javax.crypto.spec.PBEKeySpec
		Statement: specialinvoke $r4.<javax.crypto.spec.PBEKeySpec: void <init>(char[],byte[],int,int)>($r5, $r3, $i0, varReplacer1044816)
		Method: <cgz: cgz$a b(android.content.Context)>
		SHA-256: 60903a878d2d3afaeed0ba233efff31286f0610f6d3c3184d584203763e21716
		Secure: false
	Object:
		Variable: $r5
		Type: byte[]
		Statement: $r5 = virtualinvoke $r4.<java.security.MessageDigest: byte[] digest(byte[])>($r5)
		Method: <buy: java.lang.String a()>
		SHA-256: c46f0bf18f3a46a19155df3f2e58ece78d4a693c16f8fdacb0182679cc2744df
		Secure: false
	Object:
		Variable: $r2
		Type: java.security.SecureRandom
		Statement: specialinvoke $r2.<java.security.SecureRandom: void <init>()>()
		Method: <com.tuya.smart.camera.push.TuyaCameraService: void a(android.content.Intent)>
		SHA-256: 3bafcbaf94fe7d0c60fe3d5b557504c91e97b774f4af4d6e47a5bc3a55ea30ab
		Secure: true
	Object:
		Variable: $r9
		Type: javax.crypto.spec.GCMParameterSpec
		Statement: specialinvoke $r9.<javax.crypto.spec.GCMParameterSpec: void <init>(int,byte[])>(varReplacer2114927, $r3)
		Method: <com.tuya.smart.android.common.utils.AesGcmUtil: byte[] decryptBytes2Bytes(byte[],byte[],byte[],byte[])>
		SHA-256: 655fdfb4ba6c0397c5b67afd512e8cb674025ff971527494fba170cc9eee054b
		Secure: false
	Object:
		Variable: $r0
		Type: java.security.KeyFactory
		Statement: $r0 = staticinvoke <java.security.KeyFactory: java.security.KeyFactory getInstance(java.lang.String)>(varReplacer2699044)
		Method: <bmt: java.security.KeyFactory a()>
		SHA-256: 64087bc94154329cce07dd7cf7879fea1bbe7fa7b4419370e0e14ed761fd6560
		Secure: false
	Object:
		Variable: varReplacer1084155
		Type: java.lang.String
		Statement: $r3 = staticinvoke <java.security.KeyFactory: java.security.KeyFactory getInstance(java.lang.String)>(varReplacer1084155)
		Method: <com.tuya.smart.android.network.util.ECDHEngine: byte[] ecdhKey(java.lang.String,java.lang.String)>
		SHA-256: 6c4aa2faca2b9d6fcff2b1b5f5a5def0bd47acae32e9af0e40a827d5a0cbc0ab
		Secure: false
	Object:
		Variable: $r1
		Type: byte[]
		Statement: $r1 = virtualinvoke $r5.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r0)
		Method: <com.tuya.sdk.bluetooth.bddqpdp: byte[] bdpdqbp(byte[],byte[],byte[])>
		SHA-256: ce408b7f0325e34911a0e118c6a0bcfe01d2d8390bcd916b428d3899f190896d
		Secure: false
	Object:
		Variable: $r2
		Type: java.security.KeyPairGenerator
		Statement: $r2 = staticinvoke <java.security.KeyPairGenerator: java.security.KeyPairGenerator getInstance(java.lang.String)>(varReplacer748772)
		Method: <com.tuya.smart.android.network.util.ECDHEngine: com.tuya.smart.android.network.util.ECDHEngine$KeyEntity generateKeyPair(java.lang.String)>
		SHA-256: c0696727c0ccd9eec18c0fa4bf6258bd413bde013c607039e96641db003d237
		Secure: false
	Object:
		Variable: $r4
		Type: javax.crypto.spec.SecretKeySpec
		Statement: specialinvoke $r4.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r1, varReplacer2140280)
		Method: <com.tuya.sdk.bluetooth.bddqpdp: byte[] bdpdqbp(byte[],byte[],byte[])>
		SHA-256: 5549e5553a9fa71e0e9ad457636d6f68f889bafeaa7998cd46057be0839c96ca
		Secure: false
	Object:
		Variable: $r0
		Type: byte[]
		Statement: $r0 = virtualinvoke $r3.<java.security.MessageDigest: byte[] digest(byte[])>($r0)
		Method: <com.amazon.identity.auth.device.utils.PackageSignatureUtil: byte[] getFingerprint(com.amazon.identity.auth.device.utils.HashAlgorithm,byte[])>
		SHA-256: f28eeef0237b0d1ca708825f530dadfc706c6f34ecd5e6d2b95090c0f168d6b5
		Secure: true
	Object:
		Variable: $r4
		Type: javax.crypto.spec.SecretKeySpec
		Statement: specialinvoke $r4.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r5, varReplacer2898875)
		Method: <hhn: java.lang.String a(java.lang.String)>
		SHA-256: b48a22bb7b7cfd1e3f6f655bbaf68eda2c6fa55fc9904db47d72e0f0a556ccd9
		Secure: false
	Object:
		Variable: $r1
		Type: byte[]
		Statement: virtualinvoke $r5.<javax.crypto.Cipher: int doFinal(byte[],int,int,byte[],int)>($r0, $i0, $i4, $r1, $i5)
		Method: <com.tuya.smart.android.common.utils.RSAUtil: byte[] encrypt(java.lang.String,java.security.PublicKey,byte[])>
		SHA-256: d5ed602673203c9d710938f34cd5df0268f6bceaab75a0aa59da084f4573d9c4
		Secure: false
	Object:
		Variable: $r8
		Type: javax.crypto.spec.IvParameterSpec
		Statement: specialinvoke $r8.<javax.crypto.spec.IvParameterSpec: void <init>(byte[])>($r4)
		Method: <com.tuya.smart.android.common.utils.AesGcmUtil: byte[] encryptBytes2Bytes(byte[],byte[],byte[],byte[])>
		SHA-256: b935c8eae22110d44b848d1b78c144af95a895446a93dfc55b5f88975e61d065
		Secure: true
	Object:
		Variable: $r1
		Type: byte[]
		Statement: $r1 = virtualinvoke $r5.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r1)
		Method: <com.tuya.smart.android.network.util.AESCTRUtil: java.lang.String encrypt(byte[],byte[],java.lang.String)>
		SHA-256: 3227b15d342f7de49d84f2507ebcd089801d3cc25028ca1a87ade2f765acf3a0
		Secure: false
	Object:
		Variable: $r4
		Type: javax.net.ssl.TrustManager[]
		Statement: $r4 = virtualinvoke $r3.<javax.net.ssl.TrustManagerFactory: javax.net.ssl.TrustManager[] getTrustManagers()>()
		Method: <com.tuya.sdk.mqtt.dqdbbqp: javax.net.ssl.X509TrustManager pppbppp()>
		SHA-256: ea62b3fb2f981c3b9192c4f3115e592ff51ea2604a3eb0553f3ce3bb47f7dd94
		Secure: false
	Object:
		Variable: $r3
		Type: javax.crypto.spec.SecretKeySpec
		Statement: specialinvoke $r3.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r1, varReplacer1963527)
		Method: <com.amazon.identity.auth.device.datastore.AESEncryptor: javax.crypto.spec.SecretKeySpec getKeySpec()>
		SHA-256: a938ae9af01d78865d48c491c88aeeb6f24d5a31a269db5e7dd07728f38647fc
		Secure: false
	Object:
		Variable: $r3
		Type: java.security.KeyFactory
		Statement: $r3 = staticinvoke <java.security.KeyFactory: java.security.KeyFactory getInstance(java.lang.String)>($r1)
		Method: <com.tuya.smart.android.common.utils.RSAUtil: java.security.interfaces.RSAPublicKey generateRSAPublicKey(java.lang.String,java.math.BigInteger,java.math.BigInteger)>
		SHA-256: 549563551235d714dee2d7da623a7b4ed9fe49a0d858fb2d0a887237050b2ca
		Secure: false
	Object:
		Variable: $r2
		Type: java.security.SecureRandom
		Statement: $r2 = staticinvoke <java.security.SecureRandom: java.security.SecureRandom getInstanceStrong()>()
		Method: <com.tuya.smart.android.common.utils.AesGcmUtil: byte[] generateRandomNonce()>
		SHA-256: cfe64701c621a6114e7d90588aba3e45176d60e408885c2af68e28e7d013501a
		Secure: true
	Object:
		Variable: $r5
		Type: javax.crypto.spec.SecretKeySpec
		Statement: specialinvoke $r5.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r6, $r7)
		Method: <cpb: java.io.InputStream a(okhttp3.ResponseBody)>
		SHA-256: 409ed14610e40d25503502c477341ae3892ce369134e1a7deff6bc2e98df7b23
		Secure: false
	Object:
		Variable: $r3
		Type: java.security.KeyFactory
		Statement: $r3 = staticinvoke <java.security.KeyFactory: java.security.KeyFactory getInstance(java.lang.String)>(varReplacer1084155)
		Method: <com.tuya.smart.android.network.util.ECDHEngine: byte[] ecdhKey(java.lang.String,java.lang.String)>
		SHA-256: 65a71148e92b02b9113e82602a572f512cd00f6363c724acefafa93765441ce
		Secure: false
	Object:
		Variable: $r2
		Type: java.lang.String
		Statement: specialinvoke $r7.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r6, $r2)
		Method: <io.jsonwebtoken.SigningKeyResolverAdapter: java.security.Key resolveSigningKey(io.jsonwebtoken.JwsHeader,java.lang.String)>
		SHA-256: ee052a5923d2f5e57304b344a9975b2c23c1309cfd50f4bb3f16956cbe7327fb
		Secure: false
	Object:
		Variable: $r1
		Type: java.security.MessageDigest
		Statement: $r1 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer2615076)
		Method: <com.tuya.sdk.bluetooth.qppbddd: byte[] bdpdqbp(byte[])>
		SHA-256: 9888c55d99660162e05d0303ba893e6b5abffed619ddb494133293dc8b4967b6
		Secure: false
	Object:
		Variable: $r5
		Type: javax.crypto.Cipher
		Statement: $r5 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>($r2)
		Method: <com.tuya.smart.android.common.utils.RSAUtil: byte[] encrypt(java.lang.String,java.security.PublicKey,byte[])>
		SHA-256: de5bd5ac252cb19a029b8387cab569036aebb8b079de44fdbd1a21fb7d57fd3f
		Secure: false
	Object:
		Variable: $r0
		Type: java.security.SecureRandom
		Statement: specialinvoke $r0.<java.security.SecureRandom: void <init>()>()
		Method: <cgw: void <clinit>()>
		SHA-256: 1748d50d470a91acaafba095d6c77e16700b8982e99fe72e5fb165a0a8169aa
		Secure: true
	Object:
		Variable: $r3
		Type: byte[]
		Statement: $r3 = virtualinvoke $r2.<java.security.MessageDigest: byte[] digest(byte[])>($r3)
		Method: <okio.ByteString: okio.ByteString digest(java.lang.String)>
		SHA-256: a79a1700ae9d8d44f13ea218f751e7024f8f1222b1b2ae17cdbab7b56d352181
		Secure: false
	Object:
		Variable: $r4
		Type: javax.crypto.Cipher
		Statement: $r4 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>($r3)
		Method: <com.tuya.smart.android.common.utils.AESUtil: byte[] encryptWithBytes(java.lang.String)>
		SHA-256: c07c92637065f9963c307700984b9b22baa6e07708cd5fd04e6038051df5143d
		Secure: false
	Object:
		Variable: $r10
		Type: java.security.SecureRandom
		Statement: specialinvoke $r10.<java.security.SecureRandom: void <init>()>()
		Method: <com.tuya.sdk.security.EncryptionManager: boolean pppbppp(byte[])>
		SHA-256: 671fa05d28185b505ba4a0aba6fc73928810be18d5105a703a52e6bb2cb35214
		Secure: true
	Object:
		Variable: $r1
		Type: java.security.SecureRandom
		Statement: specialinvoke $r1.<java.security.SecureRandom: void <init>()>()
		Method: <com.tuya.bouncycastle.math.ec.ECCurve$AbstractF2m: com.tuya.bouncycastle.math.ec.ECFieldElement solveQuadraticEquation(com.tuya.bouncycastle.math.ec.ECFieldElement)>
		SHA-256: f767cd5caf27c5e59d1d4de5e44c58efb4784a911137584107c6089ec98f46f
		Secure: true
	Object:
		Variable: $r4
		Type: javax.crypto.Cipher
		Statement: $r4 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>($r3)
		Method: <com.tuya.smart.android.common.utils.AESUtil: java.lang.String decrypt(java.lang.String)>
		SHA-256: d20a17eedf9d76fdc72dd37c023530af2c2764050615a9f141cf62f05b85cd92
		Secure: false
	Object:
		Variable: $r4
		Type: javax.crypto.spec.SecretKeySpec
		Statement: specialinvoke $r4.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r1, varReplacer1268440)
		Method: <com.tuya.sdk.bluetooth.qbdbbdb: byte[] pdqppqb(byte[],byte[],byte[])>
		SHA-256: 1e97cd4371a62e47931b4120a8be025dc0cdc0fa27e74a6386eb7bc641301b76
		Secure: false
	Object:
		Variable: $r4
		Type: javax.crypto.KeyGenerator
		Statement: $r4 = staticinvoke <javax.crypto.KeyGenerator: javax.crypto.KeyGenerator getInstance(java.lang.String)>(varReplacer1963460)
		Method: <com.amazon.identity.auth.device.datastore.AESEncryptor: byte[] getEncryptionKey()>
		SHA-256: b4c36d6fcc2ec070d78945d6a0dadace8330e4fab68d82063d298a56b1a71866
		Secure: true
	Object:
		Variable: $r3
		Type: javax.crypto.Mac
		Statement: $r3 = staticinvoke <javax.crypto.Mac: javax.crypto.Mac getInstance(java.lang.String)>(varReplacer894025)
		Method: <dnc: byte[] a(byte[],java.lang.String)>
		SHA-256: efac0cc00c05c76f79bb700bb0f6847d3a68cec28a0866ed49ddb1fe86cad00c
		Secure: false
	Object:
		Variable: $r0
		Type: byte[]
		Statement: $r0 = virtualinvoke $r1.<java.security.MessageDigest: byte[] digest()>()
		Method: <com.facebook.common.util.SecureHashUtil: java.lang.String makeSHA1HashBase64(byte[])>
		SHA-256: c6bb4832d15267321b64294e36949b1fc4731b855443ce4eba77a8ad3eaece90
		Secure: false
	Object:
		Variable: $r4
		Type: byte[]
		Statement: $r4 = virtualinvoke $r3.<java.security.MessageDigest: byte[] digest()>()
		Method: <cop: java.lang.String a(java.lang.String)>
		SHA-256: cd45c04ef77db29da6fc47ab0b1962c94f8becce314fd000a3406fa77892afff
		Secure: false
	Object:
		Variable: $r5
		Type: javax.crypto.spec.SecretKeySpec
		Statement: specialinvoke $r5.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r3, varReplacer2358243)
		Method: <com.tuya.sdk.security.EncryptionManager: javax.crypto.SecretKey bdpdqbp(android.content.SharedPreferences)>
		SHA-256: 4d992fc601ded2d1ee346c9da849227ceb509fe44cf433df8401beb370366feb
		Secure: false
	Object:
		Variable: $r6
		Type: javax.net.ssl.SSLContext
		Statement: $r6 = staticinvoke <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String,java.security.Provider)>(varReplacer3125888, $r5)
		Method: <io.grpc.okhttp.OkHttpChannelBuilder: javax.net.ssl.SSLSocketFactory createSocketFactory()>
		SHA-256: e216a19c5c15c3b13d3eefa9544064850b3e99e71f8304021c74fe804cffc288
		Secure: false
	Object:
		Variable: $r4
		Type: java.security.Signature
		Statement: $r4 = staticinvoke <java.security.Signature: java.security.Signature getInstance(java.lang.String)>(varReplacer2200432)
		Method: <com.amazon.identity.auth.device.utils.JWTDecoder: boolean verifySignatureWithRsaSha256(byte[],byte[],java.security.cert.Certificate)>
		SHA-256: 6355d8312a37e91495d6cd0d86bf6c88bbd036818e679242163a6b5cdb3aceea
		Secure: true
	Object:
		Variable: $r1
		Type: java.security.MessageDigest
		Statement: $r1 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer3238755)
		Method: <com.squareup.okhttp.internal.Util: okio.ByteString sha1(okio.ByteString)>
		SHA-256: 2499ca933eb80e07073fd534db8a946dbd2cf7d8e32f73c3e40094b378280b69
		Secure: false
	Object:
		Variable: varReplacer1963527
		Type: java.lang.String
		Statement: specialinvoke $r3.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r1, varReplacer1963527)
		Method: <com.amazon.identity.auth.device.datastore.AESEncryptor: javax.crypto.spec.SecretKeySpec getKeySpec()>
		SHA-256: f8966ec451d8410ab59b7797560baa702efef037ff5dae59c59ff8febd834965
		Secure: false
	Object:
		Variable: varReplacer2140280
		Type: java.lang.String
		Statement: specialinvoke $r4.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r1, varReplacer2140280)
		Method: <com.tuya.sdk.bluetooth.bddqpdp: byte[] bdpdqbp(byte[],byte[],byte[])>
		SHA-256: 6702519156a7a5cc2b0f4aaa95b330942e3cc016be85e6cea0ed43a8b4798c7
		Secure: false
	Object:
		Variable: $r3
		Type: byte[]
		Statement: $z0 = virtualinvoke $r4.<java.security.Signature: boolean verify(byte[])>($r3)
		Method: <io.jsonwebtoken.impl.crypto.RsaSignatureValidator: boolean doVerify(java.security.Signature,java.security.PublicKey,byte[],byte[])>
		SHA-256: f677e90f3a41c34c1c32f9dee90b35301849a57d4f1d5050e7134f58f0a1294f
		Secure: false
	Object:
		Variable: $r18
		Type: javax.crypto.CipherOutputStream
		Statement: specialinvoke $r18.<javax.crypto.CipherOutputStream: void <init>(java.io.OutputStream,javax.crypto.Cipher)>($r5, $r7)
		Method: <gjc: java.io.File a(java.lang.String,java.io.InputStream,java.io.File)>
		SHA-256: b00d70aa4e84b85426b1c55b60843fc450a9a728a967ed67efad131c0f737a99
		Secure: false
	Object:
		Variable: $r0
		Type: byte[]
		Statement: $r2 = virtualinvoke $r6.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r0)
		Method: <com.tuya.smart.android.common.utils.AesGcmUtil: byte[] decryptBytes2Bytes(byte[],byte[],byte[],byte[])>
		SHA-256: 3f169ce5c9771b87893b0dd0f8098c2ef909b3ce80f48be5a6379d28a4a91eb5
		Secure: false
	Object:
		Variable: $r4
		Type: javax.net.ssl.SSLContext
		Statement: $r4 = staticinvoke <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String)>(varReplacer1753034)
		Method: <okhttp3.internal.platform.Platform: javax.net.ssl.SSLContext getSSLContext()>
		SHA-256: d12c1018991027cd7e4fb5bce784a013a6fac0aee90f845291e872980b30ca03
		Secure: false
	Object:
		Variable: $r4
		Type: javax.crypto.Cipher
		Statement: $r4 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer2639771)
		Method: <com.tuya.sdk.security.EncryptionManager: javax.crypto.Cipher bdpdqbp(byte[],boolean)>
		SHA-256: 2af0adff2fff8db42043d86cbe7d471b6eba15691f93942f447debde7fab73a8
		Secure: false
	Object:
		Variable: $r1
		Type: byte[]
		Statement: $r1 = virtualinvoke $r2.<java.security.Signature: byte[] sign()>()
		Method: <bmt: byte[] a(java.security.Signature,java.security.PrivateKey,byte[])>
		SHA-256: d75011e0c624850227d2e82ed2bcd123bc280b9adabfa5ac5a92bd4b3fd08a7a
		Secure: false
	Object:
		Variable: r0
		Type: com.tuya.bouncycastle.jce.spec.ECNamedCurveSpec
		Statement: specialinvoke r0.<java.security.spec.ECParameterSpec: void <init>(java.security.spec.EllipticCurve,java.security.spec.ECPoint,java.math.BigInteger,int)>($r2, $r3, $r4, $i0)
		Method: <com.tuya.bouncycastle.jce.spec.ECNamedCurveSpec: void <init>(java.lang.String,java.security.spec.EllipticCurve,java.security.spec.ECPoint,java.math.BigInteger,java.math.BigInteger)>
		SHA-256: b36d50207c12d926e435b859cb9848007d52f50b2e62c847e597de1f84f657c6
		Secure: true
	Object:
		Variable: $r1
		Type: byte[]
		Statement: $r1 = virtualinvoke $r2.<java.security.MessageDigest: byte[] digest()>()
		Method: <bjs: java.lang.String a(byte[])>
		SHA-256: f405c63d2b6867b6e01f90f4b62d15db320d723877bbd55859e89ffe3ca35a67
		Secure: true
	Object:
		Variable: $r3
		Type: java.security.KeyPair
		Statement: $r3 = virtualinvoke $r2.<java.security.KeyPairGenerator: java.security.KeyPair generateKeyPair()>()
		Method: <com.tuya.sdk.bluetooth.dbqpdqd: void bppdpdq()>
		SHA-256: 5d42cadfc847d2ba5ae8304fc616d9876441798955ef417d262f978c7a2ae891
		Secure: false
	Object:
		Variable: $r3
		Type: byte[]
		Statement: $r3 = virtualinvoke $r2.<java.security.MessageDigest: byte[] digest()>()
		Method: <com.tuya.smart.android.common.utils.MD5: java.lang.String md5(java.lang.String)>
		SHA-256: 7c868d91021c90edf508a141465f67da16f97ad4be5f2784af06d7c773bb2719
		Secure: false
	Object:
		Variable: $r17
		Type: javax.net.ssl.KeyManager[]
		Statement: $r17 = virtualinvoke $r16.<javax.net.ssl.KeyManagerFactory: javax.net.ssl.KeyManager[] getKeyManagers()>()
		Method: <com.tuya.smart.mqttclient.mqttv3.internal.security.SSLSocketFactoryFactory: javax.net.ssl.SSLContext getSSLContext(java.lang.String)>
		SHA-256: cd0e3b76762bcc893e3b8c71b838de88e9ec2eaaec5c03709c5f4ebb7add121e
		Secure: false
	Object:
		Variable: $r3
		Type: javax.crypto.spec.GCMParameterSpec
		Statement: specialinvoke $r3.<javax.crypto.spec.GCMParameterSpec: void <init>(int,byte[])>(varReplacer2639766, $r1)
		Method: <com.tuya.sdk.security.EncryptionManager: javax.crypto.Cipher bdpdqbp(byte[],boolean)>
		SHA-256: 28e360edc4c3e3b90fcd43e3798337730f7bb34a142e8bac146bfa3f64859ac5
		Secure: true
	Object:
		Variable: varReplacer1044816
		Type: int
		Statement: specialinvoke $r4.<javax.crypto.spec.PBEKeySpec: void <init>(char[],byte[],int,int)>($r5, $r3, $i0, varReplacer1044816)
		Method: <cgz: cgz$a b(android.content.Context)>
		SHA-256: 59e5e1a6d99a1f3385b9abef4796406fdd36ea9e24cc11c10893cd7f78ab7e14
		Secure: false
	Object:
		Variable: $r10
		Type: javax.crypto.spec.SecretKeySpec
		Statement: specialinvoke $r10.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r3, varReplacer1044841)
		Method: <cgz: cgz$a b(android.content.Context)>
		SHA-256: 2cf73a0942898b11beba84051b65ae599d06924271f59ee5000edd64ebc6ff8b
		Secure: false
	Object:
		Variable: $r4
		Type: javax.crypto.Cipher
		Statement: $r4 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>($r3)
		Method: <hff: java.lang.String a(java.lang.String)>
		SHA-256: ff10f8e3b8030cec0bd576ca770bfa59ce1d9cd1b18fe10c5d7f72f11d3360de
		Secure: false
	Object:
		Variable: $r2
		Type: byte[]
		Statement: $r2 = virtualinvoke $r3.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r2)
		Method: <hhn: java.lang.String a(java.lang.String)>
		SHA-256: d00e03a20a839b2e3001e4b82579df56131563a0a503759451495489e744f005
		Secure: false
	Object:
		Variable: varReplacer1790031
		Type: java.lang.String
		Statement: specialinvoke $r9.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r5, varReplacer1790031)
		Method: <gvt: java.lang.String a(java.lang.String,java.lang.String)>
		SHA-256: 1010ae067be3ea349c27b666f9b8cdd165540f68c7083e5b5c0b6989e520d464
		Secure: false
	Object:
		Variable: $z0
		Type: boolean
		Statement: $z0 = virtualinvoke $r4.<java.security.Signature: boolean verify(byte[])>($r3)
		Method: <io.jsonwebtoken.impl.crypto.EllipticCurveSignatureValidator: boolean doVerify(java.security.Signature,java.security.PublicKey,byte[],byte[])>
		SHA-256: f54467fbd4deded218aba82c494444a4c2f8bc22d6e34966879e488f5bb0f52f
		Secure: false
	Object:
		Variable: varReplacer45951
		Type: java.lang.String
		Statement: specialinvoke $r0.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r1, varReplacer45951)
		Method: <com.tuya.smart.android.network.util.AESCTRUtil: java.lang.String decrypt(byte[],java.lang.String)>
		SHA-256: 34fa0f923b9a094962cca48c597c0ef2006c49e98de20048317d5042a58650d7
		Secure: false
	Object:
		Variable: $r4
		Type: javax.crypto.spec.IvParameterSpec
		Statement: specialinvoke $r4.<javax.crypto.spec.IvParameterSpec: void <init>(byte[],int,int)>($r3, varReplacer46015, varReplacer46016)
		Method: <com.tuya.smart.android.network.util.AESCTRUtil: java.lang.String decrypt(byte[],java.lang.String)>
		SHA-256: 407a49f703b4a55b769012893edcc6ed606069bfce69a6bb5bb1c53ed508bca7
		Secure: false
	Object:
		Variable: varReplacer1336305
		Type: java.lang.String
		Statement: specialinvoke $r0.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r1, varReplacer1336305)
		Method: <com.tuya.sdk.bluetooth.pdqppqb: byte[] bppdpdq(byte[],byte[])>
		SHA-256: d0256ec39c94469449b897c660c7be913b4bee086d5c39a12da64fe3279b27d7
		Secure: false
	Object:
		Variable: $r0
		Type: java.security.SecureRandom
		Statement: specialinvoke $r0.<java.security.SecureRandom: void <init>()>()
		Method: <dml: int a()>
		SHA-256: 28d6b69111d7fd42e751965b7dbdc1c1fbab4f7415a0d9ce33d70050e123d55c
		Secure: true
	Object:
		Variable: $r5
		Type: javax.crypto.Cipher
		Statement: $r5 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer710507)
		Method: <com.tuya.sdk.bluetooth.bddqpdp: byte[] pdqppqb(byte[],byte[],byte[])>
		SHA-256: 1ae50d9f668c64e8c8f6f3d21dcc37f1d7f500d977a32c3540244adb9854ee50
		Secure: false
	Object:
		Variable: $r4
		Type: java.security.SecureRandom
		Statement: specialinvoke $r4.<java.security.SecureRandom: void <init>()>()
		Method: <com.tuya.sdk.bluetooth.qpddqdd$pppbppp: void bdpdqbp(com.tuya.smart.android.network.http.BusinessResponse,java.lang.Integer,java.lang.String)>
		SHA-256: ba38c187912f049941892730d62427f2d87ffed211f1e871ee43a2e3c0592d09
		Secure: true
	Object:
		Variable: $r3
		Type: byte[]
		Statement: $r3 = virtualinvoke $r2.<java.security.MessageDigest: byte[] digest()>()
		Method: <dnk: java.lang.String b(java.lang.String)>
		SHA-256: 81a8f89111baceceecc569ad286ff4f8691385674aa06ded1a619445e7536009
		Secure: false
	Object:
		Variable: $r5
		Type: java.security.PublicKey
		Statement: $r5 = virtualinvoke $r3.<java.security.KeyFactory: java.security.PublicKey generatePublic(java.security.spec.KeySpec)>($r4)
		Method: <bvu: java.security.PublicKey b(java.lang.String)>
		SHA-256: a3bd98f2b92cb984ed93d8d519bba616d9f5f09519f9303e428bccb0acdc805a
		Secure: false
	Object:
		Variable: $r3
		Type: javax.crypto.spec.IvParameterSpec
		Statement: specialinvoke $r3.<javax.crypto.spec.IvParameterSpec: void <init>(byte[])>($r2)
		Method: <com.tuya.sdk.bluetooth.qbdbbdb: byte[] pdqppqb(byte[],byte[],byte[])>
		SHA-256: 6b9261cb250a7dde7c25118495cd4531776aebf8925207281bbe5bb63a146b09
		Secure: false
	Object:
		Variable: $r2
		Type: java.lang.String
		Statement: specialinvoke $r1.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r3, $r2)
		Method: <hff: java.security.Key a()>
		SHA-256: 109f6e52aa6b1906dea8e022df24bd184b5e1a525427e4407408f10e7c5176ae
		Secure: false
	Object:
		Variable: $r0
		Type: byte[]
		Statement: $r1 = virtualinvoke $r5.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r0)
		Method: <com.tuya.sdk.bluetooth.qbdbbdb: byte[] pdqppqb(byte[],byte[],byte[])>
		SHA-256: 99a98c31a45cf90c9d8c224d48d1c1f88ecc8f3f9eb7dffbe1ad5ef891dc243e
		Secure: false
	Object:
		Variable: $r4
		Type: javax.crypto.spec.SecretKeySpec
		Statement: specialinvoke $r4.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r3, varReplacer2358325)
		Method: <com.tuya.sdk.security.EncryptionManager: javax.crypto.SecretKey pdqppqb(android.content.SharedPreferences)>
		SHA-256: 90a47d52b7aa7e147aa01c1349a439c45cb6d061b7f5dde4e9bbedc7ca847d7f
		Secure: false
	Object:
		Variable: $r5
		Type: java.security.KeyFactory
		Statement: $r5 = staticinvoke <java.security.KeyFactory: java.security.KeyFactory getInstance(java.lang.String)>(varReplacer3261056)
		Method: <cik: java.security.interfaces.ECPublicKey a(chy$b)>
		SHA-256: af094620c256149a763ae20485b8962d4b227a5252fb05463cf55a994cf4b18e
		Secure: false
	Object:
		Variable: $r1
		Type: java.security.MessageDigest
		Statement: $r1 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer2980727)
		Method: <com.squareup.okhttp.internal.Util: java.lang.String md5Hex(java.lang.String)>
		SHA-256: 2e3fd7611b202886a6328ab7eb3189292e4aa00dde90eee566028bd090271c7e
		Secure: false
	Object:
		Variable: $r4
		Type: java.security.SecureRandom
		Statement: specialinvoke $r4.<java.security.SecureRandom: void <init>()>()
		Method: <com.tuya.sdk.bluetooth.qpddqdd$qpppdqb: void bdpdqbp(com.tuya.smart.android.network.http.BusinessResponse,java.lang.Integer,java.lang.String)>
		SHA-256: ac98e802b5d01e782704838f068ad3bc04e0f8bdba259826a800c9908c973c09
		Secure: true
	Object:
		Variable: $r1
		Type: byte[]
		Statement: $r1 = virtualinvoke $r3.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r1)
		Method: <com.tuya.sdk.security.EncryptionManager: com.tuya.sdk.security.EncryptionManager$bdpdqbp bppdpdq(byte[],byte[])>
		SHA-256: 6cc7512900e12494711e385b1453ef59c22e94104707cd6f94d478e8ca0a6d02
		Secure: false
	Object:
		Variable: $r4
		Type: javax.crypto.Cipher
		Statement: $r4 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>($r3)
		Method: <com.tuya.smart.android.common.utils.AESUtil: byte[] encryptWithBytes(byte[])>
		SHA-256: c07c92637065f9963c307700984b9b22baa6e07708cd5fd04e6038051df5143d
		Secure: false
	Object:
		Variable: varReplacer1044812
		Type: java.lang.String
		Statement: specialinvoke $r8.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r9, varReplacer1044812)
		Method: <cgz: cgz$a b(android.content.Context)>
		SHA-256: edb975fdec26774a0c2e41152c78010f4cc4bd6c6b6d9252b78dba88af9b6f75
		Secure: false
	Object:
		Variable: $r5
		Type: javax.crypto.SecretKey
		Statement: $r5 = virtualinvoke $r4.<javax.crypto.KeyGenerator: javax.crypto.SecretKey generateKey()>()
		Method: <com.amazon.identity.auth.device.datastore.AESEncryptor: byte[] getEncryptionKey()>
		SHA-256: 8bc4232dba406a5ebecd8d3859b400826a3d77ba6a234be56933dd443f2408ec
		Secure: true
	Object:
		Variable: $r5
		Type: javax.crypto.Cipher
		Statement: $r5 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer2140279)
		Method: <com.tuya.sdk.bluetooth.bddqpdp: byte[] bdpdqbp(byte[],byte[],byte[])>
		SHA-256: 7a9c1d91c50e3e481d2e900cfa81306b13f53058450bd2332a9e532f73b53b1a
		Secure: false
	Object:
		Variable: $r16
		Type: java.security.PublicKey
		Statement: $r16 = virtualinvoke $r15.<java.security.KeyFactory: java.security.PublicKey generatePublic(java.security.spec.KeySpec)>($r14)
		Method: <com.tuya.smart.android.network.util.ECDHEngine: java.security.PublicKey decodeECPoint(java.lang.String,java.lang.String)>
		SHA-256: f034d4217b0bdd02cfac99589988cd71635f3f88584c50fc4e9dd0b352cc467f
		Secure: false
	Object:
		Variable: $r3
		Type: java.security.SecureRandom
		Statement: specialinvoke $r3.<java.security.SecureRandom: void <init>()>()
		Method: <cgz: void <init>(java.lang.String,int,boolean)>
		SHA-256: 11ba4d35e7cb66dc53df83854e14cb036453f4678f622c73fc0ac4280d8edd63
		Secure: true
	Object:
		Variable: $r2
		Type: javax.net.ssl.TrustManagerFactory
		Statement: $r2 = staticinvoke <javax.net.ssl.TrustManagerFactory: javax.net.ssl.TrustManagerFactory getInstance(java.lang.String)>($r1)
		Method: <com.tuya.smart.android.network.TuyaSmartNetWork: javax.net.ssl.X509TrustManager systemDefaultTrustManager()>
		SHA-256: f8916c72a6d9088da1aa40c4389214118c5f2a19cc6ac9075016c95f019f34c5
		Secure: false
	Object:
		Variable: varReplacer1238878
		Type: java.lang.String
		Statement: specialinvoke $r10.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r1, varReplacer1238878)
		Method: <gjc: javax.crypto.Cipher a(byte[],java.lang.String,int)>
		SHA-256: cbbdc3a5f62fba767b700158c974db8e1f6461dd6451a7b3eb4a2b1d744937ee
		Secure: false
	Object:
		Variable: $r5
		Type: byte[]
		Statement: $r5 = virtualinvoke $r4.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r5)
		Method: <hff: java.lang.String a(java.lang.String)>
		SHA-256: 7fbcc871304d3f3ca11fe0b03a1dbe680243b20bdea384aeff70afe1f6bca02e
		Secure: false
	Object:
		Variable: $r2
		Type: byte[]
		Statement: $r2 = virtualinvoke $r1.<java.security.MessageDigest: byte[] digest(byte[])>($r2)
		Method: <com.squareup.okhttp.internal.Util: java.lang.String md5Hex(java.lang.String)>
		SHA-256: ff685f32e7a7f750cd456b35d0be518bacf6cdd5ba40802666534e9df3ec3217
		Secure: false
	Object:
		Variable: $r0
		Type: byte[]
		Statement: $r0 = virtualinvoke $r6.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r0)
		Method: <com.tuya.smart.android.network.util.AESCBCUtil: java.lang.String encrypt(byte[],java.lang.String,java.lang.String)>
		SHA-256: 658be9a6200ea22d929701cbb59a94bf211bd90f479483295afcf4ee31e001b9
		Secure: false
	Object:
		Variable: $r4
		Type: javax.crypto.Mac
		Statement: $r4 = staticinvoke <javax.crypto.Mac: javax.crypto.Mac getInstance(java.lang.String)>($r3)
		Method: <io.jsonwebtoken.impl.crypto.MacSigner: javax.crypto.Mac doGetMacInstance()>
		SHA-256: a1d1f1a96b2229cb8032249f276d2e6d47471c6890809e6db563b576e5d67a47
		Secure: false
	Object:
		Variable: $r2
		Type: java.security.spec.ECGenParameterSpec
		Statement: specialinvoke $r2.<java.security.spec.ECGenParameterSpec: void <init>(java.lang.String)>(varReplacer1886416)
		Method: <com.tuya.bouncycastle.jcajce.provider.asymmetric.ec.KeyPairGeneratorSpi$EC: void <clinit>()>
		SHA-256: 15c2da2401c4a2dc1f95ef6c444bc2ec89facec718073579ad1c8b39c3d4c947
		Secure: true
	Object:
		Variable: varReplacer2358325
		Type: java.lang.String
		Statement: specialinvoke $r4.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r3, varReplacer2358325)
		Method: <com.tuya.sdk.security.EncryptionManager: javax.crypto.SecretKey pdqppqb(android.content.SharedPreferences)>
		SHA-256: ded69a06b9ac8bbd88ca5b29bd6218c1e35c96fb77cbbb10f4dd3ead1d44117f
		Secure: false
	Object:
		Variable: $r1
		Type: java.security.MessageDigest
		Statement: $r1 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer44290)
		Method: <com.tuya.smart.android.common.utils.MD5Util: byte[] computeMD5Hash(byte[])>
		SHA-256: 11289a0b8c65d5624aebca2dbd30c9c28eb6867a6e5075de06d695277d57b62
		Secure: false
	Object:
		Variable: $r1
		Type: javax.crypto.spec.SecretKeySpec
		Statement: specialinvoke $r1.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r3, $r2)
		Method: <hff: java.security.Key a()>
		SHA-256: 678980720ccd944ecfed9fdaf692883ff03ecbda864624331b9935bd3c4391c5
		Secure: false
	Object:
		Variable: $r2
		Type: java.security.KeyStore
		Statement: $r2 = staticinvoke <java.security.KeyStore: java.security.KeyStore getInstance(java.lang.String)>(varReplacer2614277)
		Method: <dde: javax.crypto.SecretKey c(java.lang.String)>
		SHA-256: b76d895976b8422efb14b28026167841179e98948777f80f86d60e3d6103fa43
		Secure: false
	Object:
		Variable: $r6
		Type: java.security.SecureRandom
		Statement: specialinvoke $r6.<java.security.SecureRandom: void <init>()>()
		Method: <com.tuya.smart.android.network.http.dns.manager.TuyaDnsStaticIpManager: java.lang.String getIotDnsDomainIp(java.lang.String)>
		SHA-256: e4ce7fccaaabb2c0aef1f412f309006c912d0861524457433267cef520e75272
		Secure: true
	Object:
		Variable: $r7
		Type: javax.crypto.spec.SecretKeySpec
		Statement: specialinvoke $r7.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r3, varReplacer2538466)
		Method: <com.tuya.smart.android.common.utils.AesGcmUtil: byte[] encryptBytes2Bytes(byte[],byte[],byte[],byte[])>
		SHA-256: cf85bcf1f6bfb4094d6efbd875fe3f168fd70355d595b92049f65704ff7f2aca
		Secure: false
	Object:
		Variable: $r5
		Type: byte[]
		Statement: $r5 = virtualinvoke $r4.<java.security.MessageDigest: byte[] digest(byte[])>($r5)
		Method: <com.amazon.identity.auth.device.authorization.CodeChallengeWorkflow: java.lang.String generateCodeChallenge(java.lang.String,java.lang.String)>
		SHA-256: 5f321e42eae828040594fd26633f556349005357246a3c37d9463972145acb11
		Secure: true
	Object:
		Variable: $r3
		Type: byte[]
		Statement: $z0 = virtualinvoke $r4.<java.security.Signature: boolean verify(byte[])>($r3)
		Method: <io.jsonwebtoken.impl.crypto.EllipticCurveSignatureValidator: boolean doVerify(java.security.Signature,java.security.PublicKey,byte[],byte[])>
		SHA-256: a910002b28f05b6627b00bf1da8c378a41c080f9c80a7b1ac62e257ce90cfcd0
		Secure: false
	Object:
		Variable: $r12
		Type: java.security.KeyPair
		Statement: specialinvoke $r12.<java.security.KeyPair: void <init>(java.security.PublicKey,java.security.PrivateKey)>($r9, $r13)
		Method: <com.tuya.bouncycastle.jcajce.provider.asymmetric.ec.KeyPairGeneratorSpi$EC: java.security.KeyPair generateKeyPair()>
		SHA-256: c9e1ff5450f21aae65af053d6ed29f81c5a7b267991078defbfa3059af0e266a
		Secure: false
	Object:
		Variable: $r5
		Type: javax.net.ssl.TrustManager[]
		Statement: $r5 = virtualinvoke $r4.<javax.net.ssl.TrustManagerFactory: javax.net.ssl.TrustManager[] getTrustManagers()>()
		Method: <hin: javax.net.ssl.X509TrustManager b()>
		SHA-256: c98ce88437b89fa2715c3c7358b32c8878b8169b5fddc145fd4f12a26ab50119
		Secure: false
	Object:
		Variable: varReplacer893750
		Type: java.lang.String
		Statement: specialinvoke $r6.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r5, varReplacer893750)
		Method: <dmo: java.lang.String a(java.lang.String,java.lang.String,java.lang.String)>
		SHA-256: 4fca236a984abe5ac880cdda163d2dcea24b49ed99ca2e491ce27ca988b7ff77
		Secure: false
	Object:
		Variable: $r0
		Type: java.security.Signature
		Statement: $r0 = staticinvoke <java.security.Signature: java.security.Signature getInstance(java.lang.String)>(varReplacer2899249)
		Method: <bmt: java.security.Signature b()>
		SHA-256: d3f22a890c047ea42b03273c0c7cf838d81921ce1db287391529958d9b2902fa
		Secure: false
	Object:
		Variable: $r6
		Type: javax.crypto.Cipher
		Statement: $r6 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>($r5)
		Method: <dmo: byte[] a(java.lang.String,javax.crypto.SecretKey,javax.crypto.spec.IvParameterSpec,byte[])>
		SHA-256: f834c4d0cd93e0746cf7295570652487a7d98fe10037765e82e6ff902e1d320
		Secure: false
	Object:
		Variable: $r1
		Type: java.security.KeyStore
		Statement: $r1 = staticinvoke <java.security.KeyStore: java.security.KeyStore getInstance(java.lang.String)>(varReplacer2739488)
		Method: <dde: boolean b(java.lang.String)>
		SHA-256: 80598064474478a7ed0555aa05409aecc3be162319587a60b09f0bc7ee3ce92b
		Secure: false
	Object:
		Variable: $r0
		Type: byte[]
		Statement: $r0 = virtualinvoke $r1.<java.security.MessageDigest: byte[] digest(byte[])>($r0)
		Method: <com.tuya.sdk.bluetooth.qbdbbdb: byte[] pppbppp(byte[])>
		SHA-256: 3c5f5ec21d7dab0f69ccd19dd1d630722b33597f3d5c6427ed14845008cce6e1
		Secure: false
	Object:
		Variable: $r3
		Type: javax.net.ssl.TrustManagerFactory
		Statement: $r3 = staticinvoke <javax.net.ssl.TrustManagerFactory: javax.net.ssl.TrustManagerFactory getInstance(java.lang.String)>($r2)
		Method: <com.tuya.sdk.mqtt.dqdbbqp: javax.net.ssl.X509TrustManager pppbppp()>
		SHA-256: aa7ff35f11ca248594fe972a11085f4060fa91513a8504b3aeadcb05f8ad6421
		Secure: false
	Object:
		Variable: $r9
		Type: javax.net.ssl.TrustManagerFactory
		Statement: $r9 = staticinvoke <javax.net.ssl.TrustManagerFactory: javax.net.ssl.TrustManagerFactory getInstance(java.lang.String)>($r8)
		Method: <io.grpc.okhttp.OkHttpChannelBuilder: javax.net.ssl.SSLSocketFactory createSocketFactory()>
		SHA-256: c07729d9879c77fcd4348e3d3c843e0bface1974b5263be7ad2a0235ad17da01
		Secure: false
	Object:
		Variable: $r2
		Type: byte[]
		Statement: $r2 = virtualinvoke $r5.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r0)
		Method: <com.tuya.sdk.bluetooth.bddqpdp: byte[] pdqppqb(byte[],byte[],byte[])>
		SHA-256: 142cd16b86f9259573ade4d3e777c5f242a2fa71e41dceccbd2367c4764ea761
		Secure: false
	Object:
		Variable: $r6
		Type: javax.crypto.Cipher
		Statement: $r6 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer2538469)
		Method: <com.tuya.smart.android.common.utils.AesGcmUtil: byte[] encryptBytes2Bytes(byte[],byte[],byte[],byte[])>
		SHA-256: 7c9326e105c4149c034abe221c19415ef9d7a03d1a565823a83ad051adb0915a
		Secure: false
	Object:
		Variable: $r5
		Type: java.security.PublicKey
		Statement: $r5 = virtualinvoke $r3.<java.security.KeyFactory: java.security.PublicKey generatePublic(java.security.spec.KeySpec)>($r4)
		Method: <com.tuya.smart.android.common.utils.RSAUtil: java.security.interfaces.RSAPublicKey generateRSAPublicKey(java.lang.String,java.math.BigInteger,java.math.BigInteger)>
		SHA-256: fd89c94a2a452a517e746b187e4cd68854394b252b0b776bfb46b8762f1f7f65
		Secure: false
	Object:
		Variable: $z0
		Type: boolean
		Statement: $z0 = virtualinvoke $r4.<java.security.Signature: boolean verify(byte[])>($r2)
		Method: <com.amazon.identity.auth.device.utils.JWTDecoder: boolean verifySignatureWithRsaSha256(byte[],byte[],java.security.cert.Certificate)>
		SHA-256: cbe31836e181ae9b0f019018963c66d01f1ebacb30ad9bffd6421b7584d37962
		Secure: true
	Object:
		Variable: $r2
		Type: javax.crypto.Cipher
		Statement: $r2 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String,java.lang.String)>(varReplacer2639446, varReplacer2639447)
		Method: <com.tuya.sdk.security.EncryptionManager: byte[] pdqppqb(byte[])>
		SHA-256: cc68dd10e66056cff43ba30fbc6b6e01ad9375e2ceb2944ef6c77860967388dd
		Secure: false
	Object:
		Variable: $r9
		Type: byte[]
		Statement: $r9 = virtualinvoke $r7.<java.security.MessageDigest: byte[] digest()>()
		Method: <com: void b(java.lang.String,java.lang.String,com.facebook.react.bridge.Promise)>
		SHA-256: 735ff2f87088a2bd51269319278671bbe3b2244659b8a8d1946a96b8cec4ca76
		Secure: true
	Object:
		Variable: $r1
		Type: byte[]
		Statement: virtualinvoke $r5.<javax.crypto.Cipher: int doFinal(byte[],int,int,byte[],int)>($r0, $i0, $i1, $r1, $i4)
		Method: <com.tuya.smart.android.common.utils.RSAUtil: byte[] encrypt(java.lang.String,java.security.PublicKey,byte[])>
		SHA-256: 6efa2ac52380f745991097283634cb3e752bd5d7423b2140864ca8ebbafdcdf2
		Secure: false
	Object:
		Variable: $r2
		Type: java.security.MessageDigest
		Statement: $r2 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer1039830)
		Method: <bga: java.lang.String a(java.util.List)>
		SHA-256: 34bb983909ae197df8a88e0f28421b8ca2afa23e9923c93d38bafd99d5c9ef44
		Secure: false
	Object:
		Variable: $r15
		Type: java.security.KeyFactory
		Statement: $r15 = staticinvoke <java.security.KeyFactory: java.security.KeyFactory getInstance(java.lang.String)>(varReplacer1084242)
		Method: <com.tuya.smart.android.network.util.ECDHEngine: java.security.PublicKey decodeECPoint(java.lang.String,java.lang.String)>
		SHA-256: 50ef8c237b3617780ee05b259eec7bf340640fb8d18a6dfb05cbdd1dba032acb
		Secure: false
	Object:
		Variable: $r3
		Type: java.security.MessageDigest
		Statement: $r3 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>($r2)
		Method: <com.amazon.identity.auth.device.utils.PackageSignatureUtil: byte[] getFingerprint(com.amazon.identity.auth.device.utils.HashAlgorithm,byte[])>
		SHA-256: 751c50a4c6f147c774c61af3cf5dace9766a38fa7cf11c8631e3866d98048e53
		Secure: true
	Object:
		Variable: $r3
		Type: byte[]
		Statement: $r3 = virtualinvoke $r6.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r3)
		Method: <dmo: byte[] a(java.lang.String,javax.crypto.SecretKey,javax.crypto.spec.IvParameterSpec,byte[])>
		SHA-256: a11c15101e4c74e67042d3b6b70454f37dcd628784d51264d03ff49dd3aef325
		Secure: false
	Object:
		Variable: $r4
		Type: javax.net.ssl.SSLContext
		Statement: $r4 = staticinvoke <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String)>(varReplacer1753044)
		Method: <okhttp3.internal.platform.Platform: javax.net.ssl.SSLContext getSSLContext()>
		SHA-256: 89a8e230927164f11f896f631e093e02a525920efdf8eaa1cf5846112cb22ac4
		Secure: false
	Object:
		Variable: $r7
		Type: javax.net.ssl.SSLParameters
		Statement: specialinvoke $r7.<javax.net.ssl.SSLParameters: void <init>()>()
		Method: <com.tuya.smart.mqttclient.mqttv3.internal.SSLNetworkModule: void start()>
		SHA-256: e66c8b429228ff396b64854dc404cff12999707f03ac1dc95d4fc996b038bb3f
		Secure: false
	Object:
		Variable: varReplacer2114922
		Type: java.lang.String
		Statement: specialinvoke $r7.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r2, varReplacer2114922)
		Method: <com.tuya.smart.android.common.utils.AesGcmUtil: byte[] decryptBytes2Bytes(byte[],byte[],byte[],byte[])>
		SHA-256: 42404d04e16b1c7d1873d71798fec2c036fd446b0ddd9a563659ac1ab8426058
		Secure: false
	Object:
		Variable: $r9
		Type: javax.crypto.spec.GCMParameterSpec
		Statement: specialinvoke $r9.<javax.crypto.spec.GCMParameterSpec: void <init>(int,byte[])>(varReplacer2538468, $r4)
		Method: <com.tuya.smart.android.common.utils.AesGcmUtil: byte[] encryptBytes2Bytes(byte[],byte[],byte[],byte[])>
		SHA-256: c05378b13dd31772823cee6954c0c92700abeff1b9e3c8cb722a2e85474c07e0
		Secure: false
	Object:
		Variable: $r11
		Type: java.security.SecureRandom
		Statement: $r11 = staticinvoke <java.security.SecureRandom: java.security.SecureRandom getInstance(java.lang.String,java.security.Provider)>(varReplacer3125873, $r5)
		Method: <io.grpc.okhttp.OkHttpChannelBuilder: javax.net.ssl.SSLSocketFactory createSocketFactory()>
		SHA-256: 12dafddf31c9fe1d8e257dd7b8a05ee6326338d78a76ecad99e2dd1ca3504939
		Secure: true
	Object:
		Variable: $r7
		Type: byte[]
		Statement: $r7 = virtualinvoke $r9.<java.security.MessageDigest: byte[] digest(byte[])>($r7)
		Method: <com.tuya.sdk.bluetooth.ddqqbbq$bdpdqbp: void run()>
		SHA-256: 66c0ef9dccbc3b9ebef30facc1e3be758dad2d47a22f063e65ce5cbbbcbda17
		Secure: false
	Object:
		Variable: $r3
		Type: java.security.Signature
		Statement: $r3 = staticinvoke <java.security.Signature: java.security.Signature getInstance(java.lang.String)>($r2)
		Method: <io.jsonwebtoken.impl.crypto.SignatureProvider: java.security.Signature getSignatureInstance()>
		SHA-256: 5245505faa1caa67a21a8f77bf7afcdbd914eeb8cbdcc06c6e02f21254765066
		Secure: false
	Object:
		Variable: $r0
		Type: byte[]
		Statement: $r0 = virtualinvoke $r2.<java.security.MessageDigest: byte[] digest(byte[])>($r0)
		Method: <hlr: byte[] a(byte[],java.lang.String)>
		SHA-256: 5221a7cd400f9c4dd43e4f21900b401871e0b54b34402ddb0678d6be553905fe
		Secure: false
	Object:
		Variable: $r1
		Type: byte[]
		Statement: $r1 = virtualinvoke $r4.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r1)
		Method: <com.tuya.smart.android.common.utils.AESUtil: byte[] encryptWithBytes(byte[])>
		SHA-256: 3391739ff9365f2fb45717cf8220ddf2a308570437aa6157efbbea8fc20fb4a
		Secure: false
	Object:
		Variable: $r2
		Type: java.security.spec.ECGenParameterSpec
		Statement: specialinvoke $r2.<java.security.spec.ECGenParameterSpec: void <init>(java.lang.String)>(varReplacer1886415)
		Method: <com.tuya.bouncycastle.jcajce.provider.asymmetric.ec.KeyPairGeneratorSpi$EC: void <clinit>()>
		SHA-256: 35aba139cabf55077f20f940d117fe5bf1b79e369ab89cfc156bb84cb6eb262c
		Secure: true
	Object:
		Variable: $r2
		Type: byte[]
		Statement: $r2 = virtualinvoke $r3.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r2)
		Method: <com.tuya.sdk.security.EncryptionManager: byte[] pdqppqb(com.tuya.sdk.security.EncryptionManager$bdpdqbp)>
		SHA-256: b6ff8f517045f4c06a849e589deea8ab46562da6206da49ab7fd793f28636dd
		Secure: false
	Object:
		Variable: $r0
		Type: byte[]
		Statement: $r0 = virtualinvoke $r1.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r0)
		Method: <com.amazon.identity.auth.device.datastore.AESEncryptor: byte[] performRSACipherOperation(javax.crypto.Cipher,byte[])>
		SHA-256: 14a4573860ebdb622256c3a153eaf360e069ac63cff54960b4fec6d92588d0e3
		Secure: false
	Object:
		Variable: $r6
		Type: java.security.SecureRandom
		Statement: specialinvoke $r6.<java.security.SecureRandom: void <init>()>()
		Method: <com.tuya.sdk.user.pbbppqb: void uploadUserAvatar(java.io.File,com.tuya.smart.android.user.api.IBooleanCallback)>
		SHA-256: c967d33e13dfa3cea2142afeda229ba43ba34635f249d8e8b72d983a4e5c6c56
		Secure: true
	Object:
		Variable: $r3
		Type: javax.net.ssl.SSLContext
		Statement: $r3 = staticinvoke <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String,java.security.Provider)>(varReplacer1753189, $r2)
		Method: <okhttp3.internal.platform.ConscryptPlatform: javax.net.ssl.SSLContext getSSLContext()>
		SHA-256: d1c53453f2366a147181df29b5f4b17242304e2cd577a3f0d6daaa85af4eea8e
		Secure: false
	Object:
		Variable: $r7
		Type: java.lang.String
		Statement: specialinvoke $r5.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r6, $r7)
		Method: <cpb: java.io.InputStream a(okhttp3.ResponseBody)>
		SHA-256: 241a3c86fb72ff106eab62590adfb38776d73d050bd1d8e4536678f779cf0f79
		Secure: false
	Object:
		Variable: $r5
		Type: byte[]
		Statement: $r5 = virtualinvoke $r4.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r5)
		Method: <com.tuya.smart.android.common.utils.AESUtil: byte[] encryptWithBytes(java.lang.String)>
		SHA-256: 4870598332f10eb5ebfa8a36f059ae1566f01fb5961adaa24c99a37ea78d5daa
		Secure: false
	Object:
		Variable: $r3
		Type: java.security.spec.ECGenParameterSpec
		Statement: specialinvoke $r3.<java.security.spec.ECGenParameterSpec: void <init>(java.lang.String)>($r0)
		Method: <com.tuya.smart.android.network.util.ECDHEngine: com.tuya.smart.android.network.util.ECDHEngine$KeyEntity generateKeyPair(java.lang.String)>
		SHA-256: 684ec5d2e1bcc3577f56e9928a6d5b42de8a494022ae120a98d3516b51868102
		Secure: true
	Object:
		Variable: $r0
		Type: byte[]
		Statement: $r0 = virtualinvoke $r1.<java.security.MessageDigest: byte[] digest(byte[])>($r0)
		Method: <dnk: byte[] a(byte[])>
		SHA-256: 2a6e379c4f27646d0eb09624ad61507c0af05f05a64ee0b09cd5faadad660364
		Secure: false
	Object:
		Variable: $r5
		Type: java.security.SecureRandom
		Statement: specialinvoke $r5.<java.security.SecureRandom: void <init>()>()
		Method: <com.tuya.sdk.bluetooth.pbpqbdq: void <init>(byte[],byte[],com.tuya.sdk.bluetooth.pbpqbdq$qddqppb)>
		SHA-256: 693f9e60716beaf09a7b69ce08b0236aa8fbc7dc1afe5470941a93cd91d15f95
		Secure: true
	Object:
		Variable: $r3
		Type: javax.net.ssl.SSLContext
		Statement: $r3 = staticinvoke <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String)>(varReplacer1753149)
		Method: <okhttp3.internal.platform.AndroidPlatform: javax.net.ssl.SSLContext getSSLContext()>
		SHA-256: ff469b7e187e94e545c98f5d73b8300dc5dcbd69f914e3e1e1caae3204eafda2
		Secure: false
	Object:
		Variable: $r5
		Type: byte[]
		Statement: $r5 = virtualinvoke $r4.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r5)
		Method: <com.tuya.smart.android.common.utils.AESUtil: java.lang.String encryptWithBase64(java.lang.String)>
		SHA-256: 6b3a816b91c2146936fbeb8b29e0cc95d740fc3c2d7f792156d1f2b23b9aa11a
		Secure: false
	Object:
		Variable: varReplacer3261056
		Type: java.lang.String
		Statement: $r5 = staticinvoke <java.security.KeyFactory: java.security.KeyFactory getInstance(java.lang.String)>(varReplacer3261056)
		Method: <cik: java.security.interfaces.ECPublicKey a(chy$b)>
		SHA-256: 8be2015bd20999c9d6a8b63372d5102bccb83611fd233d43b71a8d1abc2e0365
		Secure: false
	Object:
		Variable: varReplacer1044841
		Type: java.lang.String
		Statement: specialinvoke $r10.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r3, varReplacer1044841)
		Method: <cgz: cgz$a b(android.content.Context)>
		SHA-256: 623d9a81dd41b4dc164013317ee4c6265d508c747687eafcc177f7e78a046349
		Secure: false
	Object:
		Variable: $r11
		Type: java.security.MessageDigest
		Statement: $r11 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer955332)
		Method: <com.tuya.smart.google_flip.view.GoogleFlipAuthActivity: boolean c()>
		SHA-256: 9b143bddbba6176037d663f59c51913b8a0ca59b7bba811b8ddf1b0031b65d6c
		Secure: true
	Object:
		Variable: $r4
		Type: javax.crypto.Cipher
		Statement: $r4 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>($r3)
		Method: <com.tuya.smart.android.common.utils.AESUtil: java.lang.String decryptWithBase64(java.lang.String)>
		SHA-256: 73279fcdf8f3ca9f352ab916e0f36b579a36dc46c69387d1c60ba0e3eba76d2b
		Secure: false
	Object:
		Variable: $r4
		Type: javax.net.ssl.TrustManager[]
		Statement: $r4 = virtualinvoke $r3.<javax.net.ssl.TrustManagerFactory: javax.net.ssl.TrustManager[] getTrustManagers()>()
		Method: <coo: okhttp3.OkHttpClient$Builder a(okhttp3.OkHttpClient$Builder)>
		SHA-256: 590e331f0189f50c8c74a47b51b72c72a581471b6eb94c82619f3e16030187cd
		Secure: false
	Object:
		Variable: $r0
		Type: java.security.SecureRandom
		Statement: specialinvoke $r0.<java.security.SecureRandom: void <init>()>()
		Method: <gjc: byte[] a()>
		SHA-256: 61be9deabb0d94153f814dcf3a0472aa555c8589c2162bade6371afa12d124ad
		Secure: true
	Object:
		Variable: $r6
		Type: javax.crypto.SecretKey
		Statement: $r6 = virtualinvoke $r2.<javax.crypto.KeyGenerator: javax.crypto.SecretKey generateKey()>()
		Method: <dde: javax.crypto.SecretKey d(java.lang.String)>
		SHA-256: b0c75a6990611f3379a1f00c98e41bcafaab1c1b5c5d97288273cf8b5818130f
		Secure: true
	Object:
		Variable: $r3
		Type: javax.net.ssl.TrustManager[]
		Statement: $r3 = virtualinvoke $r2.<javax.net.ssl.TrustManagerFactory: javax.net.ssl.TrustManager[] getTrustManagers()>()
		Method: <org.chromium.net.X509Util: org.chromium.net.X509Util$X509TrustManagerImplementation createTrustManager(java.security.KeyStore)>
		SHA-256: e750859bb9f287d088db72b90bfa7415f9739aa726970f79bce211632dbeccf3
		Secure: false
	Object:
		Variable: $r111
		Type: java.security.SecureRandom
		Statement: specialinvoke $r111.<java.security.SecureRandom: void <init>()>()
		Method: <hjt: hjv b(hju)>
		SHA-256: 9f3d33d436b8cf5f6e6ef3804ce215914c869800027db96abd60f8b84f13c250
		Secure: true
	Object:
		Variable: $r5
		Type: javax.crypto.spec.IvParameterSpec
		Statement: specialinvoke $r5.<javax.crypto.spec.IvParameterSpec: void <init>(byte[])>($r3)
		Method: <com.amazon.identity.auth.device.datastore.AESEncryptor: java.lang.String encryptData(java.lang.String)>
		SHA-256: 972d344a2fac637e9cbfe94ac4a1894bda51d0793651c0c6cc078e7e1909bbe
		Secure: true
	Object:
		Variable: $r7
		Type: javax.crypto.spec.IvParameterSpec
		Statement: specialinvoke $r7.<javax.crypto.spec.IvParameterSpec: void <init>(byte[])>($r5)
		Method: <cgz: java.lang.String a(android.content.Context,java.lang.String)>
		SHA-256: eed5f12cdd9e3ab4af07e06672a3ebfb41e034dde825a39a8364f1b951d67827
		Secure: false
	Object:
		Variable: $r4
		Type: java.security.SecureRandom
		Statement: specialinvoke $r4.<java.security.SecureRandom: void <init>()>()
		Method: <com.tuya.sdk.bluetooth.pdppdpp: int getLocalDeviceAddress()>
		SHA-256: 4e988d6d8200c2e7bbe7ee7f24552c07e6a505a019785871c17885a51405f141
		Secure: true
	Object:
		Variable: $r3
		Type: byte[]
		Statement: $r3 = virtualinvoke $r2.<java.security.MessageDigest: byte[] digest()>()
		Method: <com.tuya.smart.android.common.utils.MD5Util: byte[] computeMD5Hash(java.io.InputStream)>
		SHA-256: 94ff51caf30534f0447fab2253d2255dba4e0b77406e320ebce5041e1c84e346
		Secure: false
	Object:
		Variable: $r2
		Type: java.security.spec.ECGenParameterSpec
		Statement: specialinvoke $r2.<java.security.spec.ECGenParameterSpec: void <init>(java.lang.String)>(varReplacer1886418)
		Method: <com.tuya.bouncycastle.jcajce.provider.asymmetric.ec.KeyPairGeneratorSpi$EC: void <clinit>()>
		SHA-256: d2396f6bcfe68436dbebc04e04daf9bb91a1e5516870483273656c3fdd1d1f2f
		Secure: true
	Object:
		Variable: varReplacer1084123
		Type: java.lang.String
		Statement: specialinvoke $r5.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r0, varReplacer1084123)
		Method: <com.tuya.smart.android.network.util.AESCBCUtil: java.lang.String encrypt(byte[],java.lang.String,java.lang.String)>
		SHA-256: 8e15802671a5912e6ff6fe9826d111d0f0310d9d632a3883cf95471373556751
		Secure: false
	Object:
		Variable: $r5
		Type: javax.crypto.spec.SecretKeySpec
		Statement: specialinvoke $r5.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r0, varReplacer1084123)
		Method: <com.tuya.smart.android.network.util.AESCBCUtil: java.lang.String encrypt(byte[],java.lang.String,java.lang.String)>
		SHA-256: 299f598bfdb9e49b0d37a580880d2b8f86d2ef99bfcfbb42dcea032fd5c7b238
		Secure: false
	Object:
		Variable: $r3
		Type: byte[]
		Statement: $r1 = virtualinvoke $r5.<javax.crypto.Cipher: byte[] doFinal(byte[],int,int)>($r3, varReplacer45957, $i0)
		Method: <com.tuya.smart.android.network.util.AESCTRUtil: java.lang.String decrypt(byte[],java.lang.String)>
		SHA-256: c3af0173a700b5cc93f2c3b263348ec058058c6742942adf3fee58329b2ebd38
		Secure: false
	Object:
		Variable: $r25
		Type: javax.net.ssl.TrustManager[]
		Statement: $r25 = virtualinvoke $r24.<javax.net.ssl.TrustManagerFactory: javax.net.ssl.TrustManager[] getTrustManagers()>()
		Method: <com.tuya.smart.mqttclient.mqttv3.internal.security.SSLSocketFactoryFactory: javax.net.ssl.SSLContext getSSLContext(java.lang.String)>
		SHA-256: 4845d370b2525dcea0df759ea58084eaf3dcb6fdbc3f0bf5f8bd3b0be6f2613e
		Secure: false
	Object:
		Variable: $r24
		Type: javax.net.ssl.TrustManagerFactory
		Statement: $r24 = staticinvoke <javax.net.ssl.TrustManagerFactory: javax.net.ssl.TrustManagerFactory getInstance(java.lang.String)>($r10)
		Method: <com.tuya.smart.mqttclient.mqttv3.internal.security.SSLSocketFactoryFactory: javax.net.ssl.SSLContext getSSLContext(java.lang.String)>
		SHA-256: 1b1cfa5406c542c037d6f3f8d06a2d90f6007203e89e10b82f015aad475cbe9a
		Secure: false
	Object:
		Variable: $r3
		Type: javax.net.ssl.SSLContext
		Statement: $r3 = staticinvoke <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String,java.security.Provider)>(varReplacer1753220, $r2)
		Method: <okhttp3.internal.platform.ConscryptPlatform: javax.net.ssl.SSLContext getSSLContext()>
		SHA-256: 9fc3be3da7e221e98c956539f69a9fdde309473a4983070ad346e04868bfb63a
		Secure: false
	Object:
		Variable: $r2
		Type: java.security.MessageDigest
		Statement: $r2 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer2145086)
		Method: <bjs: java.lang.String a(byte[])>
		SHA-256: 1c230a655c7aeedbfb669c0276effcecc51dc76d47f6929a5835ab5fd988f949
		Secure: true
	Object:
		Variable: $r9
		Type: java.security.MessageDigest
		Statement: $r9 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer172306)
		Method: <com.tuya.sdk.bluetooth.ddqqbbq$bdpdqbp: void run()>
		SHA-256: 574e6777422851d8d34547ae82f377ff4e831ffd882333a6754fb831fdff347e
		Secure: false
	Object:
		Variable: $z0
		Type: boolean
		Statement: $z0 = virtualinvoke $r4.<java.security.Signature: boolean verify(byte[])>($r3)
		Method: <io.jsonwebtoken.impl.crypto.RsaSignatureValidator: boolean doVerify(java.security.Signature,java.security.PublicKey,byte[],byte[])>
		SHA-256: c0841fc704582d1b403210b4a997499491bd2403192b2066ef83a8c76f10261a
		Secure: false
	Object:
		Variable: $r1
		Type: java.security.SecureRandom
		Statement: specialinvoke $r1.<java.security.SecureRandom: void <init>()>()
		Method: <com.tuya.sdk.bluetooth.pbppbbq: int bdpdqbp()>
		SHA-256: c031035f4faf8d2e492d09a138749479ce10e8a9105789c05ad947d11c8541d7
		Secure: true
	Object:
		Variable: varReplacer2358243
		Type: java.lang.String
		Statement: specialinvoke $r5.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r3, varReplacer2358243)
		Method: <com.tuya.sdk.security.EncryptionManager: javax.crypto.SecretKey bdpdqbp(android.content.SharedPreferences)>
		SHA-256: 182722de63c399c4a324b7a9c894be1ebd7491093d80fc2b4f8647d3d88f1c46
		Secure: false
	Object:
		Variable: $r3
		Type: java.security.spec.ECParameterSpec
		Statement: specialinvoke $r3.<java.security.spec.ECParameterSpec: void <init>(java.security.spec.EllipticCurve,java.security.spec.ECPoint,java.math.BigInteger,int)>($r1, $r5, $r6, $i0)
		Method: <com.tuya.bouncycastle.jcajce.provider.asymmetric.ec.BCECPublicKey: java.security.spec.ECParameterSpec createSpec(java.security.spec.EllipticCurve,com.tuya.bouncycastle.crypto.params.ECDomainParameters)>
		SHA-256: aacdfc4aff96d3f907c4966102111de31dbc249d6e5bc84233ca7bdaa641cffa
		Secure: true
	Object:
		Variable: $r2
		Type: java.security.SecureRandom
		Statement: $r2 = staticinvoke <java.security.SecureRandom: java.security.SecureRandom getInstance(java.lang.String)>(varReplacer2538478)
		Method: <com.tuya.smart.android.common.utils.AesGcmUtil: byte[] generateRandomNonce()>
		SHA-256: 31fb4816aef374a836c21ebe28f829d540823f3d87c61295cd640a2082fe8062
		Secure: false
	Object:
		Variable: $r7
		Type: javax.net.ssl.SSLParameters
		Statement: specialinvoke $r7.<javax.net.ssl.SSLParameters: void <init>()>()
		Method: <com.tuya.smart.mqttclient.mqttv3.internal.SSLNetworkModule: void start()>
		SHA-256: e66c8b429228ff396b64854dc404cff12999707f03ac1dc95d4fc996b038bb3f
		Secure: false
	Object:
		Variable: $r24
		Type: javax.net.ssl.TrustManagerFactory
		Statement: $r24 = staticinvoke <javax.net.ssl.TrustManagerFactory: javax.net.ssl.TrustManagerFactory getInstance(java.lang.String,java.lang.String)>($r10, $r12)
		Method: <com.tuya.smart.mqttclient.mqttv3.internal.security.SSLSocketFactoryFactory: javax.net.ssl.SSLContext getSSLContext(java.lang.String)>
		SHA-256: af46d94a3c8ad5f8bc5896446346db3b67bc12b1fcfb444e56b71c1c13ee58f4
		Secure: false
	Object:
		Variable: $r1
		Type: byte[]
		Statement: $r1 = virtualinvoke $r3.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r1)
		Method: <com.tuya.sdk.security.EncryptionManager: com.tuya.sdk.security.EncryptionManager$bdpdqbp bdpdqbp(byte[],byte[])>
		SHA-256: c004c4609c8d069be2e48b0cb9553afa5adaa78acf4285ae505213f41dbe5739
		Secure: false
	Object:
		Variable: $r6
		Type: javax.crypto.Cipher
		Statement: $r6 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer1084134)
		Method: <com.tuya.smart.android.network.util.AESCBCUtil: java.lang.String encrypt(byte[],java.lang.String,java.lang.String)>
		SHA-256: c288add68aae0e8b6ac7220e1af35265ed96d9b508c9728f3bfef9166102bd20
		Secure: false
	Object:
		Variable: $r3
		Type: java.security.KeyFactory
		Statement: $r3 = staticinvoke <java.security.KeyFactory: java.security.KeyFactory getInstance(java.lang.String)>(varReplacer2850522)
		Method: <bvu: java.security.PublicKey b(java.lang.String)>
		SHA-256: b6dad69b221880da8586c45dcfc60a63089bb92376b3f971e28b55b55ad952bf
		Secure: false
	Object:
		Variable: $r3
		Type: javax.net.ssl.TrustManager[]
		Statement: $r3 = virtualinvoke $r2.<javax.net.ssl.TrustManagerFactory: javax.net.ssl.TrustManager[] getTrustManagers()>()
		Method: <com.tuya.smart.android.network.TuyaSmartNetWork: javax.net.ssl.X509TrustManager systemDefaultTrustManager()>
		SHA-256: f714ecb4c22f0d900edb3df5ecfb6f92f6a74e5e49d094dc5ab47fe7f45074e3
		Secure: false
	Object:
		Variable: $r7
		Type: javax.crypto.spec.SecretKeySpec
		Statement: specialinvoke $r7.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r6, $r3)
		Method: <io.jsonwebtoken.SigningKeyResolverAdapter: java.security.Key resolveSigningKey(io.jsonwebtoken.JwsHeader,io.jsonwebtoken.Claims)>
		SHA-256: bdb6f7a9c8f1c1c52d0737870cbdedd68c6fe43cff656237a219138df2ee6a4d
		Secure: false
	Object:
		Variable: $r2
		Type: byte[]
		Statement: virtualinvoke $r1.<java.security.SecureRandom: void nextBytes(byte[])>($r2)
		Method: <com.amazon.identity.auth.device.authorization.CodeChallengeWorkflow: byte[] generateRandomOctetSequence()>
		SHA-256: 240dd916a460a17630357dbb548178936a0c1bd9e8f0486be1fbfc7d51132ee0
		Secure: true
	Object:
		Variable: $r1
		Type: byte[]
		Statement: $r1 = virtualinvoke $r5.<javax.crypto.Cipher: byte[] doFinal(byte[],int,int)>($r3, varReplacer45957, $i0)
		Method: <com.tuya.smart.android.network.util.AESCTRUtil: java.lang.String decrypt(byte[],java.lang.String)>
		SHA-256: a18e428c4bdd21bd13dca25e0327160382b2ba68af7bc508a4c8afee0233a1bc
		Secure: false
	Object:
		Variable: $r1
		Type: java.security.MessageDigest
		Statement: $r1 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer747417)
		Method: <com.tuya.sdk.bluetooth.qbdbbdb: byte[] pppbppp(byte[])>
		SHA-256: 2075d9c6dd7c3f594a4103d23a4537a4e0f3a83771fa09c9826461d1b3a50208
		Secure: false
	Object:
		Variable: $r39
		Type: javax.crypto.spec.SecretKeySpec
		Statement: specialinvoke $r39.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r13, $r1)
		Method: <io.jsonwebtoken.impl.DefaultJwtParser: io.jsonwebtoken.Jwt parse(java.lang.String)>
		SHA-256: f80989adcf7789e57174bcda2542dfbfca6b93719d40859165b485df61993b34
		Secure: false
	Object:
		Variable: $r4
		Type: java.security.MessageDigest
		Statement: $r4 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer2128347)
		Method: <dox$a: java.lang.String a(java.lang.String,long)>
		SHA-256: a41358dfafaec11de16da4ed06a2c191a602d2f66b5c4433a1676a0a933c0706
		Secure: false
	Object:
		Variable: $r4
		Type: javax.crypto.CipherInputStream
		Statement: specialinvoke $r4.<javax.crypto.CipherInputStream: void <init>(java.io.InputStream,javax.crypto.Cipher)>($r5, $r2)
		Method: <com.tuya.sdk.security.EncryptionManager: byte[] bdpdqbp(byte[])>
		SHA-256: 676576a5124a8ff1fdda4229b50ccfc4c79f84cbef62dbfd0cbe45c162a333c3
		Secure: false
	Object:
		Variable: $r0
		Type: java.security.SecureRandom
		Statement: specialinvoke $r0.<java.security.SecureRandom: void <init>()>()
		Method: <com.amazon.identity.auth.device.datastore.AESEncryptor: byte[] generateIV()>
		SHA-256: cec69e047e983201c8a44815f84b8a284290af24f9aa256105827675acffc7be
		Secure: true
	Object:
		Variable: $r11
		Type: java.security.KeyPairGenerator
		Statement: $r11 = staticinvoke <java.security.KeyPairGenerator: java.security.KeyPairGenerator getInstance(java.lang.String,java.lang.String)>(varReplacer1963431, varReplacer1963432)
		Method: <com.amazon.identity.auth.device.datastore.AESEncryptor: void generateRSAKeysIfNeeded(android.content.Context)>
		SHA-256: b1dfda89ddf172af2422bab78bd776e9f3d20a8ee8886c41bb43c55ba6d88d0e
		Secure: false
	Object:
		Variable: $r9
		Type: java.security.MessageDigest
		Statement: $r9 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer191348)
		Method: <com.tuya.sdk.bluetooth.dddbppd$bdpdqbp: void run()>
		SHA-256: 9e3f35c3b7ce60767b2e95f656592f914d90982acc6cb7c32200c9de4e9a5cfd
		Secure: false
	Object:
		Variable: $r7
		Type: javax.net.ssl.SSLContext
		Statement: $r7 = staticinvoke <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String)>($r4)
		Method: <com.tuya.smart.mqttclient.mqttv3.internal.security.SSLSocketFactoryFactory: javax.net.ssl.SSLContext getSSLContext(java.lang.String)>
		SHA-256: faf8a006ee2bf18d70acac36e6184b973d313a1f622eaa10afaeb42c1349d99c
		Secure: false
	Object:
		Variable: $r6
		Type: javax.crypto.spec.SecretKeySpec
		Statement: specialinvoke $r6.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r5, varReplacer893750)
		Method: <dmo: java.lang.String a(java.lang.String,java.lang.String,java.lang.String)>
		SHA-256: 1a9f855ba1c0a818afb77b200643456f737f15b901d6b369c05af42af8c44d4e
		Secure: false
	Object:
		Variable: $r4
		Type: javax.crypto.Cipher
		Statement: $r4 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>($r3)
		Method: <com.tuya.smart.android.common.utils.AESUtil: java.lang.String encrypt(java.lang.String)>
		SHA-256: 1053fd1204fd79e79f1988d177e7dfe5968736074acfe778afed99fad39bfaa6
		Secure: false
	Object:
		Variable: $r3
		Type: javax.net.ssl.SSLContext
		Statement: $r3 = staticinvoke <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String)>(varReplacer2802911)
		Method: <hin: javax.net.ssl.SSLSocketFactory a(javax.net.ssl.X509TrustManager)>
		SHA-256: d6628b7cb5cd7c41e7044666720c1de43c2a217208ab899db26d4c19d00b0d0c
		Secure: false
	Object:
		Variable: $r1
		Type: java.security.MessageDigest
		Statement: $r1 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer1341215)
		Method: <com.facebook.common.util.SecureHashUtil: java.lang.String makeSHA1HashBase64(byte[])>
		SHA-256: ebcfa07f6d9fa79b9d1567975c13a3ebe793269721dcc1c7ae3921d6fcb0d7d5
		Secure: false
	Object:
		Variable: $r4
		Type: java.security.spec.ECParameterSpec
		Statement: specialinvoke $r4.<java.security.spec.ECParameterSpec: void <init>(java.security.spec.EllipticCurve,java.security.spec.ECPoint,java.math.BigInteger,int)>($r11, $r13, $r7, $i0)
		Method: <com.tuya.bouncycastle.jcajce.provider.asymmetric.ec.BCECPrivateKey: void <init>(java.lang.String,com.tuya.bouncycastle.crypto.params.ECPrivateKeyParameters,com.tuya.bouncycastle.jcajce.provider.asymmetric.ec.BCECPublicKey,java.security.spec.ECParameterSpec,com.tuya.bouncycastle.jcajce.provider.config.ProviderConfiguration)>
		SHA-256: 3791d0e41e5884e70c40ed063afce31c8bbf57c28cb756f172c554e92147502c
		Secure: true
	Object:
		Variable: $r1
		Type: byte[]
		Statement: $r1 = virtualinvoke $r5.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r0)
		Method: <com.tuya.sdk.bluetooth.qbdbbdb: byte[] pdqppqb(byte[],byte[],byte[])>
		SHA-256: 8494ea1c3f5bc0cd56c255f9db36b7513790045135eb355343d65bc9a43bae5a
		Secure: false
	Object:
		Variable: $r8
		Type: javax.crypto.Cipher
		Statement: $r8 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>($r7)
		Method: <cpb: java.io.InputStream a(okhttp3.ResponseBody)>
		SHA-256: 3f2ff9fabd1a164671c75651b0545496543f02eddf850f415b370d108f49ad4b
		Secure: false
	Object:
		Variable: $r2
		Type: javax.crypto.spec.IvParameterSpec
		Statement: specialinvoke $r2.<javax.crypto.spec.IvParameterSpec: void <init>(byte[])>($r1)
		Method: <cpb: java.io.InputStream a(okhttp3.ResponseBody)>
		SHA-256: 626d5e9b0230d15acd35525ab46796d041ed0b1ca06adf9620c275b51140d440
		Secure: false
	Object:
		Variable: $r0
		Type: java.security.MessageDigest
		Statement: $r0 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>($r2)
		Method: <com.google.android.gms.common.util.AndroidUtilsLight: java.security.MessageDigest zzj(java.lang.String)>
		SHA-256: ae3618d0d1f264c3cd26a80f719d0eedb09a990816926713b695a9a95da4ac0d
		Secure: false
	Object:
		Variable: $r10
		Type: javax.crypto.spec.IvParameterSpec
		Statement: specialinvoke $r10.<javax.crypto.spec.IvParameterSpec: void <init>(byte[],int,int)>($r4, varReplacer3191722, varReplacer3191723)
		Method: <cgz: java.lang.String b(android.content.Context,java.lang.String)>
		SHA-256: 4e790da9b14846202bdbfde3291dd88bdb1968a935b9cd74d46329cafa4e11e
		Secure: false
	Object:
		Variable: $r7
		Type: byte[]
		Statement: $r7 = virtualinvoke $r9.<java.security.MessageDigest: byte[] digest(byte[])>($r7)
		Method: <com.tuya.sdk.bluetooth.dddbppd$bdpdqbp: void run()>
		SHA-256: 85ee0da60ab0f82c28336b7e04a0824f4beaf6b0449b0f02be8ca1bc7168e287
		Secure: false
	Object:
		Variable: $r1
		Type: java.security.KeyStore
		Statement: $r1 = staticinvoke <java.security.KeyStore: java.security.KeyStore getInstance(java.lang.String)>(varReplacer1401621)
		Method: <com.tuya.sdk.security.EncryptionManager: void bppdpdq()>
		SHA-256: 5d545709f6626f09af6522f25a94301234c64a98eb93517ace6e5b57b36efca4
		Secure: false
	Object:
		Variable: varReplacer1084242
		Type: java.lang.String
		Statement: $r15 = staticinvoke <java.security.KeyFactory: java.security.KeyFactory getInstance(java.lang.String)>(varReplacer1084242)
		Method: <com.tuya.smart.android.network.util.ECDHEngine: java.security.PublicKey decodeECPoint(java.lang.String,java.lang.String)>
		SHA-256: d256e0234a01b5cef736aa1bb99519b5cbb374391be5ae2e2ec4ff8eeae38b03
		Secure: false
	Object:
		Variable: $r13
		Type: java.security.spec.ECParameterSpec
		Statement: specialinvoke $r13.<java.security.spec.ECParameterSpec: void <init>(java.security.spec.EllipticCurve,java.security.spec.ECPoint,java.math.BigInteger,int)>($r12, $r15, $r8, $i0)
		Method: <com.tuya.bouncycastle.jcajce.provider.asymmetric.ec.BCECPrivateKey: void <init>(java.lang.String,com.tuya.bouncycastle.crypto.params.ECPrivateKeyParameters,com.tuya.bouncycastle.jcajce.provider.asymmetric.ec.BCECPublicKey,com.tuya.bouncycastle.jce.spec.ECParameterSpec,com.tuya.bouncycastle.jcajce.provider.config.ProviderConfiguration)>
		SHA-256: 86df246b8c1578d3501a486e27f08db6d1aa41db6923499c742aa2e3fe110297
		Secure: true
	Object:
		Variable: $r0
		Type: byte[]
		Statement: $r0 = virtualinvoke $r1.<java.security.MessageDigest: byte[] digest(byte[])>($r0)
		Method: <com.tuya.smart.android.common.utils.SHA256Util: byte[] getHash(byte[])>
		SHA-256: 5999bebcf665390b586137fb4a894e7391b0c6f0874104348df2a80548bd6ce2
		Secure: true
	Object:
		Variable: $r0
		Type: javax.crypto.spec.SecretKeySpec
		Statement: specialinvoke $r0.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r1, varReplacer45951)
		Method: <com.tuya.smart.android.network.util.AESCTRUtil: java.lang.String decrypt(byte[],java.lang.String)>
		SHA-256: c678ca697fe08494bf11e5c6842fccae88a511e091c1f23f8f3bdb13b40d7be4
		Secure: false
	Object:
		Variable: $r4
		Type: java.security.spec.X509EncodedKeySpec
		Statement: specialinvoke $r4.<java.security.spec.X509EncodedKeySpec: void <init>(byte[])>($r2)
		Method: <bvu: java.security.PublicKey b(java.lang.String)>
		SHA-256: 88e5dc60accb727ec5fd2b955d269af0b55e9f089f8c362533b8fd19a4bf4399
		Secure: false
	Object:
		Variable: $r7
		Type: java.security.PrivateKey
		Statement: $r7 = virtualinvoke $r4.<java.security.KeyPair: java.security.PrivateKey getPrivate()>()
		Method: <com.tuya.smart.android.network.util.ECDHEngine: com.tuya.smart.android.network.util.ECDHEngine$KeyEntity generateKeyPair(java.lang.String)>
		SHA-256: cb9f87fa754425809f9376d12042459446ff99e412ae7342c7a4d9cd71e51073
		Secure: false
	Object:
		Variable: $r2
		Type: byte[]
		Statement: $r2 = virtualinvoke $r1.<java.security.MessageDigest: byte[] digest(byte[])>($r2)
		Method: <com.tuya.sdk.security.EncryptionManager: java.lang.String pppbppp(java.lang.String)>
		SHA-256: da7a1208aaa668b733c85a21eae409ea8bfcd05f55ad7a1dc3a1e3a02cf0e898
		Secure: true
	Object:
		Variable: $r3
		Type: javax.crypto.Cipher
		Statement: $r3 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String,java.lang.String)>(varReplacer2639724, varReplacer2639725)
		Method: <com.tuya.sdk.security.EncryptionManager: javax.crypto.Cipher pdqppqb(byte[],boolean)>
		SHA-256: d1e2e09e92bee97c673754e14ceafef43057f64802610d1acc0be5fa5d24f2fd
		Secure: false
	Object:
		Variable: $r4
		Type: javax.crypto.Cipher
		Statement: $r4 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>($r3)
		Method: <com.tuya.smart.android.common.utils.AESUtil: byte[] decryptWithBytes(byte[])>
		SHA-256: 9a97ab8158c304f102c41f7e78d4c53ad9fb716256d9eadfdc38ac1803ce0030
		Secure: false
	Object:
		Variable: $r7
		Type: java.security.MessageDigest
		Statement: $r7 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>($r2)
		Method: <com: void b(java.lang.String,java.lang.String,com.facebook.react.bridge.Promise)>
		SHA-256: fc86cfefd3877eda08e300df3b678293351c287644e78f2c8f675151ad5cbd1d
		Secure: true
	Object:
		Variable: $r9
		Type: java.security.SecureRandom
		Statement: specialinvoke $r9.<java.security.SecureRandom: void <init>()>()
		Method: <com.tuya.bouncycastle.math.ec.ECFieldElement$Fp: com.tuya.bouncycastle.math.ec.ECFieldElement sqrt()>
		SHA-256: c183463335fa984b14deac47844a2183c26886322be744ae8f8dfc855b08358d
		Secure: true
	Object:
		Variable: $r0
		Type: java.security.SecureRandom
		Statement: specialinvoke $r0.<java.security.SecureRandom: void <init>()>()
		Method: <io.jsonwebtoken.impl.crypto.SignatureProvider: void <clinit>()>
		SHA-256: bd77c10f408e393bf6a88a9f259346bb12383ce9f5ef6237ca9f00f578063397
		Secure: true
	Object:
		Variable: $r3
		Type: byte[]
		Statement: $r3 = interfaceinvoke $r5.<javax.crypto.SecretKey: byte[] getEncoded()>()
		Method: <com.amazon.identity.auth.device.datastore.AESEncryptor: byte[] getEncryptionKey()>
		SHA-256: a5d1c5aa3b6449937a9fcc8db19e9a3eb4a0deb6c0ae1f24ce72b91bd95ea89
		Secure: true
	Object:
		Variable: $r6
		Type: javax.crypto.Mac
		Statement: $r6 = staticinvoke <javax.crypto.Mac: javax.crypto.Mac getInstance(java.lang.String)>(varReplacer1790034)
		Method: <gvt: java.lang.String a(java.lang.String,java.lang.String)>
		SHA-256: 44dadb2997e23a057ee9ec177e2863dc2c450d6b21f17d7ae420aec7f7d6b626
		Secure: false
	Object:
		Variable: $r12
		Type: java.security.KeyPair
		Statement: specialinvoke $r12.<java.security.KeyPair: void <init>(java.security.PublicKey,java.security.PrivateKey)>($r9, $r13)
		Method: <com.tuya.bouncycastle.jcajce.provider.asymmetric.ec.KeyPairGeneratorSpi$EC: java.security.KeyPair generateKeyPair()>
		SHA-256: c9e1ff5450f21aae65af053d6ed29f81c5a7b267991078defbfa3059af0e266a
		Secure: false
	Object:
		Variable: $r5
		Type: javax.crypto.CipherOutputStream
		Statement: specialinvoke $r5.<javax.crypto.CipherOutputStream: void <init>(java.io.OutputStream,javax.crypto.Cipher)>($r4, $r2)
		Method: <com.tuya.sdk.security.EncryptionManager: byte[] pdqppqb(byte[])>
		SHA-256: 66930834218bcfd37faf6f7b292be7c7bfefa90ddac2313c7a9a1734dfc8046f
		Secure: false
	Object:
		Variable: $r1
		Type: java.security.MessageDigest
		Statement: $r1 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer2500764)
		Method: <com.tuya.smart.android.common.utils.SHA256Util: byte[] getHash(byte[])>
		SHA-256: 440d62468c2694ef01cccc0164265a736f5101694bd2c3e65b9bfe9283c4b99
		Secure: true
	Object:
		Variable: $r2
		Type: byte[]
		Statement: $z0 = virtualinvoke $r4.<java.security.Signature: boolean verify(byte[])>($r2)
		Method: <com.amazon.identity.auth.device.utils.JWTDecoder: boolean verifySignatureWithRsaSha256(byte[],byte[],java.security.cert.Certificate)>
		SHA-256: fa938228d352fd6c92a53e203b9db57141cace7dc9cd6c4c4dfe90f2e92f6dd9
		Secure: true
	Object:
		Variable: $r2
		Type: java.security.SecureRandom
		Statement: specialinvoke $r2.<java.security.SecureRandom: void <init>()>()
		Method: <com.tuya.sdk.security.EncryptionManager: byte[] bdpdqbp()>
		SHA-256: f632c63fcda31fdfa991580cf9deb35eb649bc314a680ed6f43cbe049d8d5d5
		Secure: true
	Object:
		Variable: $r5
		Type: byte[]
		Statement: $r5 = virtualinvoke $r4.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r5)
		Method: <com.tuya.smart.android.common.utils.AESUtil: java.lang.String encrypt(java.lang.String)>
		SHA-256: 665d497d0ae630b766ea660547f9443fbaa3461ff5b09b0d8a62650df9dad8c0
		Secure: false
	Object:
		Variable: $r4
		Type: java.security.MessageDigest
		Statement: $r4 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer2078188)
		Method: <com.amazon.identity.auth.device.authorization.CodeChallengeWorkflow: java.lang.String generateCodeChallenge(java.lang.String,java.lang.String)>
		SHA-256: dbdde6104cb1d0c8ca51d53f2ba4ba70fdd4ec49b12cce4367f68a6bf4c24c6e
		Secure: true
	Object:
		Variable: $r0
		Type: byte[]
		Statement: $r3 = virtualinvoke $r6.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r0)
		Method: <com.tuya.smart.android.common.utils.AesGcmUtil: byte[] encryptBytes2Bytes(byte[],byte[],byte[],byte[])>
		SHA-256: 81893f969581ce7e380e3563ddaa6c02859b0ca400d3923187008c937c266ba
		Secure: false
	Object:
		Variable: $r4
		Type: javax.crypto.Cipher
		Statement: $r4 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer2322775)
		Method: <dde: javax.crypto.Cipher a(java.lang.String,byte[])>
		SHA-256: 4183a8aae6c7e55fa4775bfb3ff652715850a80f48a6dda567ebfa33f0cdd6dd
		Secure: false
	Object:
		Variable: $r2
		Type: javax.crypto.Cipher
		Statement: $r2 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer2848490)
		Method: <dde: javax.crypto.Cipher a(java.lang.String)>
		SHA-256: 21f3fc8c5110dc9b70c0b414b3309257443fd5f42deadcf6e6778cacc13ed79
		Secure: false
	Object:
		Variable: $r0
		Type: javax.crypto.spec.SecretKeySpec
		Statement: specialinvoke $r0.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r1, varReplacer1336305)
		Method: <com.tuya.sdk.bluetooth.pdqppqb: byte[] bppdpdq(byte[],byte[])>
		SHA-256: 8cb42d4ac150582d5e8c00bb9c61f0b943d2b834bc96b4a136a7002fa92720f5
		Secure: false
	Object:
		Variable: $r1
		Type: java.security.SecureRandom
		Statement: specialinvoke $r1.<java.security.SecureRandom: void <init>()>()
		Method: <com.tuya.bouncycastle.jcajce.provider.asymmetric.ec.KeyPairGeneratorSpi$EC: java.security.KeyPair generateKeyPair()>
		SHA-256: 52666556eb0b9e0106968c3639d610cef0bbf743129b6a2f13e952dd3c4ccbd6
		Secure: true
	Object:
		Variable: $r10
		Type: java.security.MessageDigest
		Statement: $r10 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer172624)
		Method: <com.tuya.sdk.bluetooth.qqpbpdq$bdpdqbp: void run()>
		SHA-256: ce3096f98ed07a297af05c866a7c8e826fc9e515fc8754321d128a602f0f6668
		Secure: false
	Object:
		Variable: $r6
		Type: javax.crypto.spec.IvParameterSpec
		Statement: specialinvoke $r6.<javax.crypto.spec.IvParameterSpec: void <init>(byte[])>($r5)
		Method: <hhn: java.lang.String a(java.lang.String)>
		SHA-256: f3f40b0f5a41e3c3f4571045241660eb033aa0c0946905436a08c77e73401946
		Secure: false
	Object:
		Variable: $r0
		Type: byte[]
		Statement: $r0 = virtualinvoke $r1.<java.security.MessageDigest: byte[] digest(byte[])>($r0)
		Method: <com.tuya.sdk.bluetooth.qppbddd: byte[] bdpdqbp(byte[])>
		SHA-256: 2c43ce716731e6e55aa8d6410d512ad8e24afb02de953f1d0171de66b1e48334
		Secure: false
	Object:
		Variable: $r5
		Type: javax.crypto.Cipher
		Statement: $r5 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>($r4)
		Method: <com.tuya.sdk.bluetooth.pdqppqb: byte[] bppdpdq(byte[],byte[])>
		SHA-256: 218b8d5a3e880219be79d1f99a78c076912c6de2bb1a16bc2be868c09792be97
		Secure: false
	Object:
		Variable: $r3
		Type: byte[]
		Statement: $r3 = virtualinvoke $r6.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r0)
		Method: <com.tuya.smart.android.common.utils.AesGcmUtil: byte[] encryptBytes2Bytes(byte[],byte[],byte[],byte[])>
		SHA-256: 6a13456953560345c2cbc2e996ef650bc68edd23abf0a8604a41958e93d11022
		Secure: false
	Object:
		Variable: $r4
		Type: javax.crypto.spec.IvParameterSpec
		Statement: specialinvoke $r4.<javax.crypto.spec.IvParameterSpec: void <init>(byte[])>($r2)
		Method: <com.tuya.smart.android.network.util.AESCTRUtil: java.lang.String encrypt(byte[],byte[],java.lang.String)>
		SHA-256: a1bd05c622d377648ddf89b56b9d2d4190bc452b63d792a382b2fcb3013367f4
		Secure: false
	Object:
		Variable: $r6
		Type: java.security.PrivateKey
		Statement: $r6 = virtualinvoke $r3.<java.security.KeyPair: java.security.PrivateKey getPrivate()>()
		Method: <com.tuya.sdk.bluetooth.dbqpdqd: void bppdpdq()>
		SHA-256: bbb775c25bc80b737a0da9f59b5fd620e6356672832c26756b02b1fa8819204a
		Secure: false
	Object:
		Variable: $r4
		Type: javax.crypto.Cipher
		Statement: $r4 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer1238864)
		Method: <gjc: javax.crypto.Cipher a(byte[],java.lang.String,int)>
		SHA-256: c946c4bc355bafbebd29ea827be1e0b9cd6fa821b4ba1ec02e0a148f54ea55aa
		Secure: false
	Object:
		Variable: varReplacer1084061
		Type: java.lang.String
		Statement: specialinvoke $r0.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r1, varReplacer1084061)
		Method: <com.tuya.smart.android.network.util.ECDHEngine: java.lang.String hmacSha256(byte[],byte[],boolean)>
		SHA-256: 3580dc1cd980b6fde28a10d92191da8a702caa5b1edc5ebc7497cfbaf7a2c836
		Secure: false
	Object:
		Variable: $r7
		Type: javax.crypto.spec.SecretKeySpec
		Statement: specialinvoke $r7.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r6, $r2)
		Method: <io.jsonwebtoken.SigningKeyResolverAdapter: java.security.Key resolveSigningKey(io.jsonwebtoken.JwsHeader,java.lang.String)>
		SHA-256: 554dda89a68608bd077a0c78c896e7f76e24e99d222623016abeeb51c048b2a1
		Secure: false
	Object:
		Variable: $r0
		Type: java.security.SecureRandom
		Statement: specialinvoke $r0.<java.security.SecureRandom: void <init>()>()
		Method: <dmo: java.lang.String b()>
		SHA-256: 712f26d72ec07453819f8791969a21aed8486469079c599ca0755f86ab8da815
		Secure: true
	Object:
		Variable: $r2
		Type: byte[]
		Statement: $r2 = virtualinvoke $r6.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r0)
		Method: <com.tuya.smart.android.common.utils.AesGcmUtil: byte[] decryptBytes2Bytes(byte[],byte[],byte[],byte[])>
		SHA-256: 3c66cac32620a045d647f489e62f3c49441e6fb41d3495f4f75a4077c95b10d4
		Secure: false
	Object:
		Variable: $r1
		Type: java.security.SecureRandom
		Statement: specialinvoke $r1.<java.security.SecureRandom: void <init>()>()
		Method: <com.tuya.sdk.bluetooth.bbbdppp: byte[] bdpdqbp()>
		SHA-256: 355c460089d70f69621266908b61a5adf123400bed3935a0515fc60b6c357000
		Secure: true
	Object:
		Variable: $r1
		Type: javax.crypto.spec.SecretKeySpec
		Statement: specialinvoke $r1.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r3, $r2)
		Method: <com.tuya.smart.android.common.utils.AESUtil: java.security.Key generateKey()>
		SHA-256: 31748ebc2a353689d2265df156944f9d661f75310d41c05963eea714985a6b6c
		Secure: false
	Object:
		Variable: $r5
		Type: java.security.KeyPairGenerator
		Statement: $r5 = staticinvoke <java.security.KeyPairGenerator: java.security.KeyPairGenerator getInstance(java.lang.String,java.lang.String)>(varReplacer2358044, varReplacer2358045)
		Method: <com.tuya.sdk.security.EncryptionManager: boolean bdpdqbp(android.content.Context,byte[])>
		SHA-256: ebe4b23fdbe6189ed3069d3aca9001ec67c9f7f8187eb049f247fdbead99f6e5
		Secure: false
	Object:
		Variable: varReplacer2538466
		Type: java.lang.String
		Statement: specialinvoke $r7.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r3, varReplacer2538466)
		Method: <com.tuya.smart.android.common.utils.AesGcmUtil: byte[] encryptBytes2Bytes(byte[],byte[],byte[],byte[])>
		SHA-256: 5db581af460d69707f91282f08e18190af0a656aac5e5bcb690fd745003fcf18
		Secure: false
	Object:
		Variable: $r1
		Type: java.security.SecureRandom
		Statement: specialinvoke $r1.<java.security.SecureRandom: void <init>()>()
		Method: <com.tuya.smart.android.network.http.dns.manager.TuyaDnsManager: java.lang.String lookupAndSelectOneWithRandom(java.lang.String)>
		SHA-256: 6c54f977d204b658883d35df4de7f9710e8ff85d93320819eb5ba59719f28fd2
		Secure: true
	Object:
		Variable: $r1
		Type: byte[]
		Statement: virtualinvoke $r2.<java.security.SecureRandom: void nextBytes(byte[])>($r1)
		Method: <com.tuya.smart.android.common.utils.AesGcmUtil: byte[] generateRandomNonce()>
		SHA-256: 20403dafe8d4923c82e56d4ac05f5891d89756f3b6f0e925dd39f708dce92b2b
		Secure: true
	Object:
		Variable: $r9
		Type: java.security.KeyStore
		Statement: $r9 = staticinvoke <java.security.KeyStore: java.security.KeyStore getInstance(java.lang.String)>($r12)
		Method: <org.chromium.net.X509Util: void ensureInitializedLocked()>
		SHA-256: 297352ffa419506b9a5a25a3d9abc8160a391ae3349c57f17fae3b70ca8e950
		Secure: false
	Object:
		Variable: r0
		Type: com.tuya.smart.android.common.utils.FixedSecureRandom
		Statement: specialinvoke r0.<java.security.SecureRandom: void <init>()>()
		Method: <com.tuya.smart.android.common.utils.FixedSecureRandom: void <init>()>
		SHA-256: c6036e9e7c875fe564fdde7319a908d8e330139e306440a672f8af29a3147138
		Secure: true
	Object:
		Variable: $r2
		Type: java.security.MessageDigest
		Statement: $r2 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer2538429)
		Method: <com.tuya.smart.android.common.utils.MD5: java.lang.String md5(java.lang.String)>
		SHA-256: 687da812bb9290c5a4ea274aa694295e7a074e53ee5ff812bed2a19fa7ff9219
		Secure: false
	Object:
		Variable: $r1
		Type: javax.crypto.spec.IvParameterSpec
		Statement: specialinvoke $r1.<javax.crypto.spec.IvParameterSpec: void <init>(byte[])>($r3)
		Method: <com.tuya.sdk.bluetooth.bddqpdp: byte[] pdqppqb(byte[],byte[],byte[])>
		SHA-256: 2b6fc5c9aed10838249c4427d29d08adf0483467dadd39d8258fbb7a5ff470cf
		Secure: false
	Object:
		Variable: $r3
		Type: java.security.MessageDigest
		Statement: $r3 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer232039)
		Method: <cop: java.lang.String a(java.lang.String)>
		SHA-256: ae00f1e9a83a1e00244cd959df4257ebd3b3c7f93c7d08d07f579d314c5411d2
		Secure: false
	Object:
		Variable: $r2
		Type: java.security.MessageDigest
		Statement: $r2 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>($r1)
		Method: <okio.ByteString: okio.ByteString digest(java.lang.String)>
		SHA-256: b336d574501b28a5bd90db22472c23a68acb0c1b99c4f14746fdc2a23c69a24e
		Secure: false
	Object:
		Variable: $r1
		Type: javax.crypto.spec.IvParameterSpec
		Statement: specialinvoke $r1.<javax.crypto.spec.IvParameterSpec: void <init>(byte[])>($r2)
		Method: <dmo: void a(java.lang.String)>
		SHA-256: 369bbbfeb2eea580f6d03f0cd88cd8c29b78e762a204208cf7eee4e8e658484f
		Secure: false
	Object:
		Variable: $r0
		Type: byte[]
		Statement: virtualinvoke $r5.<javax.crypto.Cipher: int doFinal(byte[],int,int,byte[],int)>($r0, $i0, $i1, $r1, $i4)
		Method: <com.tuya.smart.android.common.utils.RSAUtil: byte[] encrypt(java.lang.String,java.security.PublicKey,byte[])>
		SHA-256: 44c92747f6a0b599c9aa56980ed7070d7c1a23293ced2614ec545eeadd308f65
		Secure: false
	Object:
		Variable: $r2
		Type: javax.net.ssl.SSLContext
		Statement: $r2 = staticinvoke <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String)>(varReplacer264706)
		Method: <com.tuya.smart.android.network.TuyaSmartNetWork: javax.net.ssl.SSLSocketFactory systemDefaultSslSocketFactory(javax.net.ssl.X509TrustManager)>
		SHA-256: 4ae61a008b339c61a6f460a8cf5b3ff36835cf77e5214e4d2fd485db465b9003
		Secure: false
	Object:
		Variable: $r5
		Type: javax.crypto.Cipher
		Statement: $r5 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer1268452)
		Method: <com.tuya.sdk.bluetooth.qbdbbdb: byte[] pdqppqb(byte[],byte[],byte[])>
		SHA-256: fdcc3df7190a5eb88b5392031742336f4cd966f93d8a40b410d2f769c18cc2e3
		Secure: false
	Object:
		Variable: $r1
		Type: java.security.SecureRandom
		Statement: specialinvoke $r1.<java.security.SecureRandom: void <init>()>()
		Method: <com.amazon.identity.auth.device.authorization.CodeChallengeWorkflow: byte[] generateRandomOctetSequence()>
		SHA-256: 2d0fd4b34da60ccfed89abfd1af899314e4cda6acfbc267f428a68a215054fa4
		Secure: true
	Object:
		Variable: $r0
		Type: byte[]
		Statement: $r0 = virtualinvoke $r1.<java.security.MessageDigest: byte[] digest(byte[])>($r0)
		Method: <com.tuya.smart.android.common.utils.MD5Util: byte[] computeMD5Hash(byte[])>
		SHA-256: 5e51b04a64b810fd3cad35f7e4e49c9a466893111d828b369573eff1457aef0a
		Secure: false
	Object:
		Variable: $r8
		Type: javax.crypto.spec.IvParameterSpec
		Statement: specialinvoke $r8.<javax.crypto.spec.IvParameterSpec: void <init>(byte[])>($r3)
		Method: <com.tuya.smart.android.common.utils.AesGcmUtil: byte[] decryptBytes2Bytes(byte[],byte[],byte[],byte[])>
		SHA-256: 25f89299534fd75923fa21faa4496765d8bbbd0b5b4fc024bd2544c75e7aeb9a
		Secure: false
	Object:
		Variable: $r0
		Type: javax.crypto.spec.SecretKeySpec
		Statement: specialinvoke $r0.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r1, varReplacer1084061)
		Method: <com.tuya.smart.android.network.util.ECDHEngine: java.lang.String hmacSha256(byte[],byte[],boolean)>
		SHA-256: 585795975ed77185e36e1d3eefcf14ffdaf3b3fcaefef6ac8dca0fda2ee72d2c
		Secure: false
	Object:
		Variable: $r1
		Type: java.security.SecureRandom
		Statement: specialinvoke $r1.<java.security.SecureRandom: void <init>()>()
		Method: <com.tuya.sdk.bluetooth.ppbbbpd: byte[] bdpdqbp()>
		SHA-256: f547c8a59053e33def76785e05e23662a8f5ac3a8e7c37641a99305184916ccb
		Secure: true
	Object:
		Variable: $r5
		Type: java.security.MessageDigest
		Statement: $r5 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer1969075)
		Method: <com.facebook.soloader.SoLoader$1: java.lang.String getLibHash(java.lang.String)>
		SHA-256: 102cf7576936c5b49e3198e43fa612139807f0337d02be63e2fa0ef64347c63d
		Secure: false
	Object:
		Variable: varReplacer1268440
		Type: java.lang.String
		Statement: specialinvoke $r4.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r1, varReplacer1268440)
		Method: <com.tuya.sdk.bluetooth.qbdbbdb: byte[] pdqppqb(byte[],byte[],byte[])>
		SHA-256: 6f232008903b1d9425aba99ce271b35ecb23589f4736ee4e465f72eedff5ecb0
		Secure: false
	Object:
		Variable: $r7
		Type: javax.crypto.KeyAgreement
		Statement: $r7 = staticinvoke <javax.crypto.KeyAgreement: javax.crypto.KeyAgreement getInstance(java.lang.String)>(varReplacer1084147)
		Method: <com.tuya.smart.android.network.util.ECDHEngine: byte[] ecdhKey(java.lang.String,java.lang.String)>
		SHA-256: 92e621affdcf07efe6d8071c53cd8aac322387eef64d8c39e28fac1f785f9256
		Secure: false
	Object:
		Variable: $r4
		Type: java.security.MessageDigest
		Statement: $r4 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer1703040)
		Method: <buy: java.lang.String a()>
		SHA-256: 28248ea29894ea0ddc43a5231e729aebbca14f02ce5d3c02ce9d23af0230a0f7
		Secure: false
	Object:
		Variable: $r3
		Type: javax.net.ssl.SSLContext
		Statement: $r3 = staticinvoke <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String)>(varReplacer1753164)
		Method: <okhttp3.internal.platform.AndroidPlatform: javax.net.ssl.SSLContext getSSLContext()>
		SHA-256: c448e277d70e5685238159efb340ddbf24d4769e9d5beb1dd5944b43482897df
		Secure: false
	Object:
		Variable: $r9
		Type: javax.crypto.CipherInputStream
		Statement: specialinvoke $r9.<javax.crypto.CipherInputStream: void <init>(java.io.InputStream,javax.crypto.Cipher)>($r4, $r8)
		Method: <cpb: java.io.InputStream a(okhttp3.ResponseBody)>
		SHA-256: c9a42eed568672b0ef4c9e1dda5529d297e34e4e1baf1d3056815ead2d41f44b
		Secure: false
	Object:
		Variable: $r5
		Type: java.security.SecureRandom
		Statement: specialinvoke $r5.<java.security.SecureRandom: void <init>()>()
		Method: <com.tuya.sdk.security.EncryptionManager: boolean pdqppqb(android.content.SharedPreferences,byte[])>
		SHA-256: fa0a68eb566763395b85b7a99dc8304c2e93b911461255687a7652f1ab29ef14
		Secure: true
	Object:
		Variable: $r4
		Type: javax.crypto.Cipher
		Statement: $r4 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>($r3)
		Method: <com.tuya.smart.android.common.utils.AESUtil: java.lang.String encryptWithBase64(java.lang.String)>
		SHA-256: 52cbc22322ffedac3ccaaaa5b6117d4a593a771c212e4a4e460c3b84ad397a31
		Secure: false
	Object:
		Variable: $r4
		Type: byte[]
		Statement: virtualinvoke $r5.<java.security.SecureRandom: void nextBytes(byte[])>($r4)
		Method: <com.tuya.sdk.security.EncryptionManager: boolean pdqppqb(android.content.SharedPreferences,byte[])>
		SHA-256: e19c827351e61151339b7808fffe70b8a33da7224822638adbc3dbdc147c95f4
		Secure: true
	Object:
		Variable: $r2
		Type: java.security.MessageDigest
		Statement: $r2 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer1319027)
		Method: <com.tuya.smart.android.common.utils.MD5Util: byte[] computeMD5Hash(java.io.InputStream)>
		SHA-256: d77eaee6eecd1f0297885fb60fd7031c75882fc306de1ffde6992228a76da916
		Secure: false
	Object:
		Variable: $r6
		Type: javax.crypto.Mac
		Statement: $r6 = staticinvoke <javax.crypto.Mac: javax.crypto.Mac getInstance(java.lang.String)>(varReplacer457388)
		Method: <cgz: void <init>(java.lang.String,int,boolean)>
		SHA-256: 6edfdf9c560586a329e4343f73cd6d57fd8959047a86cf9ecba9e7a12cf9bd4f
		Secure: true
	Object:
		Variable: $r2
		Type: byte[]
		Statement: $r2 = virtualinvoke $r1.<java.security.MessageDigest: byte[] digest(byte[])>($r2)
		Method: <com.squareup.okhttp.internal.Util: okio.ByteString sha1(okio.ByteString)>
		SHA-256: 533790f741ccce52b37b13a1f5b15685cf6be9dbae4d3ca5f2ae063c0b550248
		Secure: false
	Object:
		Variable: $r3
		Type: javax.crypto.Mac
		Statement: $r3 = staticinvoke <javax.crypto.Mac: javax.crypto.Mac getInstance(java.lang.String)>(varReplacer1084092)
		Method: <com.tuya.smart.android.network.util.ECDHEngine: java.lang.String hmacSha256(byte[],byte[],boolean)>
		SHA-256: 39ba15b9d696169b94195f5efe85b2edd232497b1d51a5ec9a47258079fcc982
		Secure: false
	Object:
		Variable: $r3
		Type: byte[]
		Statement: $r3 = virtualinvoke $r2.<java.security.MessageDigest: byte[] digest()>()
		Method: <bga: java.lang.String a(java.util.List)>
		SHA-256: c77d4629dbf7e8fbab12c174c9566409e4ffb3749a357197c0294c9b57b7fdb3
		Secure: false
	Object:
		Variable: $r3
		Type: byte[]
		Statement: $r3 = virtualinvoke $r1.<java.security.MessageDigest: byte[] digest(byte[])>($r3)
		Method: <com.tuya.smart.android.common.utils.SHA256Util: java.lang.String getBase64Hash(java.lang.String)>
		SHA-256: 4f1bd606e161aba288ddf034fa2e724b5c043289f48b6f410380dc3ab417ab2d
		Secure: true
	Object:
		Variable: $r1
		Type: java.security.SecureRandom
		Statement: $r1 = staticinvoke <java.security.SecureRandom: java.security.SecureRandom getInstance(java.lang.String)>(varReplacer746427)
		Method: <cmw: java.lang.String a()>
		SHA-256: 3dc64b21c38ce13812a2def029fdbe61edc2cc0217413a29f7a1a218c5e72a09
		Secure: true
	Object:
		Variable: $r13
		Type: javax.net.ssl.SSLContext
		Statement: $r13 = staticinvoke <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String)>(varReplacer1004608)
		Method: <hjt: hjv b(hju)>
		SHA-256: 5daa26dd9144f3ede38e2c884a6d05e5716f2dcf24fa6b8a35140db368f79901
		Secure: false
	Object:
		Variable: $r2
		Type: javax.crypto.Cipher
		Statement: $r2 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String,java.lang.String)>(varReplacer2639449, varReplacer2639450)
		Method: <com.tuya.sdk.security.EncryptionManager: byte[] bdpdqbp(byte[])>
		SHA-256: 7be6e6d4220098db76bd98e0b87536081f58c29172ccd1a6beec0e5624c49895
		Secure: false
	Object:
		Variable: $r2
		Type: javax.net.ssl.TrustManager[]
		Statement: $r2 = virtualinvoke $r1.<javax.net.ssl.TrustManagerFactory: javax.net.ssl.TrustManager[] getTrustManagers()>()
		Method: <okhttp3.internal.Util: javax.net.ssl.X509TrustManager platformTrustManager()>
		SHA-256: dea0af93b06734ae35228a014521e6e031131dd2b357359826afa61f9a6de1b
		Secure: false
	Object:
		Variable: $r5
		Type: byte[]
		Statement: $r5 = virtualinvoke $r4.<java.security.MessageDigest: byte[] digest(byte[])>($r5)
		Method: <com.google.android.gms.common.zzl: java.lang.String zzc(java.lang.String,com.google.android.gms.common.zzd,boolean,boolean)>
		SHA-256: 1e621a17e1c9d580a0ac5978a233e4d68705acf0fd2d66f736b30f1c149d8bf
		Secure: false
	Object:
		Variable: $r13
		Type: java.security.SecureRandom
		Statement: specialinvoke $r13.<java.security.SecureRandom: void <init>()>()
		Method: <com.tuya.sdk.security.EncryptionManager: boolean bdpdqbp(android.content.Context,byte[])>
		SHA-256: 8a581c0f8d92769be118a9dd081975f755da1d311cd87ebcbb77ca00b196946f
		Secure: true
	Object:
		Variable: $r4
		Type: javax.crypto.Cipher
		Statement: $r4 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>($r3)
		Method: <com.tuya.smart.android.common.utils.AESUtil: java.lang.String decrypt(byte[])>
		SHA-256: d20a17eedf9d76fdc72dd37c023530af2c2764050615a9f141cf62f05b85cd92
		Secure: false
	Object:
		Variable: $r14
		Type: java.security.KeyStore
		Statement: $r14 = staticinvoke <java.security.KeyStore: java.security.KeyStore getInstance(java.lang.String)>($r3)
		Method: <com.tuya.smart.mqttclient.mqttv3.internal.security.SSLSocketFactoryFactory: javax.net.ssl.SSLContext getSSLContext(java.lang.String)>
		SHA-256: ef952fc09cf5e577ee1c1152c546bffd3d58833ddae6a8c5633ec84d3ee11c7c
		Secure: false
	Object:
		Variable: varReplacer2699044
		Type: java.lang.String
		Statement: $r0 = staticinvoke <java.security.KeyFactory: java.security.KeyFactory getInstance(java.lang.String)>(varReplacer2699044)
		Method: <bmt: java.security.KeyFactory a()>
		SHA-256: 933030b986dd107e43d2e6ae05e57f8225fe74ea47cdd7bc5b7e8eb188ecc67e
		Secure: false
	Object:
		Variable: $r0
		Type: byte[]
		Statement: $r1 = virtualinvoke $r5.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r0)
		Method: <com.tuya.sdk.bluetooth.bddqpdp: byte[] bdpdqbp(byte[],byte[],byte[])>
		SHA-256: 41dc7741978e49e4ba8bf52520418f9c0caa8b9b71117e600f2bd646bdc3c534
		Secure: false
	Object:
		Variable: $r2
		Type: java.lang.String
		Statement: specialinvoke $r1.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r3, $r2)
		Method: <com.tuya.smart.android.common.utils.AESUtil: java.security.Key generateKey()>
		SHA-256: 8daffdeb7b6a9df5acc3ec4f5ce78e6726031b0054b824b7c965213f86980a26
		Secure: false
	Object:
		Variable: $r4
		Type: java.security.PublicKey
		Statement: $r4 = virtualinvoke $r3.<java.security.KeyPair: java.security.PublicKey getPublic()>()
		Method: <com.tuya.sdk.bluetooth.dbqpdqd: void bppdpdq()>
		SHA-256: 7cb714333622f60b7d13b5939f5dffcc43cdb09c6aa2a063ca79c0af22044149
		Secure: false
	Object:
		Variable: $r0
		Type: javax.crypto.spec.SecretKeySpec
		Statement: specialinvoke $r0.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r4, $r2)
		Method: <dnc: byte[] a(byte[],java.lang.String)>
		SHA-256: 424493708018d6413eaac31f207c02228f3aadfed76dfebd3b093635a3ce899b
		Secure: false
	Object:
		Variable: $r2
		Type: java.security.spec.ECGenParameterSpec
		Statement: specialinvoke $r2.<java.security.spec.ECGenParameterSpec: void <init>(java.lang.String)>(varReplacer1886411)
		Method: <com.tuya.bouncycastle.jcajce.provider.asymmetric.ec.KeyPairGeneratorSpi$EC: void <clinit>()>
		SHA-256: c0b92f509a637dab92858379ff83c0a95db924c64db2050cbc9f91b9962697e
		Secure: true
	Object:
		Variable: $r3
		Type: javax.crypto.Cipher
		Statement: $r3 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>($r4)
		Method: <com.amazon.identity.auth.device.datastore.AESEncryptor: javax.crypto.Cipher createAESCipher(int,java.lang.String,java.security.spec.AlgorithmParameterSpec)>
		SHA-256: 9771baa305581276c5f1a5e0af5a72e1fcf4e34e7c98d244c07ae1e2ea1e9dc4
		Secure: false
	Object:
		Variable: $r7
		Type: javax.net.ssl.SSLContext
		Statement: $r7 = staticinvoke <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String)>(varReplacer231968)
		Method: <coo: okhttp3.OkHttpClient$Builder a(okhttp3.OkHttpClient$Builder)>
		SHA-256: 7e245d72942be395dcc64cc118c04a047c9a4d20cacb8d0093beb8c98819cba8
		Secure: false
	Object:
		Variable: $r7
		Type: byte[]
		Statement: $r7 = virtualinvoke $r10.<java.security.MessageDigest: byte[] digest(byte[])>($r7)
		Method: <com.tuya.sdk.bluetooth.qqpbpdq$bdpdqbp: void run()>
		SHA-256: 805e25e58670d4d9a8fd016b0a0891a68d76ad47884328727baace634a4e69ae
		Secure: false
	Object:
		Variable: $r2
		Type: java.security.KeyStore
		Statement: $r2 = staticinvoke <java.security.KeyStore: java.security.KeyStore getInstance(java.lang.String)>(varReplacer1411514)
		Method: <com.amazon.identity.auth.device.datastore.AESEncryptor: void <init>(android.content.Context)>
		SHA-256: d6e3aa519d94a45f3f1d3e24841cfbbbf089af066258b1b9e00859cd88c8403a
		Secure: false
	Object:
		Variable: $r6
		Type: byte[]
		Statement: $r6 = virtualinvoke $r11.<java.security.MessageDigest: byte[] digest(byte[])>($r6)
		Method: <com.tuya.smart.google_flip.view.GoogleFlipAuthActivity: boolean c()>
		SHA-256: e70f873f7c12890d0a4798a4dd2322d876ae9c02c588b9962977dc5b2c400a1a
		Secure: true
	Object:
		Variable: $r1
		Type: javax.net.ssl.TrustManagerFactory
		Statement: $r1 = staticinvoke <javax.net.ssl.TrustManagerFactory: javax.net.ssl.TrustManagerFactory getInstance(java.lang.String)>($r0)
		Method: <okhttp3.internal.Util: javax.net.ssl.X509TrustManager platformTrustManager()>
		SHA-256: a8764d384e0e6acd4407dba0e4c2025660362892494036c03c4b52a40e75c66b
		Secure: false
	Object:
		Variable: $r1
		Type: java.security.MessageDigest
		Statement: $r1 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer2140784)
		Method: <com.tuya.sdk.bluetooth.bbbdppp: byte[] bdpdqbp(byte[])>
		SHA-256: 44f09ff19bb76eaf32de14da963ecc0400dce4cc1294c69988b98ec9a7f24bac
		Secure: false
	Object:
		Variable: $r3
		Type: java.security.MessageDigest
		Statement: $r3 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer2618787)
		Method: <bvu: java.lang.String a(java.security.PublicKey)>
		SHA-256: c3cf5ba25157c5a7eddd7f5ce060bffd0f2de5cf2b91ec30a803244fabfd6ab2
		Secure: false
	Object:
		Variable: $r4
		Type: javax.net.ssl.TrustManagerFactory
		Statement: $r4 = staticinvoke <javax.net.ssl.TrustManagerFactory: javax.net.ssl.TrustManagerFactory getInstance(java.lang.String)>($r3)
		Method: <hin: javax.net.ssl.X509TrustManager b()>
		SHA-256: 636a5ea86d64eefda3f8d4751b07524e28b9daacb1d31111fa126bb417549df3
		Secure: false
	Object:
		Variable: $r7
		Type: javax.crypto.spec.SecretKeySpec
		Statement: specialinvoke $r7.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r2, varReplacer2114922)
		Method: <com.tuya.smart.android.common.utils.AesGcmUtil: byte[] decryptBytes2Bytes(byte[],byte[],byte[],byte[])>
		SHA-256: 43dd943c84cb73d55f8bb64609bb8d6d6774d6e7da7878248cb2c08f787fdd14
		Secure: false
	Object:
		Variable: $r3
		Type: javax.crypto.spec.IvParameterSpec
		Statement: specialinvoke $r3.<javax.crypto.spec.IvParameterSpec: void <init>(byte[])>($r2)
		Method: <com.tuya.sdk.bluetooth.bddqpdp: byte[] bdpdqbp(byte[],byte[],byte[])>
		SHA-256: 15d5ae819f77ba201b0c9ab61a543eb3781ec8a9d76d499e7567deb47e39cedb
		Secure: false
	Object:
		Variable: $r1
		Type: java.lang.String
		Statement: specialinvoke $r39.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r13, $r1)
		Method: <io.jsonwebtoken.impl.DefaultJwtParser: io.jsonwebtoken.Jwt parse(java.lang.String)>
		SHA-256: a1116bb0abfde5bbe209946c964e9dc8cafd4dc8e430da4ff89dfff6674896a9
		Secure: false
	Object:
		Variable: varReplacer1897632
		Type: java.lang.String
		Statement: specialinvoke $r0.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r1, varReplacer1897632)
		Method: <com.tuya.smart.android.network.util.AESCTRUtil: java.lang.String encrypt(byte[],byte[],java.lang.String)>
		SHA-256: 7504dc35e9a56ce66895e95e4b0267662e70fc3ac6d6730919d5c7377120f480
		Secure: false
	Object:
		Variable: $r7
		Type: byte[]
		Statement: $r7 = virtualinvoke $r5.<java.security.MessageDigest: byte[] digest()>()
		Method: <com.facebook.soloader.SoLoader$1: java.lang.String getLibHash(java.lang.String)>
		SHA-256: 842121e9d253cdf6db0e404fe95695ee0d6b5963fa7b8ac61ed9211e05a20b7c
		Secure: false
	Object:
		Variable: $r1
		Type: byte[]
		Statement: $r1 = virtualinvoke $r5.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r2)
		Method: <com.tuya.sdk.bluetooth.pdqppqb: byte[] bppdpdq(byte[],byte[])>
		SHA-256: b74d535f42a29251a70bba61e3a73aad53b1ed7b7e6626d1928abb84fa0efebe
		Secure: false
	Object:
		Variable: $r2
		Type: byte[]
		Statement: $r2 = virtualinvoke $r3.<java.security.MessageDigest: byte[] digest(byte[])>($r2)
		Method: <bvu: java.lang.String a(java.security.PublicKey)>
		SHA-256: f01b34f7a109b9e07cf021bc0ec3656ddb9ff88f245306dc8eeb2d5cec66115
		Secure: false
	Object:
		Variable: $r6
		Type: javax.crypto.Cipher
		Statement: $r6 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer2114925)
		Method: <com.tuya.smart.android.common.utils.AesGcmUtil: byte[] decryptBytes2Bytes(byte[],byte[],byte[],byte[])>
		SHA-256: cbeca0811ade02c2e9a6fac6faa3f6d19f9a92a323ed3c8be3130b8bfc5380dc
		Secure: false
	Object:
		Variable: $r4
		Type: javax.crypto.spec.SecretKeySpec
		Statement: specialinvoke $r4.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r2, varReplacer710548)
		Method: <com.tuya.sdk.bluetooth.bddqpdp: byte[] pdqppqb(byte[],byte[],byte[])>
		SHA-256: 1c1579d0ea2e684d5a0f3dac79329c1a6a60d87309f099e37e9efdf72618c3f4
		Secure: false
	Object:
		Variable: $r3
		Type: javax.net.ssl.TrustManagerFactory
		Statement: $r3 = staticinvoke <javax.net.ssl.TrustManagerFactory: javax.net.ssl.TrustManagerFactory getInstance(java.lang.String)>($r2)
		Method: <coo: okhttp3.OkHttpClient$Builder a(okhttp3.OkHttpClient$Builder)>
		SHA-256: b6896c155360169784686cbf77c224af3109bd02dc0c12483002de67327ddf03
		Secure: false
	Object:
		Variable: varReplacer2898875
		Type: java.lang.String
		Statement: specialinvoke $r4.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r5, varReplacer2898875)
		Method: <hhn: java.lang.String a(java.lang.String)>
		SHA-256: dd2fe7a687322ed1c2c5e0760595e4d5d6b27276312ca05969281ed79a8391ea
		Secure: false
	Object:
		Variable: $r16
		Type: javax.net.ssl.KeyManagerFactory
		Statement: $r16 = staticinvoke <javax.net.ssl.KeyManagerFactory: javax.net.ssl.KeyManagerFactory getInstance(java.lang.String)>($r10)
		Method: <com.tuya.smart.mqttclient.mqttv3.internal.security.SSLSocketFactoryFactory: javax.net.ssl.SSLContext getSSLContext(java.lang.String)>
		SHA-256: b69586b47083a274b892db74e507a6d740b709b476ff360f5c368cf3c5b4e9ca
		Secure: false
	Object:
		Variable: $r3
		Type: javax.crypto.Mac
		Statement: $r3 = staticinvoke <javax.crypto.Mac: javax.crypto.Mac getInstance(java.lang.String)>(varReplacer2639794)
		Method: <com.tuya.sdk.security.EncryptionManager: byte[] bppdpdq(byte[])>
		SHA-256: f6e115069c12a994a4a4149378b0e5024ca011d8c07fd4e9dbccaa281f553929
		Secure: false
	Object:
		Variable: $r5
		Type: byte[]
		Statement: $r5 = virtualinvoke $r4.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r5)
		Method: <com.tuya.smart.android.common.utils.AESUtil: java.lang.String decryptWithBase64(java.lang.String)>
		SHA-256: c9ca7748c7d260b9e2579bd238f756142ef47a712db43b18d13bc6c0282e437e
		Secure: false
	Object:
		Variable: $r6
		Type: javax.crypto.SecretKey
		Statement: $r6 = virtualinvoke $r4.<javax.crypto.KeyGenerator: javax.crypto.SecretKey generateKey()>()
		Method: <com.tuya.sdk.security.EncryptionManager: boolean bdpdqbp(android.content.SharedPreferences,byte[])>
		SHA-256: 56c61242aab8a9c765a61940a9d9f896deed1bf171e7e71968e110b2ee017b78
		Secure: true
	Object:
		Variable: $r3
		Type: java.security.SecureRandom
		Statement: specialinvoke $r3.<java.security.SecureRandom: void <init>()>()
		Method: <com.tuya.smart.android.common.utils.PhoneUtil: java.lang.String generateRandomId()>
		SHA-256: 2420b27bf389373b96eb7f89fa4fea9691382d20dd771e9bf99fd500032a6a83
		Secure: true
	Object:
		Variable: $r1
		Type: java.security.MessageDigest
		Statement: $r1 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer316155)
		Method: <com.tuya.sdk.security.EncryptionManager: java.lang.String pppbppp(java.lang.String)>
		SHA-256: 4ea240f72cb4f5963f2bd6e372b46a6e5c5c714525205c041cd6c73aacc0c2d8
		Secure: true
	Object:
		Variable: $r19
		Type: javax.crypto.CipherInputStream
		Statement: specialinvoke $r19.<javax.crypto.CipherInputStream: void <init>(java.io.InputStream,javax.crypto.Cipher)>($r7, $r10)
		Method: <gjc: java.io.File a(java.lang.String,java.io.File,java.lang.String)>
		SHA-256: c02c8d6172f2205f9b9fca0dc7e78e138643a8a2ac2aabd148cc1433610ba7c7
		Secure: false
	Object:
		Variable: $r1
		Type: byte[]
		Statement: $r1 = virtualinvoke $r4.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r1)
		Method: <com.tuya.smart.android.common.utils.AESUtil: java.lang.String decrypt(byte[])>
		SHA-256: e4b1d0c874187eec3801ed7b37e428fef37e48da5266ab236ff1ab28e87c9baa
		Secure: false
	Object:
		Variable: varReplacer2850522
		Type: java.lang.String
		Statement: $r3 = staticinvoke <java.security.KeyFactory: java.security.KeyFactory getInstance(java.lang.String)>(varReplacer2850522)
		Method: <bvu: java.security.PublicKey b(java.lang.String)>
		SHA-256: cbae120079e7a5874f62e8a4d2adb3ef70d3d2ee5c2b513505d21b648ef8aefc
		Secure: false
	Object:
		Variable: $r0
		Type: java.security.SecureRandom
		Statement: specialinvoke $r0.<java.security.SecureRandom: void <init>()>()
		Method: <com.tuya.bouncycastle.crypto.CryptoServicesRegistrar: java.security.SecureRandom getSecureRandom()>
		SHA-256: 582698de09c351e067e554bf94377392090de64bd016bfd274eb14d55c98501f
		Secure: true
	Object:
		Variable: $r0
		Type: byte[]
		Statement: $r0 = virtualinvoke $r1.<javax.crypto.Cipher: byte[] doFinal(byte[],int,int)>($r0, $i0, $i1)
		Method: <com.amazon.identity.auth.device.datastore.AESEncryptor: byte[] performAESCipherOperation(javax.crypto.Cipher,byte[],int,int)>
		SHA-256: a8c280a171bc4840528d11d875ea2c609cbb9aed9a80092ed51f528c9bdc0b69
		Secure: false
	Object:
		Variable: $r0
		Type: byte[]
		Statement: $r0 = virtualinvoke $r1.<java.security.MessageDigest: byte[] digest(byte[])>($r0)
		Method: <com.tuya.sdk.bluetooth.bbbdppp: byte[] bdpdqbp(byte[])>
		SHA-256: a1f7b4ba12acda7e69864fd6c0443931ab062e4aa57956aaffb02f9c384ccf63
		Secure: false
	Object:
		Variable: $r4
		Type: java.security.KeyPair
		Statement: $r4 = virtualinvoke $r2.<java.security.KeyPairGenerator: java.security.KeyPair generateKeyPair()>()
		Method: <com.tuya.smart.android.network.util.ECDHEngine: com.tuya.smart.android.network.util.ECDHEngine$KeyEntity generateKeyPair(java.lang.String)>
		SHA-256: ef881b8fcaf4e51a177168ba82b30586ea919358066fe67c184b8516871cc022
		Secure: false
	Object:
		Variable: $r12
		Type: java.security.KeyPair
		Statement: specialinvoke $r12.<java.security.KeyPair: void <init>(java.security.PublicKey,java.security.PrivateKey)>($r9, $r13)
		Method: <com.tuya.bouncycastle.jcajce.provider.asymmetric.ec.KeyPairGeneratorSpi$EC: java.security.KeyPair generateKeyPair()>
		SHA-256: c9e1ff5450f21aae65af053d6ed29f81c5a7b267991078defbfa3059af0e266a
		Secure: false
	Object:
		Variable: varReplacer710548
		Type: java.lang.String
		Statement: specialinvoke $r4.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r2, varReplacer710548)
		Method: <com.tuya.sdk.bluetooth.bddqpdp: byte[] pdqppqb(byte[],byte[],byte[])>
		SHA-256: 8ac06e80928dfdfe781d7618d44003273545888fda7f21e4d972666267f418d3
		Secure: false
	Object:
		Variable: $r6
		Type: javax.net.ssl.SSLContext
		Statement: $r6 = staticinvoke <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String,java.security.Provider)>(varReplacer3125939, $r5)
		Method: <io.grpc.okhttp.OkHttpChannelBuilder: javax.net.ssl.SSLSocketFactory createSocketFactory()>
		SHA-256: 7dc614cc2564f450af68bd1970101ff6de536613c89f95439819bdf2f0e9410f
		Secure: false
	Object:
		Variable: $r2
		Type: java.security.spec.ECGenParameterSpec
		Statement: specialinvoke $r2.<java.security.spec.ECGenParameterSpec: void <init>(java.lang.String)>(varReplacer1886414)
		Method: <com.tuya.bouncycastle.jcajce.provider.asymmetric.ec.KeyPairGeneratorSpi$EC: void <clinit>()>
		SHA-256: eac1ef5d873c3bf128c0ff230c5cc9b98b975fa4c9e7d7e61e5c5ad0e69fcec2
		Secure: true
	Object:
		Variable: $r2
		Type: byte[]
		Statement: $r2 = virtualinvoke $r4.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r2)
		Method: <com.tuya.sdk.security.EncryptionManager: byte[] bppdpdq(com.tuya.sdk.security.EncryptionManager$bdpdqbp)>
		SHA-256: 51d74a291fdef175cf53a7265d9859f60ea5b4b7e93252e7339e51081c87367b
		Secure: false
	Object:
		Variable: $r6
		Type: java.security.PrivateKey
		Statement: $r6 = virtualinvoke $r5.<java.security.KeyFactory: java.security.PrivateKey generatePrivate(java.security.spec.KeySpec)>($r4)
		Method: <bni: java.security.PrivateKey b(java.lang.String)>
		SHA-256: bac404b38c7dcbf9301d5d573aab5b2109b99f24cbe86d94353895a6437e7099
		Secure: false
	Object:
		Variable: $r7
		Type: byte[]
		Statement: $r7 = virtualinvoke $r5.<java.security.MessageDigest: byte[] digest(byte[])>($r7)
		Method: <com.google.android.gms.common.util.AndroidUtilsLight: byte[] getPackageCertificateHashBytes(android.content.Context,java.lang.String)>
		SHA-256: b1b700d3bac9a15845b2a1446581968f445f05df9861b6e2918912b25ad1a23d
		Secure: false
	Object:
		Variable: r0
		Type: ipw
		Statement: specialinvoke r0.<java.security.spec.ECParameterSpec: void <init>(java.security.spec.EllipticCurve,java.security.spec.ECPoint,java.math.BigInteger,int)>($r5, $r6, $r2, varReplacer3270701)
		Method: <ipw: void <init>(java.lang.String,ipz,iqb,java.math.BigInteger)>
		SHA-256: 728213a79b1a712ee365a7d138fed309b8aa54a7c5641c937c1d5af7efa75b13
		Secure: true
	Object:
		Variable: $r3
		Type: java.lang.String
		Statement: specialinvoke $r7.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r6, $r3)
		Method: <io.jsonwebtoken.SigningKeyResolverAdapter: java.security.Key resolveSigningKey(io.jsonwebtoken.JwsHeader,io.jsonwebtoken.Claims)>
		SHA-256: 68505a57fb5aa2144a5abe3ae780f592ec256f69f83106200a4e59378dca3a85
		Secure: false
	Object:
		Variable: $r3
		Type: javax.crypto.spec.IvParameterSpec
		Statement: specialinvoke $r3.<javax.crypto.spec.IvParameterSpec: void <init>(byte[])>($r4)
		Method: <com.tuya.smart.android.network.util.AESCBCUtil: java.lang.String encrypt(byte[],java.lang.String,java.lang.String)>
		SHA-256: b9df9d738d1bd95e99a5840fc5cb2b30d747e00dcc1ab3d80effa14c57260034
		Secure: false
	Object:
		Variable: $r4
		Type: javax.crypto.SecretKeyFactory
		Statement: $r4 = staticinvoke <javax.crypto.SecretKeyFactory: javax.crypto.SecretKeyFactory getInstance(java.lang.String)>(varReplacer457387)
		Method: <cgz: void <init>(java.lang.String,int,boolean)>
		SHA-256: aa375e5c37c46f0e9d5abb1eb60bb4babca4558b49c78f1c7dfc6ef4144d54b3
		Secure: false
	Object:
		Variable: $r1
		Type: java.security.SecureRandom
		Statement: specialinvoke $r1.<java.security.SecureRandom: void <init>()>()
		Method: <com.tuya.sdk.bluetooth.qbdbbdb: byte[] bdpdqbp()>
		SHA-256: c652331dd9c518bd092fa9035b3bb15d122134d1e95e0e2961c19fe74207958a
		Secure: true
	Object:
		Variable: $r16
		Type: javax.net.ssl.KeyManagerFactory
		Statement: $r16 = staticinvoke <javax.net.ssl.KeyManagerFactory: javax.net.ssl.KeyManagerFactory getInstance(java.lang.String,java.lang.String)>($r10, $r12)
		Method: <com.tuya.smart.mqttclient.mqttv3.internal.security.SSLSocketFactoryFactory: javax.net.ssl.SSLContext getSSLContext(java.lang.String)>
		SHA-256: 259523d67883fd265d2c327657eb84635e3d32acd444bbe75c56617f0f949887
		Secure: false
	Object:
		Variable: $r5
		Type: java.security.PublicKey
		Statement: $r5 = virtualinvoke $r4.<java.security.KeyPair: java.security.PublicKey getPublic()>()
		Method: <com.tuya.smart.android.network.util.ECDHEngine: com.tuya.smart.android.network.util.ECDHEngine$KeyEntity generateKeyPair(java.lang.String)>
		SHA-256: 4122dd3df2510c4840256778df64984ecac50416a8e7b01c8af8e8c0608dccb7
		Secure: false
	Object:
		Variable: $r1
		Type: byte[]
		Statement: virtualinvoke $r0.<java.security.SecureRandom: void nextBytes(byte[])>($r1)
		Method: <com.amazon.identity.auth.device.datastore.AESEncryptor: byte[] generateIV()>
		SHA-256: 17bb566c9de600106f9646bba6a14a01cfbc3d4b502aa307457b1a8043c0028b
		Secure: true
	Object:
		Variable: $r1
		Type: byte[]
		Statement: virtualinvoke $r2.<java.security.SecureRandom: void nextBytes(byte[])>($r1)
		Method: <com.tuya.sdk.security.EncryptionManager: byte[] bdpdqbp()>
		SHA-256: 5f53e088421746d00550513b14ea7488d29d141490dbef0c7a818dd49979b670
		Secure: true
	Object:
		Variable: $r2
		Type: javax.crypto.KeyGenerator
		Statement: $r2 = staticinvoke <javax.crypto.KeyGenerator: javax.crypto.KeyGenerator getInstance(java.lang.String,java.lang.String)>(varReplacer2848498, varReplacer2848499)
		Method: <dde: javax.crypto.SecretKey d(java.lang.String)>
		SHA-256: c2e1d6dd946f355e4a5968c25e6186223bf684dd55117fbc0639e0728fde4f80
		Secure: true
	Object:
		Variable: $r4
		Type: javax.crypto.spec.IvParameterSpec
		Statement: specialinvoke $r4.<javax.crypto.spec.IvParameterSpec: void <init>(byte[],int,int)>($r3, varReplacer2626903, varReplacer2626904)
		Method: <com.amazon.identity.auth.device.datastore.AESEncryptor: java.lang.String decryptData(java.lang.String)>
		SHA-256: 1c9fae07a2949a7a312fc27377d3e3d3285af6c541be47d633e2fc1d77d7a3a8
		Secure: false
	Object:
		Variable: $r2
		Type: java.security.MessageDigest
		Statement: $r2 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>($r1)
		Method: <hlr: byte[] a(byte[],java.lang.String)>
		SHA-256: 742c2cb007dfe8abf72661d2b23f784fbb7efef898f7117c01a8bf8e1947c90d
		Secure: false
	Object:
		Variable: $r1
		Type: java.security.SecureRandom
		Statement: specialinvoke $r1.<java.security.SecureRandom: void <init>()>()
		Method: <iem: void <clinit>()>
		SHA-256: c189a527cbb36a4964d8f22695c578fa8994df239ffd00a708baa2a2592394f8
		Secure: true
	Object:
		Variable: $r0
		Type: javax.crypto.spec.SecretKeySpec
		Statement: specialinvoke $r0.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r1, varReplacer1897632)
		Method: <com.tuya.smart.android.network.util.AESCTRUtil: java.lang.String encrypt(byte[],byte[],java.lang.String)>
		SHA-256: 4c7e99d44bcf0004240f1a1a6db56ef650e14e1cedf9ac818209cdefb8e3b353
		Secure: false
	Object:
		Variable: $r8
		Type: javax.crypto.spec.SecretKeySpec
		Statement: specialinvoke $r8.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r9, varReplacer1044812)
		Method: <cgz: cgz$a b(android.content.Context)>
		SHA-256: 3c902bc629a700af33f47b9ee68c4c4ef52e8354493676b8801ec322c8f3cd5a
		Secure: false
	Object:
		Variable: $r2
		Type: javax.net.ssl.TrustManagerFactory
		Statement: $r2 = staticinvoke <javax.net.ssl.TrustManagerFactory: javax.net.ssl.TrustManagerFactory getInstance(java.lang.String)>($r1)
		Method: <org.chromium.net.X509Util: org.chromium.net.X509Util$X509TrustManagerImplementation createTrustManager(java.security.KeyStore)>
		SHA-256: 76a8dae200ed7b1d9e8ecf4ced6fa5d1db9a75fae8aef077bdee2bf866fc6c35
		Secure: false
	Object:
		Variable: $r5
		Type: java.security.KeyPairGenerator
		Statement: $r5 = staticinvoke <java.security.KeyPairGenerator: java.security.KeyPairGenerator getInstance(java.lang.String,java.lang.String)>(varReplacer2358042, varReplacer2358043)
		Method: <com.tuya.sdk.security.EncryptionManager: boolean bdpdqbp(android.content.Context,byte[])>
		SHA-256: 5954f90f2e080c1798e9649722acf35cf99d78144c535341d8a5adfa5296b121
		Secure: false
	Object:
		Variable: $r5
		Type: byte[]
		Statement: $r5 = virtualinvoke $r4.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r5)
		Method: <com.tuya.smart.android.common.utils.AESUtil: java.lang.String decrypt(java.lang.String)>
		SHA-256: 1ae19e8e32e1a6337016be55b5f93ee04cb281820681fcd5a7d3394ac30f11db
		Secure: false
	Object:
		Variable: $r9
		Type: java.security.spec.ECParameterSpec
		Statement: specialinvoke $r9.<java.security.spec.ECParameterSpec: void <init>(java.security.spec.EllipticCurve,java.security.spec.ECPoint,java.math.BigInteger,int)>($r0, $r6, $r7, $i0)
		Method: <com.tuya.bouncycastle.jcajce.provider.asymmetric.util.EC5Util: java.security.spec.ECParameterSpec convertSpec(java.security.spec.EllipticCurve,com.tuya.bouncycastle.jce.spec.ECParameterSpec)>
		SHA-256: 5e446648189ea5990cccb15904e2d7a7e504603858a88d76ba384a4c530a6923
		Secure: true
	Object:
		Variable: $r9
		Type: javax.crypto.spec.SecretKeySpec
		Statement: specialinvoke $r9.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r5, varReplacer1790031)
		Method: <gvt: java.lang.String a(java.lang.String,java.lang.String)>
		SHA-256: 3a5db24db6cb1c6f7ff55a6fbc8c563ee7b9390c1a497f9cf740bd0a53d64e18
		Secure: false
	Object:
		Variable: $r0
		Type: byte[]
		Statement: $r2 = virtualinvoke $r5.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r0)
		Method: <com.tuya.sdk.bluetooth.bddqpdp: byte[] pdqppqb(byte[],byte[],byte[])>
		SHA-256: 7f975d58996c99d6ba93b2cdbdcde089645c9d0bdcb8e9a32323e41b008a2d2a
		Secure: false
	Object:
		Variable: $r1
		Type: byte[]
		Statement: $r1 = virtualinvoke $r4.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r1)
		Method: <com.tuya.smart.android.common.utils.AESUtil: byte[] decryptWithBytes(byte[])>
		SHA-256: 8f201932059d3425e2f977fb0261b23cfdad7d684e7acf00b95b6a1abcc15cd6
		Secure: false
	Object:
		Variable: $r5
		Type: java.security.SecureRandom
		Statement: specialinvoke $r5.<java.security.SecureRandom: void <init>()>()
		Method: <com.tuya.sdk.security.EncryptionManager: boolean pdqppqb(android.content.SharedPreferences,byte[])>
		SHA-256: fa0a68eb566763395b85b7a99dc8304c2e93b911461255687a7652f1ab29ef14
		Secure: true
	Object:
		Variable: $r1
		Type: javax.crypto.spec.IvParameterSpec
		Statement: specialinvoke $r1.<javax.crypto.spec.IvParameterSpec: void <init>(byte[])>($r3)
		Method: <dde: javax.crypto.Cipher a(java.lang.String,byte[])>
		SHA-256: b4c434479dd2b28fbb9b460c2373ac4d149e9986b65214c14861633e184372b0
		Secure: false
	Object:
		Variable: $r4
		Type: javax.crypto.KeyGenerator
		Statement: $r4 = staticinvoke <javax.crypto.KeyGenerator: javax.crypto.KeyGenerator getInstance(java.lang.String,java.lang.String)>(varReplacer2357961, varReplacer2357962)
		Method: <com.tuya.sdk.security.EncryptionManager: boolean pppbppp(byte[])>
		SHA-256: 55485850ec50e62b550be457458450534a79233a33cf6225568501fcefd86143
		Secure: true
	Object:
		Variable: $r5
		Type: java.security.SecureRandom
		Statement: specialinvoke $r5.<java.security.SecureRandom: void <init>()>()
		Method: <com.tuya.sdk.security.EncryptionManager: boolean bdpdqbp(android.content.SharedPreferences,byte[])>
		SHA-256: b7a3d75daccd7910b76719cd8d80a30b53c23fdf26e42c85667b45a3ec772d55
		Secure: true
	Object:
		Variable: $r0
		Type: byte[]
		Statement: virtualinvoke $r5.<javax.crypto.Cipher: int doFinal(byte[],int,int,byte[],int)>($r0, $i0, $i4, $r1, $i5)
		Method: <com.tuya.smart.android.common.utils.RSAUtil: byte[] encrypt(java.lang.String,java.security.PublicKey,byte[])>
		SHA-256: 7f1b243f96ae79c30765ed9293ece858bf32d80308b3307c8e5dcb9896aafd19
		Secure: false
	Object:
		Variable: $r10
		Type: javax.crypto.spec.SecretKeySpec
		Statement: specialinvoke $r10.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r1, varReplacer1238878)
		Method: <gjc: javax.crypto.Cipher a(byte[],java.lang.String,int)>
		SHA-256: 34c18a84c170ae27453b7608a33ab0a4d6b0a7ee578ade595aa3c671ad3e4773
		Secure: false
	Object:
		Variable: $r5
		Type: java.security.PrivateKey
		Statement: $r5 = virtualinvoke $r3.<java.security.KeyFactory: java.security.PrivateKey generatePrivate(java.security.spec.KeySpec)>($r0)
		Method: <com.tuya.smart.android.network.util.ECDHEngine: byte[] ecdhKey(java.lang.String,java.lang.String)>
		SHA-256: c093ad48e2039674589ef24c23a2bc400662334348921e2c942a9eedd4464bd7
		Secure: false
	Object:
		Variable: $r2
		Type: byte[]
		Statement: $r1 = virtualinvoke $r5.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r2)
		Method: <com.tuya.sdk.bluetooth.pdqppqb: byte[] bppdpdq(byte[],byte[])>
		SHA-256: b463655cba490df584109582e57c771858089cff4645a38282730ab46785b364
		Secure: false
	Object:
		Variable: $r1
		Type: java.security.MessageDigest
		Statement: $r1 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer986834)
		Method: <dnk: byte[] a(byte[])>
		SHA-256: 1b26455383e7f70185ce7710dc07de26affd55e68c545ad621407555b43fd4cf
		Secure: false
	Object:
		Variable: $r5
		Type: javax.crypto.Cipher
		Statement: $r5 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer1897557)
		Method: <com.tuya.smart.android.network.util.AESCTRUtil: java.lang.String encrypt(byte[],byte[],java.lang.String)>
		SHA-256: 5415053b8b451d5277497cbf229378f83b57d68b7a90bcdb271b535e9a047e1d
		Secure: false
	Object:
		Variable: $r11
		Type: java.security.PublicKey
		Statement: $r11 = virtualinvoke $r5.<java.security.KeyFactory: java.security.PublicKey generatePublic(java.security.spec.KeySpec)>($r10)
		Method: <cik: java.security.interfaces.ECPublicKey a(chy$b)>
		SHA-256: d857efd5d208a1205e93fffbe92e3fd1c4cbcc361f5ff6a99cad917399d0eae0
		Secure: false
	Object:
		Variable: $r10
		Type: javax.net.ssl.TrustManager[]
		Statement: $r10 = virtualinvoke $r9.<javax.net.ssl.TrustManagerFactory: javax.net.ssl.TrustManager[] getTrustManagers()>()
		Method: <io.grpc.okhttp.OkHttpChannelBuilder: javax.net.ssl.SSLSocketFactory createSocketFactory()>
		SHA-256: a81471583755125047c14b38d417d1189f23f769ba7ff54ad84e165eabfa8104
		Secure: false
	Object:
		Variable: $r5
		Type: javax.crypto.Cipher
		Statement: $r5 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer457389)
		Method: <cgz: void <init>(java.lang.String,int,boolean)>
		SHA-256: 244d1e4e982daebc9f9da1e99d5713174fdb9e03d2007c0c3e131978601f2c40
		Secure: true
	Object:
		Variable: $r4
		Type: javax.crypto.KeyGenerator
		Statement: $r4 = staticinvoke <javax.crypto.KeyGenerator: javax.crypto.KeyGenerator getInstance(java.lang.String)>(varReplacer2358103)
		Method: <com.tuya.sdk.security.EncryptionManager: boolean bdpdqbp(android.content.SharedPreferences,byte[])>
		SHA-256: 5457be2aa8073730e111c05717c20cac2bd0b7b064be9c33937c39896d321f52
		Secure: true
	Object:
		Variable: $r6
		Type: byte[]
		Statement: $r6 = virtualinvoke $r4.<java.security.MessageDigest: byte[] digest()>()
		Method: <dox$a: java.lang.String a(java.lang.String,long)>
		SHA-256: e262b3e65439ce67abc1d6a26ad99de1aacb7f1af6555d7d0af57a1c8689cf6
		Secure: false
	Object:
		Variable: $r1
		Type: byte[]
		Statement: $r1 = virtualinvoke $r4.<java.security.Signature: byte[] sign()>()
		Method: <io.jsonwebtoken.impl.crypto.RsaSigner: byte[] doSign(byte[])>
		SHA-256: 98f07673a5eb06121abff36bf0c3b12a7dbc2d4e321f0ed06df14792992e8580
		Secure: false
	Object:
		Variable: $r2
		Type: javax.crypto.spec.IvParameterSpec
		Statement: specialinvoke $r2.<javax.crypto.spec.IvParameterSpec: void <init>(byte[])>($r1)
		Method: <com.tuya.sdk.security.EncryptionManager: javax.crypto.Cipher pdqppqb(byte[],boolean)>
		SHA-256: db1edfce00ac6b855dcd38822a237047f5f8f1248b8b3fd3f00340937fc4e22
		Secure: true
	Object:
		Variable: $r14
		Type: java.security.KeyStore
		Statement: $r14 = staticinvoke <java.security.KeyStore: java.security.KeyStore getInstance(java.lang.String)>($r3)
		Method: <com.tuya.smart.mqttclient.mqttv3.internal.security.SSLSocketFactoryFactory: javax.net.ssl.SSLContext getSSLContext(java.lang.String)>
		SHA-256: ef952fc09cf5e577ee1c1152c546bffd3d58833ddae6a8c5633ec84d3ee11c7c
		Secure: false
	Object:
		Variable: $r9
		Type: java.security.KeyStore
		Statement: $r9 = staticinvoke <java.security.KeyStore: java.security.KeyStore getInstance(java.lang.String)>(varReplacer1599928)
		Method: <org.chromium.net.X509Util: void ensureInitializedLocked()>
		SHA-256: 2c439dfc8996d090bc4a216dd6f7e0b8fd1c356509ee3aa8783ca7e214ce7bfd
		Secure: false
	Object:
		Variable: $r5
		Type: javax.crypto.Cipher
		Statement: $r5 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer46013)
		Method: <com.tuya.smart.android.network.util.AESCTRUtil: java.lang.String decrypt(byte[],java.lang.String)>
		SHA-256: b991819dd916c4be86c81f1d9b232fde2acbd3fcee5afd77dbcde56ac18455de
		Secure: false

Findings in Java Class: io.grpc.okhttp.internal.Platform

	 in Method: io.grpc.okhttp.internal.Platform findPlatform()
		ForbiddenMethodError violating CrySL rule for javax.net.ssl.SSLContext
			Detected call to forbidden method javax.net.ssl.SSLContext getDefault() of class javax.net.ssl.SSLContext. Instead, call method <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String,java.security.Provider)>, <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String)>, <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String,java.lang.String)>.
			at statement: $r18 = staticinvoke <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getDefault()>()


Findings in Java Class: com.tuya.smart.android.common.utils.MD5Util

	 in Method: byte[] computeMD5Hash(byte[])
		ConstraintError violating CrySL rule for java.security.MessageDigest (on Object #11289a0b8c65d5624aebca2dbd30c9c28eb6867a6e5075de06d695277d57b62)
			First parameter (with value "MD5") should be any of {SHA-256, SHA-384, SHA-512}
			at statement: $r1 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer44290)


	 in Method: byte[] computeMD5Hash(java.io.InputStream)
		TypestateError violating CrySL rule for java.security.MessageDigest (on Object #d77eaee6eecd1f0297885fb60fd7031c75882fc306de1ffde6992228a76da916)
			Unexpected call to method <java.security.MessageDigest: byte[] digest()> on object of type java.security.MessageDigest. Expect a call to one of the following methods java.security.MessageDigest: void update(byte[],int,int),java.security.MessageDigest: void update(java.nio.ByteBuffer),java.security.MessageDigest: byte[] digest(byte[]),java.security.MessageDigest: void update(byte[]),java.security.MessageDigest: void update(byte)
			at statement: $r3 = virtualinvoke $r2.<java.security.MessageDigest: byte[] digest()>()

		ConstraintError violating CrySL rule for java.security.MessageDigest (on Object #d77eaee6eecd1f0297885fb60fd7031c75882fc306de1ffde6992228a76da916)
			First parameter (with value "MD5") should be any of {SHA-256, SHA-384, SHA-512}
			at statement: $r2 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer1319027)


Findings in Java Class: com.tuya.sdk.bluetooth.ddqqbbq$bdpdqbp

	 in Method: void run()
		ConstraintError violating CrySL rule for java.security.MessageDigest (on Object #574e6777422851d8d34547ae82f377ff4e831ffd882333a6754fb831fdff347e)
			First parameter (with value "MD5") should be any of {SHA-256, SHA-384, SHA-512}
			at statement: $r9 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer172306)


Findings in Java Class: com.tuya.sdk.bluetooth.qqpbpdq$bdpdqbp

	 in Method: void run()
		ConstraintError violating CrySL rule for java.security.MessageDigest (on Object #ce3096f98ed07a297af05c866a7c8e826fc9e515fc8754321d128a602f0f6668)
			First parameter (with value "MD5") should be any of {SHA-256, SHA-384, SHA-512}
			at statement: $r10 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer172624)


Findings in Java Class: com.tuya.sdk.bluetooth.dddbppd$bdpdqbp

	 in Method: void run()
		ConstraintError violating CrySL rule for java.security.MessageDigest (on Object #9e3f35c3b7ce60767b2e95f656592f914d90982acc6cb7c32200c9de4e9a5cfd)
			First parameter (with value "MD5") should be any of {SHA-256, SHA-384, SHA-512}
			at statement: $r9 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer191348)


Findings in Java Class: com

	 in Method: void b(java.lang.String,java.lang.String,com.facebook.react.bridge.Promise)
		TypestateError violating CrySL rule for java.security.MessageDigest (on Object #fc86cfefd3877eda08e300df3b678293351c287644e78f2c8f675151ad5cbd1d)
			Unexpected call to method <java.security.MessageDigest: byte[] digest()> on object of type java.security.MessageDigest. Expect a call to one of the following methods java.security.MessageDigest: void update(byte[],int,int),java.security.MessageDigest: void update(java.nio.ByteBuffer),java.security.MessageDigest: byte[] digest(byte[]),java.security.MessageDigest: void update(byte[]),java.security.MessageDigest: void update(byte)
			at statement: $r9 = virtualinvoke $r7.<java.security.MessageDigest: byte[] digest()>()


Findings in Java Class: coo

	 in Method: okhttp3.OkHttpClient$Builder a(okhttp3.OkHttpClient$Builder)
		ConstraintError violating CrySL rule for javax.net.ssl.SSLContext (on Object #7e245d72942be395dcc64cc118c04a047c9a4d20cacb8d0093beb8c98819cba8)
			First parameter (with value "SSL") should be any of {TLSv1.2}
			at statement: $r7 = staticinvoke <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String)>(varReplacer231968)

		RequiredPredicateError violating CrySL rule for javax.net.ssl.TrustManagerFactory
			First parameter was not properly generated as generatedKeyStore
			at statement: virtualinvoke $r3.<javax.net.ssl.TrustManagerFactory: void init(java.security.KeyStore)>(varReplacer231967)

		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			Second parameter was not properly generated as generatedTrustManagers
			at statement: virtualinvoke $r7.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>(varReplacer231970, $r4, varReplacer231970)

		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			Third parameter was not properly generated as randomized
			at statement: virtualinvoke $r7.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>(varReplacer231970, $r4, varReplacer231970)

		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			First parameter was not properly generated as generatedKeyManagers
			at statement: virtualinvoke $r7.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>(varReplacer231970, $r4, varReplacer231970)


Findings in Java Class: cop

	 in Method: java.lang.String a(java.lang.String)
		ConstraintError violating CrySL rule for java.security.MessageDigest (on Object #ae00f1e9a83a1e00244cd959df4257ebd3b3c7f93c7d08d07f579d314c5411d2)
			First parameter (with value "MD5") should be any of {SHA-256, SHA-384, SHA-512}
			at statement: $r3 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer232039)


Findings in Java Class: hlr

	 in Method: byte[] a(byte[],java.lang.String)
		ConstraintError violating CrySL rule for java.security.MessageDigest (on Object #742c2cb007dfe8abf72661d2b23f784fbb7efef898f7117c01a8bf8e1947c90d)
			First parameter (with value "MD5") should be any of {SHA-256, SHA-384, SHA-512}
			at statement: $r2 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>($r1)


Findings in Java Class: com.tuya.smart.android.network.TuyaSmartNetWork

	 in Method: javax.net.ssl.SSLSocketFactory systemDefaultSslSocketFactory(javax.net.ssl.X509TrustManager)
		ConstraintError violating CrySL rule for javax.net.ssl.SSLContext (on Object #4ae61a008b339c61a6f460a8cf5b3ff36835cf77e5214e4d2fd485db465b9003)
			First parameter (with value "TLS") should be any of {TLSv1.2}
			at statement: $r2 = staticinvoke <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String)>(varReplacer264706)

		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			First parameter was not properly generated as generatedKeyManagers
			at statement: virtualinvoke $r2.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>(varReplacer264667, $r6, varReplacer264667)

		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			Third parameter was not properly generated as randomized
			at statement: virtualinvoke $r2.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>(varReplacer264667, $r6, varReplacer264667)

		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			Second parameter was not properly generated as generatedTrustManagers
			at statement: virtualinvoke $r2.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>(varReplacer264667, $r6, varReplacer264667)


	 in Method: javax.net.ssl.X509TrustManager systemDefaultTrustManager()
		RequiredPredicateError violating CrySL rule for javax.net.ssl.TrustManagerFactory
			First parameter was not properly generated as generatedKeyStore
			at statement: virtualinvoke $r2.<javax.net.ssl.TrustManagerFactory: void init(java.security.KeyStore)>(varReplacer264735)


Findings in Java Class: cgz

	 in Method: void <init>(java.lang.String,int,boolean)
		ConstraintError violating CrySL rule for javax.crypto.SecretKeyFactory (on Object #aa375e5c37c46f0e9d5abb1eb60bb4babca4558b49c78f1c7dfc6ef4144d54b3)
			First parameter (with value "PBKDF2WithHmacSHA1") should be any of {PBKDF2WithHmacSHA512, PBKDF2WithHmacSHA384, PBKDF2WithHmacSHA256, PBKDF2WithHmacSHA224, PBEWithHmacSHA512AndAES_128, PBEWithHmacSHA384AndAES_128, PBEWithHmacSHA384AndAES_128, PBEWithHmacSHA224AndAES_128, PBEWithHmacSHA256AndAES_128, PBEWithHmacSHA224AndAES_256, PBEWithHmacSHA256AndAES_256, PBEWithHmacSHA384AndAES_256, PBEWithHmacSHA512AndAES_256}
			at statement: $r4 = staticinvoke <javax.crypto.SecretKeyFactory: javax.crypto.SecretKeyFactory getInstance(java.lang.String)>(varReplacer457387)


	 in Method: cgz$a b(android.content.Context)
		RequiredPredicateError violating CrySL rule for javax.crypto.spec.SecretKeySpec
			First parameter was not properly generated as preparedKeyMaterial
			at statement: specialinvoke $r10.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r3, varReplacer1044841)

		IncompleteOperationError violating CrySL rule for javax.crypto.spec.PBEKeySpec (on Object #60903a878d2d3afaeed0ba233efff31286f0610f6d3c3184d584203763e21716)
			Operation on object of type javax.crypto.spec.PBEKeySpec object not completed. Expected call to clearPassword
			at statement: $r7 = virtualinvoke $r6.<javax.crypto.SecretKeyFactory: javax.crypto.SecretKey generateSecret(java.security.spec.KeySpec)>($r4)

		RequiredPredicateError violating CrySL rule for javax.crypto.spec.PBEKeySpec
			Second parameter was not properly generated as randomized
			at statement: specialinvoke $r4.<javax.crypto.spec.PBEKeySpec: void <init>(char[],byte[],int,int)>($r5, $r3, $i0, varReplacer1044816)

		NeverTypeOfError violating CrySL rule for javax.crypto.spec.PBEKeySpec (on Object #60903a878d2d3afaeed0ba233efff31286f0610f6d3c3184d584203763e21716)
			First parameter should never be of type java.lang.String.
			at statement: specialinvoke $r4.<javax.crypto.spec.PBEKeySpec: void <init>(char[],byte[],int,int)>($r5, $r3, $i0, varReplacer1044816)

		HardCodedError violating CrySL rule for javax.crypto.spec.PBEKeySpec (on Object #60903a878d2d3afaeed0ba233efff31286f0610f6d3c3184d584203763e21716)
			First parameter should never be hardcoded.
			at statement: specialinvoke $r4.<javax.crypto.spec.PBEKeySpec: void <init>(char[],byte[],int,int)>($r5, $r3, $i0, varReplacer1044816)


	 in Method: java.lang.String a(android.content.Context,java.lang.String)
		RequiredPredicateError violating CrySL rule for javax.crypto.spec.IvParameterSpec
			First parameter was not properly generated as randomized
			at statement: specialinvoke $r7.<javax.crypto.spec.IvParameterSpec: void <init>(byte[])>($r5)


	 in Method: java.lang.String b(android.content.Context,java.lang.String)
		RequiredPredicateError violating CrySL rule for javax.crypto.spec.IvParameterSpec
			First parameter was not properly generated as randomized
			at statement: specialinvoke $r10.<javax.crypto.spec.IvParameterSpec: void <init>(byte[],int,int)>($r4, varReplacer3191722, varReplacer3191723)


Findings in Java Class: com.google.android.gms.common.util.AndroidUtilsLight

	 in Method: java.security.MessageDigest zzj(java.lang.String)
		IncompleteOperationError violating CrySL rule for java.security.MessageDigest (on Object #ae3618d0d1f264c3cd26a80f719d0eedb09a990816926713b695a9a95da4ac0d)
			Operation on object of type java.security.MessageDigest object not completed. Expected call to digest, update
			at statement: $r0 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>($r2)

		ConstraintError violating CrySL rule for java.security.MessageDigest (on Object #ae3618d0d1f264c3cd26a80f719d0eedb09a990816926713b695a9a95da4ac0d)
			First parameter (with value "SHA-1") should be any of {SHA-256, SHA-384, SHA-512}
			at statement: $r0 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>($r2)

		ConstraintError violating CrySL rule for java.security.MessageDigest (on Object #ae3618d0d1f264c3cd26a80f719d0eedb09a990816926713b695a9a95da4ac0d)
			First parameter (with value "SHA1") should be any of {SHA-256, SHA-384, SHA-512}
			at statement: $r0 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>($r2)


	 in Method: byte[] getPackageCertificateHashBytes(android.content.Context,java.lang.String)
		IncompleteOperationError violating CrySL rule for java.security.MessageDigest (on Object #ae3618d0d1f264c3cd26a80f719d0eedb09a990816926713b695a9a95da4ac0d)
			Operation on object of type java.security.MessageDigest object not completed. Expected call to digest, update
			at statement: $r5 = staticinvoke <com.google.android.gms.common.util.AndroidUtilsLight: java.security.MessageDigest zzj(java.lang.String)>(varReplacer2418817)


Findings in Java Class: com.tuya.sdk.bluetooth.bddqpdp

	 in Method: byte[] pdqppqb(byte[],byte[],byte[])
		RequiredPredicateError violating CrySL rule for javax.crypto.spec.SecretKeySpec
			First parameter was not properly generated as preparedKeyMaterial
			at statement: specialinvoke $r4.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r2, varReplacer710548)

		RequiredPredicateError violating CrySL rule for javax.crypto.spec.IvParameterSpec
			First parameter was not properly generated as randomized
			at statement: specialinvoke $r1.<javax.crypto.spec.IvParameterSpec: void <init>(byte[])>($r3)

		ConstraintError violating CrySL rule for javax.crypto.Cipher (on Object #1ae50d9f668c64e8c8f6f3d21dcc37f1d7f500d977a32c3540244adb9854ee50)
			First parameter (with value "AES/CBC/NoPadding") should be any of AES/CBC/{PKCS5Padding, ISO10126Padding}
			at statement: $r5 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer710507)

		RequiredPredicateError violating CrySL rule for javax.crypto.Cipher
			Second parameter was not properly generated as generatedKey
			at statement: virtualinvoke $r5.<javax.crypto.Cipher: void init(int,java.security.Key,java.security.spec.AlgorithmParameterSpec)>(varReplacer710524, $r4, $r1)

		RequiredPredicateError violating CrySL rule for javax.crypto.Cipher
			Third parameter was not properly generated as preparedIV [ with CBC, It's required to use IVParameterSpec]
			at statement: virtualinvoke $r5.<javax.crypto.Cipher: void init(int,java.security.Key,java.security.spec.AlgorithmParameterSpec)>(varReplacer710524, $r4, $r1)


	 in Method: byte[] bdpdqbp(byte[],byte[],byte[])
		RequiredPredicateError violating CrySL rule for javax.crypto.Cipher
			Second parameter was not properly generated as generatedKey
			at statement: virtualinvoke $r5.<javax.crypto.Cipher: void init(int,java.security.Key,java.security.spec.AlgorithmParameterSpec)>(varReplacer2140259, $r4, $r3)

		ConstraintError violating CrySL rule for javax.crypto.Cipher (on Object #7a9c1d91c50e3e481d2e900cfa81306b13f53058450bd2332a9e532f73b53b1a)
			First parameter (with value "AES/CBC/NoPadding") should be any of AES/CBC/{PKCS5Padding, ISO10126Padding}
			at statement: $r5 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer2140279)

		RequiredPredicateError violating CrySL rule for javax.crypto.spec.IvParameterSpec
			First parameter was not properly generated as randomized
			at statement: specialinvoke $r3.<javax.crypto.spec.IvParameterSpec: void <init>(byte[])>($r2)

		RequiredPredicateError violating CrySL rule for javax.crypto.spec.SecretKeySpec
			First parameter was not properly generated as preparedKeyMaterial
			at statement: specialinvoke $r4.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r1, varReplacer2140280)


Findings in Java Class: com.tuya.sdk.bluetooth.qbdbbdb

	 in Method: byte[] pppbppp(byte[])
		ConstraintError violating CrySL rule for java.security.MessageDigest (on Object #2075d9c6dd7c3f594a4103d23a4537a4e0f3a83771fa09c9826461d1b3a50208)
			First parameter (with value "MD5") should be any of {SHA-256, SHA-384, SHA-512}
			at statement: $r1 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer747417)


	 in Method: byte[] pdqppqb(byte[],byte[],byte[])
		RequiredPredicateError violating CrySL rule for javax.crypto.spec.SecretKeySpec
			First parameter was not properly generated as preparedKeyMaterial
			at statement: specialinvoke $r4.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r1, varReplacer1268440)

		RequiredPredicateError violating CrySL rule for javax.crypto.spec.IvParameterSpec
			First parameter was not properly generated as randomized
			at statement: specialinvoke $r3.<javax.crypto.spec.IvParameterSpec: void <init>(byte[])>($r2)

		RequiredPredicateError violating CrySL rule for javax.crypto.Cipher
			Third parameter was not properly generated as preparedIV [ with CBC, It's required to use IVParameterSpec]
			at statement: virtualinvoke $r5.<javax.crypto.Cipher: void init(int,java.security.Key,java.security.spec.AlgorithmParameterSpec)>(varReplacer1268445, $r4, $r3)

		ConstraintError violating CrySL rule for javax.crypto.Cipher (on Object #fdcc3df7190a5eb88b5392031742336f4cd966f93d8a40b410d2f769c18cc2e3)
			First parameter (with value "AES/CBC/NoPadding") should be any of AES/CBC/{PKCS5Padding, ISO10126Padding}
			at statement: $r5 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer1268452)

		RequiredPredicateError violating CrySL rule for javax.crypto.Cipher
			Second parameter was not properly generated as generatedKey
			at statement: virtualinvoke $r5.<javax.crypto.Cipher: void init(int,java.security.Key,java.security.spec.AlgorithmParameterSpec)>(varReplacer1268445, $r4, $r3)


Findings in Java Class: com.tuya.smart.android.network.util.ECDHEngine

	 in Method: com.tuya.smart.android.network.util.ECDHEngine$KeyEntity generateKeyPair(java.lang.String)
		ConstraintError violating CrySL rule for java.security.KeyPairGenerator (on Object #c0696727c0ccd9eec18c0fa4bf6258bd413bde013c607039e96641db003d237)
			First parameter (with value "ECDH") should be any of {RSA, EC, DSA, DiffieHellman, DH}
			at statement: $r2 = staticinvoke <java.security.KeyPairGenerator: java.security.KeyPairGenerator getInstance(java.lang.String)>(varReplacer748772)

		IncompleteOperationError violating CrySL rule for java.security.KeyPairGenerator (on Object #c0696727c0ccd9eec18c0fa4bf6258bd413bde013c607039e96641db003d237)
			Operation on object of type java.security.KeyPairGenerator object not completed. Expected call to genKeyPair, java.security.KeyPairGenerator: java.security.KeyPair generateKeyPair(), java.security.KeyPairGeneratorSpi: java.security.KeyPair generateKeyPair()
			at statement: $r4 = virtualinvoke $r2.<java.security.KeyPairGenerator: java.security.KeyPair generateKeyPair()>()


	 in Method: java.lang.String hmacSha256(byte[],byte[],boolean)
		TypestateError violating CrySL rule for javax.crypto.Mac (on Object #39ba15b9d696169b94195f5efe85b2edd232497b1d51a5ec9a47258079fcc982)
			Unexpected call to method <javax.crypto.Mac: byte[] doFinal(byte[])> on object of type javax.crypto.Mac. Expect a call to one of the following methods javax.crypto.Mac: void doFinal(byte[],int),javax.crypto.Mac: void update(byte[]),javax.crypto.Mac: void update(byte),javax.crypto.Mac: byte[] doFinal(),javax.crypto.Mac: void update(byte[],int,int)
			at statement: $r1 = virtualinvoke $r3.<javax.crypto.Mac: byte[] doFinal(byte[])>($r2)

		RequiredPredicateError violating CrySL rule for javax.crypto.spec.SecretKeySpec
			First parameter was not properly generated as preparedKeyMaterial
			at statement: specialinvoke $r0.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r1, varReplacer1084061)


	 in Method: byte[] ecdhKey(java.lang.String,java.lang.String)
		RequiredPredicateError violating CrySL rule for java.security.KeyFactory
			First parameter was not properly generated as speccedKey
			at statement: $r5 = virtualinvoke $r3.<java.security.KeyFactory: java.security.PrivateKey generatePrivate(java.security.spec.KeySpec)>($r0)

		ConstraintError violating CrySL rule for javax.crypto.KeyAgreement (on Object #92e621affdcf07efe6d8071c53cd8aac322387eef64d8c39e28fac1f785f9256)
			First parameter (with value "ECDH") should be any of {DH, DiffieHellman, NH}
			at statement: $r7 = staticinvoke <javax.crypto.KeyAgreement: javax.crypto.KeyAgreement getInstance(java.lang.String)>(varReplacer1084147)

		ConstraintError violating CrySL rule for java.security.KeyFactory (on Object #65a71148e92b02b9113e82602a572f512cd00f6363c724acefafa93765441ce)
			First parameter (with value "ECDH") should be any of {RSA, DiffieHellman, DH, DSA, EC}
			at statement: $r3 = staticinvoke <java.security.KeyFactory: java.security.KeyFactory getInstance(java.lang.String)>(varReplacer1084155)


	 in Method: java.security.PublicKey decodeECPoint(java.lang.String,java.lang.String)
		RequiredPredicateError violating CrySL rule for java.security.KeyFactory
			First parameter was not properly generated as speccedKey
			at statement: $r16 = virtualinvoke $r15.<java.security.KeyFactory: java.security.PublicKey generatePublic(java.security.spec.KeySpec)>($r14)


Findings in Java Class: dnc

	 in Method: byte[] a(byte[],java.lang.String)
		TypestateError violating CrySL rule for javax.crypto.Mac (on Object #efac0cc00c05c76f79bb700bb0f6847d3a68cec28a0866ed49ddb1fe86cad00c)
			Unexpected call to method <javax.crypto.Mac: byte[] doFinal(byte[])> on object of type javax.crypto.Mac. Expect a call to one of the following methods javax.crypto.Mac: void doFinal(byte[],int),javax.crypto.Mac: void update(byte[]),javax.crypto.Mac: void update(byte),javax.crypto.Mac: byte[] doFinal(),javax.crypto.Mac: void update(byte[],int,int)
			at statement: $r1 = virtualinvoke $r3.<javax.crypto.Mac: byte[] doFinal(byte[])>($r1)

		RequiredPredicateError violating CrySL rule for javax.crypto.spec.SecretKeySpec
			First parameter was not properly generated as preparedKeyMaterial
			at statement: specialinvoke $r0.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r4, $r2)


Findings in Java Class: dnk

	 in Method: byte[] a(byte[])
		ConstraintError violating CrySL rule for java.security.MessageDigest (on Object #1b26455383e7f70185ce7710dc07de26affd55e68c545ad621407555b43fd4cf)
			First parameter (with value "MD5") should be any of {SHA-256, SHA-384, SHA-512}
			at statement: $r1 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer986834)


	 in Method: java.lang.String b(java.lang.String)
		ConstraintError violating CrySL rule for java.security.MessageDigest (on Object #f6ce8a46a8a667c4e026ad79f988da762fd8c470fcffaa3caa7189504700e8b7)
			First parameter (with value "MD5") should be any of {SHA-256, SHA-384, SHA-512}
			at statement: $r2 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer1302182)


Findings in Java Class: hjt

	 in Method: hjv b(hju)
		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			Second parameter was not properly generated as generatedTrustManagers
			at statement: virtualinvoke $r13.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>(varReplacer1004641, $r117, $r14)

		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			Third parameter was not properly generated as randomized
			at statement: virtualinvoke $r13.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>(varReplacer1004641, $r117, $r14)

		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			First parameter was not properly generated as generatedKeyManagers
			at statement: virtualinvoke $r13.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>(varReplacer1004641, $r117, $r14)

		ConstraintError violating CrySL rule for javax.net.ssl.SSLContext (on Object #5daa26dd9144f3ede38e2c884a6d05e5716f2dcf24fa6b8a35140db368f79901)
			First parameter (with value "TLS") should be any of {TLSv1.2}
			at statement: $r13 = staticinvoke <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String)>(varReplacer1004608)


Findings in Java Class: bga

	 in Method: java.lang.String a(java.util.List)
		TypestateError violating CrySL rule for java.security.MessageDigest (on Object #34bb983909ae197df8a88e0f28421b8ca2afa23e9923c93d38bafd99d5c9ef44)
			Unexpected call to method <java.security.MessageDigest: byte[] digest()> on object of type java.security.MessageDigest. Expect a call to one of the following methods java.security.MessageDigest: void update(byte[],int,int),java.security.MessageDigest: void update(java.nio.ByteBuffer),java.security.MessageDigest: byte[] digest(byte[]),java.security.MessageDigest: void update(byte[]),java.security.MessageDigest: void update(byte)
			at statement: $r3 = virtualinvoke $r2.<java.security.MessageDigest: byte[] digest()>()

		ConstraintError violating CrySL rule for java.security.MessageDigest (on Object #34bb983909ae197df8a88e0f28421b8ca2afa23e9923c93d38bafd99d5c9ef44)
			First parameter (with value "SHA256") should be any of {SHA-256, SHA-384, SHA-512}
			at statement: $r2 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer1039830)


Findings in Java Class: com.tuya.smart.android.network.util.AESCBCUtil

	 in Method: java.lang.String encrypt(byte[],java.lang.String,java.lang.String)
		RequiredPredicateError violating CrySL rule for javax.crypto.Cipher
			Second parameter was not properly generated as generatedKey
			at statement: virtualinvoke $r6.<javax.crypto.Cipher: void init(int,java.security.Key,java.security.spec.AlgorithmParameterSpec)>(varReplacer1084124, $r5, $r3)

		RequiredPredicateError violating CrySL rule for javax.crypto.spec.SecretKeySpec
			First parameter was not properly generated as preparedKeyMaterial
			at statement: specialinvoke $r5.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r0, varReplacer1084123)

		ConstraintError violating CrySL rule for javax.crypto.Cipher (on Object #c288add68aae0e8b6ac7220e1af35265ed96d9b508c9728f3bfef9166102bd20)
			First parameter (with value "AES/CBC/PKCS7PADDING") should be any of AES/CBC/{PKCS5Padding, ISO10126Padding}
			at statement: $r6 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer1084134)

		RequiredPredicateError violating CrySL rule for javax.crypto.Cipher
			Third parameter was not properly generated as preparedIV [ with CBC, It's required to use IVParameterSpec]
			at statement: virtualinvoke $r6.<javax.crypto.Cipher: void init(int,java.security.Key,java.security.spec.AlgorithmParameterSpec)>(varReplacer1084124, $r5, $r3)

		RequiredPredicateError violating CrySL rule for javax.crypto.spec.IvParameterSpec
			First parameter was not properly generated as randomized
			at statement: specialinvoke $r3.<javax.crypto.spec.IvParameterSpec: void <init>(byte[])>($r4)


Findings in Java Class: com.tuya.smart.android.common.utils.RSAUtil

	 in Method: byte[] encrypt(java.lang.String,java.security.PublicKey,byte[])
		RequiredPredicateError violating CrySL rule for javax.crypto.Cipher
			Second parameter was not properly generated as generatedKey
			at statement: virtualinvoke $r5.<javax.crypto.Cipher: void init(int,java.security.Key,java.security.SecureRandom)>(varReplacer1195852, $r3, $r4)

		ConstraintError violating CrySL rule for javax.crypto.Cipher (on Object #de5bd5ac252cb19a029b8387cab569036aebb8b079de44fdbd1a21fb7d57fd3f)
			First parameter (with value "RSA") should be any of {AES, PBEWithHmacSHA224AndAES_128, PBEWithHmacSHA256AndAES_128, PBEWithHmacSHA384AndAES_128, PBEWithHmacSHA512AndAES_128, PBEWithHmacSHA224AndAES_256, PBEWithHmacSHA256AndAES_256, PBEWithHmacSHA384AndAES_256, PBEWithHmacSHA512AndAES_256}
			at statement: $r5 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>($r2)

		IncompleteOperationError violating CrySL rule for javax.crypto.Cipher (on Object #de5bd5ac252cb19a029b8387cab569036aebb8b079de44fdbd1a21fb7d57fd3f)
			Operation on object of type javax.crypto.Cipher object not completed. Expected call to javax.crypto.Cipher: byte[] doFinal(byte[]), javax.crypto.Cipher: int doFinal(java.nio.ByteBuffer,java.nio.ByteBuffer), javax.crypto.Cipher: byte[] doFinal(byte[],int,int), javax.crypto.Cipher: int doFinal(byte[],int,int,byte[]), javax.crypto.Cipher: int doFinal(byte[],int,int,byte[],int), update, wrap
			at statement: virtualinvoke $r5.<javax.crypto.Cipher: int doFinal(byte[],int,int,byte[],int)>($r0, $i0, $i4, $r1, $i5)

		IncompleteOperationError violating CrySL rule for javax.crypto.Cipher (on Object #de5bd5ac252cb19a029b8387cab569036aebb8b079de44fdbd1a21fb7d57fd3f)
			Operation on object of type javax.crypto.Cipher object not completed. Expected call to javax.crypto.Cipher: byte[] doFinal(byte[]), javax.crypto.Cipher: int doFinal(java.nio.ByteBuffer,java.nio.ByteBuffer), javax.crypto.Cipher: byte[] doFinal(byte[],int,int), javax.crypto.Cipher: int doFinal(byte[],int,int,byte[]), javax.crypto.Cipher: int doFinal(byte[],int,int,byte[],int), update, wrap
			at statement: virtualinvoke $r5.<javax.crypto.Cipher: int doFinal(byte[],int,int,byte[],int)>($r0, $i0, $i1, $r1, $i4)

		IncompleteOperationError violating CrySL rule for javax.crypto.Cipher (on Object #de5bd5ac252cb19a029b8387cab569036aebb8b079de44fdbd1a21fb7d57fd3f)
			Operation on object of type javax.crypto.Cipher object not completed. Expected call to update, wrap, doFinal
			at statement: $i2 = virtualinvoke $r5.<javax.crypto.Cipher: int getOutputSize(int)>($i2)


	 in Method: java.security.interfaces.RSAPublicKey generateRSAPublicKey(java.lang.String,java.math.BigInteger,java.math.BigInteger)
		RequiredPredicateError violating CrySL rule for java.security.KeyFactory
			First parameter was not properly generated as speccedKey
			at statement: $r5 = virtualinvoke $r3.<java.security.KeyFactory: java.security.PublicKey generatePublic(java.security.spec.KeySpec)>($r4)


Findings in Java Class: gjc

	 in Method: java.io.File a(java.lang.String,java.io.InputStream,java.io.File)
		IncompleteOperationError violating CrySL rule for javax.crypto.CipherOutputStream (on Object #b00d70aa4e84b85426b1c55b60843fc450a9a728a967ed67efad131c0f737a99)
			Operation on object of type javax.crypto.CipherOutputStream object not completed. Expected call to write
			at statement: specialinvoke $r18.<javax.crypto.CipherOutputStream: void <init>(java.io.OutputStream,javax.crypto.Cipher)>($r5, $r7)

		IncompleteOperationError violating CrySL rule for javax.crypto.Cipher (on Object #c946c4bc355bafbebd29ea827be1e0b9cd6fa821b4ba1ec02e0a148f54ea55aa)
			Operation on object of type javax.crypto.Cipher object not completed. Expected call to update, wrap, doFinal
			at statement: specialinvoke $r18.<javax.crypto.CipherOutputStream: void <init>(java.io.OutputStream,javax.crypto.Cipher)>($r5, $r7)


	 in Method: java.io.File a(java.lang.String,java.io.File,java.lang.String)
		IncompleteOperationError violating CrySL rule for javax.crypto.Cipher (on Object #c946c4bc355bafbebd29ea827be1e0b9cd6fa821b4ba1ec02e0a148f54ea55aa)
			Operation on object of type javax.crypto.Cipher object not completed. Expected call to update, wrap, doFinal
			at statement: specialinvoke $r19.<javax.crypto.CipherInputStream: void <init>(java.io.InputStream,javax.crypto.Cipher)>($r7, $r10)

		IncompleteOperationError violating CrySL rule for javax.crypto.CipherInputStream (on Object #c02c8d6172f2205f9b9fca0dc7e78e138643a8a2ac2aabd148cc1433610ba7c7)
			Operation on object of type javax.crypto.CipherInputStream object not completed. Expected call to read
			at statement: specialinvoke $r19.<javax.crypto.CipherInputStream: void <init>(java.io.InputStream,javax.crypto.Cipher)>($r7, $r10)


	 in Method: javax.crypto.Cipher a(byte[],java.lang.String,int)
		RequiredPredicateError violating CrySL rule for javax.crypto.spec.IvParameterSpec
			First parameter was not properly generated as randomized
			at statement: specialinvoke $r9.<javax.crypto.spec.IvParameterSpec: void <init>(byte[])>($r1)

		RequiredPredicateError violating CrySL rule for javax.crypto.Cipher
			Second parameter was not properly generated as generatedKey
			at statement: virtualinvoke $r4.<javax.crypto.Cipher: void init(int,java.security.Key,java.security.spec.AlgorithmParameterSpec)>($i0, $r3, $r0)

		RequiredPredicateError violating CrySL rule for javax.crypto.spec.SecretKeySpec
			First parameter was not properly generated as preparedKeyMaterial
			at statement: specialinvoke $r10.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r1, varReplacer1238878)


Findings in Java Class: com.tuya.smart.android.common.utils.AESUtil

	 in Method: byte[] encryptWithBytes(byte[])
		ConstraintError violating CrySL rule for javax.crypto.Cipher (on Object #c07c92637065f9963c307700984b9b22baa6e07708cd5fd04e6038051df5143d)
			First parameter (with value "AES") should be any of AES/{CBC, GCM, PCBC, CTR, CTS, CFB, OFB}
			at statement: $r4 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>($r3)

		RequiredPredicateError violating CrySL rule for javax.crypto.Cipher
			Second parameter was not properly generated as generatedKey
			at statement: virtualinvoke $r4.<javax.crypto.Cipher: void init(int,java.security.Key)>(varReplacer1240057, $r2)


	 in Method: java.security.Key generateKey()
		NeverTypeOfError violating CrySL rule for javax.crypto.spec.SecretKeySpec (on Object #31748ebc2a353689d2265df156944f9d661f75310d41c05963eea714985a6b6c)
			First parameter should never be of type java.lang.String.
			at statement: specialinvoke $r1.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r3, $r2)

		NeverTypeOfError violating CrySL rule for javax.crypto.spec.SecretKeySpec (on Object #31748ebc2a353689d2265df156944f9d661f75310d41c05963eea714985a6b6c)
			First parameter should never be of type java.lang.String.
			at statement: specialinvoke $r1.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r3, $r2)

		RequiredPredicateError violating CrySL rule for javax.crypto.spec.SecretKeySpec
			First parameter was not properly generated as preparedKeyMaterial
			at statement: specialinvoke $r1.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r3, $r2)

		NeverTypeOfError violating CrySL rule for javax.crypto.spec.SecretKeySpec (on Object #31748ebc2a353689d2265df156944f9d661f75310d41c05963eea714985a6b6c)
			First parameter should never be of type java.lang.String.
			at statement: specialinvoke $r1.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r3, $r2)

		NeverTypeOfError violating CrySL rule for javax.crypto.spec.SecretKeySpec (on Object #31748ebc2a353689d2265df156944f9d661f75310d41c05963eea714985a6b6c)
			First parameter should never be of type java.lang.String.
			at statement: specialinvoke $r1.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r3, $r2)

		NeverTypeOfError violating CrySL rule for javax.crypto.spec.SecretKeySpec (on Object #31748ebc2a353689d2265df156944f9d661f75310d41c05963eea714985a6b6c)
			First parameter should never be of type java.lang.String.
			at statement: specialinvoke $r1.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r3, $r2)

		NeverTypeOfError violating CrySL rule for javax.crypto.spec.SecretKeySpec (on Object #31748ebc2a353689d2265df156944f9d661f75310d41c05963eea714985a6b6c)
			First parameter should never be of type java.lang.String.
			at statement: specialinvoke $r1.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r3, $r2)

		NeverTypeOfError violating CrySL rule for javax.crypto.spec.SecretKeySpec (on Object #31748ebc2a353689d2265df156944f9d661f75310d41c05963eea714985a6b6c)
			First parameter should never be of type java.lang.String.
			at statement: specialinvoke $r1.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r3, $r2)


	 in Method: java.lang.String decryptWithBase64(java.lang.String)
		RequiredPredicateError violating CrySL rule for javax.crypto.Cipher
			Second parameter was not properly generated as generatedKey
			at statement: virtualinvoke $r4.<javax.crypto.Cipher: void init(int,java.security.Key)>(varReplacer2447543, $r2)

		ConstraintError violating CrySL rule for javax.crypto.Cipher (on Object #73279fcdf8f3ca9f352ab916e0f36b579a36dc46c69387d1c60ba0e3eba76d2b)
			First parameter (with value "AES") should be any of AES/{CBC, GCM, PCBC, CTR, CTS, CFB, OFB}
			at statement: $r4 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>($r3)


	 in Method: java.lang.String encryptWithBase64(java.lang.String)
		RequiredPredicateError violating CrySL rule for javax.crypto.Cipher
			Second parameter was not properly generated as generatedKey
			at statement: virtualinvoke $r4.<javax.crypto.Cipher: void init(int,java.security.Key)>(varReplacer2561927, $r2)

		ConstraintError violating CrySL rule for javax.crypto.Cipher (on Object #52cbc22322ffedac3ccaaaa5b6117d4a593a771c212e4a4e460c3b84ad397a31)
			First parameter (with value "AES") should be any of AES/{CBC, GCM, PCBC, CTR, CTS, CFB, OFB}
			at statement: $r4 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>($r3)


	 in Method: byte[] decryptWithBytes(byte[])
		ConstraintError violating CrySL rule for javax.crypto.Cipher (on Object #9a97ab8158c304f102c41f7e78d4c53ad9fb716256d9eadfdc38ac1803ce0030)
			First parameter (with value "AES") should be any of AES/{CBC, GCM, PCBC, CTR, CTS, CFB, OFB}
			at statement: $r4 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>($r3)

		RequiredPredicateError violating CrySL rule for javax.crypto.Cipher
			Second parameter was not properly generated as generatedKey
			at statement: virtualinvoke $r4.<javax.crypto.Cipher: void init(int,java.security.Key)>(varReplacer2639482, $r2)


	 in Method: byte[] encryptWithBytes(java.lang.String)
		RequiredPredicateError violating CrySL rule for javax.crypto.Cipher
			Second parameter was not properly generated as generatedKey
			at statement: virtualinvoke $r4.<javax.crypto.Cipher: void init(int,java.security.Key)>(varReplacer2801613, $r2)

		ConstraintError violating CrySL rule for javax.crypto.Cipher (on Object #c07c92637065f9963c307700984b9b22baa6e07708cd5fd04e6038051df5143d)
			First parameter (with value "AES") should be any of AES/{CBC, GCM, PCBC, CTR, CTS, CFB, OFB}
			at statement: $r4 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>($r3)


	 in Method: java.lang.String encrypt(java.lang.String)
		ConstraintError violating CrySL rule for javax.crypto.Cipher (on Object #1053fd1204fd79e79f1988d177e7dfe5968736074acfe778afed99fad39bfaa6)
			First parameter (with value "AES") should be any of AES/{CBC, GCM, PCBC, CTR, CTS, CFB, OFB}
			at statement: $r4 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>($r3)

		RequiredPredicateError violating CrySL rule for javax.crypto.Cipher
			Second parameter was not properly generated as generatedKey
			at statement: virtualinvoke $r4.<javax.crypto.Cipher: void init(int,java.security.Key)>(varReplacer2801804, $r2)


	 in Method: java.lang.String decrypt(byte[])
		ConstraintError violating CrySL rule for javax.crypto.Cipher (on Object #d20a17eedf9d76fdc72dd37c023530af2c2764050615a9f141cf62f05b85cd92)
			First parameter (with value "AES") should be any of AES/{CBC, GCM, PCBC, CTR, CTS, CFB, OFB}
			at statement: $r4 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>($r3)

		RequiredPredicateError violating CrySL rule for javax.crypto.Cipher
			Second parameter was not properly generated as generatedKey
			at statement: virtualinvoke $r4.<javax.crypto.Cipher: void init(int,java.security.Key)>(varReplacer3108367, $r2)


	 in Method: java.lang.String decrypt(java.lang.String)
		RequiredPredicateError violating CrySL rule for javax.crypto.Cipher
			Second parameter was not properly generated as generatedKey
			at statement: virtualinvoke $r4.<javax.crypto.Cipher: void init(int,java.security.Key)>(varReplacer3156584, $r2)

		ConstraintError violating CrySL rule for javax.crypto.Cipher (on Object #d20a17eedf9d76fdc72dd37c023530af2c2764050615a9f141cf62f05b85cd92)
			First parameter (with value "AES") should be any of AES/{CBC, GCM, PCBC, CTR, CTS, CFB, OFB}
			at statement: $r4 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>($r3)


Findings in Java Class: com.tuya.sdk.bluetooth.pdqppqb

	 in Method: byte[] bppdpdq(byte[],byte[])
		NeverTypeOfError violating CrySL rule for javax.crypto.spec.SecretKeySpec (on Object #8cb42d4ac150582d5e8c00bb9c61f0b943d2b834bc96b4a136a7002fa92720f5)
			First parameter should never be of type java.lang.String.
			at statement: specialinvoke $r0.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r1, varReplacer1336305)

		RequiredPredicateError violating CrySL rule for javax.crypto.Cipher
			Second parameter was not properly generated as generatedKey
			at statement: virtualinvoke $r5.<javax.crypto.Cipher: void init(int,java.security.Key)>(varReplacer1336312, $r0)

		RequiredPredicateError violating CrySL rule for javax.crypto.spec.SecretKeySpec
			First parameter was not properly generated as preparedKeyMaterial
			at statement: specialinvoke $r0.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r1, varReplacer1336305)

		NeverTypeOfError violating CrySL rule for javax.crypto.spec.SecretKeySpec (on Object #8cb42d4ac150582d5e8c00bb9c61f0b943d2b834bc96b4a136a7002fa92720f5)
			First parameter should never be of type java.lang.String.
			at statement: specialinvoke $r0.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r1, varReplacer1336305)


Findings in Java Class: com.facebook.common.util.SecureHashUtil

	 in Method: java.lang.String makeSHA1HashBase64(byte[])
		ConstraintError violating CrySL rule for java.security.MessageDigest (on Object #ebcfa07f6d9fa79b9d1567975c13a3ebe793269721dcc1c7ae3921d6fcb0d7d5)
			First parameter (with value "SHA-1") should be any of {SHA-256, SHA-384, SHA-512}
			at statement: $r1 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer1341215)


Findings in Java Class: com.tuya.sdk.security.EncryptionManager

	 in Method: void bppdpdq()
		ConstraintError violating CrySL rule for java.security.KeyStore (on Object #5d545709f6626f09af6522f25a94301234c64a98eb93517ace6e5b57b36efca4)
			First parameter (with value "AndroidKeyStore") should be any of {JCEKS, JKS, DKS, PKCS11, PKCS12}
			at statement: $r1 = staticinvoke <java.security.KeyStore: java.security.KeyStore getInstance(java.lang.String)>(varReplacer1401621)


	 in Method: boolean bdpdqbp(android.content.Context,byte[])
		IncompleteOperationError violating CrySL rule for java.security.KeyPairGenerator (on Object #ebe4b23fdbe6189ed3069d3aca9001ec67c9f7f8187eb049f247fdbead99f6e5)
			Operation on object of type java.security.KeyPairGenerator object not completed. Expected call to genKeyPair, java.security.KeyPairGenerator: java.security.KeyPair generateKeyPair(), initialize, java.security.KeyPairGeneratorSpi: java.security.KeyPair generateKeyPair()
			at statement: virtualinvoke $r5.<java.security.KeyPairGenerator: java.security.KeyPair generateKeyPair()>()

		IncompleteOperationError violating CrySL rule for java.security.KeyPairGenerator (on Object #5954f90f2e080c1798e9649722acf35cf99d78144c535341d8a5adfa5296b121)
			Operation on object of type java.security.KeyPairGenerator object not completed. Expected call to genKeyPair, java.security.KeyPairGenerator: java.security.KeyPair generateKeyPair(), initialize, java.security.KeyPairGeneratorSpi: java.security.KeyPair generateKeyPair()
			at statement: virtualinvoke $r5.<java.security.KeyPairGenerator: java.security.KeyPair generateKeyPair()>()

		TypestateError violating CrySL rule for java.security.KeyPairGenerator (on Object #ebe4b23fdbe6189ed3069d3aca9001ec67c9f7f8187eb049f247fdbead99f6e5)
			Unexpected call to method generateKeyPair on object of type java.security.KeyPairGenerator. Expect a call to one of the following methods initialize
			at statement: virtualinvoke $r5.<java.security.KeyPairGenerator: java.security.KeyPair generateKeyPair()>()

		TypestateError violating CrySL rule for java.security.KeyPairGenerator (on Object #5954f90f2e080c1798e9649722acf35cf99d78144c535341d8a5adfa5296b121)
			Unexpected call to method generateKeyPair on object of type java.security.KeyPairGenerator. Expect a call to one of the following methods initialize
			at statement: virtualinvoke $r5.<java.security.KeyPairGenerator: java.security.KeyPair generateKeyPair()>()

		RequiredPredicateError violating CrySL rule for java.security.KeyPairGenerator
			First parameter was not properly generated as preparedRSA
			at statement: virtualinvoke $r5.<java.security.KeyPairGenerator: void initialize(java.security.spec.AlgorithmParameterSpec,java.security.SecureRandom)>($r12, $r13)

		IncompleteOperationError violating CrySL rule for java.security.KeyPairGenerator (on Object #ebe4b23fdbe6189ed3069d3aca9001ec67c9f7f8187eb049f247fdbead99f6e5)
			Operation on object of type java.security.KeyPairGenerator object not completed. Expected call to initialize
			at statement: $r5 = staticinvoke <java.security.KeyPairGenerator: java.security.KeyPairGenerator getInstance(java.lang.String,java.lang.String)>(varReplacer2358042, varReplacer2358043)

		IncompleteOperationError violating CrySL rule for java.security.KeyPairGenerator (on Object #ebe4b23fdbe6189ed3069d3aca9001ec67c9f7f8187eb049f247fdbead99f6e5)
			Operation on object of type java.security.KeyPairGenerator object not completed. Expected call to initialize
			at statement: $r5 = staticinvoke <java.security.KeyPairGenerator: java.security.KeyPairGenerator getInstance(java.lang.String,java.lang.String)>(varReplacer2358044, varReplacer2358045)

		IncompleteOperationError violating CrySL rule for java.security.KeyPairGenerator (on Object #5954f90f2e080c1798e9649722acf35cf99d78144c535341d8a5adfa5296b121)
			Operation on object of type java.security.KeyPairGenerator object not completed. Expected call to initialize
			at statement: $r5 = staticinvoke <java.security.KeyPairGenerator: java.security.KeyPairGenerator getInstance(java.lang.String,java.lang.String)>(varReplacer2358042, varReplacer2358043)

		IncompleteOperationError violating CrySL rule for java.security.KeyPairGenerator (on Object #5954f90f2e080c1798e9649722acf35cf99d78144c535341d8a5adfa5296b121)
			Operation on object of type java.security.KeyPairGenerator object not completed. Expected call to initialize
			at statement: $r5 = staticinvoke <java.security.KeyPairGenerator: java.security.KeyPairGenerator getInstance(java.lang.String,java.lang.String)>(varReplacer2358044, varReplacer2358045)


	 in Method: byte[] pdqppqb(byte[])
		IncompleteOperationError violating CrySL rule for javax.crypto.Cipher (on Object #cc68dd10e66056cff43ba30fbc6b6e01ad9375e2ceb2944ef6c77860967388dd)
			Operation on object of type javax.crypto.Cipher object not completed. Expected call to update, wrap, doFinal
			at statement: specialinvoke $r5.<javax.crypto.CipherOutputStream: void <init>(java.io.OutputStream,javax.crypto.Cipher)>($r4, $r2)

		RequiredPredicateError violating CrySL rule for javax.crypto.Cipher
			Second parameter was not properly generated as generatedKey
			at statement: virtualinvoke $r2.<javax.crypto.Cipher: void init(int,java.security.Key)>(varReplacer2639448, $r3)

		ConstraintError violating CrySL rule for javax.crypto.Cipher (on Object #cc68dd10e66056cff43ba30fbc6b6e01ad9375e2ceb2944ef6c77860967388dd)
			First parameter (with value "RSA/NONE/PKCS1Padding") should be any of {AES, PBEWithHmacSHA224AndAES_128, PBEWithHmacSHA256AndAES_128, PBEWithHmacSHA384AndAES_128, PBEWithHmacSHA512AndAES_128, PBEWithHmacSHA224AndAES_256, PBEWithHmacSHA256AndAES_256, PBEWithHmacSHA384AndAES_256, PBEWithHmacSHA512AndAES_256}
			at statement: $r2 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String,java.lang.String)>(varReplacer2639446, varReplacer2639447)

		RequiredPredicateError violating CrySL rule for javax.crypto.CipherOutputStream
			Second parameter was not properly generated as generatedCipher
			at statement: specialinvoke $r5.<javax.crypto.CipherOutputStream: void <init>(java.io.OutputStream,javax.crypto.Cipher)>($r4, $r2)


	 in Method: byte[] bdpdqbp(byte[])
		IncompleteOperationError violating CrySL rule for javax.crypto.Cipher (on Object #7be6e6d4220098db76bd98e0b87536081f58c29172ccd1a6beec0e5624c49895)
			Operation on object of type javax.crypto.Cipher object not completed. Expected call to update, wrap, doFinal
			at statement: specialinvoke $r4.<javax.crypto.CipherInputStream: void <init>(java.io.InputStream,javax.crypto.Cipher)>($r5, $r2)

		RequiredPredicateError violating CrySL rule for javax.crypto.CipherInputStream
			Second parameter was not properly generated as generatedCipher
			at statement: specialinvoke $r4.<javax.crypto.CipherInputStream: void <init>(java.io.InputStream,javax.crypto.Cipher)>($r5, $r2)

		ConstraintError violating CrySL rule for javax.crypto.Cipher (on Object #7be6e6d4220098db76bd98e0b87536081f58c29172ccd1a6beec0e5624c49895)
			First parameter (with value "RSA/NONE/PKCS1Padding") should be any of {AES, PBEWithHmacSHA224AndAES_128, PBEWithHmacSHA256AndAES_128, PBEWithHmacSHA384AndAES_128, PBEWithHmacSHA512AndAES_128, PBEWithHmacSHA224AndAES_256, PBEWithHmacSHA256AndAES_256, PBEWithHmacSHA384AndAES_256, PBEWithHmacSHA512AndAES_256}
			at statement: $r2 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String,java.lang.String)>(varReplacer2639449, varReplacer2639450)

		RequiredPredicateError violating CrySL rule for javax.crypto.Cipher
			Second parameter was not properly generated as generatedKey
			at statement: virtualinvoke $r2.<javax.crypto.Cipher: void init(int,java.security.Key)>(varReplacer2639451, $r3)


	 in Method: javax.crypto.Cipher pdqppqb(byte[],boolean)
		RequiredPredicateError violating CrySL rule for javax.crypto.Cipher
			Second parameter was not properly generated as generatedKey
			at statement: virtualinvoke $r3.<javax.crypto.Cipher: void init(int,java.security.Key,java.security.spec.AlgorithmParameterSpec)>($b0, $r4, $r2)

		ConstraintError violating CrySL rule for javax.crypto.Cipher (on Object #d1e2e09e92bee97c673754e14ceafef43057f64802610d1acc0be5fa5d24f2fd)
			First parameter (with value "AES/CBC/PKCS7Padding") should be any of AES/CBC/{PKCS5Padding, ISO10126Padding}
			at statement: $r3 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String,java.lang.String)>(varReplacer2639724, varReplacer2639725)


	 in Method: byte[] bppdpdq(byte[])
		TypestateError violating CrySL rule for javax.crypto.Mac (on Object #f6e115069c12a994a4a4149378b0e5024ca011d8c07fd4e9dbccaa281f553929)
			Unexpected call to method <javax.crypto.Mac: byte[] doFinal(byte[])> on object of type javax.crypto.Mac. Expect a call to one of the following methods javax.crypto.Mac: void doFinal(byte[],int),javax.crypto.Mac: void update(byte[]),javax.crypto.Mac: void update(byte),javax.crypto.Mac: byte[] doFinal(),javax.crypto.Mac: void update(byte[],int,int)
			at statement: $r2 = virtualinvoke $r3.<javax.crypto.Mac: byte[] doFinal(byte[])>($r2)


	 in Method: javax.crypto.SecretKey bdpdqbp(android.content.SharedPreferences)
		RequiredPredicateError violating CrySL rule for javax.crypto.spec.SecretKeySpec
			First parameter was not properly generated as preparedKeyMaterial
			at statement: specialinvoke $r5.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r3, varReplacer2358243)


	 in Method: javax.crypto.Cipher bdpdqbp(byte[],boolean)
		RequiredPredicateError violating CrySL rule for javax.crypto.Cipher
			Second parameter was not properly generated as generatedKey
			at statement: virtualinvoke $r4.<javax.crypto.Cipher: void init(int,java.security.Key,java.security.spec.AlgorithmParameterSpec)>($b0, $r2, $r3)


	 in Method: javax.crypto.SecretKey pdqppqb(android.content.SharedPreferences)
		RequiredPredicateError violating CrySL rule for javax.crypto.spec.SecretKeySpec
			First parameter was not properly generated as preparedKeyMaterial
			at statement: specialinvoke $r4.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r3, varReplacer2358325)


Findings in Java Class: com.amazon.identity.auth.device.datastore.AESEncryptor

	 in Method: void <init>(android.content.Context)
		ConstraintError violating CrySL rule for java.security.KeyStore (on Object #d6e3aa519d94a45f3f1d3e24841cfbbbf089af066258b1b9e00859cd88c8403a)
			First parameter (with value "AndroidKeyStore") should be any of {JCEKS, JKS, DKS, PKCS11, PKCS12}
			at statement: $r2 = staticinvoke <java.security.KeyStore: java.security.KeyStore getInstance(java.lang.String)>(varReplacer1411514)


	 in Method: java.lang.String encryptData(java.lang.String)
		IncompleteOperationError violating CrySL rule for javax.crypto.Cipher (on Object #9771baa305581276c5f1a5e0af5a72e1fcf4e34e7c98d244c07ae1e2ea1e9dc4)
			Operation on object of type javax.crypto.Cipher object not completed. Expected call to update, wrap, doFinal
			at statement: $r4 = staticinvoke <com.amazon.identity.auth.device.datastore.AESEncryptor: byte[] performAESCipherOperation(javax.crypto.Cipher,byte[],int,int)>($r6, $r4, varReplacer1411383, $i0)


	 in Method: java.lang.String decryptData(java.lang.String)
		IncompleteOperationError violating CrySL rule for javax.crypto.Cipher (on Object #9771baa305581276c5f1a5e0af5a72e1fcf4e34e7c98d244c07ae1e2ea1e9dc4)
			Operation on object of type javax.crypto.Cipher object not completed. Expected call to update, wrap, doFinal
			at statement: $r3 = staticinvoke <com.amazon.identity.auth.device.datastore.AESEncryptor: byte[] performAESCipherOperation(javax.crypto.Cipher,byte[],int,int)>($r5, $r3, varReplacer2626911, $i0)

		RequiredPredicateError violating CrySL rule for javax.crypto.spec.IvParameterSpec
			First parameter was not properly generated as randomized
			at statement: specialinvoke $r4.<javax.crypto.spec.IvParameterSpec: void <init>(byte[],int,int)>($r3, varReplacer2626903, varReplacer2626904)


	 in Method: void generateRSAKeysIfNeeded(android.content.Context)
		IncompleteOperationError violating CrySL rule for java.security.KeyPairGenerator (on Object #b1dfda89ddf172af2422bab78bd776e9f3d20a8ee8886c41bb43c55ba6d88d0e)
			Operation on object of type java.security.KeyPairGenerator object not completed. Expected call to genKeyPair, java.security.KeyPairGenerator: java.security.KeyPair generateKeyPair(), java.security.KeyPairGeneratorSpi: java.security.KeyPair generateKeyPair()
			at statement: virtualinvoke $r11.<java.security.KeyPairGenerator: java.security.KeyPair generateKeyPair()>()


	 in Method: javax.crypto.Cipher createRSACipher(int,java.lang.String,java.security.Key)
		ConstraintError violating CrySL rule for javax.crypto.Cipher (on Object #b82e9385bfb41a5c7d5e9ff715c3efff421dbd6ae9f68ef8c7b60fb635946552)
			First parameter (with value "RSA/ECB/PKCS1Padding") should be any of {AES, PBEWithHmacSHA224AndAES_128, PBEWithHmacSHA256AndAES_128, PBEWithHmacSHA384AndAES_128, PBEWithHmacSHA512AndAES_128, PBEWithHmacSHA224AndAES_256, PBEWithHmacSHA256AndAES_256, PBEWithHmacSHA384AndAES_256, PBEWithHmacSHA512AndAES_256}
			at statement: $r2 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>($r3)

		RequiredPredicateError violating CrySL rule for javax.crypto.Cipher
			Second parameter was not properly generated as generatedKey
			at statement: virtualinvoke $r2.<javax.crypto.Cipher: void init(int,java.security.Key)>($i0, $r1)


	 in Method: java.lang.String encryptAESKey(byte[])
		IncompleteOperationError violating CrySL rule for javax.crypto.Cipher (on Object #b82e9385bfb41a5c7d5e9ff715c3efff421dbd6ae9f68ef8c7b60fb635946552)
			Operation on object of type javax.crypto.Cipher object not completed. Expected call to update, wrap, doFinal
			at statement: $r1 = staticinvoke <com.amazon.identity.auth.device.datastore.AESEncryptor: byte[] performRSACipherOperation(javax.crypto.Cipher,byte[])>($r6, $r1)


	 in Method: byte[] getDecryptedAESKey(java.lang.String)
		IncompleteOperationError violating CrySL rule for javax.crypto.Cipher (on Object #b82e9385bfb41a5c7d5e9ff715c3efff421dbd6ae9f68ef8c7b60fb635946552)
			Operation on object of type javax.crypto.Cipher object not completed. Expected call to update, wrap, doFinal
			at statement: $r7 = staticinvoke <com.amazon.identity.auth.device.datastore.AESEncryptor: byte[] performRSACipherOperation(javax.crypto.Cipher,byte[])>($r6, $r7)


	 in Method: javax.crypto.spec.SecretKeySpec getKeySpec()
		RequiredPredicateError violating CrySL rule for javax.crypto.spec.SecretKeySpec
			First parameter was not properly generated as preparedKeyMaterial
			at statement: specialinvoke $r3.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r1, varReplacer1963527)


	 in Method: javax.crypto.Cipher createAESCipher(int,java.lang.String,java.security.spec.AlgorithmParameterSpec)
		RequiredPredicateError violating CrySL rule for javax.crypto.Cipher
			Second parameter was not properly generated as generatedKey
			at statement: virtualinvoke $r3.<javax.crypto.Cipher: void init(int,java.security.Key,java.security.spec.AlgorithmParameterSpec)>($i0, $r2, $r1)


Findings in Java Class: com.tuya.smart.mqttclient.mqttv3.internal.SSLNetworkModule

	 in Method: void start()
		IncompleteOperationError violating CrySL rule for javax.net.ssl.SSLParameters (on Object #e66c8b429228ff396b64854dc404cff12999707f03ac1dc95d4fc996b038bb3f)
			Operation on object of type javax.net.ssl.SSLParameters object not completed. Expected call to setProtocols, setCipherSuites
			at statement: virtualinvoke $r10.<javax.net.ssl.SSLSocket: void setSSLParameters(javax.net.ssl.SSLParameters)>($r7)

		IncompleteOperationError violating CrySL rule for javax.net.ssl.SSLParameters (on Object #e66c8b429228ff396b64854dc404cff12999707f03ac1dc95d4fc996b038bb3f)
			Operation on object of type javax.net.ssl.SSLParameters object not completed. Expected call to setProtocols, setCipherSuites
			at statement: virtualinvoke $r10.<javax.net.ssl.SSLSocket: void setSSLParameters(javax.net.ssl.SSLParameters)>($r7)

		IncompleteOperationError violating CrySL rule for javax.net.ssl.SSLParameters (on Object #e66c8b429228ff396b64854dc404cff12999707f03ac1dc95d4fc996b038bb3f)
			Operation on object of type javax.net.ssl.SSLParameters object not completed. Expected call to setProtocols, setCipherSuites
			at statement: virtualinvoke $r10.<javax.net.ssl.SSLSocket: void setSSLParameters(javax.net.ssl.SSLParameters)>($r7)

		IncompleteOperationError violating CrySL rule for javax.net.ssl.SSLParameters (on Object #e66c8b429228ff396b64854dc404cff12999707f03ac1dc95d4fc996b038bb3f)
			Operation on object of type javax.net.ssl.SSLParameters object not completed. Expected call to setProtocols, setCipherSuites
			at statement: virtualinvoke $r10.<javax.net.ssl.SSLSocket: void setSSLParameters(javax.net.ssl.SSLParameters)>($r7)


Findings in Java Class: org.chromium.net.X509Util

	 in Method: void ensureInitializedLocked()
		IncompleteOperationError violating CrySL rule for java.security.KeyStore (on Object #297352ffa419506b9a5a25a3d9abc8160a391ae3349c57f17fae3b70ca8e950)
			Operation on object of type java.security.KeyStore object not completed. Expected call to load
			at statement: $r9 = <org.chromium.net.X509Util: java.security.KeyStore sTestKeyStore>

		IncompleteOperationError violating CrySL rule for java.security.KeyStore (on Object #297352ffa419506b9a5a25a3d9abc8160a391ae3349c57f17fae3b70ca8e950)
			Operation on object of type java.security.KeyStore object not completed. Expected call to load
			at statement: $r8 = staticinvoke <org.chromium.net.X509Util: org.chromium.net.X509Util$X509TrustManagerImplementation createTrustManager(java.security.KeyStore)>($r9)

		IncompleteOperationError violating CrySL rule for java.security.KeyStore (on Object #297352ffa419506b9a5a25a3d9abc8160a391ae3349c57f17fae3b70ca8e950)
			Operation on object of type java.security.KeyStore object not completed. Expected call to java.security.KeyStore: void load(java.security.KeyStore$LoadStoreParameter), java.security.KeyStore: void load(java.io.InputStream,char[])
			at statement: virtualinvoke $r9.<java.security.KeyStore: void load(java.security.KeyStore$LoadStoreParameter)>(varReplacer1599936)

		ConstraintError violating CrySL rule for java.security.KeyStore (on Object #2c439dfc8996d090bc4a216dd6f7e0b8fd1c356509ee3aa8783ca7e214ce7bfd)
			First parameter (with value "AndroidCAStore") should be any of {JCEKS, JKS, DKS, PKCS11, PKCS12}
			at statement: $r9 = staticinvoke <java.security.KeyStore: java.security.KeyStore getInstance(java.lang.String)>(varReplacer1599928)


	 in Method: org.chromium.net.X509Util$X509TrustManagerImplementation createTrustManager(java.security.KeyStore)
		RequiredPredicateError violating CrySL rule for javax.net.ssl.TrustManagerFactory
			First parameter was not properly generated as generatedKeyStore
			at statement: virtualinvoke $r2.<javax.net.ssl.TrustManagerFactory: void init(java.security.KeyStore)>($r0)


Findings in Java Class: buy

	 in Method: java.lang.String a()
		ConstraintError violating CrySL rule for java.security.MessageDigest (on Object #28248ea29894ea0ddc43a5231e729aebbca14f02ce5d3c02ce9d23af0230a0f7)
			First parameter (with value "SHA-1") should be any of {SHA-256, SHA-384, SHA-512}
			at statement: $r4 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer1703040)


Findings in Java Class: okhttp3.internal.platform.Platform

	 in Method: javax.net.ssl.SSLContext getSSLContext()
		ConstraintError violating CrySL rule for javax.net.ssl.SSLContext (on Object #d12c1018991027cd7e4fb5bce784a013a6fac0aee90f845291e872980b30ca03)
			First parameter (with value "TLS") should be any of {TLSv1.2}
			at statement: $r4 = staticinvoke <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String)>(varReplacer1753034)


Findings in Java Class: okhttp3.internal.platform.AndroidPlatform

	 in Method: javax.net.ssl.SSLContext getSSLContext()
		ConstraintError violating CrySL rule for javax.net.ssl.SSLContext (on Object #c448e277d70e5685238159efb340ddbf24d4769e9d5beb1dd5944b43482897df)
			First parameter (with value "TLS") should be any of {TLSv1.2}
			at statement: $r3 = staticinvoke <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String)>(varReplacer1753164)


Findings in Java Class: okhttp3.internal.platform.ConscryptPlatform

	 in Method: javax.net.ssl.SSLContext getSSLContext()
		ConstraintError violating CrySL rule for javax.net.ssl.SSLContext (on Object #9fc3be3da7e221e98c956539f69a9fdde309473a4983070ad346e04868bfb63a)
			First parameter (with value "TLSv1.3") should be any of {TLSv1.2}
			at statement: $r3 = staticinvoke <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String,java.security.Provider)>(varReplacer1753220, $r2)

		ConstraintError violating CrySL rule for javax.net.ssl.SSLContext (on Object #d1c53453f2366a147181df29b5f4b17242304e2cd577a3f0d6daaa85af4eea8e)
			First parameter (with value "TLS") should be any of {TLSv1.2}
			at statement: $r3 = staticinvoke <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String,java.security.Provider)>(varReplacer1753189, $r2)


Findings in Java Class: gvt

	 in Method: java.lang.String a(java.lang.String,java.lang.String)
		RequiredPredicateError violating CrySL rule for javax.crypto.spec.SecretKeySpec
			First parameter was not properly generated as preparedKeyMaterial
			at statement: specialinvoke $r9.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r5, varReplacer1790031)

		TypestateError violating CrySL rule for javax.crypto.Mac (on Object #44dadb2997e23a057ee9ec177e2863dc2c450d6b21f17d7ae420aec7f7d6b626)
			Unexpected call to method <javax.crypto.Mac: byte[] doFinal(byte[])> on object of type javax.crypto.Mac. Expect a call to one of the following methods javax.crypto.Mac: void doFinal(byte[],int),javax.crypto.Mac: void update(byte[]),javax.crypto.Mac: void update(byte),javax.crypto.Mac: byte[] doFinal(),javax.crypto.Mac: void update(byte[],int,int)
			at statement: $r5 = virtualinvoke $r6.<javax.crypto.Mac: byte[] doFinal(byte[])>($r5)


Findings in Java Class: cpb

	 in Method: java.io.InputStream a(okhttp3.ResponseBody)
		RequiredPredicateError violating CrySL rule for javax.crypto.spec.IvParameterSpec
			First parameter was not properly generated as randomized
			at statement: specialinvoke $r2.<javax.crypto.spec.IvParameterSpec: void <init>(byte[])>($r1)

		IncompleteOperationError violating CrySL rule for javax.crypto.Cipher (on Object #3f2ff9fabd1a164671c75651b0545496543f02eddf850f415b370d108f49ad4b)
			Operation on object of type javax.crypto.Cipher object not completed. Expected call to update, wrap, doFinal
			at statement: specialinvoke $r9.<javax.crypto.CipherInputStream: void <init>(java.io.InputStream,javax.crypto.Cipher)>($r4, $r8)

		RequiredPredicateError violating CrySL rule for javax.crypto.spec.SecretKeySpec
			First parameter was not properly generated as preparedKeyMaterial
			at statement: specialinvoke $r5.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r6, $r7)

		RequiredPredicateError violating CrySL rule for javax.crypto.Cipher
			Second parameter was not properly generated as generatedKey
			at statement: virtualinvoke $r8.<javax.crypto.Cipher: void init(int,java.security.Key,java.security.spec.AlgorithmParameterSpec)>(varReplacer1807905, $r5, $r2)

		RequiredPredicateError violating CrySL rule for javax.crypto.Cipher
			Third parameter was not properly generated as preparedGCM
			at statement: virtualinvoke $r8.<javax.crypto.Cipher: void init(int,java.security.Key,java.security.spec.AlgorithmParameterSpec)>(varReplacer1807905, $r5, $r2)

		RequiredPredicateError violating CrySL rule for javax.crypto.Cipher
			Third parameter was not properly generated as preparedOAEP
			at statement: virtualinvoke $r8.<javax.crypto.Cipher: void init(int,java.security.Key,java.security.spec.AlgorithmParameterSpec)>(varReplacer1807905, $r5, $r2)


Findings in Java Class: cpd$2

	 in Method: void onResponse(okhttp3.Call,okhttp3.Response)
		IncompleteOperationError violating CrySL rule for javax.crypto.CipherInputStream (on Object #c9a42eed568672b0ef4c9e1dda5529d297e34e4e1baf1d3056815ead2d41f44b)
			Operation on object of type javax.crypto.CipherInputStream object not completed. Expected call to read, close
			at statement: interfaceinvoke $r9.<com.facebook.imagepipeline.producers.NetworkFetcher$Callback: void onResponse(java.io.InputStream,int)>($r14, $i3)

		IncompleteOperationError violating CrySL rule for javax.crypto.CipherInputStream (on Object #c9a42eed568672b0ef4c9e1dda5529d297e34e4e1baf1d3056815ead2d41f44b)
			Operation on object of type javax.crypto.CipherInputStream object not completed. Expected call to read, close
			at statement: interfaceinvoke $r9.<com.facebook.imagepipeline.producers.NetworkFetcher$Callback: void onResponse(java.io.InputStream,int)>($r14, $i3)


Findings in Java Class: com.facebook.react.modules.network.TLSSocketFactory

	 in Method: void <init>()
		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			Second parameter was not properly generated as generatedTrustManagers
			at statement: virtualinvoke $r1.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>(varReplacer1960347, varReplacer1960347, varReplacer1960347)

		ConstraintError violating CrySL rule for javax.net.ssl.SSLContext (on Object #ca1caaef4e4cb07ebfa55fd19bcd8d3983a2e97876e907237ad15e6218cff5c1)
			First parameter (with value "TLS") should be any of {TLSv1.2}
			at statement: $r1 = staticinvoke <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String)>(varReplacer1960346)

		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			Third parameter was not properly generated as randomized
			at statement: virtualinvoke $r1.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>(varReplacer1960347, varReplacer1960347, varReplacer1960347)

		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			First parameter was not properly generated as generatedKeyManagers
			at statement: virtualinvoke $r1.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>(varReplacer1960347, varReplacer1960347, varReplacer1960347)


Findings in Java Class: com.facebook.soloader.SoLoader$1

	 in Method: java.lang.String getLibHash(java.lang.String)
		TypestateError violating CrySL rule for java.security.MessageDigest (on Object #102cf7576936c5b49e3198e43fa612139807f0337d02be63e2fa0ef64347c63d)
			Unexpected call to method <java.security.MessageDigest: byte[] digest()> on object of type java.security.MessageDigest. Expect a call to one of the following methods java.security.MessageDigest: void update(byte[],int,int),java.security.MessageDigest: void update(java.nio.ByteBuffer),java.security.MessageDigest: byte[] digest(byte[]),java.security.MessageDigest: void update(byte[]),java.security.MessageDigest: void update(byte)
			at statement: $r7 = virtualinvoke $r5.<java.security.MessageDigest: byte[] digest()>()

		ConstraintError violating CrySL rule for java.security.MessageDigest (on Object #102cf7576936c5b49e3198e43fa612139807f0337d02be63e2fa0ef64347c63d)
			First parameter (with value "MD5") should be any of {SHA-256, SHA-384, SHA-512}
			at statement: $r5 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer1969075)


Findings in Java Class: dox$a

	 in Method: java.lang.String a(java.lang.String,long)
		IncompleteOperationError violating CrySL rule for java.security.MessageDigest (on Object #a41358dfafaec11de16da4ed06a2c191a602d2f66b5c4433a1676a0a933c0706)
			Operation on object of type java.security.MessageDigest object not completed. Expected call to digest, update
			at statement: $r4 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer2128347)

		ConstraintError violating CrySL rule for java.security.MessageDigest (on Object #a41358dfafaec11de16da4ed06a2c191a602d2f66b5c4433a1676a0a933c0706)
			First parameter (with value "MD5") should be any of {SHA-256, SHA-384, SHA-512}
			at statement: $r4 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer2128347)


Findings in Java Class: com.tuya.sdk.bluetooth.bbbdppp

	 in Method: byte[] bdpdqbp(byte[])
		ConstraintError violating CrySL rule for java.security.MessageDigest (on Object #44f09ff19bb76eaf32de14da963ecc0400dce4cc1294c69988b98ec9a7f24bac)
			First parameter (with value "MD5") should be any of {SHA-256, SHA-384, SHA-512}
			at statement: $r1 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer2140784)


Findings in Java Class: hff

	 in Method: java.lang.String a(java.lang.String)
		ConstraintError violating CrySL rule for javax.crypto.Cipher (on Object #ff10f8e3b8030cec0bd576ca770bfa59ce1d9cd1b18fe10c5d7f72f11d3360de)
			First parameter (with value "AES") should be any of AES/{CBC, GCM, PCBC, CTR, CTS, CFB, OFB}
			at statement: $r4 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>($r3)

		RequiredPredicateError violating CrySL rule for javax.crypto.Cipher
			Second parameter was not properly generated as generatedKey
			at statement: virtualinvoke $r4.<javax.crypto.Cipher: void init(int,java.security.Key)>(varReplacer2163039, $r2)


	 in Method: java.security.Key a()
		RequiredPredicateError violating CrySL rule for javax.crypto.spec.SecretKeySpec
			First parameter was not properly generated as preparedKeyMaterial
			at statement: specialinvoke $r1.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r3, $r2)

		NeverTypeOfError violating CrySL rule for javax.crypto.spec.SecretKeySpec (on Object #678980720ccd944ecfed9fdaf692883ff03ecbda864624331b9935bd3c4391c5)
			First parameter should never be of type java.lang.String.
			at statement: specialinvoke $r1.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r3, $r2)


Findings in Java Class: dde

	 in Method: javax.crypto.Cipher a(java.lang.String,byte[])
		ConstraintError violating CrySL rule for javax.crypto.Cipher (on Object #4183a8aae6c7e55fa4775bfb3ff652715850a80f48a6dda567ebfa33f0cdd6dd)
			First parameter (with value "AES/CBC/PKCS7Padding") should be any of AES/CBC/{PKCS5Padding, ISO10126Padding}
			at statement: $r4 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer2322775)

		RequiredPredicateError violating CrySL rule for javax.crypto.spec.IvParameterSpec
			First parameter was not properly generated as randomized
			at statement: specialinvoke $r1.<javax.crypto.spec.IvParameterSpec: void <init>(byte[])>($r3)


	 in Method: javax.crypto.SecretKey c(java.lang.String)
		IncompleteOperationError violating CrySL rule for java.security.KeyStore (on Object #b76d895976b8422efb14b28026167841179e98948777f80f86d60e3d6103fa43)
			Operation on object of type java.security.KeyStore object not completed. Expected call to getKey
			at statement: $r3 = virtualinvoke $r2.<java.security.KeyStore: java.security.KeyStore$Entry getEntry(java.lang.String,java.security.KeyStore$ProtectionParameter)>($r1, varReplacer2614300)

		ConstraintError violating CrySL rule for java.security.KeyStore (on Object #b76d895976b8422efb14b28026167841179e98948777f80f86d60e3d6103fa43)
			First parameter (with value "AndroidKeyStore") should be any of {JCEKS, JKS, DKS, PKCS11, PKCS12}
			at statement: $r2 = staticinvoke <java.security.KeyStore: java.security.KeyStore getInstance(java.lang.String)>(varReplacer2614277)


	 in Method: boolean b(java.lang.String)
		ConstraintError violating CrySL rule for java.security.KeyStore (on Object #80598064474478a7ed0555aa05409aecc3be162319587a60b09f0bc7ee3ce92b)
			First parameter (with value "AndroidKeyStore") should be any of {JCEKS, JKS, DKS, PKCS11, PKCS12}
			at statement: $r1 = staticinvoke <java.security.KeyStore: java.security.KeyStore getInstance(java.lang.String)>(varReplacer2739488)


	 in Method: javax.crypto.Cipher a(java.lang.String)
		ConstraintError violating CrySL rule for javax.crypto.Cipher (on Object #21f3fc8c5110dc9b70c0b414b3309257443fd5f42deadcf6e6778cacc13ed79)
			First parameter (with value "AES/CBC/PKCS7Padding") should be any of AES/CBC/{PKCS5Padding, ISO10126Padding}
			at statement: $r2 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer2848490)


Findings in Java Class: gvm

	 in Method: void a(jj,java.lang.String,java.lang.String,java.lang.String,com.tuya.smart.sociallogin_api.callback.ITuyaBiometricFingerCallback)
		IncompleteOperationError violating CrySL rule for javax.crypto.Cipher (on Object #4183a8aae6c7e55fa4775bfb3ff652715850a80f48a6dda567ebfa33f0cdd6dd)
			Operation on object of type javax.crypto.Cipher object not completed. Expected call to update, wrap, doFinal
			at statement: interfaceinvoke $r10.<com.tuya.smart.biometricfinger.api.IBiometricsFingerBuilder: void a(jj,javax.crypto.Cipher)>($r1, $r8)

		IncompleteOperationError violating CrySL rule for javax.crypto.Cipher (on Object #4183a8aae6c7e55fa4775bfb3ff652715850a80f48a6dda567ebfa33f0cdd6dd)
			Operation on object of type javax.crypto.Cipher object not completed. Expected call to update, wrap, doFinal
			at statement: $r8 = virtualinvoke $r6.<dde: javax.crypto.Cipher a(java.lang.String,byte[])>($r5, $r7)


	 in Method: void a(jj,java.lang.String,com.tuya.smart.sociallogin_api.callback.ITuyaBiometricFingerCallback)
		IncompleteOperationError violating CrySL rule for javax.crypto.Cipher (on Object #21f3fc8c5110dc9b70c0b414b3309257443fd5f42deadcf6e6778cacc13ed79)
			Operation on object of type javax.crypto.Cipher object not completed. Expected call to update, wrap, doFinal
			at statement: $r5 = virtualinvoke $r4.<dde: javax.crypto.Cipher a(java.lang.String)>($r3)

		IncompleteOperationError violating CrySL rule for javax.crypto.Cipher (on Object #21f3fc8c5110dc9b70c0b414b3309257443fd5f42deadcf6e6778cacc13ed79)
			Operation on object of type javax.crypto.Cipher object not completed. Expected call to update, wrap, doFinal
			at statement: interfaceinvoke $r7.<com.tuya.smart.biometricfinger.api.IBiometricsFingerBuilder: void a(jj,javax.crypto.Cipher)>($r1, $r5)


	 in Method: boolean a(java.lang.String)
		IncompleteOperationError violating CrySL rule for javax.crypto.Cipher (on Object #21f3fc8c5110dc9b70c0b414b3309257443fd5f42deadcf6e6778cacc13ed79)
			Operation on object of type javax.crypto.Cipher object not completed. Expected call to update, wrap, doFinal
			at statement: $r3 = virtualinvoke $r2.<dde: javax.crypto.Cipher a(java.lang.String)>($r1)


Findings in Java Class: com.tuya.smart.android.common.utils.SHA256Util

	 in Method: byte[] getHash(byte[])
		IncompleteOperationError violating CrySL rule for java.security.MessageDigest (on Object #440d62468c2694ef01cccc0164265a736f5101694bd2c3e65b9bfe9283c4b99)
			Operation on object of type java.security.MessageDigest object not completed. Expected call to digest, update
			at statement: $r1 = null

		IncompleteOperationError violating CrySL rule for java.security.MessageDigest (on Object #440d62468c2694ef01cccc0164265a736f5101694bd2c3e65b9bfe9283c4b99)
			Operation on object of type java.security.MessageDigest object not completed. Expected call to digest, update
			at statement: $r1 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer2500764)


Findings in Java Class: com.tuya.smart.android.common.utils.MD5

	 in Method: java.lang.String md5(java.lang.String)
		ConstraintError violating CrySL rule for java.security.MessageDigest (on Object #687da812bb9290c5a4ea274aa694295e7a074e53ee5ff812bed2a19fa7ff9219)
			First parameter (with value "MD5") should be any of {SHA-256, SHA-384, SHA-512}
			at statement: $r2 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer2538429)


Findings in Java Class: com.tuya.smart.android.common.utils.AesGcmUtil

	 in Method: byte[] generateRandomNonce()
		ConstraintError violating CrySL rule for java.security.SecureRandom (on Object #31fb4816aef374a836c21ebe28f829d540823f3d87c61295cd640a2082fe8062)
			First parameter (with value "AES") should be any of {SHA1PRNG, Windows-PRNG, NativePRNG, NativePRNGBlocking, NativePRNGNonBlocking, PKCS11}
			at statement: $r2 = staticinvoke <java.security.SecureRandom: java.security.SecureRandom getInstance(java.lang.String)>(varReplacer2538478)


	 in Method: byte[] decryptBytes2Bytes(byte[],byte[],byte[],byte[])
		RequiredPredicateError violating CrySL rule for javax.crypto.spec.SecretKeySpec
			First parameter was not properly generated as preparedKeyMaterial
			at statement: specialinvoke $r7.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r2, varReplacer2114922)

		RequiredPredicateError violating CrySL rule for javax.crypto.Cipher
			Second parameter was not properly generated as generatedKey
			at statement: virtualinvoke $r6.<javax.crypto.Cipher: void init(int,java.security.Key,java.security.spec.AlgorithmParameterSpec)>(varReplacer2114923, $r4, $r10)

		RequiredPredicateError violating CrySL rule for javax.crypto.spec.GCMParameterSpec
			Second parameter was not properly generated as randomized
			at statement: specialinvoke $r9.<javax.crypto.spec.GCMParameterSpec: void <init>(int,byte[])>(varReplacer2114927, $r3)

		RequiredPredicateError violating CrySL rule for javax.crypto.spec.IvParameterSpec
			First parameter was not properly generated as randomized
			at statement: specialinvoke $r8.<javax.crypto.spec.IvParameterSpec: void <init>(byte[])>($r3)

		RequiredPredicateError violating CrySL rule for javax.crypto.Cipher
			Third parameter was not properly generated as preparedGCM
			at statement: virtualinvoke $r6.<javax.crypto.Cipher: void init(int,java.security.Key,java.security.spec.AlgorithmParameterSpec)>(varReplacer2114923, $r4, $r10)


	 in Method: byte[] encryptBytes2Bytes(byte[],byte[],byte[],byte[])
		RequiredPredicateError violating CrySL rule for javax.crypto.spec.GCMParameterSpec
			Second parameter was not properly generated as randomized
			at statement: specialinvoke $r9.<javax.crypto.spec.GCMParameterSpec: void <init>(int,byte[])>(varReplacer2538468, $r4)

		RequiredPredicateError violating CrySL rule for javax.crypto.Cipher
			Third parameter was not properly generated as preparedGCM
			at statement: virtualinvoke $r6.<javax.crypto.Cipher: void init(int,java.security.Key,java.security.spec.AlgorithmParameterSpec)>(varReplacer2538467, $r2, $r10)

		RequiredPredicateError violating CrySL rule for javax.crypto.spec.SecretKeySpec
			First parameter was not properly generated as preparedKeyMaterial
			at statement: specialinvoke $r7.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r3, varReplacer2538466)

		RequiredPredicateError violating CrySL rule for javax.crypto.Cipher
			Second parameter was not properly generated as generatedKey
			at statement: virtualinvoke $r6.<javax.crypto.Cipher: void init(int,java.security.Key,java.security.spec.AlgorithmParameterSpec)>(varReplacer2538467, $r2, $r10)


Findings in Java Class: okio.ByteString

	 in Method: okio.ByteString digest(java.lang.String)
		ConstraintError violating CrySL rule for java.security.MessageDigest (on Object #b336d574501b28a5bd90db22472c23a68acb0c1b99c4f14746fdc2a23c69a24e)
			First parameter (with value "SHA-1") should be any of {SHA-256, SHA-384, SHA-512}
			at statement: $r2 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>($r1)

		ConstraintError violating CrySL rule for java.security.MessageDigest (on Object #b336d574501b28a5bd90db22472c23a68acb0c1b99c4f14746fdc2a23c69a24e)
			First parameter (with value "MD5") should be any of {SHA-256, SHA-384, SHA-512}
			at statement: $r2 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>($r1)


Findings in Java Class: com.tuya.sdk.bluetooth.qppbddd

	 in Method: byte[] bdpdqbp(byte[])
		ConstraintError violating CrySL rule for java.security.MessageDigest (on Object #9888c55d99660162e05d0303ba893e6b5abffed619ddb494133293dc8b4967b6)
			First parameter (with value "MD5") should be any of {SHA-256, SHA-384, SHA-512}
			at statement: $r1 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer2615076)


Findings in Java Class: bvu

	 in Method: java.lang.String a(java.security.PublicKey)
		ConstraintError violating CrySL rule for java.security.MessageDigest (on Object #c3cf5ba25157c5a7eddd7f5ce060bffd0f2de5cf2b91ec30a803244fabfd6ab2)
			First parameter (with value "SHA1") should be any of {SHA-256, SHA-384, SHA-512}
			at statement: $r3 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer2618787)


	 in Method: java.security.PublicKey b(java.lang.String)
		RequiredPredicateError violating CrySL rule for java.security.spec.X509EncodedKeySpec
			First parameter was not properly generated as preparedKeyMaterial
			at statement: specialinvoke $r4.<java.security.spec.X509EncodedKeySpec: void <init>(byte[])>($r2)

		RequiredPredicateError violating CrySL rule for java.security.KeyFactory
			First parameter was not properly generated as speccedKey
			at statement: $r5 = virtualinvoke $r3.<java.security.KeyFactory: java.security.PublicKey generatePublic(java.security.spec.KeySpec)>($r4)


Findings in Java Class: hin

	 in Method: javax.net.ssl.SSLSocketFactory a(javax.net.ssl.X509TrustManager)
		ConstraintError violating CrySL rule for javax.net.ssl.SSLContext (on Object #d6628b7cb5cd7c41e7044666720c1de43c2a217208ab899db26d4c19d00b0d0c)
			First parameter (with value "TLS") should be any of {TLSv1.2}
			at statement: $r3 = staticinvoke <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String)>(varReplacer2802911)

		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			Second parameter was not properly generated as generatedTrustManagers
			at statement: virtualinvoke $r3.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>(varReplacer2802907, $r7, varReplacer2802907)

		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			Third parameter was not properly generated as randomized
			at statement: virtualinvoke $r3.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>(varReplacer2802907, $r7, varReplacer2802907)

		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			First parameter was not properly generated as generatedKeyManagers
			at statement: virtualinvoke $r3.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>(varReplacer2802907, $r7, varReplacer2802907)


	 in Method: javax.net.ssl.X509TrustManager b()
		RequiredPredicateError violating CrySL rule for javax.net.ssl.TrustManagerFactory
			First parameter was not properly generated as generatedKeyStore
			at statement: virtualinvoke $r4.<javax.net.ssl.TrustManagerFactory: void init(java.security.KeyStore)>(varReplacer2802776)


Findings in Java Class: hhn

	 in Method: java.lang.String a(java.lang.String)
		RequiredPredicateError violating CrySL rule for javax.crypto.spec.IvParameterSpec
			First parameter was not properly generated as randomized
			at statement: specialinvoke $r6.<javax.crypto.spec.IvParameterSpec: void <init>(byte[])>($r5)

		ConstraintError violating CrySL rule for javax.crypto.Cipher (on Object #7a55dab8f5262fcd8c2d8384deed9751fd47e761ea20df551c4ee12417b3db0)
			First parameter (with value "AES/CBC/NoPadding") should be any of AES/CBC/{PKCS5Padding, ISO10126Padding}
			at statement: $r3 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer2898855)

		RequiredPredicateError violating CrySL rule for javax.crypto.Cipher
			Second parameter was not properly generated as generatedKey
			at statement: virtualinvoke $r3.<javax.crypto.Cipher: void init(int,java.security.Key,java.security.spec.AlgorithmParameterSpec)>(varReplacer2898827, $r4, $r6)

		RequiredPredicateError violating CrySL rule for javax.crypto.spec.SecretKeySpec
			First parameter was not properly generated as preparedKeyMaterial
			at statement: specialinvoke $r4.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r5, varReplacer2898875)


Findings in Java Class: com.tuya.sdk.mqtt.dqdbbqp

	 in Method: javax.net.ssl.SSLSocketFactory bdpdqbp(javax.net.ssl.X509TrustManager)
		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			Third parameter was not properly generated as randomized
			at statement: virtualinvoke $r2.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>(varReplacer2967011, $r6, varReplacer2967011)

		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			First parameter was not properly generated as generatedKeyManagers
			at statement: virtualinvoke $r2.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>(varReplacer2967011, $r6, varReplacer2967011)

		ConstraintError violating CrySL rule for javax.net.ssl.SSLContext (on Object #336abbafbf73d2c18cae006410d1f1dc226ccc07e4a6ab7d44a1c3caef2126b0)
			First parameter (with value "TLS") should be any of {TLSv1.2}
			at statement: $r2 = staticinvoke <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String)>(varReplacer2967002)

		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			Second parameter was not properly generated as generatedTrustManagers
			at statement: virtualinvoke $r2.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>(varReplacer2967011, $r6, varReplacer2967011)


	 in Method: javax.net.ssl.X509TrustManager pppbppp()
		RequiredPredicateError violating CrySL rule for javax.net.ssl.TrustManagerFactory
			First parameter was not properly generated as generatedKeyStore
			at statement: virtualinvoke $r3.<javax.net.ssl.TrustManagerFactory: void init(java.security.KeyStore)>(varReplacer2967099)


Findings in Java Class: com.squareup.okhttp.internal.Util

	 in Method: java.lang.String md5Hex(java.lang.String)
		ConstraintError violating CrySL rule for java.security.MessageDigest (on Object #2e3fd7611b202886a6328ab7eb3189292e4aa00dde90eee566028bd090271c7e)
			First parameter (with value "MD5") should be any of {SHA-256, SHA-384, SHA-512}
			at statement: $r1 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer2980727)


	 in Method: okio.ByteString sha1(okio.ByteString)
		ConstraintError violating CrySL rule for java.security.MessageDigest (on Object #2499ca933eb80e07073fd534db8a946dbd2cf7d8e32f73c3e40094b378280b69)
			First parameter (with value "SHA-1") should be any of {SHA-256, SHA-384, SHA-512}
			at statement: $r1 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer3238755)


Findings in Java Class: com.tuya.smart.mqttclient.mqttv3.internal.security.SSLSocketFactoryFactory

	 in Method: javax.net.ssl.SSLContext getSSLContext(java.lang.String)
		ConstraintError violating CrySL rule for javax.net.ssl.SSLContext (on Object #2de0dbcb962ff3cb3e0d9dc8e9469638e8762c9aa5d9bef5cf875912fda1093)
			First parameter (with value "TLS") should be any of {TLSv1.2}
			at statement: $r7 = staticinvoke <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String,java.lang.String)>($r4, $r3)

		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			Third parameter was not properly generated as randomized
			at statement: virtualinvoke $r7.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>($r17, $r25, varReplacer3005293)

		NeverTypeOfError violating CrySL rule for javax.net.ssl.KeyManagerFactory (on Object #259523d67883fd265d2c327657eb84635e3d32acd444bbe75c56617f0f949887)
			Second parameter should never be of type java.lang.String.
			at statement: virtualinvoke $r16.<javax.net.ssl.KeyManagerFactory: void init(java.security.KeyStore,char[])>($r14, $r9)

		HardCodedError violating CrySL rule for javax.net.ssl.KeyManagerFactory (on Object #259523d67883fd265d2c327657eb84635e3d32acd444bbe75c56617f0f949887)
			Second parameter should never be hardcoded.
			at statement: virtualinvoke $r16.<javax.net.ssl.KeyManagerFactory: void init(java.security.KeyStore,char[])>($r14, $r9)

		RequiredPredicateError violating CrySL rule for javax.net.ssl.TrustManagerFactory
			First parameter was not properly generated as generatedKeyStore
			at statement: virtualinvoke $r24.<javax.net.ssl.TrustManagerFactory: void init(java.security.KeyStore)>($r14)

		NeverTypeOfError violating CrySL rule for java.security.KeyStore (on Object #ef952fc09cf5e577ee1c1152c546bffd3d58833ddae6a8c5633ec84d3ee11c7c)
			Second parameter should never be of type java.lang.String.
			at statement: virtualinvoke $r14.<java.security.KeyStore: void load(java.io.InputStream,char[])>($r15, $r9)

		HardCodedError violating CrySL rule for java.security.KeyStore (on Object #ef952fc09cf5e577ee1c1152c546bffd3d58833ddae6a8c5633ec84d3ee11c7c)
			Second parameter should never be hardcoded.
			at statement: virtualinvoke $r14.<java.security.KeyStore: void load(java.io.InputStream,char[])>($r15, $r9)

		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			Second parameter was not properly generated as generatedTrustManagers
			at statement: virtualinvoke $r7.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>($r17, $r25, varReplacer3005293)

		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			First parameter was not properly generated as generatedKeyManagers
			at statement: virtualinvoke $r7.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>($r17, $r25, varReplacer3005293)

		NeverTypeOfError violating CrySL rule for java.security.KeyStore (on Object #ef952fc09cf5e577ee1c1152c546bffd3d58833ddae6a8c5633ec84d3ee11c7c)
			Second parameter should never be of type java.lang.String.
			at statement: virtualinvoke $r14.<java.security.KeyStore: void load(java.io.InputStream,char[])>($r15, $r9)

		HardCodedError violating CrySL rule for java.security.KeyStore (on Object #ef952fc09cf5e577ee1c1152c546bffd3d58833ddae6a8c5633ec84d3ee11c7c)
			Second parameter should never be hardcoded.
			at statement: virtualinvoke $r14.<java.security.KeyStore: void load(java.io.InputStream,char[])>($r15, $r9)

		NeverTypeOfError violating CrySL rule for javax.net.ssl.KeyManagerFactory (on Object #259523d67883fd265d2c327657eb84635e3d32acd444bbe75c56617f0f949887)
			Second parameter should never be of type java.lang.String.
			at statement: virtualinvoke $r16.<javax.net.ssl.KeyManagerFactory: void init(java.security.KeyStore,char[])>($r14, $r9)

		HardCodedError violating CrySL rule for javax.net.ssl.KeyManagerFactory (on Object #259523d67883fd265d2c327657eb84635e3d32acd444bbe75c56617f0f949887)
			Second parameter should never be hardcoded.
			at statement: virtualinvoke $r16.<javax.net.ssl.KeyManagerFactory: void init(java.security.KeyStore,char[])>($r14, $r9)

		ConstraintError violating CrySL rule for javax.net.ssl.SSLContext (on Object #faf8a006ee2bf18d70acac36e6184b973d313a1f622eaa10afaeb42c1349d99c)
			First parameter (with value "TLS") should be any of {TLSv1.2}
			at statement: $r7 = staticinvoke <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String)>($r4)

		NeverTypeOfError violating CrySL rule for java.security.KeyStore (on Object #ef952fc09cf5e577ee1c1152c546bffd3d58833ddae6a8c5633ec84d3ee11c7c)
			Second parameter should never be of type java.lang.String.
			at statement: virtualinvoke $r14.<java.security.KeyStore: void load(java.io.InputStream,char[])>($r15, $r9)

		HardCodedError violating CrySL rule for java.security.KeyStore (on Object #ef952fc09cf5e577ee1c1152c546bffd3d58833ddae6a8c5633ec84d3ee11c7c)
			Second parameter should never be hardcoded.
			at statement: virtualinvoke $r14.<java.security.KeyStore: void load(java.io.InputStream,char[])>($r15, $r9)

		RequiredPredicateError violating CrySL rule for javax.net.ssl.KeyManagerFactory
			First parameter was not properly generated as generatedKeyStore
			at statement: virtualinvoke $r16.<javax.net.ssl.KeyManagerFactory: void init(java.security.KeyStore,char[])>($r14, $r9)


Findings in Java Class: com.tuya.sdk.bluetooth.dbqpdqd

	 in Method: void bppdpdq()
		IncompleteOperationError violating CrySL rule for java.security.KeyPairGenerator (on Object #548c18d85cc49511739eafc20ec757d311a0a3dc8fcc9a581e66e5b26e2402cc)
			Operation on object of type java.security.KeyPairGenerator object not completed. Expected call to genKeyPair, java.security.KeyPairGenerator: java.security.KeyPair generateKeyPair(), java.security.KeyPairGeneratorSpi: java.security.KeyPair generateKeyPair()
			at statement: $r3 = virtualinvoke $r2.<java.security.KeyPairGenerator: java.security.KeyPair generateKeyPair()>()

		ConstraintError violating CrySL rule for java.security.KeyPairGenerator (on Object #548c18d85cc49511739eafc20ec757d311a0a3dc8fcc9a581e66e5b26e2402cc)
			First parameter (with value "ECDH") should be any of {RSA, EC, DSA, DiffieHellman, DH}
			at statement: $r2 = staticinvoke <java.security.KeyPairGenerator: java.security.KeyPairGenerator getInstance(java.lang.String,java.lang.String)>(varReplacer3080237, varReplacer3080238)


Findings in Java Class: io.grpc.okhttp.OkHttpChannelBuilder

	 in Method: javax.net.ssl.SSLSocketFactory createSocketFactory()
		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			Second parameter was not properly generated as generatedTrustManagers
			at statement: virtualinvoke $r6.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>(varReplacer3125835, $r10, $r11)

		ConstraintError violating CrySL rule for javax.net.ssl.SSLContext (on Object #e216a19c5c15c3b13d3eefa9544064850b3e99e71f8304021c74fe804cffc288)
			First parameter (with value "TLS") should be any of {TLSv1.2}
			at statement: $r6 = staticinvoke <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String,java.security.Provider)>(varReplacer3125888, $r5)

		RequiredPredicateError violating CrySL rule for javax.net.ssl.TrustManagerFactory
			First parameter was not properly generated as generatedKeyStore
			at statement: virtualinvoke $r9.<javax.net.ssl.TrustManagerFactory: void init(java.security.KeyStore)>(varReplacer3125925)

		ConstraintError violating CrySL rule for javax.net.ssl.SSLContext (on Object #7dc614cc2564f450af68bd1970101ff6de536613c89f95439819bdf2f0e9410f)
			First parameter (with value "Default") should be any of {TLSv1.2}
			at statement: $r6 = staticinvoke <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String,java.security.Provider)>(varReplacer3125939, $r5)

		IncompleteOperationError violating CrySL rule for javax.net.ssl.SSLContext (on Object #7dc614cc2564f450af68bd1970101ff6de536613c89f95439819bdf2f0e9410f)
			Operation on object of type javax.net.ssl.SSLContext object not completed. Expected call to init
			at statement: $r3 = virtualinvoke $r7.<javax.net.ssl.SSLContext: javax.net.ssl.SSLSocketFactory getSocketFactory()>()

		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			First parameter was not properly generated as generatedKeyManagers
			at statement: virtualinvoke $r6.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>(varReplacer3125835, $r10, $r11)


Findings in Java Class: io.jsonwebtoken.impl.crypto.MacSigner

	 in Method: byte[] sign(byte[])
		TypestateError violating CrySL rule for javax.crypto.Mac (on Object #a1d1f1a96b2229cb8032249f276d2e6d47471c6890809e6db563b576e5d67a47)
			Unexpected call to method <javax.crypto.Mac: byte[] doFinal(byte[])> on object of type javax.crypto.Mac. Expect a call to one of the following methods javax.crypto.Mac: void doFinal(byte[],int),javax.crypto.Mac: void update(byte[]),javax.crypto.Mac: void update(byte),javax.crypto.Mac: byte[] doFinal(),javax.crypto.Mac: void update(byte[],int,int)
			at statement: $r1 = virtualinvoke $r2.<javax.crypto.Mac: byte[] doFinal(byte[])>($r1)


Findings in Java Class: bni

	 in Method: java.security.PrivateKey b(java.lang.String)
		RequiredPredicateError violating CrySL rule for java.security.KeyFactory
			First parameter was not properly generated as speccedKey
			at statement: $r6 = virtualinvoke $r5.<java.security.KeyFactory: java.security.PrivateKey generatePrivate(java.security.spec.KeySpec)>($r4)


Findings in Java Class: okhttp3.OkHttpClient

	 in Method: javax.net.ssl.SSLSocketFactory newSslSocketFactory(javax.net.ssl.X509TrustManager)
		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			Second parameter was not properly generated as generatedTrustManagers
			at statement: virtualinvoke $r2.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>(varReplacer1172763, $r7, varReplacer1172763)

		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			Third parameter was not properly generated as randomized
			at statement: virtualinvoke $r2.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>(varReplacer1172763, $r7, varReplacer1172763)

		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			First parameter was not properly generated as generatedKeyManagers
			at statement: virtualinvoke $r2.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>(varReplacer1172763, $r7, varReplacer1172763)


Findings in Java Class: com.tuya.smart.android.network.util.AESCTRUtil

	 in Method: java.lang.String decrypt(byte[],java.lang.String)
		RequiredPredicateError violating CrySL rule for javax.crypto.spec.SecretKeySpec
			First parameter was not properly generated as preparedKeyMaterial
			at statement: specialinvoke $r0.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r1, varReplacer45951)

		RequiredPredicateError violating CrySL rule for javax.crypto.Cipher
			Second parameter was not properly generated as generatedKey
			at statement: virtualinvoke $r5.<javax.crypto.Cipher: void init(int,java.security.Key,java.security.spec.AlgorithmParameterSpec)>(varReplacer45943, $r0, $r4)

		RequiredPredicateError violating CrySL rule for javax.crypto.spec.IvParameterSpec
			First parameter was not properly generated as randomized
			at statement: specialinvoke $r4.<javax.crypto.spec.IvParameterSpec: void <init>(byte[],int,int)>($r3, varReplacer46015, varReplacer46016)


	 in Method: java.lang.String encrypt(byte[],byte[],java.lang.String)
		RequiredPredicateError violating CrySL rule for javax.crypto.spec.IvParameterSpec
			First parameter was not properly generated as randomized
			at statement: specialinvoke $r4.<javax.crypto.spec.IvParameterSpec: void <init>(byte[])>($r2)

		RequiredPredicateError violating CrySL rule for javax.crypto.Cipher
			Third parameter was not properly generated as preparedIV [ with CBC, It's required to use IVParameterSpec]
			at statement: virtualinvoke $r5.<javax.crypto.Cipher: void init(int,java.security.Key,java.security.spec.AlgorithmParameterSpec)>(varReplacer1897574, $r0, $r4)

		RequiredPredicateError violating CrySL rule for javax.crypto.Cipher
			Second parameter was not properly generated as generatedKey
			at statement: virtualinvoke $r5.<javax.crypto.Cipher: void init(int,java.security.Key,java.security.spec.AlgorithmParameterSpec)>(varReplacer1897574, $r0, $r4)

		RequiredPredicateError violating CrySL rule for javax.crypto.spec.SecretKeySpec
			First parameter was not properly generated as preparedKeyMaterial
			at statement: specialinvoke $r0.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r1, varReplacer1897632)


Findings in Java Class: cik

	 in Method: java.security.interfaces.ECPublicKey a(chy$b)
		RequiredPredicateError violating CrySL rule for java.security.KeyFactory
			First parameter was not properly generated as speccedKey
			at statement: $r11 = virtualinvoke $r5.<java.security.KeyFactory: java.security.PublicKey generatePublic(java.security.spec.KeySpec)>($r10)


Findings in Java Class: com.tuya.bouncycastle.jcajce.provider.asymmetric.ec.KeyPairGeneratorSpi$EC

	 in Method: java.security.KeyPair generateKeyPair()
		RequiredPredicateError violating CrySL rule for java.security.KeyPair
			Second parameter was not properly generated as generatedPrivkey
			at statement: specialinvoke $r12.<java.security.KeyPair: void <init>(java.security.PublicKey,java.security.PrivateKey)>($r9, $r13)

		RequiredPredicateError violating CrySL rule for java.security.KeyPair
			First parameter was not properly generated as generatedPubkey
			at statement: specialinvoke $r12.<java.security.KeyPair: void <init>(java.security.PublicKey,java.security.PrivateKey)>($r9, $r13)


Findings in Java Class: bmt

	 in Method: byte[] a(java.security.Signature,java.security.PrivateKey,byte[])
		RequiredPredicateError violating CrySL rule for java.security.Signature
			First parameter was not properly generated as generatedPrivkey
			at statement: virtualinvoke $r2.<java.security.Signature: void initSign(java.security.PrivateKey)>($r0)


Findings in Java Class: dmo

	 in Method: byte[] a(java.lang.String,javax.crypto.SecretKey,javax.crypto.spec.IvParameterSpec,byte[])
		RequiredPredicateError violating CrySL rule for javax.crypto.Cipher
			Second parameter was not properly generated as generatedKey
			at statement: virtualinvoke $r6.<javax.crypto.Cipher: void init(int,java.security.Key,java.security.spec.AlgorithmParameterSpec)>(varReplacer1492000, $r1, $r2)

		RequiredPredicateError violating CrySL rule for javax.crypto.Cipher
			Third parameter was not properly generated as preparedIV [ with CBC, It's required to use IVParameterSpec]
			at statement: virtualinvoke $r6.<javax.crypto.Cipher: void init(int,java.security.Key,java.security.spec.AlgorithmParameterSpec)>(varReplacer1492000, $r1, $r2)


	 in Method: java.lang.String a(java.lang.String,java.lang.String,java.lang.String)
		RequiredPredicateError violating CrySL rule for javax.crypto.spec.SecretKeySpec
			First parameter was not properly generated as preparedKeyMaterial
			at statement: specialinvoke $r6.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r5, varReplacer893750)


	 in Method: void a(java.lang.String)
		RequiredPredicateError violating CrySL rule for javax.crypto.spec.IvParameterSpec
			First parameter was not properly generated as randomized
			at statement: specialinvoke $r1.<javax.crypto.spec.IvParameterSpec: void <init>(byte[])>($r2)


Findings in Java Class: io.jsonwebtoken.impl.crypto.RsaSigner

	 in Method: byte[] doSign(byte[])
		RequiredPredicateError violating CrySL rule for java.security.Signature
			First parameter was not properly generated as generatedPrivkey
			at statement: virtualinvoke $r4.<java.security.Signature: void initSign(java.security.PrivateKey)>($r3)


Findings in Java Class: io.jsonwebtoken.impl.crypto.EllipticCurveSignatureValidator

	 in Method: boolean doVerify(java.security.Signature,java.security.PublicKey,byte[],byte[])
		RequiredPredicateError violating CrySL rule for java.security.Signature
			First parameter was not properly generated as generatedPubkey
			at statement: virtualinvoke $r4.<java.security.Signature: void initVerify(java.security.PublicKey)>($r1)


Findings in Java Class: io.jsonwebtoken.SigningKeyResolverAdapter

	 in Method: java.security.Key resolveSigningKey(io.jsonwebtoken.JwsHeader,io.jsonwebtoken.Claims)
		RequiredPredicateError violating CrySL rule for javax.crypto.spec.SecretKeySpec
			First parameter was not properly generated as preparedKeyMaterial
			at statement: specialinvoke $r7.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r6, $r3)


	 in Method: java.security.Key resolveSigningKey(io.jsonwebtoken.JwsHeader,java.lang.String)
		RequiredPredicateError violating CrySL rule for javax.crypto.spec.SecretKeySpec
			First parameter was not properly generated as preparedKeyMaterial
			at statement: specialinvoke $r7.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r6, $r2)


Findings in Java Class: io.jsonwebtoken.impl.DefaultJwtParser

	 in Method: io.jsonwebtoken.Jwt parse(java.lang.String)
		RequiredPredicateError violating CrySL rule for javax.crypto.spec.SecretKeySpec
			First parameter was not properly generated as preparedKeyMaterial
			at statement: specialinvoke $r39.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r13, $r1)


Findings in Java Class: okhttp3.internal.Util

	 in Method: javax.net.ssl.X509TrustManager platformTrustManager()
		RequiredPredicateError violating CrySL rule for javax.net.ssl.TrustManagerFactory
			First parameter was not properly generated as generatedKeyStore
			at statement: virtualinvoke $r1.<javax.net.ssl.TrustManagerFactory: void init(java.security.KeyStore)>(varReplacer1172784)


======================= CryptoAnalysis Summary ==========================
	Number of CrySL rules: 47
	Number of Objects Analyzed: 377

	CryptoAnalysis found the following violations. For details see description above.
	RequiredPredicateError: 131
	ConstraintError: 71
	HardCodedError: 6
	IncompleteOperationError: 45
	ForbiddenMethodError: 1
	TypestateError: 11
	NeverTypeOfError: 16
=====================================================================
