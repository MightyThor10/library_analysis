SLF4J: Failed to load class "org.slf4j.impl.StaticLoggerBinder".
SLF4J: Defaulting to no-operation (NOP) logger implementation
SLF4J: See http://www.slf4j.org/codes.html#StaticLoggerBinder for further details.
0    [main] WARN  pes.access.impl.DeclaredTypeFactory  - --- xtext.common.types ---------------------------------------------------
0    [main] WARN  pes.access.impl.DeclaredTypeFactory  - ASM library is too old. Falling back to java.lang.reflect API.
0    [main] WARN  pes.access.impl.DeclaredTypeFactory  - Please note that no information about compile time constants is available.
0    [main] WARN  pes.access.impl.DeclaredTypeFactory  - It's recommended to use org.objectweb.asm 9.3.0 or better (Maven group id: org.ow2.asm).
0    [main] WARN  pes.access.impl.DeclaredTypeFactory  - --------------------------------------------------------------------------
Alive 27665  5000
Alive 29270  5000
Alive 53290  5000
Alive 47574  5000
Alive 55150  5000
Alive 60236  5000
Alive 46973  5000
Ruleset: 
	javax.net.ssl.KeyStoreBuilderParameters
	javax.crypto.spec.PBEKeySpec
	java.security.spec.MGF1ParameterSpec
	java.security.MessageDigest
	javax.crypto.Cipher
	java.security.KeyPair
	javax.crypto.SecretKeyFactory
	java.security.cert.PKIXBuilderParameters
	javax.crypto.SecretKey
	javax.crypto.spec.IvParameterSpec
	javax.crypto.spec.PBEParameterSpec
	javax.net.ssl.TrustManagerFactory
	javax.crypto.spec.GCMParameterSpec
	javax.crypto.spec.SecretKeySpec
	javax.net.ssl.CertPathTrustManagerParameters
	java.security.spec.DSAParameterSpec
	javax.crypto.KeyAgreement
	java.security.cert.TrustAnchor
	javax.crypto.spec.DHParameterSpec
	javax.net.ssl.SSLParameters
	javax.net.ssl.SSLContext
	java.security.Key
	java.security.KeyFactory
	void
	java.security.DigestOutputStream
	java.security.SecureRandom
	java.security.cert.PKIXParameters
	java.security.spec.X509EncodedKeySpec
	javax.crypto.spec.DHGenParameterSpec
	javax.net.ssl.SSLEngine
	java.security.spec.RSAKeyGenParameterSpec
	java.security.Signature
	javax.crypto.CipherOutputStream
	javax.xml.crypto.dsig.spec.HMACParameterSpec
	java.security.AlgorithmParameterGenerator
	javax.crypto.Mac
	javax.crypto.spec.OAEPParameterSpec
	java.security.AlgorithmParameters
	javax.crypto.CipherInputStream
	java.security.DigestInputStream
	java.security.spec.ECParameterSpec
	javax.crypto.KeyGenerator
	java.security.KeyStore
	java.security.spec.ECGenParameterSpec
	java.security.KeyPairGenerator
	javax.net.ssl.KeyManagerFactory
	java.security.spec.DSAGenParameterSpec

Analyzed Objects: 
	Object:
		Variable: $r5
		Type: javax.crypto.spec.SecretKeySpec
		Statement: specialinvoke $r5.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r3, varReplacer3263086)
		Method: <com.tuya.sdk.security.EncryptionManager: javax.crypto.SecretKey bdpdqbp(android.content.SharedPreferences)>
		SHA-256: 9e11b5bf7123ffb811bc2cd5275eecc95fbf089654dbd576e6d8e84c4a64274f
		Secure: true
	Object:
		Variable: $r2
		Type: byte[]
		Statement: $r2 = interfaceinvoke $r6.<javax.crypto.SecretKey: byte[] getEncoded()>()
		Method: <com.tuya.sdk.security.EncryptionManager: boolean bdpdqbp(android.content.SharedPreferences,byte[])>
		SHA-256: c1120bdf083638a0aa03dd9c637ff45a6302f57c0b8b082041d4bacad8c42d1d
		Secure: true
	Object:
		Variable: $r0
		Type: java.security.SecureRandom
		Statement: specialinvoke $r0.<java.security.SecureRandom: void <init>()>()
		Method: <cqp: byte[] a()>
		SHA-256: 48d6bb8c24bf0b6d252fcb2069ff57bafcee698957f000e373ef5cebba49230f
		Secure: true
	Object:
		Variable: $r1
		Type: java.security.SecureRandom
		Statement: specialinvoke $r1.<java.security.SecureRandom: void <init>()>()
		Method: <com.tuya.sdk.device.qddqppb: com.tuya.sdk.device.analysis.DpBuriedConfig pppbppp()>
		SHA-256: 6759b8511b8583b3d3daac0de15a95255df220d79723fa5577974debdc8568ec
		Secure: true
	Object:
		Variable: $r4
		Type: java.security.spec.ECParameterSpec
		Statement: specialinvoke $r4.<java.security.spec.ECParameterSpec: void <init>(java.security.spec.EllipticCurve,java.security.spec.ECPoint,java.math.BigInteger,int)>($r11, $r13, $r7, $i0)
		Method: <com.tuya.bouncycastle.jcajce.provider.asymmetric.ec.BCECPrivateKey: void <init>(java.lang.String,com.tuya.bouncycastle.crypto.params.ECPrivateKeyParameters,com.tuya.bouncycastle.jcajce.provider.asymmetric.ec.BCECPublicKey,java.security.spec.ECParameterSpec,com.tuya.bouncycastle.jcajce.provider.config.ProviderConfiguration)>
		SHA-256: 3791d0e41e5884e70c40ed063afce31c8bbf57c28cb756f172c554e92147502c
		Secure: true
	Object:
		Variable: $r9
		Type: javax.crypto.spec.IvParameterSpec
		Statement: specialinvoke $r9.<javax.crypto.spec.IvParameterSpec: void <init>(byte[])>($r1)
		Method: <cqp: javax.crypto.Cipher a(byte[],java.lang.String,int)>
		SHA-256: 31735df2770b34b751099c1b5a8f36cca8b210cb10f90dcf34eb489c1af4f729
		Secure: false
	Object:
		Variable: $r1
		Type: javax.crypto.spec.IvParameterSpec
		Statement: specialinvoke $r1.<javax.crypto.spec.IvParameterSpec: void <init>(byte[])>($r3)
		Method: <com.tuya.sdk.bluetooth.pdpbbpd: byte[] bdpdqbp(byte[],byte[],byte[])>
		SHA-256: b13a0db024db3af5a605e0553279a7d07f6496d071727244ab3e4026557b3055
		Secure: false
	Object:
		Variable: $r5
		Type: javax.crypto.Cipher
		Statement: $r5 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer2316259)
		Method: <com.tuya.sdk.bluetooth.pdpbbpd: byte[] pdqppqb(byte[],byte[],byte[])>
		SHA-256: d969468c97d03204952d1314c113d0755ca9b459a0961d82ff38006fe9e55c18
		Secure: false
	Object:
		Variable: $r2
		Type: java.security.spec.ECGenParameterSpec
		Statement: specialinvoke $r2.<java.security.spec.ECGenParameterSpec: void <init>(java.lang.String)>(varReplacer2521680)
		Method: <com.tuya.bouncycastle.jcajce.provider.asymmetric.ec.KeyPairGeneratorSpi$EC: void <clinit>()>
		SHA-256: 46cf094531c5d1d00b038cc8a9ff04cfee085b1ee94321e3dd08a1c3076a0ee1
		Secure: true
	Object:
		Variable: $r1
		Type: java.security.MessageDigest
		Statement: $r1 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer997656)
		Method: <com.tuya.sdk.bluetooth.bbddqbq: byte[] pppbppp(byte[])>
		SHA-256: 471c4e4782229ccccf733ae9f4cc45d4fd4980540e6236bdf414c02111939054
		Secure: false
	Object:
		Variable: $r2
		Type: java.security.spec.ECGenParameterSpec
		Statement: specialinvoke $r2.<java.security.spec.ECGenParameterSpec: void <init>(java.lang.String)>(varReplacer2521640)
		Method: <com.tuya.bouncycastle.jcajce.provider.asymmetric.ec.KeyPairGeneratorSpi$EC: void <clinit>()>
		SHA-256: 8a2d5571b338dfa64e3dae5f02d92a913571769a5e94925fa7d969d946e01c30
		Secure: true
	Object:
		Variable: $r1
		Type: byte[]
		Statement: $r1 = virtualinvoke $r4.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r1)
		Method: <com.tuya.smart.android.common.utils.AESUtil: java.lang.String decrypt(byte[])>
		SHA-256: e4b1d0c874187eec3801ed7b37e428fef37e48da5266ab236ff1ab28e87c9baa
		Secure: false
	Object:
		Variable: $r4
		Type: javax.crypto.spec.PBEKeySpec
		Statement: specialinvoke $r4.<javax.crypto.spec.PBEKeySpec: void <init>(char[],byte[],int,int)>($r5, $r3, $i0, varReplacer1577069)
		Method: <ki: ki$a b(android.content.Context)>
		SHA-256: fb12a5cc8c7c7ab37ba852bd3a174920e7c42113ed1db8bf560552813565e43
		Secure: false
	Object:
		Variable: $r1
		Type: java.security.MessageDigest
		Statement: $r1 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer61268)
		Method: <com.tuya.smart.android.common.utils.MD5Util: byte[] computeMD5Hash(byte[])>
		SHA-256: 4fa7c3513f1c349f1c527e91a2ba3a0e8cb08762d6056f9d8fdcda16642d7e1f
		Secure: false
	Object:
		Variable: $r1
		Type: byte[]
		Statement: virtualinvoke $r0.<java.security.SecureRandom: void nextBytes(byte[])>($r1)
		Method: <io.jsonwebtoken.impl.crypto.SignatureProvider: void <clinit>()>
		SHA-256: d777e14eab337e09fad46d648071f974b3d06ed5ddbe27d0fbb553277a45c475
		Secure: true
	Object:
		Variable: $r5
		Type: byte[]
		Statement: $r5 = virtualinvoke $r4.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r5)
		Method: <com.tuya.smart.android.common.utils.AESUtil: java.lang.String decryptWithBase64(java.lang.String)>
		SHA-256: c9ca7748c7d260b9e2579bd238f756142ef47a712db43b18d13bc6c0282e437e
		Secure: false
	Object:
		Variable: $r2
		Type: javax.crypto.Cipher
		Statement: $r2 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>($r3)
		Method: <com.amazon.identity.auth.device.datastore.AESEncryptor: javax.crypto.Cipher createRSACipher(int,java.lang.String,java.security.Key)>
		SHA-256: b82e9385bfb41a5c7d5e9ff715c3efff421dbd6ae9f68ef8c7b60fb635946552
		Secure: false
	Object:
		Variable: varReplacer3295314
		Type: java.lang.String
		Statement: specialinvoke $r2.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r3, varReplacer3295314)
		Method: <com.tuya.security.vas.setting.password.b: java.lang.String a(java.lang.String,java.lang.String)>
		SHA-256: e5a14bd64472db43cae3177def1799b219f6bc26e79258eb3e1f27a0dac6a1db
		Secure: false
	Object:
		Variable: $r22
		Type: javax.crypto.spec.SecretKeySpec
		Statement: specialinvoke $r22.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r8, varReplacer335261)
		Method: <com.tuya.smart.camera.utils.o: android.graphics.Bitmap a(java.lang.String,java.lang.String)>
		SHA-256: 355a3ff56ba43f5801201cdb6a6d82530e2f233e2b116f34f1ed7b74d352fc7
		Secure: false
	Object:
		Variable: $r4
		Type: javax.crypto.Mac
		Statement: $r4 = staticinvoke <javax.crypto.Mac: javax.crypto.Mac getInstance(java.lang.String)>($r3)
		Method: <io.jsonwebtoken.impl.crypto.MacSigner: javax.crypto.Mac doGetMacInstance()>
		SHA-256: a1d1f1a96b2229cb8032249f276d2e6d47471c6890809e6db563b576e5d67a47
		Secure: false
	Object:
		Variable: $r2
		Type: byte[]
		Statement: $r2 = virtualinvoke $r4.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r2)
		Method: <com.tuya.sdk.security.EncryptionManager: byte[] bppdpdq(com.tuya.sdk.security.EncryptionManager$bdpdqbp)>
		SHA-256: 51d74a291fdef175cf53a7265d9859f60ea5b4b7e93252e7339e51081c87367b
		Secure: false
	Object:
		Variable: $r0
		Type: byte[]
		Statement: $r0 = virtualinvoke $r5.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r0)
		Method: <com.tuya.smart.android.network.util.AESCTRUtil: java.lang.String encrypt(byte[],byte[],java.lang.String)>
		SHA-256: 9a15311fd684902e52cb36e5b2f8d1135bc0dafee15f1bcfa3319cefff30ae7f
		Secure: false
	Object:
		Variable: $r0
		Type: java.security.SecureRandom
		Statement: $r0 = staticinvoke <java.security.SecureRandom: java.security.SecureRandom getInstanceStrong()>()
		Method: <com.tuya.smart.android.common.utils.AesGcmUtil: byte[] generateRandomNonce()>
		SHA-256: 42b3ae5312df61c36f594dff8507593752e7b571e9e1ae4f64b4fbf2922b2794
		Secure: true
	Object:
		Variable: $r9
		Type: javax.crypto.spec.GCMParameterSpec
		Statement: specialinvoke $r9.<javax.crypto.spec.GCMParameterSpec: void <init>(int,byte[])>(varReplacer1748419, $r3)
		Method: <com.tuya.smart.android.common.utils.AesGcmUtil: byte[] encryptBytes2Bytes(byte[],byte[],byte[],byte[])>
		SHA-256: 4e481c06f4beba81022c48a2737d0e81f42c9707ffb1e1c36175b9e7b6727c8d
		Secure: false
	Object:
		Variable: $r8
		Type: javax.crypto.spec.IvParameterSpec
		Statement: specialinvoke $r8.<javax.crypto.spec.IvParameterSpec: void <init>(byte[])>($r3)
		Method: <com.tuya.smart.android.common.utils.AesGcmUtil: byte[] encryptBytes2Bytes(byte[],byte[],byte[],byte[])>
		SHA-256: 987e18d9c69510d659368e05240afb5b29a4cae5fe0fefe92088064bbb1b5dda
		Secure: true
	Object:
		Variable: $r1
		Type: java.security.SecureRandom
		Statement: specialinvoke $r1.<java.security.SecureRandom: void <init>()>()
		Method: <com.tuya.bouncycastle.jcajce.provider.asymmetric.ec.KeyPairGeneratorSpi$EC: java.security.KeyPair generateKeyPair()>
		SHA-256: 52666556eb0b9e0106968c3639d610cef0bbf743129b6a2f13e952dd3c4ccbd6
		Secure: true
	Object:
		Variable: $r24
		Type: javax.net.ssl.TrustManagerFactory
		Statement: $r24 = staticinvoke <javax.net.ssl.TrustManagerFactory: javax.net.ssl.TrustManagerFactory getInstance(java.lang.String,java.lang.String)>($r11, $r12)
		Method: <com.tuya.smart.mqttclient.mqttv3.internal.security.SSLSocketFactoryFactory: javax.net.ssl.SSLContext getSSLContext(java.lang.String)>
		SHA-256: 36aad3a7128ef6c5c4c8e28147cfe970adbc54360b24bb8da366ddc36b69fda8
		Secure: false
	Object:
		Variable: $r1
		Type: java.security.SecureRandom
		Statement: specialinvoke $r1.<java.security.SecureRandom: void <init>()>()
		Method: <com.tuya.sdk.bluetooth.bbddqbq: byte[] bdpdqbp()>
		SHA-256: 9966692d41f69405e6580eb0ec1d300846fb0f1b4afdfc5a395c4c9c3c05d60f
		Secure: true
	Object:
		Variable: $r1
		Type: java.security.KeyStore
		Statement: $r1 = staticinvoke <java.security.KeyStore: java.security.KeyStore getInstance(java.lang.String)>(varReplacer3835177)
		Method: <aeo: boolean b(java.lang.String)>
		SHA-256: 3499ca75bfe495c9e95e4c03728489b90e4cb90a1241de2b3ae1a771474748a2
		Secure: false
	Object:
		Variable: $r23
		Type: javax.crypto.spec.SecretKeySpec
		Statement: specialinvoke $r23.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r12, varReplacer2312989)
		Method: <afk: java.io.File a(android.content.Context,java.io.File,java.lang.String)>
		SHA-256: 38a2ef1d10e43afd538021cf7dac35dfe09dff1d6b029c953a7c89e6ff9e584
		Secure: false
	Object:
		Variable: $r1
		Type: java.security.MessageDigest
		Statement: $r1 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer4131743)
		Method: <com.tuya.sdk.bluetooth.bpqddqq: byte[] bdpdqbp(byte[])>
		SHA-256: 55e2284d7b67abe0f050979efcfd507b4aecf788e7ab593124df11474aee09e4
		Secure: false
	Object:
		Variable: $r2
		Type: java.security.MessageDigest
		Statement: $r2 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer1534495)
		Method: <com.tuya.smart.p2p.e: java.lang.String a(java.lang.String)>
		SHA-256: f136de17f7ec9bf121777aa15b5b2ca9f391522d80b868ea64c841e540fa4531
		Secure: false
	Object:
		Variable: $r1
		Type: byte[]
		Statement: virtualinvoke $r5.<javax.crypto.Cipher: int doFinal(byte[],int,int,byte[],int)>($r0, $i0, $i1, $r1, $i4)
		Method: <com.tuya.smart.android.common.utils.RSAUtil: byte[] encrypt(java.lang.String,java.security.PublicKey,byte[])>
		SHA-256: 6efa2ac52380f745991097283634cb3e752bd5d7423b2140864ca8ebbafdcdf2
		Secure: false
	Object:
		Variable: $r23
		Type: javax.crypto.spec.IvParameterSpec
		Statement: specialinvoke $r23.<javax.crypto.spec.IvParameterSpec: void <init>(byte[])>($r6)
		Method: <com.tuya.smart.camera.utils.o: android.graphics.Bitmap a(java.lang.String,java.lang.String)>
		SHA-256: 27091f1375e48a3e966292fd1c3a2a511fd81218c3f7d7fb55b86bfaaf461e60
		Secure: false
	Object:
		Variable: $r3
		Type: javax.net.ssl.SSLContext
		Statement: $r3 = staticinvoke <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String)>(varReplacer3714538)
		Method: <com.tuya.tyutils.tyfiledownloader.a: javax.net.ssl.SSLSocketFactory a(javax.net.ssl.X509TrustManager)>
		SHA-256: 8b392a53a79550e5b7364a2968a32a28d399bad9f57002c4317dd27840d5de2
		Secure: false
	Object:
		Variable: $r2
		Type: javax.net.ssl.SSLContext
		Statement: $r2 = staticinvoke <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String)>(varReplacer3993788)
		Method: <com.tuya.sdk.mqtt.dpdqppp: javax.net.ssl.SSLSocketFactory bdpdqbp(javax.net.ssl.X509TrustManager)>
		SHA-256: 3eddd7ac7b1b1404936bad21c3f8d081df0affe087407504c3e2be85d2186998
		Secure: false
	Object:
		Variable: $r1
		Type: byte[]
		Statement: $r1 = virtualinvoke $r2.<java.security.MessageDigest: byte[] digest(byte[])>($r1)
		Method: <com.tuya.smart.p2p.e: java.lang.String a(java.lang.String)>
		SHA-256: 72ac8f9c44f7e0352e9d10e2cdf9b37c5ccc256fcd41f6283341f61fad5a4c2d
		Secure: false
	Object:
		Variable: $r6
		Type: javax.crypto.Cipher
		Statement: $r6 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>($r5)
		Method: <com.tuya.smart.camera.utils.a: byte[] a(java.lang.String,javax.crypto.SecretKey,javax.crypto.spec.IvParameterSpec,byte[])>
		SHA-256: 6f9684205f3d252af4508bb43cb23800ccb9883dbb2f0dca0a0d753cf1f4c02d
		Secure: false
	Object:
		Variable: $r1
		Type: byte[]
		Statement: $r1 = virtualinvoke $r4.<java.security.Signature: byte[] sign()>()
		Method: <io.jsonwebtoken.impl.crypto.RsaSigner: byte[] doSign(byte[])>
		SHA-256: 98f07673a5eb06121abff36bf0c3b12a7dbc2d4e321f0ed06df14792992e8580
		Secure: false
	Object:
		Variable: varReplacer3263086
		Type: java.lang.String
		Statement: specialinvoke $r5.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r3, varReplacer3263086)
		Method: <com.tuya.sdk.security.EncryptionManager: javax.crypto.SecretKey bdpdqbp(android.content.SharedPreferences)>
		SHA-256: e2f2c23cc7c89114cd4f16d5e0cd0c735972e5118eb0920c621a60af1cb2df4
		Secure: true
	Object:
		Variable: $r8
		Type: javax.crypto.spec.SecretKeySpec
		Statement: specialinvoke $r8.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r9, varReplacer1577053)
		Method: <ki: ki$a b(android.content.Context)>
		SHA-256: 9f8227863cd205c7ab39a55c1877161f56bb43af8da0926d7d7a7da97728f6be
		Secure: false
	Object:
		Variable: $r6
		Type: byte[]
		Statement: $r6 = virtualinvoke $r2.<java.security.MessageDigest: byte[] digest()>()
		Method: <okio.SegmentedByteString: okio.ByteString digest$jvm(java.lang.String)>
		SHA-256: 14f15a41dd8b92f7a4458441f9908c3bd2e90bddb540afe032aa88ebd3fdc6dd
		Secure: false
	Object:
		Variable: varReplacer4027403
		Type: java.lang.String
		Statement: $r3 = staticinvoke <java.security.KeyFactory: java.security.KeyFactory getInstance(java.lang.String)>(varReplacer4027403)
		Method: <cy: java.security.PublicKey b(java.lang.String)>
		SHA-256: 3a79c0f07499a3c1d985e5bbe62e816b30488d760b0cc655ba05924d4a20dc2b
		Secure: false
	Object:
		Variable: $r1
		Type: java.security.MessageDigest
		Statement: $r1 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer1845782)
		Method: <com.facebook.common.util.SecureHashUtil: java.lang.String makeSHA1HashBase64(byte[])>
		SHA-256: db03d8192c32d2bd54781513d774dc1fff7b37bda68153936d7ff1ea91b6c78f
		Secure: false
	Object:
		Variable: $r5
		Type: java.security.PublicKey
		Statement: $r5 = virtualinvoke $r3.<java.security.KeyFactory: java.security.PublicKey generatePublic(java.security.spec.KeySpec)>($r4)
		Method: <cy: java.security.PublicKey b(java.lang.String)>
		SHA-256: 5aff3365c00abce1c82493566e58239faa1394b6303294a75c8e7e069c2e9e07
		Secure: false
	Object:
		Variable: $r97
		Type: java.security.SecureRandom
		Statement: specialinvoke $r97.<java.security.SecureRandom: void <init>()>()
		Method: <com.tuyasmart.stencil.component.webview.connect.e: com.tuyasmart.stencil.component.webview.connect.g b(com.tuyasmart.stencil.component.webview.connect.f)>
		SHA-256: 1a718eb60ca85b1b3016641729830b92f5271d5a3742dc255fe778bd4d5016ab
		Secure: true
	Object:
		Variable: $r4
		Type: javax.crypto.spec.SecretKeySpec
		Statement: specialinvoke $r4.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r0, varReplacer62680)
		Method: <com.tuya.smart.android.network.util.AESCTRUtil: java.lang.String decrypt(byte[],java.lang.String)>
		SHA-256: dca333e0864d22491006553d01eca9cb26c54af0bdb48cc3d8652028f05cb12a
		Secure: false
	Object:
		Variable: $r6
		Type: javax.crypto.SecretKey
		Statement: $r6 = virtualinvoke $r4.<javax.crypto.KeyGenerator: javax.crypto.SecretKey generateKey()>()
		Method: <com.tuya.sdk.security.EncryptionManager: boolean bdpdqbp(android.content.SharedPreferences,byte[])>
		SHA-256: 56c61242aab8a9c765a61940a9d9f896deed1bf171e7e71968e110b2ee017b78
		Secure: true
	Object:
		Variable: $r4
		Type: javax.net.ssl.TrustManager[]
		Statement: $r4 = virtualinvoke $r3.<javax.net.ssl.TrustManagerFactory: javax.net.ssl.TrustManager[] getTrustManagers()>()
		Method: <com.tuyasmart.stencil.component.download.a: javax.net.ssl.X509TrustManager a()>
		SHA-256: b6e99b230920a3557c47426ec688ef262c586e15c3d80e9083584c18b450f763
		Secure: false
	Object:
		Variable: $r3
		Type: byte[]
		Statement: $r3 = virtualinvoke $r6.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r0)
		Method: <com.tuya.smart.android.common.utils.AesGcmUtil: byte[] decryptBytes2Bytes(byte[],byte[],byte[],byte[])>
		SHA-256: 4a4a057c57a177c36e34d810d9274bd1418f9ee056f2e0e0b1828114e446651b
		Secure: false
	Object:
		Variable: varReplacer1998192
		Type: java.lang.String
		Statement: specialinvoke $r6.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r5, varReplacer1998192)
		Method: <com.tuya.smart.camera.utils.a: java.lang.String a(java.lang.String,java.lang.String,java.lang.String)>
		SHA-256: 8913f9d46b428f4894740c274b5daa43fe81c0b3d9b5d7ae3098d31f9b6821e5
		Secure: false
	Object:
		Variable: $r0
		Type: byte[]
		Statement: $r0 = virtualinvoke $r1.<java.security.MessageDigest: byte[] digest(byte[])>($r0)
		Method: <com.tuya.sdk.bluetooth.bbddqbq: byte[] pppbppp(byte[])>
		SHA-256: 8de126eda9672b4f80cb914c52fc4483bd95a10e49af40763140a0ca12f7fbdc
		Secure: false
	Object:
		Variable: $r2
		Type: byte[]
		Statement: $r2 = virtualinvoke $r1.<java.security.MessageDigest: byte[] digest(byte[])>($r2)
		Method: <com.google.android.libraries.places.internal.zzda: java.lang.String zzb(android.content.pm.Signature)>
		SHA-256: c1309f766c9365e71c4464e916fec490f279a971435ed7d92265d63e7bd5db18
		Secure: false
	Object:
		Variable: $r27
		Type: java.security.SecureRandom
		Statement: specialinvoke $r27.<java.security.SecureRandom: void <init>()>()
		Method: <com.tuya.smart.plugin.tyuniimagepickermanager.TYUniImagePickerManager: void onActivityResult(int,int,android.content.Intent)>
		SHA-256: 1afaca8fe22e053b894759f7f9d1740746e3a5cfbd74eeccf51a022e4ee63206
		Secure: true
	Object:
		Variable: varReplacer1528529
		Type: java.lang.String
		Statement: specialinvoke $r0.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r5, varReplacer1528529)
		Method: <add: java.lang.String a(java.lang.String,java.lang.String)>
		SHA-256: 20a424c33e459b132b10aac6d743a8d45e4c59d59a61ce430fb2833843bfa72
		Secure: false
	Object:
		Variable: $r2
		Type: byte[]
		Statement: $r2 = virtualinvoke $r3.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r2)
		Method: <com.tuya.sdk.security.EncryptionManager: byte[] pdqppqb(com.tuya.sdk.security.EncryptionManager$bdpdqbp)>
		SHA-256: b6ff8f517045f4c06a849e589deea8ab46562da6206da49ab7fd793f28636dd
		Secure: false
	Object:
		Variable: $r0
		Type: java.security.SecureRandom
		Statement: specialinvoke $r0.<java.security.SecureRandom: void <init>()>()
		Method: <com.tuya.smart.android.common.utils.AesGcmUtil: byte[] generateRandomNonce()>
		SHA-256: 49c0a91de6e1e863041807a6c809ddc5af17771b73e7c40b28cf63865cfb1794
		Secure: true
	Object:
		Variable: $r4
		Type: java.security.SecureRandom
		Statement: specialinvoke $r4.<java.security.SecureRandom: void <init>()>()
		Method: <com.tuya.sdk.bluetooth.pbpqbdq$pbddddb: void bdpdqbp(com.tuya.smart.android.network.http.BusinessResponse,java.lang.Integer,java.lang.String)>
		SHA-256: c4516c3c37f28a50fd922bf48014c1771017b95ad9c0ccf8bef23c46fa049d8c
		Secure: true
	Object:
		Variable: $r0
		Type: byte[]
		Statement: $r0 = virtualinvoke $r2.<java.security.MessageDigest: byte[] digest(byte[])>($r0)
		Method: <com.tuyasmart.stencil.component.webview.util.c: byte[] a(byte[],java.lang.String)>
		SHA-256: ca1996f1193a246d7bc6d1c91a22d0e697b066df3bc4a2f699ba40dbe1e04718
		Secure: false
	Object:
		Variable: $r3
		Type: java.security.KeyPair
		Statement: $r3 = virtualinvoke $r2.<java.security.KeyPairGenerator: java.security.KeyPair generateKeyPair()>()
		Method: <com.tuya.sdk.bluetooth.pqppbdp: void bppdpdq()>
		SHA-256: 95a3b97072de18f41e23f5b367b6fa29def48c353e4625cd2e013b6df1070992
		Secure: false
	Object:
		Variable: $z0
		Type: boolean
		Statement: $z0 = virtualinvoke $r4.<java.security.Signature: boolean verify(byte[])>($r3)
		Method: <com.amazon.identity.auth.device.utils.JWTDecoder: boolean verifySignatureWithRsaSha256(byte[],byte[],java.security.cert.Certificate)>
		SHA-256: eeb70b24c310df630b5173e203fda980b003419c19631b4fdab1676dc150bacd
		Secure: true
	Object:
		Variable: $r14
		Type: byte[]
		Statement: $r18 = virtualinvoke $r16.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r14)
		Method: <afk: java.io.File b(android.content.Context,java.io.File,java.lang.String)>
		SHA-256: 6337a690f9b0539de84fdb0b005e306cd6ee0bc74689e1769e80cdf5fd59bfa5
		Secure: false
	Object:
		Variable: $r2
		Type: byte[]
		Statement: virtualinvoke $r0.<java.security.SecureRandom: void nextBytes(byte[])>($r2)
		Method: <com.tuya.smart.android.common.utils.AesGcmUtil: byte[] generateRandomNonce()>
		SHA-256: 10fb1ea32a7a42c282a8d55eec59def4df54341c654b3bf3c95070026ba7dcb0
		Secure: true
	Object:
		Variable: $r7
		Type: javax.crypto.spec.SecretKeySpec
		Statement: specialinvoke $r7.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r6, $r2)
		Method: <io.jsonwebtoken.SigningKeyResolverAdapter: java.security.Key resolveSigningKey(io.jsonwebtoken.JwsHeader,java.lang.String)>
		SHA-256: 554dda89a68608bd077a0c78c896e7f76e24e99d222623016abeeb51c048b2a1
		Secure: false
	Object:
		Variable: varReplacer1748421
		Type: java.lang.String
		Statement: specialinvoke $r7.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r2, varReplacer1748421)
		Method: <com.tuya.smart.android.common.utils.AesGcmUtil: byte[] encryptBytes2Bytes(byte[],byte[],byte[],byte[])>
		SHA-256: 9b52a4ddc43e1fa650033e9bf339d5d76f9e88204370a33622b88084c0d4fc54
		Secure: false
	Object:
		Variable: $r3
		Type: javax.crypto.spec.IvParameterSpec
		Statement: specialinvoke $r3.<javax.crypto.spec.IvParameterSpec: void <init>(byte[])>($r2)
		Method: <com.tuya.sdk.bluetooth.bbddqbq: byte[] pdqppqb(byte[],byte[],byte[])>
		SHA-256: 12f6cae6941973b292967b55e7b52912438417371b653d292665c65deff6c2d5
		Secure: false
	Object:
		Variable: $r1
		Type: java.security.MessageDigest
		Statement: $r1 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer3775276)
		Method: <com.google.android.libraries.places.internal.zzda: java.lang.String zzb(android.content.pm.Signature)>
		SHA-256: e5cc9a326ddcb9de6d8f02788c0cc3b15f77fcafc18f665fd3b1e8e4466c84de
		Secure: false
	Object:
		Variable: $r5
		Type: java.security.KeyFactory
		Statement: $r5 = staticinvoke <java.security.KeyFactory: java.security.KeyFactory getInstance(java.lang.String)>(varReplacer371875)
		Method: <com.tuya.smart.gzlminiapp.core.utils.c: boolean a(java.lang.String,java.security.PublicKey,java.lang.String)>
		SHA-256: 11672f5e332b5338fb9343cb6abbf4ca0f0ce3747627ed03799977bd59fef5ce
		Secure: false
	Object:
		Variable: $r3
		Type: java.security.KeyStore
		Statement: $r3 = staticinvoke <java.security.KeyStore: java.security.KeyStore getInstance(java.lang.String)>($r2)
		Method: <com.tuya.smart.alexa.speech.connect.d: java.security.KeyStore a(char[])>
		SHA-256: d77c0ae4e2c68f06bf04e2cf0402c8c87e43082dc728a9bda557190e6d0c2e84
		Secure: false
	Object:
		Variable: $r5
		Type: java.security.SecureRandom
		Statement: specialinvoke $r5.<java.security.SecureRandom: void <init>()>()
		Method: <com.tuya.sdk.security.EncryptionManager: boolean pdqppqb(android.content.SharedPreferences,byte[])>
		SHA-256: fa0a68eb566763395b85b7a99dc8304c2e93b911461255687a7652f1ab29ef14
		Secure: true
	Object:
		Variable: $r16
		Type: javax.crypto.Cipher
		Statement: $r16 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer1284492)
		Method: <afk: java.io.File b(android.content.Context,java.io.File,java.lang.String)>
		SHA-256: 4ff78c84ca15a311f2409cc969f2867ec1b545aa1398f319da2555fb0686350c
		Secure: false
	Object:
		Variable: $r3
		Type: java.security.MessageDigest
		Statement: $r3 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>($r1)
		Method: <okio.ByteString: okio.ByteString digest$jvm(java.lang.String)>
		SHA-256: 4fff7c5d15f021d956e87c05e0dc87688a11eec9c61bcdc27645605a965776c9
		Secure: false
	Object:
		Variable: varReplacer1577069
		Type: int
		Statement: specialinvoke $r4.<javax.crypto.spec.PBEKeySpec: void <init>(char[],byte[],int,int)>($r5, $r3, $i0, varReplacer1577069)
		Method: <ki: ki$a b(android.content.Context)>
		SHA-256: 1b73d5c400e38ae67fe90f798e2ee8d4d86cc73c6bbeacfca77d11c13f8f8869
		Secure: false
	Object:
		Variable: varReplacer343817
		Type: java.lang.String
		Statement: specialinvoke $r10.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r1, varReplacer343817)
		Method: <com.tuya.smart.camera.uiview.utils.EncryptUtils: javax.crypto.Cipher initAESCipher(byte[],java.lang.String,int)>
		SHA-256: a9679bfc0de4d91d47c80e8987c8bbdcf4be67f2d7a7d57b81508e5431d330ab
		Secure: false
	Object:
		Variable: $r1
		Type: byte[]
		Statement: $r1 = virtualinvoke $r5.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r2)
		Method: <com.tuya.sdk.bluetooth.bppdpdq: byte[] bppdpdq(byte[],byte[])>
		SHA-256: 8a0f964bce914663f1d6613b4ee07f84c27c9ad054a25a27b911e9963c9df00
		Secure: false
	Object:
		Variable: $r1
		Type: java.security.KeyStore
		Statement: $r1 = staticinvoke <java.security.KeyStore: java.security.KeyStore getInstance(java.lang.String)>(varReplacer2012370)
		Method: <com.tuya.sdk.security.EncryptionManager: void bppdpdq()>
		SHA-256: 2488e2f41f2e52483b36f7cd1738f8dc0670d3fe0ef35fa84d163417cdaac6d2
		Secure: false
	Object:
		Variable: $r3
		Type: java.security.SecureRandom
		Statement: specialinvoke $r3.<java.security.SecureRandom: void <init>()>()
		Method: <com.tuya.smart.activator.panel.search.sub.search.a: android.graphics.Rect f()>
		SHA-256: 8fa6c45c2c57fff81a1e4a6f8aef92b2a91406ef1a15d9dcfd8e6ad1a1e36414
		Secure: true
	Object:
		Variable: $r9
		Type: java.security.spec.ECParameterSpec
		Statement: specialinvoke $r9.<java.security.spec.ECParameterSpec: void <init>(java.security.spec.EllipticCurve,java.security.spec.ECPoint,java.math.BigInteger,int)>($r0, $r3, $r7, $i0)
		Method: <com.tuya.bouncycastle.jcajce.provider.asymmetric.util.EC5Util: java.security.spec.ECParameterSpec convertSpec(java.security.spec.EllipticCurve,com.tuya.bouncycastle.jce.spec.ECParameterSpec)>
		SHA-256: d870d280483a2664c58e06c9542abbdec00b481f8724a400848a80df0b6e4f5f
		Secure: true
	Object:
		Variable: $r11
		Type: javax.net.ssl.TrustManagerFactory
		Statement: $r11 = staticinvoke <javax.net.ssl.TrustManagerFactory: javax.net.ssl.TrustManagerFactory getInstance(java.lang.String)>($r10)
		Method: <com.tuya.smart.alexa.speech.connect.b: okhttp3.OkHttpClient a(java.lang.String)>
		SHA-256: 11d06010dbb719c35760aace70deeabafae63d904e9bf6f3221391daf706757b
		Secure: false
	Object:
		Variable: $r23
		Type: javax.crypto.spec.SecretKeySpec
		Statement: specialinvoke $r23.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r11, varReplacer2710678)
		Method: <com.tuya.smart.camera.utils.o: java.lang.String a(android.content.Context,java.lang.String,java.lang.String,boolean)>
		SHA-256: c330c1049e195e3f1b9f5c2675d9f5a4c0552e0c7af97628a9c8fafe88245fef
		Secure: false
	Object:
		Variable: varReplacer2596461
		Type: java.lang.String
		Statement: specialinvoke $r4.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r0, varReplacer2596461)
		Method: <com.tuya.smart.android.network.util.AESCTRUtil: java.lang.String encrypt(byte[],byte[],java.lang.String)>
		SHA-256: 72ec3a8c1a2b5b97e7fee1d76f1d4ee160a85d497fd0386aad6dd1a49fa98940
		Secure: false
	Object:
		Variable: $r6
		Type: javax.crypto.Cipher
		Statement: $r6 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer1686058)
		Method: <com.tuya.smart.android.network.util.AESCBCUtil: java.lang.String encrypt(byte[],java.lang.String,java.lang.String)>
		SHA-256: 2073ade871cfa547472538408a68de3f67e28ae296408659f06c6a05dfa6fcbe
		Secure: false
	Object:
		Variable: $r9
		Type: java.security.SecureRandom
		Statement: specialinvoke $r9.<java.security.SecureRandom: void <init>()>()
		Method: <com.tuya.bouncycastle.math.ec.ECFieldElement$Fp: com.tuya.bouncycastle.math.ec.ECFieldElement sqrt()>
		SHA-256: c183463335fa984b14deac47844a2183c26886322be744ae8f8dfc855b08358d
		Secure: true
	Object:
		Variable: $r7
		Type: javax.crypto.spec.SecretKeySpec
		Statement: specialinvoke $r7.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r2, varReplacer1748421)
		Method: <com.tuya.smart.android.common.utils.AesGcmUtil: byte[] encryptBytes2Bytes(byte[],byte[],byte[],byte[])>
		SHA-256: ef49dcae48219d51ebd2e390a4487e01187c81c8807a62da64bd21875b443a16
		Secure: false
	Object:
		Variable: $r2
		Type: javax.crypto.Cipher
		Statement: $r2 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String,java.lang.String)>(varReplacer3626827, varReplacer3626828)
		Method: <com.tuya.sdk.security.EncryptionManager: byte[] pdqppqb(byte[])>
		SHA-256: 3075154bcd0aea176f82ac8168ead067fb4ba7da7b721d691e88ad895263ceb8
		Secure: false
	Object:
		Variable: $r4
		Type: javax.crypto.KeyGenerator
		Statement: $r4 = staticinvoke <javax.crypto.KeyGenerator: javax.crypto.KeyGenerator getInstance(java.lang.String)>(varReplacer3263015)
		Method: <com.tuya.sdk.security.EncryptionManager: boolean bdpdqbp(android.content.SharedPreferences,byte[])>
		SHA-256: 80f5193875849303c4a6cd1fcdcb4a8a0bd591b5e1125863a93a9b3e1fd29f46
		Secure: true
	Object:
		Variable: $r2
		Type: java.security.MessageDigest
		Statement: $r2 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer4382003)
		Method: <com.tuya.sdk.bluetooth.bddqdbd: byte[] bdpdqbp(byte[])>
		SHA-256: 1aa41ecb3b7dc538cc24a1f28355ee81095bf81775dc80a3f05c7e11805bd703
		Secure: false
	Object:
		Variable: $r5
		Type: javax.crypto.CipherOutputStream
		Statement: specialinvoke $r5.<javax.crypto.CipherOutputStream: void <init>(java.io.OutputStream,javax.crypto.Cipher)>($r4, $r2)
		Method: <com.tuya.sdk.security.EncryptionManager: byte[] pdqppqb(byte[])>
		SHA-256: 66930834218bcfd37faf6f7b292be7c7bfefa90ddac2313c7a9a1734dfc8046f
		Secure: false
	Object:
		Variable: $r1
		Type: java.lang.String
		Statement: specialinvoke $r39.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r13, $r1)
		Method: <io.jsonwebtoken.impl.DefaultJwtParser: io.jsonwebtoken.Jwt parse(java.lang.String)>
		SHA-256: a1116bb0abfde5bbe209946c964e9dc8cafd4dc8e430da4ff89dfff6674896a9
		Secure: false
	Object:
		Variable: $r9
		Type: javax.crypto.spec.IvParameterSpec
		Statement: specialinvoke $r9.<javax.crypto.spec.IvParameterSpec: void <init>(byte[])>($r1)
		Method: <com.tuya.smart.camera.uiview.utils.EncryptUtils: javax.crypto.Cipher initAESCipher(byte[],java.lang.String,int)>
		SHA-256: 5fea68ba47b737f080f7af591bd457fc60f3166506bfb6270294ed0df0194b84
		Secure: false
	Object:
		Variable: $r2
		Type: java.security.spec.ECGenParameterSpec
		Statement: specialinvoke $r2.<java.security.spec.ECGenParameterSpec: void <init>(java.lang.String)>(varReplacer2521647)
		Method: <com.tuya.bouncycastle.jcajce.provider.asymmetric.ec.KeyPairGeneratorSpi$EC: void <clinit>()>
		SHA-256: 22384472b4266acba99e953e3123bdecf1f8f94b674e9f2e4864356ce26c9a1c
		Secure: true
	Object:
		Variable: $r13
		Type: java.security.SecureRandom
		Statement: specialinvoke $r13.<java.security.SecureRandom: void <init>()>()
		Method: <com.tuya.sdk.security.EncryptionManager: boolean bdpdqbp(android.content.Context,byte[])>
		SHA-256: 8a581c0f8d92769be118a9dd081975f755da1d311cd87ebcbb77ca00b196946f
		Secure: true
	Object:
		Variable: $r4
		Type: javax.crypto.Cipher
		Statement: $r4 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>($r3)
		Method: <com.tuya.smart.android.common.utils.AESUtil: byte[] encryptWithBytes(byte[])>
		SHA-256: c07c92637065f9963c307700984b9b22baa6e07708cd5fd04e6038051df5143d
		Secure: false
	Object:
		Variable: $r5
		Type: java.security.PrivateKey
		Statement: $r5 = virtualinvoke $r3.<java.security.KeyFactory: java.security.PrivateKey generatePrivate(java.security.spec.KeySpec)>($r0)
		Method: <com.tuya.smart.android.network.util.ECDHEngine: byte[] ecdhKey(java.lang.String,java.lang.String)>
		SHA-256: c093ad48e2039674589ef24c23a2bc400662334348921e2c942a9eedd4464bd7
		Secure: false
	Object:
		Variable: $r9
		Type: javax.crypto.spec.IvParameterSpec
		Statement: specialinvoke $r9.<javax.crypto.spec.IvParameterSpec: void <init>(byte[])>($r1)
		Method: <com: javax.crypto.Cipher a(byte[],java.lang.String,int)>
		SHA-256: 6b1d55e03998dab8fb21d903b8bb4348e414984e4325ada81905415ced59b932
		Secure: false
	Object:
		Variable: varReplacer410129
		Type: java.lang.String
		Statement: specialinvoke $r4.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r2, varReplacer410129)
		Method: <com.tuya.sdk.bluetooth.pdpbbpd: byte[] bdpdqbp(byte[],byte[],byte[])>
		SHA-256: 1e138b3fe6e7b1898b74ec9a6ffee673e7aa246c8f84cc6f47920fc4de106bc1
		Secure: false
	Object:
		Variable: $r12
		Type: byte[]
		Statement: $r12 = virtualinvoke $r10.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r6)
		Method: <com.tuya.smart.camera.utils.o: android.graphics.Bitmap a(java.lang.String,java.lang.String)>
		SHA-256: f623a97f3438e3e204a766d8af660e89eaedc03bd3f12f2b5f77be1b44f3ccba
		Secure: false
	Object:
		Variable: $r2
		Type: java.security.PublicKey
		Statement: $r2 = virtualinvoke $r5.<java.security.KeyFactory: java.security.PublicKey generatePublic(java.security.spec.KeySpec)>($r4)
		Method: <com.tuya.smart.gzlminiapp.core.utils.c: boolean a(java.lang.String,java.security.PublicKey,java.lang.String)>
		SHA-256: 644faf2bf6c3e22c300187e6af5e7542457dc2977d47d7c68f6d7ab8e0b651f6
		Secure: false
	Object:
		Variable: $r0
		Type: byte[]
		Statement: virtualinvoke $r5.<javax.crypto.Cipher: int doFinal(byte[],int,int,byte[],int)>($r0, $i0, $i4, $r1, $i5)
		Method: <com.tuya.smart.android.common.utils.RSAUtil: byte[] encrypt(java.lang.String,java.security.PublicKey,byte[])>
		SHA-256: 7f1b243f96ae79c30765ed9293ece858bf32d80308b3307c8e5dcb9896aafd19
		Secure: false
	Object:
		Variable: $r0
		Type: java.security.SecureRandom
		Statement: specialinvoke $r0.<java.security.SecureRandom: void <init>()>()
		Method: <com.tuya.smart.camera.push.a: int a()>
		SHA-256: 553a68d079e8636dfb60ee41e9f39dba7ea791bcd1d4d1153c7b59adb326d1e4
		Secure: true
	Object:
		Variable: $r14
		Type: javax.crypto.Cipher
		Statement: $r14 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer2312966)
		Method: <afk: java.io.File a(android.content.Context,java.io.File,java.lang.String)>
		SHA-256: 2d17a5947ab248ed4f5411266364717bb5669dffd52420110e175e2533ed17a1
		Secure: false
	Object:
		Variable: varReplacer2324560
		Type: java.lang.String
		Statement: specialinvoke $r9.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r5, varReplacer2324560)
		Method: <dgc: java.lang.String a(java.lang.String,java.lang.String)>
		SHA-256: 1b959d114637cf2aef0c7a9262c6ef23f79f730dc630a343f960917a977d0b1
		Secure: false
	Object:
		Variable: $r4
		Type: byte[]
		Statement: $r4 = virtualinvoke $r1.<java.security.MessageDigest: byte[] digest()>()
		Method: <com.tuya.smart.gzlminiapp.core.utils.c: java.lang.String c(java.lang.String)>
		SHA-256: 9241b6794470cb928e6b3df9fc96c2b11bf1b0a2d921c859b753ec3183bd4e8f
		Secure: true
	Object:
		Variable: varReplacer1577061
		Type: java.lang.String
		Statement: specialinvoke $r10.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r3, varReplacer1577061)
		Method: <ki: ki$a b(android.content.Context)>
		SHA-256: 5819127d24ad53a7fe059651cc614afc5910349219aa8aad545791f01c81d569
		Secure: false
	Object:
		Variable: $r4
		Type: java.security.MessageDigest
		Statement: $r4 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer3567994)
		Method: <com.google.firebase.messaging.i: java.lang.String c()>
		SHA-256: 25e423f9b11694ee87fab10fbfc49084867bb23b12f4ec5c133781d872eb4563
		Secure: false
	Object:
		Variable: $r2
		Type: javax.net.ssl.TrustManagerFactory
		Statement: $r2 = staticinvoke <javax.net.ssl.TrustManagerFactory: javax.net.ssl.TrustManagerFactory getInstance(java.lang.String)>($r1)
		Method: <com.tuya.smart.android.network.TuyaSmartNetWork: javax.net.ssl.X509TrustManager systemDefaultTrustManager()>
		SHA-256: f8916c72a6d9088da1aa40c4389214118c5f2a19cc6ac9075016c95f019f34c5
		Secure: false
	Object:
		Variable: $r4
		Type: javax.crypto.spec.IvParameterSpec
		Statement: specialinvoke $r4.<javax.crypto.spec.IvParameterSpec: void <init>(byte[],int,int)>($r3, varReplacer3587808, varReplacer3587809)
		Method: <com.amazon.identity.auth.device.datastore.AESEncryptor: java.lang.String decryptData(java.lang.String)>
		SHA-256: eb8d7b5836e8ef456a101707d4da3a56db985ef7fdf8467c0c8bdb4664542ce1
		Secure: false
	Object:
		Variable: $r18
		Type: byte[]
		Statement: $r18 = virtualinvoke $r16.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r14)
		Method: <afk: java.io.File b(android.content.Context,java.io.File,java.lang.String)>
		SHA-256: 2e592eb014b129206907b23abc8d3ee292491a9e18f4017916b811d422116774
		Secure: false
	Object:
		Variable: $r2
		Type: javax.crypto.Cipher
		Statement: $r2 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String,java.lang.String)>(varReplacer3626838, varReplacer3626839)
		Method: <com.tuya.sdk.security.EncryptionManager: byte[] bdpdqbp(byte[])>
		SHA-256: e92f11ec9cf632000a58c81696f324817d23256e8bf8e872c62d222fafbe9fde
		Secure: false
	Object:
		Variable: $r4
		Type: javax.crypto.Cipher
		Statement: $r4 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>($r3)
		Method: <com.tuya.smart.android.common.utils.AESUtil: java.lang.String encryptWithBase64(java.lang.String)>
		SHA-256: 52cbc22322ffedac3ccaaaa5b6117d4a593a771c212e4a4e460c3b84ad397a31
		Secure: false
	Object:
		Variable: varReplacer1284503
		Type: java.lang.String
		Statement: specialinvoke $r31.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r14, varReplacer1284503)
		Method: <afk: java.io.File b(android.content.Context,java.io.File,java.lang.String)>
		SHA-256: 8286f5a69558842b90b27f82b9342bd63ac03b13c6289beb24c425bb8abe9871
		Secure: false
	Object:
		Variable: $r1
		Type: byte[]
		Statement: $r1 = virtualinvoke $r3.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r1)
		Method: <com.tuya.sdk.security.EncryptionManager: com.tuya.sdk.security.EncryptionManager$bdpdqbp qddqppb(byte[],byte[])>
		SHA-256: b3f223a5f2f1b527fe17fe38dbcc77926ec28bcd3d590ed1885fab8b42e969d8
		Secure: false
	Object:
		Variable: $r2
		Type: byte[]
		Statement: $z0 = virtualinvoke $r3.<java.security.Signature: boolean verify(byte[])>($r2)
		Method: <io.jsonwebtoken.impl.crypto.RsaSignatureValidator: boolean doVerify(java.security.Signature,java.security.PublicKey,byte[],byte[])>
		SHA-256: 2e9db2200400d78e3a78afc8d47b86d00d7f2f6d6673383d8f32ee0d379acd22
		Secure: false
	Object:
		Variable: $r5
		Type: javax.crypto.Cipher
		Statement: $r5 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer981483)
		Method: <ki: void <init>(java.lang.String,int,boolean)>
		SHA-256: a73ffe6ee30b0e9cb4e11706e4d1b5dfc47cf87f56046f04827908d6c0f4ced9
		Secure: true
	Object:
		Variable: $r15
		Type: java.security.KeyFactory
		Statement: $r15 = staticinvoke <java.security.KeyFactory: java.security.KeyFactory getInstance(java.lang.String)>(varReplacer1686143)
		Method: <com.tuya.smart.android.network.util.ECDHEngine: java.security.PublicKey decodeECPoint(java.lang.String,java.lang.String)>
		SHA-256: d6cd6c2348b2a24938ec449ad4f0d5985a62da3c0eff26502f1fd7c2a07f2c24
		Secure: false
	Object:
		Variable: $r10
		Type: byte[]
		Statement: $r12 = virtualinvoke $r14.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r10)
		Method: <afk: java.io.File a(android.content.Context,java.io.File,java.lang.String)>
		SHA-256: 9e1624fcd391f6af3d9df7c27446ca4b3784b41f85d0efb15c81dbbc2f09bff2
		Secure: false
	Object:
		Variable: $r6
		Type: java.security.PrivateKey
		Statement: $r6 = virtualinvoke $r3.<java.security.KeyPair: java.security.PrivateKey getPrivate()>()
		Method: <com.tuya.sdk.bluetooth.pqppbdp: void bppdpdq()>
		SHA-256: f21ef50435d477c217a661f126732d12b77a199c221255d65a50460cd953b67b
		Secure: false
	Object:
		Variable: $r0
		Type: byte[]
		Statement: $r0 = virtualinvoke $r1.<javax.crypto.Cipher: byte[] doFinal(byte[],int,int)>($r0, $i0, $i1)
		Method: <com.amazon.identity.auth.device.datastore.AESEncryptor: byte[] performAESCipherOperation(javax.crypto.Cipher,byte[],int,int)>
		SHA-256: a8c280a171bc4840528d11d875ea2c609cbb9aed9a80092ed51f528c9bdc0b69
		Secure: false
	Object:
		Variable: varReplacer1725390
		Type: java.lang.String
		Statement: specialinvoke $r10.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r1, varReplacer1725390)
		Method: <com: javax.crypto.Cipher a(byte[],java.lang.String,int)>
		SHA-256: c4015678821354d92388374177dd440216d8b5828de91919c7ff1bb5b53feff2
		Secure: false
	Object:
		Variable: $r2
		Type: javax.crypto.spec.IvParameterSpec
		Statement: specialinvoke $r2.<javax.crypto.spec.IvParameterSpec: void <init>(byte[])>($r1)
		Method: <com.tuya.sdk.security.EncryptionManager: javax.crypto.Cipher pdqppqb(byte[],boolean)>
		SHA-256: db1edfce00ac6b855dcd38822a237047f5f8f1248b8b3fd3f00340937fc4e22
		Secure: true
	Object:
		Variable: $r12
		Type: java.security.KeyPair
		Statement: specialinvoke $r12.<java.security.KeyPair: void <init>(java.security.PublicKey,java.security.PrivateKey)>($r9, $r13)
		Method: <com.tuya.bouncycastle.jcajce.provider.asymmetric.ec.KeyPairGeneratorSpi$EC: java.security.KeyPair generateKeyPair()>
		SHA-256: c9e1ff5450f21aae65af053d6ed29f81c5a7b267991078defbfa3059af0e266a
		Secure: false
	Object:
		Variable: $r3
		Type: byte[]
		Statement: $z0 = virtualinvoke $r4.<java.security.Signature: boolean verify(byte[])>($r3)
		Method: <io.jsonwebtoken.impl.crypto.EllipticCurveSignatureValidator: boolean doVerify(java.security.Signature,java.security.PublicKey,byte[],byte[])>
		SHA-256: a910002b28f05b6627b00bf1da8c378a41c080f9c80a7b1ac62e257ce90cfcd0
		Secure: false
	Object:
		Variable: $r7
		Type: byte[]
		Statement: $r7 = virtualinvoke $r6.<java.security.MessageDigest: byte[] digest()>()
		Method: <com.facebook.soloader.SoLoader$1: java.lang.String getLibHash(java.lang.String)>
		SHA-256: 36e79bb735f1e77fb3b239c698de2236098a707c50a65a5c2a9f244df815a6ad
		Secure: false
	Object:
		Variable: $r0
		Type: java.security.SecureRandom
		Statement: specialinvoke $r0.<java.security.SecureRandom: void <init>()>()
		Method: <io.jsonwebtoken.impl.crypto.SignatureProvider: void <clinit>()>
		SHA-256: bd77c10f408e393bf6a88a9f259346bb12383ce9f5ef6237ca9f00f578063397
		Secure: true
	Object:
		Variable: $r1
		Type: byte[]
		Statement: $r1 = virtualinvoke $r2.<java.security.MessageDigest: byte[] digest()>()
		Method: <com.google.android.play.core.splitcompat.a: java.lang.String a(byte[])>
		SHA-256: da643f5912e523dd3182f13ab746c4c992d4d05fddcbd22d6e440e030c402b18
		Secure: true
	Object:
		Variable: $r28
		Type: java.security.SecureRandom
		Statement: specialinvoke $r28.<java.security.SecureRandom: void <init>()>()
		Method: <com.tuya.smart.scene.construct.extension.SceneExtensionInfoFragment$i: java.lang.Object invokeSuspend(java.lang.Object)>
		SHA-256: 879f9d69bfa6480bedc35430893bc07ff89888eab183492efb424d706e209aa4
		Secure: true
	Object:
		Variable: $r0
		Type: byte[]
		Statement: $r0 = virtualinvoke $r3.<java.security.MessageDigest: byte[] digest(byte[])>($r0)
		Method: <com.amazon.identity.auth.device.utils.PackageSignatureUtil: byte[] getFingerprint(com.amazon.identity.auth.device.utils.HashAlgorithm,byte[])>
		SHA-256: f28eeef0237b0d1ca708825f530dadfc706c6f34ecd5e6d2b95090c0f168d6b5
		Secure: true
	Object:
		Variable: $r4
		Type: javax.crypto.Cipher
		Statement: $r4 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer343815)
		Method: <com.tuya.smart.camera.uiview.utils.EncryptUtils: javax.crypto.Cipher initAESCipher(byte[],java.lang.String,int)>
		SHA-256: 2e4047144978683477aa5a878dfa81cc0c8fba668651c9ec924848946cd119f2
		Secure: false
	Object:
		Variable: $r1
		Type: javax.crypto.spec.IvParameterSpec
		Statement: specialinvoke $r1.<javax.crypto.spec.IvParameterSpec: void <init>(byte[])>($r3)
		Method: <aeo: javax.crypto.Cipher a(java.lang.String,byte[])>
		SHA-256: 38ba73b9868af293b2ed4fd831bd705d16ec1832e758bdb4f9bc140edb300721
		Secure: false
	Object:
		Variable: $r2
		Type: javax.net.ssl.TrustManagerFactory
		Statement: $r2 = staticinvoke <javax.net.ssl.TrustManagerFactory: javax.net.ssl.TrustManagerFactory getInstance(java.lang.String)>($r1)
		Method: <com.tuya.sdk.mqtt.dpdqppp: javax.net.ssl.X509TrustManager pppbppp()>
		SHA-256: 6f0e41f68f8abacf6994e0d04f200fcbf709e327cb187f50ea057b17911d556e
		Secure: false
	Object:
		Variable: $r4
		Type: javax.crypto.spec.SecretKeySpec
		Statement: specialinvoke $r4.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r1, varReplacer1841906)
		Method: <com.tuya.sdk.bluetooth.bbddqbq: byte[] pdqppqb(byte[],byte[],byte[])>
		SHA-256: 5395e38b5048db6b2d314a8f0bcd85dc4c999feb93861baf18bf456f96c0c793
		Secure: false
	Object:
		Variable: r0
		Type: com.tuya.bouncycastle.jce.spec.ECNamedCurveSpec
		Statement: specialinvoke r0.<java.security.spec.ECParameterSpec: void <init>(java.security.spec.EllipticCurve,java.security.spec.ECPoint,java.math.BigInteger,int)>($r5, $r6, $r2, varReplacer2463588)
		Method: <com.tuya.bouncycastle.jce.spec.ECNamedCurveSpec: void <init>(java.lang.String,com.tuya.bouncycastle.math.ec.ECCurve,com.tuya.bouncycastle.math.ec.ECPoint,java.math.BigInteger)>
		SHA-256: cf730d0d8d97c0f9afcb8acd1d974306372d69d314abaf8d3a297e3eed249355
		Secure: true
	Object:
		Variable: $r5
		Type: byte[]
		Statement: $r5 = virtualinvoke $r4.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r5)
		Method: <com.tuya.smart.android.common.utils.AESUtil: java.lang.String encrypt(java.lang.String)>
		SHA-256: 665d497d0ae630b766ea660547f9443fbaa3461ff5b09b0d8a62650df9dad8c0
		Secure: false
	Object:
		Variable: $r8
		Type: javax.crypto.spec.IvParameterSpec
		Statement: specialinvoke $r8.<javax.crypto.spec.IvParameterSpec: void <init>(byte[])>($r4)
		Method: <com.tuya.smart.android.common.utils.AesGcmUtil: byte[] decryptBytes2Bytes(byte[],byte[],byte[],byte[])>
		SHA-256: 60712a730329983a0cd42235823261be7ddd17a16b832e222b8a37b9906752e4
		Secure: false
	Object:
		Variable: $r1
		Type: java.security.SecureRandom
		Statement: specialinvoke $r1.<java.security.SecureRandom: void <init>()>()
		Method: <com.tuya.sdk.bluetooth.bqpdbqq: byte[] bdpdqbp()>
		SHA-256: babe1737658b419912224792e39662e30b89a03b2deaa95ad8bf05eec5c6d091
		Secure: true
	Object:
		Variable: $r15
		Type: java.security.SecureRandom
		Statement: specialinvoke $r15.<java.security.SecureRandom: void <init>()>()
		Method: <com.tuya.smart.scene.home.manual.e: void b(com.tuya.smart.scene.model.NormalScene)>
		SHA-256: d7a5ad44e9653bf42a468fdc06e1f1ed36602eba4dee76c463c2fee3d48a77be
		Secure: true
	Object:
		Variable: $r3
		Type: javax.crypto.Cipher
		Statement: $r3 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer1528475)
		Method: <add: java.lang.String a(java.lang.String,java.lang.String)>
		SHA-256: 522d24a225f48743fa7e83d22fddd0336a0d0bc531f9c8f20b33584ee3b50bd8
		Secure: false
	Object:
		Variable: $r3
		Type: javax.crypto.Mac
		Statement: $r3 = staticinvoke <javax.crypto.Mac: javax.crypto.Mac getInstance(java.lang.String)>(varReplacer1998272)
		Method: <com.tuya.smart.camera.utils.m: byte[] a(byte[],java.lang.String)>
		SHA-256: 64d6330a604b5022947fa38bb1ea141f131686d0d2d24c6947f516ed16571c6a
		Secure: false
	Object:
		Variable: varReplacer1686079
		Type: java.lang.String
		Statement: $r3 = staticinvoke <java.security.KeyFactory: java.security.KeyFactory getInstance(java.lang.String)>(varReplacer1686079)
		Method: <com.tuya.smart.android.network.util.ECDHEngine: byte[] ecdhKey(java.lang.String,java.lang.String)>
		SHA-256: b77ade43ed9b2e7e3117b0d5d0fce3dd840244ff65675e0e99990133426ea938
		Secure: false
	Object:
		Variable: $r26
		Type: java.security.SecureRandom
		Statement: specialinvoke $r26.<java.security.SecureRandom: void <init>()>()
		Method: <com.tuya.smart.scene.construct.extension.IconStyleActivity$b: java.lang.Object invokeSuspend(java.lang.Object)>
		SHA-256: 3b226df627c59a60f3d2802689a7520b2ff61eb285671dc7f40ac16c743606be
		Secure: true
	Object:
		Variable: $r0
		Type: byte[]
		Statement: $r0 = virtualinvoke $r5.<javax.crypto.Cipher: byte[] doFinal(byte[],int,int)>($r2, varReplacer62686, $i0)
		Method: <com.tuya.smart.android.network.util.AESCTRUtil: java.lang.String decrypt(byte[],java.lang.String)>
		SHA-256: ff2c0a2cfc49c2bcb4edcea778c83cd6f3acfb6f6e0d8a9ef008c3b92e929c7e
		Secure: false
	Object:
		Variable: $r1
		Type: javax.crypto.spec.IvParameterSpec
		Statement: specialinvoke $r1.<javax.crypto.spec.IvParameterSpec: void <init>(byte[])>($r2)
		Method: <com.tuya.smart.camera.utils.a: void a(java.lang.String)>
		SHA-256: 9572dd975eb20f8f50bfba5887dd59bfc4a2459e07549c59204a6cec2caa8271
		Secure: false
	Object:
		Variable: $r3
		Type: byte[]
		Statement: $z0 = virtualinvoke $r6.<java.security.Signature: boolean verify(byte[])>($r3)
		Method: <com.tuya.smart.gzlminiapp.core.utils.c: boolean a(java.lang.String,java.security.PublicKey,java.lang.String)>
		SHA-256: 2c4cbb15e5144a1e75bf003bea2784c27dcad9194bc798d92fd72ab8f74eab4f
		Secure: false
	Object:
		Variable: $r0
		Type: java.security.MessageDigest
		Statement: $r0 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>($r2)
		Method: <com.google.android.gms.common.util.AndroidUtilsLight: java.security.MessageDigest zza(java.lang.String)>
		SHA-256: c613dcbe025721f48d3fcab4e003017d7cb704971fc9d0296bae42be0b7eb30a
		Secure: false
	Object:
		Variable: $r3
		Type: byte[]
		Statement: $r3 = virtualinvoke $r4.<java.security.MessageDigest: byte[] digest()>()
		Method: <com.tuya.smart.gzlminiapp.core.utils.c: java.lang.String a(java.lang.String,java.lang.String)>
		SHA-256: c5de33ea29944c3648f1476c927f9224296e057b18d95f75be2d506277a5b441
		Secure: true
	Object:
		Variable: $r3
		Type: javax.crypto.Mac
		Statement: $r3 = staticinvoke <javax.crypto.Mac: javax.crypto.Mac getInstance(java.lang.String)>(varReplacer3617533)
		Method: <com.tuya.sdk.security.EncryptionManager: byte[] qddqppb(byte[])>
		SHA-256: 9f100cbdd252d7c6ae4969325576a31e5d412d96444d7eaa1cd933805d174a83
		Secure: false
	Object:
		Variable: $r3
		Type: java.security.MessageDigest
		Statement: $r3 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>($r2)
		Method: <com.amazon.identity.auth.device.utils.PackageSignatureUtil: byte[] getFingerprint(com.amazon.identity.auth.device.utils.HashAlgorithm,byte[])>
		SHA-256: 751c50a4c6f147c774c61af3cf5dace9766a38fa7cf11c8631e3866d98048e53
		Secure: true
	Object:
		Variable: $r0
		Type: javax.crypto.spec.SecretKeySpec
		Statement: specialinvoke $r0.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r5, $r1)
		Method: <and: java.lang.String a(java.lang.String,java.lang.String)>
		SHA-256: 1af6b3547981145b8ce5e55b2b74582293ac9d97099f8333fd3810dd1ae9bd70
		Secure: false
	Object:
		Variable: $r4
		Type: javax.crypto.Cipher
		Statement: $r4 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>($r3)
		Method: <com.tuya.smart.android.common.utils.AESUtil: java.lang.String decryptWithBase64(java.lang.String)>
		SHA-256: 73279fcdf8f3ca9f352ab916e0f36b579a36dc46c69387d1c60ba0e3eba76d2b
		Secure: false
	Object:
		Variable: $r24
		Type: javax.crypto.spec.IvParameterSpec
		Statement: specialinvoke $r24.<javax.crypto.spec.IvParameterSpec: void <init>(byte[])>($r9)
		Method: <com.tuya.smart.camera.utils.o: java.lang.String a(android.content.Context,java.lang.String,java.lang.String,boolean)>
		SHA-256: b14be4d4925cd6db4bdf0b1ba4da693988c3b88397e2282cff4f1f22256e2919
		Secure: false
	Object:
		Variable: $r3
		Type: javax.crypto.spec.IvParameterSpec
		Statement: specialinvoke $r3.<javax.crypto.spec.IvParameterSpec: void <init>(byte[],int,int)>($r2, varReplacer62684, varReplacer62685)
		Method: <com.tuya.smart.android.network.util.AESCTRUtil: java.lang.String decrypt(byte[],java.lang.String)>
		SHA-256: c393fac7b93c890e23e8d1afbbc1f802bd071cc8450f7ba405238cf65ff34911
		Secure: false
	Object:
		Variable: $r24
		Type: javax.crypto.spec.IvParameterSpec
		Statement: specialinvoke $r24.<javax.crypto.spec.IvParameterSpec: void <init>(byte[])>($r10)
		Method: <afk: java.io.File a(android.content.Context,java.io.File,java.lang.String)>
		SHA-256: f87f1db0237f4e0a3743fd86862cf3653f0f30f0e60f7354a766898ce01cca99
		Secure: false
	Object:
		Variable: $z0
		Type: boolean
		Statement: $z0 = virtualinvoke $r4.<java.security.Signature: boolean verify(byte[])>($r3)
		Method: <io.jsonwebtoken.impl.crypto.EllipticCurveSignatureValidator: boolean doVerify(java.security.Signature,java.security.PublicKey,byte[],byte[])>
		SHA-256: f54467fbd4deded218aba82c494444a4c2f8bc22d6e34966879e488f5bb0f52f
		Secure: false
	Object:
		Variable: $r13
		Type: javax.net.ssl.SSLContext
		Statement: $r13 = staticinvoke <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String)>(varReplacer1703238)
		Method: <com.tuyasmart.stencil.component.webview.connect.e: com.tuyasmart.stencil.component.webview.connect.g b(com.tuyasmart.stencil.component.webview.connect.f)>
		SHA-256: 29089790c91b779dfec93be95ea4a683f19f46f0423b28fbb39c207e091a4eff
		Secure: false
	Object:
		Variable: $r3
		Type: javax.net.ssl.SSLContext
		Statement: $r3 = staticinvoke <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String)>(varReplacer1846949)
		Method: <com.tuya.smart.alexa.speech.connect.d: void <init>()>
		SHA-256: 15e103c49573c6eb05e7e4ad235b51e498c73e3679f7f798ae6c1516bb23940a
		Secure: false
	Object:
		Variable: $r2
		Type: java.lang.String
		Statement: specialinvoke $r7.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r6, $r2)
		Method: <io.jsonwebtoken.SigningKeyResolverAdapter: java.security.Key resolveSigningKey(io.jsonwebtoken.JwsHeader,java.lang.String)>
		SHA-256: ee052a5923d2f5e57304b344a9975b2c23c1309cfd50f4bb3f16956cbe7327fb
		Secure: false
	Object:
		Variable: $r0
		Type: byte[]
		Statement: $r0 = virtualinvoke $r1.<java.security.MessageDigest: byte[] digest(byte[])>($r0)
		Method: <anb: byte[] a(byte[])>
		SHA-256: b64850aa5561788900d1802e7a4542ed7c1211c88ac4a969b4c56561669fd781
		Secure: false
	Object:
		Variable: $r3
		Type: java.lang.String
		Statement: specialinvoke $r7.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r6, $r3)
		Method: <io.jsonwebtoken.SigningKeyResolverAdapter: java.security.Key resolveSigningKey(io.jsonwebtoken.JwsHeader,io.jsonwebtoken.Claims)>
		SHA-256: 68505a57fb5aa2144a5abe3ae780f592ec256f69f83106200a4e59378dca3a85
		Secure: false
	Object:
		Variable: $r2
		Type: java.security.spec.ECGenParameterSpec
		Statement: specialinvoke $r2.<java.security.spec.ECGenParameterSpec: void <init>(java.lang.String)>(varReplacer2521696)
		Method: <com.tuya.bouncycastle.jcajce.provider.asymmetric.ec.KeyPairGeneratorSpi$EC: void <clinit>()>
		SHA-256: e201ad8f4ce893dbbd5f80337a88010721cb5e6bc2f5366ec55cdc6cb7e36d6
		Secure: true
	Object:
		Variable: $r11
		Type: java.security.KeyPairGenerator
		Statement: $r11 = staticinvoke <java.security.KeyPairGenerator: java.security.KeyPairGenerator getInstance(java.lang.String,java.lang.String)>(varReplacer2169658, varReplacer2169659)
		Method: <com.amazon.identity.auth.device.datastore.AESEncryptor: void generateRSAKeysIfNeeded(android.content.Context)>
		SHA-256: 2035bf7f2781bd77ae51c3240b23ed0243956e218c08fa020cb3dfb1329cb013
		Secure: false
	Object:
		Variable: $r1
		Type: byte[]
		Statement: $r1 = virtualinvoke $r5.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r0)
		Method: <com.tuya.sdk.bluetooth.bbddqbq: byte[] pdqppqb(byte[],byte[],byte[])>
		SHA-256: 73868511cc67d510b55a3d518183b842120ac7a6186c391926cd9924a5837ece
		Secure: false
	Object:
		Variable: $r7
		Type: javax.crypto.spec.IvParameterSpec
		Statement: specialinvoke $r7.<javax.crypto.spec.IvParameterSpec: void <init>(byte[])>($r5)
		Method: <ki: java.lang.String a(android.content.Context,java.lang.String)>
		SHA-256: 9ec4b3e72aaa2b9bd578a072f3e0c535bbf7f4ca276067c660eb14de2ab38c9
		Secure: false
	Object:
		Variable: $r4
		Type: javax.crypto.Cipher
		Statement: $r4 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer1725395)
		Method: <com: javax.crypto.Cipher a(byte[],java.lang.String,int)>
		SHA-256: 5a9358b399dd804a394c46d97c11c0372b74db92c85067d324687e15c7a9bea5
		Secure: false
	Object:
		Variable: $r8
		Type: javax.crypto.spec.IvParameterSpec
		Statement: specialinvoke $r8.<javax.crypto.spec.IvParameterSpec: void <init>(byte[])>($r1)
		Method: <nn: java.io.InputStream a(okhttp3.ResponseBody)>
		SHA-256: 2cacc282d158d354356d46bbdd5c030f705193018670227f7b51b69d7579bc33
		Secure: false
	Object:
		Variable: $r0
		Type: java.security.spec.X509EncodedKeySpec
		Statement: specialinvoke $r0.<java.security.spec.X509EncodedKeySpec: void <init>(byte[])>($r3)
		Method: <com.tuya.smart.gzlminiapp.core.utils.c: java.security.PublicKey d(java.lang.String)>
		SHA-256: 2916567c167a56a8919aee667ac233991d76e096f48afafcc90b160ab83b3774
		Secure: false
	Object:
		Variable: $r1
		Type: java.security.MessageDigest
		Statement: $r1 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer372078)
		Method: <com.tuya.smart.gzlminiapp.core.utils.c: java.lang.String c(java.lang.String)>
		SHA-256: d08deae7c904b68f59627bc4c8ff3f785d2aad10f8e4753868b3e1ea80263bbd
		Secure: true
	Object:
		Variable: $r4
		Type: javax.crypto.Cipher
		Statement: $r4 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer1725498)
		Method: <cqp: javax.crypto.Cipher a(byte[],java.lang.String,int)>
		SHA-256: a3eadfd27ef5cf1dae1093756c491421fb4dda6b78adbb14728289a1f7368e87
		Secure: false
	Object:
		Variable: $r1
		Type: java.security.SecureRandom
		Statement: specialinvoke $r1.<java.security.SecureRandom: void <init>()>()
		Method: <com.tuya.sdk.security.EncryptionManager: byte[] bdpdqbp()>
		SHA-256: aebf268168e52e4f694a677b444d7e4de0d0847fda65282b4220ee15b7424b63
		Secure: true
	Object:
		Variable: $r15
		Type: java.security.SecureRandom
		Statement: specialinvoke $r15.<java.security.SecureRandom: void <init>()>()
		Method: <com.tuya.smart.scene.home.manual.e: void b(com.tuya.smart.scene.model.NormalScene)>
		SHA-256: d7a5ad44e9653bf42a468fdc06e1f1ed36602eba4dee76c463c2fee3d48a77be
		Secure: true
	Object:
		Variable: $r2
		Type: byte[]
		Statement: $r1 = virtualinvoke $r5.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r2)
		Method: <com.tuya.sdk.bluetooth.bppdpdq: byte[] bppdpdq(byte[],byte[])>
		SHA-256: 424605dde28deba81331016999099d3c4e10a6832771b689378e24e0f2aaa256
		Secure: false
	Object:
		Variable: $r0
		Type: byte[]
		Statement: $r2 = virtualinvoke $r5.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r0)
		Method: <com.tuya.sdk.bluetooth.pdpbbpd: byte[] pdqppqb(byte[],byte[],byte[])>
		SHA-256: 1f804973bcb601bcd9a14b49ed684dc0af5379e25aa1de4720c3edc6af564511
		Secure: false
	Object:
		Variable: $r3
		Type: java.security.KeyPairGenerator
		Statement: $r3 = staticinvoke <java.security.KeyPairGenerator: java.security.KeyPairGenerator getInstance(java.lang.String)>(varReplacer975265)
		Method: <com.tuya.smart.android.network.util.ECDHEngine: com.tuya.smart.android.network.util.ECDHEngine$KeyEntity generateKeyPair(java.lang.String)>
		SHA-256: 17fbd5e57b1d4c6e46ab072c253be467b8f2e345603b08519d63b0b0132c205c
		Secure: false
	Object:
		Variable: $r1
		Type: byte[]
		Statement: $r1 = virtualinvoke $r3.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r1)
		Method: <com.tuya.sdk.security.EncryptionManager: com.tuya.sdk.security.EncryptionManager$bdpdqbp pdqppqb(byte[],byte[])>
		SHA-256: b8d40b06214de4ebff738eb034196282dcb50cfa1b54919799c8f6e7129aa4e9
		Secure: false
	Object:
		Variable: r0
		Type: com.tuya.bouncycastle.jce.spec.ECNamedCurveSpec
		Statement: specialinvoke r0.<java.security.spec.ECParameterSpec: void <init>(java.security.spec.EllipticCurve,java.security.spec.ECPoint,java.math.BigInteger,int)>($r2, $r3, $r4, $i0)
		Method: <com.tuya.bouncycastle.jce.spec.ECNamedCurveSpec: void <init>(java.lang.String,java.security.spec.EllipticCurve,java.security.spec.ECPoint,java.math.BigInteger,java.math.BigInteger)>
		SHA-256: b36d50207c12d926e435b859cb9848007d52f50b2e62c847e597de1f84f657c6
		Secure: true
	Object:
		Variable: $r12
		Type: javax.crypto.spec.IvParameterSpec
		Statement: specialinvoke $r12.<javax.crypto.spec.IvParameterSpec: void <init>(byte[])>($r8)
		Method: <com.tuya.smart.android.thirdparty.duck.DuckTool: java.lang.String catchDuck(android.content.Context,java.lang.String,java.lang.String,long)>
		SHA-256: 6678118fe9f8f2e30d0cfc8eb44cffd95e8491e901de7fc65a04056638d1d311
		Secure: false
	Object:
		Variable: $r4
		Type: java.security.PublicKey
		Statement: $r4 = virtualinvoke $r2.<java.security.KeyFactory: java.security.PublicKey generatePublic(java.security.spec.KeySpec)>($r0)
		Method: <com.tuya.smart.gzlminiapp.core.utils.c: java.security.PublicKey d(java.lang.String)>
		SHA-256: d26d48cafe8492ff3d9f5bd096301b31205244f9b070f53b06e17bd9ba18848f
		Secure: false
	Object:
		Variable: $r5
		Type: byte[]
		Statement: $r5 = virtualinvoke $r4.<java.security.MessageDigest: byte[] digest(byte[])>($r5)
		Method: <com.google.firebase.messaging.i: java.lang.String c()>
		SHA-256: 850815416ad78fb5ceda7e336d401d1440207f9cbdfc8539b9ae74d0deb56d32
		Secure: false
	Object:
		Variable: $r12
		Type: java.security.KeyPair
		Statement: specialinvoke $r12.<java.security.KeyPair: void <init>(java.security.PublicKey,java.security.PrivateKey)>($r9, $r13)
		Method: <com.tuya.bouncycastle.jcajce.provider.asymmetric.ec.KeyPairGeneratorSpi$EC: java.security.KeyPair generateKeyPair()>
		SHA-256: c9e1ff5450f21aae65af053d6ed29f81c5a7b267991078defbfa3059af0e266a
		Secure: false
	Object:
		Variable: $r0
		Type: javax.crypto.spec.SecretKeySpec
		Statement: specialinvoke $r0.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r4, $r2)
		Method: <com.tuya.smart.camera.utils.m: byte[] a(byte[],java.lang.String)>
		SHA-256: c6811bf1a148e82234d1ba7de7aa3f05bbab43d9594f7f6ef97e01eedcfc65eb
		Secure: false
	Object:
		Variable: $r3
		Type: byte[]
		Statement: $r3 = virtualinvoke $r2.<java.security.MessageDigest: byte[] digest()>()
		Method: <com.tuya.smart.android.common.utils.MD5: java.lang.String md5(java.lang.String)>
		SHA-256: 7c868d91021c90edf508a141465f67da16f97ad4be5f2784af06d7c773bb2719
		Secure: false
	Object:
		Variable: $r3
		Type: byte[]
		Statement: $r3 = virtualinvoke $r6.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r3)
		Method: <com.tuya.smart.camera.utils.a: byte[] a(java.lang.String,javax.crypto.SecretKey,javax.crypto.spec.IvParameterSpec,byte[])>
		SHA-256: 36ccaffd5df31af12c6519920ab1cc93c8763b7b3de943b0e4737a6f5039543
		Secure: false
	Object:
		Variable: $r10
		Type: java.security.SecureRandom
		Statement: specialinvoke $r10.<java.security.SecureRandom: void <init>()>()
		Method: <com.tuya.sdk.security.EncryptionManager: boolean pbbppqb(byte[])>
		SHA-256: 433f14a5c55ce3f39c355be5c09036611e9e8c2775cc01132dcc0ba16e1db558
		Secure: true
	Object:
		Variable: $r1
		Type: java.security.MessageDigest
		Statement: $r1 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer3127159)
		Method: <com.tuya.smart.android.common.utils.SHA256Util: java.lang.String getBase64Hash(java.lang.String)>
		SHA-256: 254509297d8f969db09e9f6fc26bfe201212bd83cc0f0b80750c49b84b7ec7e9
		Secure: true
	Object:
		Variable: $r1
		Type: java.security.SecureRandom
		Statement: specialinvoke $r1.<java.security.SecureRandom: void <init>()>()
		Method: <com.amazon.identity.auth.device.datastore.AESEncryptor: byte[] generateIV()>
		SHA-256: 7c00cd004b10ab3184e4d469aef502c67f36cf8706abde9f4516decd81b7f017
		Secure: true
	Object:
		Variable: $r5
		Type: javax.crypto.Cipher
		Statement: $r5 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer62683)
		Method: <com.tuya.smart.android.network.util.AESCTRUtil: java.lang.String decrypt(byte[],java.lang.String)>
		SHA-256: c5078d69e0f5e349b78155cb16d257890a2306439baba699255e2f85911d8aa0
		Secure: false
	Object:
		Variable: $r0
		Type: byte[]
		Statement: $r0 = virtualinvoke $r1.<java.security.MessageDigest: byte[] digest(byte[])>($r0)
		Method: <com.tuya.sdk.bluetooth.bpqddqq: byte[] bdpdqbp(byte[])>
		SHA-256: 5ecfdde04caa8c86fdbcb1dfa3be4ab2d8e53decec1b400e9071c91921a3c755
		Secure: false
	Object:
		Variable: $r5
		Type: javax.crypto.Cipher
		Statement: $r5 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer1841907)
		Method: <com.tuya.sdk.bluetooth.bbddqbq: byte[] pdqppqb(byte[],byte[],byte[])>
		SHA-256: 322d971503b3ceaa21a9e0ca25ec405b422e5b65fdb0bdf66b597cf999a3234c
		Secure: false
	Object:
		Variable: $r25
		Type: javax.net.ssl.TrustManager[]
		Statement: $r25 = virtualinvoke $r24.<javax.net.ssl.TrustManagerFactory: javax.net.ssl.TrustManager[] getTrustManagers()>()
		Method: <com.tuya.smart.mqttclient.mqttv3.internal.security.SSLSocketFactoryFactory: javax.net.ssl.SSLContext getSSLContext(java.lang.String)>
		SHA-256: 4845d370b2525dcea0df759ea58084eaf3dcb6fdbc3f0bf5f8bd3b0be6f2613e
		Secure: false
	Object:
		Variable: $r7
		Type: javax.crypto.spec.SecretKeySpec
		Statement: specialinvoke $r7.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r6, $r3)
		Method: <io.jsonwebtoken.SigningKeyResolverAdapter: java.security.Key resolveSigningKey(io.jsonwebtoken.JwsHeader,io.jsonwebtoken.Claims)>
		SHA-256: bdb6f7a9c8f1c1c52d0737870cbdedd68c6fe43cff656237a219138df2ee6a4d
		Secure: false
	Object:
		Variable: varReplacer1577053
		Type: java.lang.String
		Statement: specialinvoke $r8.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r9, varReplacer1577053)
		Method: <ki: ki$a b(android.content.Context)>
		SHA-256: 554e298a1ec26be39834d03b09d05c872be2702ae7ebf946e644d9d636ee1002
		Secure: false
	Object:
		Variable: $r0
		Type: java.security.SecureRandom
		Statement: specialinvoke $r0.<java.security.SecureRandom: void <init>()>()
		Method: <com.tuya.smart.camera.utils.a: java.lang.String b()>
		SHA-256: d70bbec740c21fcf3a4782571db424a1867ce6766b07594df8a77d108df5fc08
		Secure: true
	Object:
		Variable: $r16
		Type: javax.net.ssl.KeyManagerFactory
		Statement: $r16 = staticinvoke <javax.net.ssl.KeyManagerFactory: javax.net.ssl.KeyManagerFactory getInstance(java.lang.String,java.lang.String)>($r11, $r12)
		Method: <com.tuya.smart.mqttclient.mqttv3.internal.security.SSLSocketFactoryFactory: javax.net.ssl.SSLContext getSSLContext(java.lang.String)>
		SHA-256: 51438369a357067707332506854fc20b41f55bae36aefc78dabd79b339ad0ac5
		Secure: false
	Object:
		Variable: $r2
		Type: byte[]
		Statement: $r2 = virtualinvoke $r3.<java.security.MessageDigest: byte[] digest(byte[])>($r2)
		Method: <cy: java.lang.String a(java.security.PublicKey)>
		SHA-256: 690c842e3789398c38cebcba2a98fca5bbe4f71cfa18f2a5904d5388f2d67e8b
		Secure: false
	Object:
		Variable: $r0
		Type: byte[]
		Statement: $r0 = virtualinvoke $r1.<java.security.MessageDigest: byte[] digest()>()
		Method: <com.facebook.common.util.SecureHashUtil: java.lang.String makeSHA1HashBase64(byte[])>
		SHA-256: c6bb4832d15267321b64294e36949b1fc4731b855443ce4eba77a8ad3eaece90
		Secure: false
	Object:
		Variable: $r4
		Type: javax.crypto.Cipher
		Statement: $r4 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>($r3)
		Method: <com.tuya.smart.android.common.utils.AESUtil: java.lang.String encrypt(java.lang.String)>
		SHA-256: 1053fd1204fd79e79f1988d177e7dfe5968736074acfe778afed99fad39bfaa6
		Secure: false
	Object:
		Variable: $r3
		Type: java.security.SecureRandom
		Statement: specialinvoke $r3.<java.security.SecureRandom: void <init>()>()
		Method: <com.tuya.smart.activator.panel.search.sub.search.a: android.graphics.Rect f()>
		SHA-256: 8fa6c45c2c57fff81a1e4a6f8aef92b2a91406ef1a15d9dcfd8e6ad1a1e36414
		Secure: true
	Object:
		Variable: $r9
		Type: byte[]
		Statement: $r9 = virtualinvoke $r13.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r11)
		Method: <com.tuya.smart.camera.utils.o: java.lang.String a(android.content.Context,java.lang.String,java.lang.String,boolean)>
		SHA-256: 34829fc3affc7177e23af868498f45208a26363bce82672d25839f68faec971a
		Secure: false
	Object:
		Variable: $r11
		Type: byte[]
		Statement: $r9 = virtualinvoke $r13.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r11)
		Method: <com.tuya.smart.camera.utils.o: java.lang.String a(android.content.Context,java.lang.String,java.lang.String,boolean)>
		SHA-256: 41ea5aae06979ff9eca06feebff32ecb05a09db87596b94d02ef7a6a38f3e40d
		Secure: false
	Object:
		Variable: $r13
		Type: javax.crypto.Cipher
		Statement: $r13 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer2710680)
		Method: <com.tuya.smart.camera.utils.o: java.lang.String a(android.content.Context,java.lang.String,java.lang.String,boolean)>
		SHA-256: e6b2ef8598dcc5660e6c8b98b47333c397c8b8824cc395b1aae76a6ea9d56d17
		Secure: false
	Object:
		Variable: $r17
		Type: javax.net.ssl.KeyManager[]
		Statement: $r17 = virtualinvoke $r16.<javax.net.ssl.KeyManagerFactory: javax.net.ssl.KeyManager[] getKeyManagers()>()
		Method: <com.tuya.smart.mqttclient.mqttv3.internal.security.SSLSocketFactoryFactory: javax.net.ssl.SSLContext getSSLContext(java.lang.String)>
		SHA-256: cd0e3b76762bcc893e3b8c71b838de88e9ec2eaaec5c03709c5f4ebb7add121e
		Secure: false
	Object:
		Variable: $r6
		Type: java.lang.String
		Statement: specialinvoke $r4.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r5, $r6)
		Method: <nn: java.io.InputStream a(okhttp3.ResponseBody)>
		SHA-256: ff5937b95f46a0f079cad3a8891098d428ac03c59ff05aa6e875b4f8b6ff9d77
		Secure: false
	Object:
		Variable: $r3
		Type: java.security.MessageDigest
		Statement: $r3 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer300719)
		Method: <com.tuya.fetch.h: java.lang.String a(java.lang.String)>
		SHA-256: 27bfb6a26c99183f3e9e5c9ce6b6f859421350ac9b281ce1a51b6185011f320c
		Secure: false
	Object:
		Variable: $r7
		Type: java.security.MessageDigest
		Statement: $r7 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>($r2)
		Method: <com.tuya.fetch.e: void b(java.lang.String,java.lang.String,com.facebook.react.bridge.Promise)>
		SHA-256: 3d4aebdf86c4478df7780bbd70dbb7473ec6166bac0d0df64886745427ee3065
		Secure: true
	Object:
		Variable: $r11
		Type: javax.net.ssl.TrustManagerFactory
		Statement: $r11 = staticinvoke <javax.net.ssl.TrustManagerFactory: javax.net.ssl.TrustManagerFactory getInstance(java.lang.String)>($r4)
		Method: <com.tuya.smart.alexa.speech.connect.d: javax.net.ssl.X509TrustManager a(java.io.InputStream)>
		SHA-256: b489d2a86f13acd1b511f9ea8ddf119488263a8a62861db1cd230e1235753b68
		Secure: false
	Object:
		Variable: $r1
		Type: java.security.SecureRandom
		Statement: specialinvoke $r1.<java.security.SecureRandom: void <init>()>()
		Method: <com.tuya.smart.android.network.http.dns.manager.TuyaDnsManager: java.lang.String lookupAndSelectOneWithRandom(java.lang.String)>
		SHA-256: 6c54f977d204b658883d35df4de7f9710e8ff85d93320819eb5ba59719f28fd2
		Secure: true
	Object:
		Variable: varReplacer4367434
		Type: java.lang.String
		Statement: $r5 = staticinvoke <java.security.KeyFactory: java.security.KeyFactory getInstance(java.lang.String)>(varReplacer4367434)
		Method: <kq: java.security.interfaces.ECPublicKey a(com.linecorp.linesdk.internal.g$b)>
		SHA-256: 28d8a007f6e79a8d5833736ed112eb540d023b6a7c94ecfe94aec5c16beb99bf
		Secure: false
	Object:
		Variable: $r5
		Type: byte[]
		Statement: $r5 = virtualinvoke $r4.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r5)
		Method: <com.tuya.smart.android.common.utils.AESUtil: java.lang.String encryptWithBase64(java.lang.String)>
		SHA-256: 6b3a816b91c2146936fbeb8b29e0cc95d740fc3c2d7f792156d1f2b23b9aa11a
		Secure: false
	Object:
		Variable: $r5
		Type: java.security.KeyPairGenerator
		Statement: $r5 = staticinvoke <java.security.KeyPairGenerator: java.security.KeyPairGenerator getInstance(java.lang.String,java.lang.String)>(varReplacer3262885, varReplacer3262886)
		Method: <com.tuya.sdk.security.EncryptionManager: boolean bdpdqbp(android.content.Context,byte[])>
		SHA-256: 1136227a00cae2813901e1d07623293788fee33949336bc2d42aeab82b5192e5
		Secure: false
	Object:
		Variable: $r1
		Type: java.lang.String
		Statement: specialinvoke $r0.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r5, $r1)
		Method: <and: java.lang.String a(java.lang.String,java.lang.String)>
		SHA-256: eddb00662155898515927338a44411dfaabbf1713c616db43429ed040ff8d80a
		Secure: false
	Object:
		Variable: $r10
		Type: javax.crypto.spec.SecretKeySpec
		Statement: specialinvoke $r10.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r1, varReplacer343817)
		Method: <com.tuya.smart.camera.uiview.utils.EncryptUtils: javax.crypto.Cipher initAESCipher(byte[],java.lang.String,int)>
		SHA-256: 398e3c795077d3750b75fcf65fc9d768198735f0054b97925de734570a95ba1d
		Secure: false
	Object:
		Variable: $r10
		Type: javax.crypto.spec.SecretKeySpec
		Statement: specialinvoke $r10.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r1, varReplacer1725508)
		Method: <cqp: javax.crypto.Cipher a(byte[],java.lang.String,int)>
		SHA-256: 72d6284a77fd0998411fe327d7007cc866fdb811af4767af0003713d1f542ac
		Secure: false
	Object:
		Variable: $r4
		Type: byte[]
		Statement: $r4 = virtualinvoke $r3.<java.security.MessageDigest: byte[] digest()>()
		Method: <com.tuya.fetch.h: java.lang.String a(java.lang.String)>
		SHA-256: 6e09c281adbf0de17425889e7a1175feb0ea8d3ec1464572dd313fd8616deea
		Secure: false
	Object:
		Variable: $r9
		Type: javax.crypto.spec.GCMParameterSpec
		Statement: specialinvoke $r9.<javax.crypto.spec.GCMParameterSpec: void <init>(int,byte[])>(varReplacer3075387, $r4)
		Method: <com.tuya.smart.android.common.utils.AesGcmUtil: byte[] decryptBytes2Bytes(byte[],byte[],byte[],byte[])>
		SHA-256: 9e24404552871eb74565abf2362e91ed1683ab46da57a17b70a32ad864eb3c2f
		Secure: false
	Object:
		Variable: $r9
		Type: byte[]
		Statement: $r9 = virtualinvoke $r7.<java.security.MessageDigest: byte[] digest()>()
		Method: <com.tuya.fetch.e: void b(java.lang.String,java.lang.String,com.facebook.react.bridge.Promise)>
		SHA-256: f6a33e956fa04741c016e05d3e0e7d2697537c1949bfb416011e6e8d04d277a4
		Secure: true
	Object:
		Variable: $r6
		Type: javax.crypto.SecretKey
		Statement: $r6 = virtualinvoke $r2.<javax.crypto.KeyGenerator: javax.crypto.SecretKey generateKey()>()
		Method: <aeo: javax.crypto.SecretKey d(java.lang.String)>
		SHA-256: ba335100b5d8029ba97812b397b6729cb3bd0ca6854f749ac8a5f64b41561641
		Secure: true
	Object:
		Variable: $r4
		Type: java.security.MessageDigest
		Statement: $r4 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>($r2)
		Method: <com.tuya.smart.gzlminiapp.core.utils.c: java.lang.String a(java.lang.String,java.lang.String)>
		SHA-256: da54027bbf4cf656440b7ba6707fd59f453899f475c524d2a0e6c4db9079962d
		Secure: true
	Object:
		Variable: $r1
		Type: javax.crypto.spec.IvParameterSpec
		Statement: specialinvoke $r1.<javax.crypto.spec.IvParameterSpec: void <init>(byte[])>($r3)
		Method: <com.tuya.sdk.bluetooth.pdpbbpd: byte[] pdqppqb(byte[],byte[],byte[])>
		SHA-256: e08c0c54338e89198ace7ad64a6e9293bbccb45427c572bea49e0f1dd163f87b
		Secure: false
	Object:
		Variable: $r7
		Type: javax.crypto.Cipher
		Statement: $r7 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>($r6)
		Method: <nn: java.io.InputStream a(okhttp3.ResponseBody)>
		SHA-256: 18dbb14bd8bf67d76dfab5af524c7c4e200483163056a857cfd9d684f1f5285e
		Secure: false
	Object:
		Variable: $r3
		Type: java.security.SecureRandom
		Statement: specialinvoke $r3.<java.security.SecureRandom: void <init>()>()
		Method: <bwc: void b()>
		SHA-256: 294426888821571189d6455018c93c0f8a0915cad6b03f4ec619b2d3bd32f431
		Secure: true
	Object:
		Variable: $r10
		Type: javax.crypto.spec.IvParameterSpec
		Statement: specialinvoke $r10.<javax.crypto.spec.IvParameterSpec: void <init>(byte[],int,int)>($r4, varReplacer4406702, varReplacer4406703)
		Method: <ki: java.lang.String b(android.content.Context,java.lang.String)>
		SHA-256: 7c52d647e34609d2a549dc1207bc9d3bb64cda51a815a132dfa0c1e4ee9f4ea1
		Secure: false
	Object:
		Variable: $r3
		Type: java.security.SecureRandom
		Statement: specialinvoke $r3.<java.security.SecureRandom: void <init>()>()
		Method: <com.tuya.smart.pushcenter.view.NotificationHelper: androidx.core.app.NotificationCompat$d getNotificationCampt(com.tuya.smart.pushcenter.meta.CommonMeta)>
		SHA-256: 6ac82cbdab69df8726f4680485231f53e0ccde7ee33cb42895f8d5af14072314
		Secure: true
	Object:
		Variable: $r5
		Type: java.security.SecureRandom
		Statement: specialinvoke $r5.<java.security.SecureRandom: void <init>()>()
		Method: <com.tuya.sdk.security.EncryptionManager: boolean bdpdqbp(android.content.SharedPreferences,byte[])>
		SHA-256: b7a3d75daccd7910b76719cd8d80a30b53c23fdf26e42c85667b45a3ec772d55
		Secure: true
	Object:
		Variable: $r3
		Type: java.security.MessageDigest
		Statement: $r3 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer3830167)
		Method: <cy: java.lang.String a(java.security.PublicKey)>
		SHA-256: 3a2738147a120222043cd745c0b8676512deeff80945d6db9ed74c829435098a
		Secure: false
	Object:
		Variable: $r4
		Type: javax.crypto.Cipher
		Statement: $r4 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>($r3)
		Method: <com.tuya.smart.android.common.utils.AESUtil: java.lang.String decrypt(byte[])>
		SHA-256: d20a17eedf9d76fdc72dd37c023530af2c2764050615a9f141cf62f05b85cd92
		Secure: false
	Object:
		Variable: $r5
		Type: javax.net.ssl.SSLContext
		Statement: $r5 = staticinvoke <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String)>(varReplacer2422033)
		Method: <okhttp3.internal.platform.Platform: javax.net.ssl.SSLContext getSSLContext()>
		SHA-256: d78b42784a0d106237a0843129a1cd9de3b97e1f75cda5cee463794ced82ae80
		Secure: false
	Object:
		Variable: $r4
		Type: javax.net.ssl.TrustManagerFactory
		Statement: $r4 = staticinvoke <javax.net.ssl.TrustManagerFactory: javax.net.ssl.TrustManagerFactory getInstance(java.lang.String)>($r3)
		Method: <com.tuya.tyutils.tyfiledownloader.a: javax.net.ssl.X509TrustManager c()>
		SHA-256: 23263a8e5031af50676a98e6519b270d6c8dfdb1bb6c8c9367bad43efbe3024a
		Secure: false
	Object:
		Variable: $r0
		Type: byte[]
		Statement: virtualinvoke $r5.<javax.crypto.Cipher: int doFinal(byte[],int,int,byte[],int)>($r0, $i0, $i1, $r1, $i4)
		Method: <com.tuya.smart.android.common.utils.RSAUtil: byte[] encrypt(java.lang.String,java.security.PublicKey,byte[])>
		SHA-256: 44c92747f6a0b599c9aa56980ed7070d7c1a23293ced2614ec545eeadd308f65
		Secure: false
	Object:
		Variable: $r4
		Type: java.security.SecureRandom
		Statement: specialinvoke $r4.<java.security.SecureRandom: void <init>()>()
		Method: <com.tuya.sdk.bluetooth.pbpqbdq$pbbppqb: void bdpdqbp(com.tuya.smart.android.network.http.BusinessResponse,java.lang.Integer,java.lang.String)>
		SHA-256: 275fefad09b27ed8d75719ee188f477fd2b400ce422fed3858ffc338d9b91a5d
		Secure: true
	Object:
		Variable: $r2
		Type: byte[]
		Statement: $r2 = virtualinvoke $r5.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r0)
		Method: <com.tuya.sdk.bluetooth.pdpbbpd: byte[] pdqppqb(byte[],byte[],byte[])>
		SHA-256: 1b02be6941f18a4e374fe60aef7c500e1d9db198d5d40138755b7cb85a8a7ded
		Secure: false
	Object:
		Variable: $r3
		Type: byte[]
		Statement: $z0 = virtualinvoke $r4.<java.security.Signature: boolean verify(byte[])>($r3)
		Method: <com.amazon.identity.auth.device.utils.JWTDecoder: boolean verifySignatureWithRsaSha256(byte[],byte[],java.security.cert.Certificate)>
		SHA-256: 41535d5c7884cc801d4fe3bc05ce7d86d5f1d63f93bba4c24ac263f1f60bf050
		Secure: true
	Object:
		Variable: $r6
		Type: javax.crypto.Mac
		Statement: $r6 = staticinvoke <javax.crypto.Mac: javax.crypto.Mac getInstance(java.lang.String)>(varReplacer2324555)
		Method: <dgc: java.lang.String a(java.lang.String,java.lang.String)>
		SHA-256: bcabf16a342615ccfae5aa674d6ec6246e626a7042e8fa1a87007f5ecfe82f3c
		Secure: false
	Object:
		Variable: $r1
		Type: java.lang.String
		Statement: $r3 = staticinvoke <java.security.KeyFactory: java.security.KeyFactory getInstance(java.lang.String)>($r1)
		Method: <com.tuya.smart.android.common.utils.RSAUtil: java.security.interfaces.RSAPublicKey generateRSAPublicKey(java.lang.String,java.math.BigInteger,java.math.BigInteger)>
		SHA-256: a980fbed0fc2c6bee5aab6d539980b146dbcbfc07039111d6643775170472c91
		Secure: false
	Object:
		Variable: $r2
		Type: javax.net.ssl.TrustManager[]
		Statement: $r2 = virtualinvoke $r1.<javax.net.ssl.TrustManagerFactory: javax.net.ssl.TrustManager[] getTrustManagers()>()
		Method: <okhttp3.internal.Util: javax.net.ssl.X509TrustManager platformTrustManager()>
		SHA-256: dea0af93b06734ae35228a014521e6e031131dd2b357359826afa61f9a6de1b
		Secure: false
	Object:
		Variable: $r14
		Type: java.security.KeyStore
		Statement: $r14 = staticinvoke <java.security.KeyStore: java.security.KeyStore getInstance(java.lang.String)>($r9)
		Method: <com.tuya.smart.mqttclient.mqttv3.internal.security.SSLSocketFactoryFactory: javax.net.ssl.SSLContext getSSLContext(java.lang.String)>
		SHA-256: 5149894d05ef20df222d58c4a033421d6302e35e69a14f445f906bc16807ea17
		Secure: false
	Object:
		Variable: $r10
		Type: javax.crypto.spec.SecretKeySpec
		Statement: specialinvoke $r10.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r1, varReplacer1725390)
		Method: <com: javax.crypto.Cipher a(byte[],java.lang.String,int)>
		SHA-256: a6f450fcba43822eb52a455bef33556f38e716206958c40de174970e180ba994
		Secure: false
	Object:
		Variable: $r8
		Type: java.security.KeyStore
		Statement: $r8 = staticinvoke <java.security.KeyStore: java.security.KeyStore getInstance(java.lang.String)>($r7)
		Method: <com.tuya.smart.android.network.TuyaSmartNetWork: javax.net.ssl.X509TrustManager h2TrustManager()>
		SHA-256: aba099e1dacd96b308fe8fae37064e5554f28cc2a1daa23ea968de32eb910358
		Secure: true
	Object:
		Variable: $r4
		Type: java.security.spec.X509EncodedKeySpec
		Statement: specialinvoke $r4.<java.security.spec.X509EncodedKeySpec: void <init>(byte[])>($r3)
		Method: <com.tuya.smart.gzlminiapp.core.utils.c: boolean a(java.lang.String,java.security.PublicKey,java.lang.String)>
		SHA-256: 578cfcf0fbf7aee6db40eb255bc3cdb12ea119710843dd3ceb1d6629d06f66a
		Secure: false
	Object:
		Variable: $r7
		Type: javax.crypto.spec.SecretKeySpec
		Statement: specialinvoke $r7.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r3, varReplacer3075372)
		Method: <com.tuya.smart.android.common.utils.AesGcmUtil: byte[] decryptBytes2Bytes(byte[],byte[],byte[],byte[])>
		SHA-256: 52ff8e556eb65949b5cffcca382b0fdc81865aab4e2665bc4742ccf668108567
		Secure: false
	Object:
		Variable: $r5
		Type: byte[]
		Statement: $r5 = virtualinvoke $r3.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r5)
		Method: <add: java.lang.String a(java.lang.String,java.lang.String)>
		SHA-256: e1989b7273857b3ff1d3c5268c2de1c40fefc43a77e21a3097026af6a693fda7
		Secure: false
	Object:
		Variable: $r1
		Type: byte[]
		Statement: $r1 = virtualinvoke $r2.<java.security.MessageDigest: byte[] digest(byte[])>($r1)
		Method: <com.tuya.sdk.bluetooth.bddqdbd: byte[] bdpdqbp(byte[])>
		SHA-256: 351916797c8109831a1a5f5ae1ec0213610b958762149747eac4098f0ceafb12
		Secure: false
	Object:
		Variable: $r3
		Type: java.security.Signature
		Statement: $r3 = staticinvoke <java.security.Signature: java.security.Signature getInstance(java.lang.String)>($r2)
		Method: <io.jsonwebtoken.impl.crypto.SignatureProvider: java.security.Signature getSignatureInstance()>
		SHA-256: 5245505faa1caa67a21a8f77bf7afcdbd914eeb8cbdcc06c6e02f21254765066
		Secure: false
	Object:
		Variable: $r3
		Type: javax.net.ssl.SSLContext
		Statement: $r3 = staticinvoke <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String)>(varReplacer2422101)
		Method: <okhttp3.internal.platform.AndroidPlatform: javax.net.ssl.SSLContext getSSLContext()>
		SHA-256: 17c1b4865649bf857067d0b5212c734290dce5c284c9443c854cd88adf8fc228
		Secure: false
	Object:
		Variable: varReplacer2312989
		Type: java.lang.String
		Statement: specialinvoke $r23.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r12, varReplacer2312989)
		Method: <afk: java.io.File a(android.content.Context,java.io.File,java.lang.String)>
		SHA-256: b41193f3187aceefcd7a047472e345d69ccb9b97569700a7c278018a13d11f5c
		Secure: false
	Object:
		Variable: $r4
		Type: javax.crypto.Cipher
		Statement: $r4 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>($r3)
		Method: <com.tuya.smart.android.common.utils.AESUtil: java.lang.String decrypt(java.lang.String)>
		SHA-256: d20a17eedf9d76fdc72dd37c023530af2c2764050615a9f141cf62f05b85cd92
		Secure: false
	Object:
		Variable: $r3
		Type: java.security.KeyFactory
		Statement: $r3 = staticinvoke <java.security.KeyFactory: java.security.KeyFactory getInstance(java.lang.String)>($r1)
		Method: <com.tuya.smart.android.common.utils.RSAUtil: java.security.interfaces.RSAPublicKey generateRSAPublicKey(java.lang.String,java.math.BigInteger,java.math.BigInteger)>
		SHA-256: 549563551235d714dee2d7da623a7b4ed9fe49a0d858fb2d0a887237050b2ca
		Secure: false
	Object:
		Variable: $r3
		Type: javax.net.ssl.TrustManager[]
		Statement: $r3 = virtualinvoke $r2.<javax.net.ssl.TrustManagerFactory: javax.net.ssl.TrustManager[] getTrustManagers()>()
		Method: <com.tuya.smart.android.network.TuyaSmartNetWork: javax.net.ssl.X509TrustManager systemDefaultTrustManager()>
		SHA-256: f714ecb4c22f0d900edb3df5ecfb6f92f6a74e5e49d094dc5ab47fe7f45074e3
		Secure: false
	Object:
		Variable: $r10
		Type: javax.net.ssl.TrustManager[]
		Statement: $r10 = virtualinvoke $r9.<javax.net.ssl.TrustManagerFactory: javax.net.ssl.TrustManager[] getTrustManagers()>()
		Method: <com.tuya.smart.android.network.TuyaSmartNetWork: javax.net.ssl.X509TrustManager h2TrustManager()>
		SHA-256: 8c6bd9509c6ae062a27f6ec1fccd606580c3b5ef31ef76a6db3f5c5e6aeebf5d
		Secure: true
	Object:
		Variable: $r3
		Type: javax.crypto.spec.GCMParameterSpec
		Statement: specialinvoke $r3.<javax.crypto.spec.GCMParameterSpec: void <init>(int,byte[])>(varReplacer3617503, $r1)
		Method: <com.tuya.sdk.security.EncryptionManager: javax.crypto.Cipher bdpdqbp(byte[],boolean)>
		SHA-256: c26fb7849d1b6bb73a01e7f35884af602a4a6dc871929af2b1bc42a4bd0bec1
		Secure: true
	Object:
		Variable: $r4
		Type: java.security.SecureRandom
		Statement: specialinvoke $r4.<java.security.SecureRandom: void <init>()>()
		Method: <com.tuya.sdk.bluetooth.bdqqqdq: int getLocalDeviceAddress()>
		SHA-256: 29035b5277b3c732c6cdbe80a58a74541c037e53a90a07d4120a91a4e2874734
		Secure: true
	Object:
		Variable: varReplacer1005717
		Type: java.lang.String
		Statement: specialinvoke $r9.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r8, varReplacer1005717)
		Method: <com.tuya.smart.android.thirdparty.duck.DuckTool: java.lang.String catchDuck(android.content.Context,java.lang.String,java.lang.String,long)>
		SHA-256: 41521a2a7fcda1d6fbf622c1b9ce2b97e7a00e8320b917cc9926a87475bd5aa7
		Secure: false
	Object:
		Variable: $r9
		Type: javax.crypto.CipherInputStream
		Statement: specialinvoke $r9.<javax.crypto.CipherInputStream: void <init>(java.io.InputStream,javax.crypto.Cipher)>($r3, $r7)
		Method: <nn: java.io.InputStream a(okhttp3.ResponseBody)>
		SHA-256: bdeb9afd938edd0650b569b6e482a3ae5d748f84f3d2c750bff524746c326b8d
		Secure: false
	Object:
		Variable: $r3
		Type: java.security.MessageDigest
		Statement: $r3 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer362236)
		Method: <com.tuya.smart.android.common.utils.MD5Util: byte[] computeMD5Hash(java.io.InputStream)>
		SHA-256: 364d78e90e45f7b3a567206899fe54d8b0812f9afd59fef62a8ffef481170045
		Secure: false
	Object:
		Variable: $r3
		Type: java.security.MessageDigest
		Statement: $r3 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer1686730)
		Method: <cjd: java.lang.String a(java.io.File)>
		SHA-256: 5a2cbf0335fb13a7977b04bb81b4e70edcd95df9eae6a3d5236f43f09e4e6c0e
		Secure: false
	Object:
		Variable: $r3
		Type: byte[]
		Statement: $r3 = interfaceinvoke $r5.<javax.crypto.SecretKey: byte[] getEncoded()>()
		Method: <com.amazon.identity.auth.device.datastore.AESEncryptor: byte[] getEncryptionKey()>
		SHA-256: a5d1c5aa3b6449937a9fcc8db19e9a3eb4a0deb6c0ae1f24ce72b91bd95ea89
		Secure: true
	Object:
		Variable: varReplacer1725508
		Type: java.lang.String
		Statement: specialinvoke $r10.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r1, varReplacer1725508)
		Method: <cqp: javax.crypto.Cipher a(byte[],java.lang.String,int)>
		SHA-256: f3032e2301e2266a27a008a0faf3a82ffe7402f30197fc26e33c54f4e1c465ba
		Secure: false
	Object:
		Variable: $r4
		Type: javax.crypto.spec.SecretKeySpec
		Statement: specialinvoke $r4.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r2, varReplacer410129)
		Method: <com.tuya.sdk.bluetooth.pdpbbpd: byte[] bdpdqbp(byte[],byte[],byte[])>
		SHA-256: 3fd2abb523e1eddebe90e6e4a1ccc92baac5252700804fcf8c599c4791ad5497
		Secure: false
	Object:
		Variable: $r4
		Type: javax.crypto.KeyGenerator
		Statement: $r4 = staticinvoke <javax.crypto.KeyGenerator: javax.crypto.KeyGenerator getInstance(java.lang.String)>(varReplacer2169698)
		Method: <com.amazon.identity.auth.device.datastore.AESEncryptor: byte[] getEncryptionKey()>
		SHA-256: 6bb5d31288bbe170ec8fca9ca79841594e3b858e734a5145ab59bffb2cb082fb
		Secure: true
	Object:
		Variable: $r3
		Type: java.security.KeyFactory
		Statement: $r3 = staticinvoke <java.security.KeyFactory: java.security.KeyFactory getInstance(java.lang.String)>(varReplacer4027403)
		Method: <cy: java.security.PublicKey b(java.lang.String)>
		SHA-256: e352a840ab7aa53cc76db52562a676545eb6a322a8fc29cdab35242394e22240
		Secure: false
	Object:
		Variable: $r7
		Type: javax.net.ssl.SSLContext
		Statement: $r7 = staticinvoke <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String,java.lang.String)>($r4, $r3)
		Method: <com.tuya.smart.mqttclient.mqttv3.internal.security.SSLSocketFactoryFactory: javax.net.ssl.SSLContext getSSLContext(java.lang.String)>
		SHA-256: 2de0dbcb962ff3cb3e0d9dc8e9469638e8762c9aa5d9bef5cf875912fda1093
		Secure: false
	Object:
		Variable: $r18
		Type: javax.crypto.CipherOutputStream
		Statement: specialinvoke $r18.<javax.crypto.CipherOutputStream: void <init>(java.io.OutputStream,javax.crypto.Cipher)>($r5, $r7)
		Method: <cqp: java.io.File a(java.lang.String,java.io.InputStream,java.io.File)>
		SHA-256: 85df3e73abbd1cff414df03aca0d379712dd95ced4df6645eefc9c78087b6db2
		Secure: false
	Object:
		Variable: $r7
		Type: javax.net.ssl.SSLContext
		Statement: $r7 = staticinvoke <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String)>($r4)
		Method: <com.tuya.smart.mqttclient.mqttv3.internal.security.SSLSocketFactoryFactory: javax.net.ssl.SSLContext getSSLContext(java.lang.String)>
		SHA-256: faf8a006ee2bf18d70acac36e6184b973d313a1f622eaa10afaeb42c1349d99c
		Secure: false
	Object:
		Variable: $r14
		Type: java.security.SecureRandom
		Statement: specialinvoke $r14.<java.security.SecureRandom: void <init>()>()
		Method: <com.tuya.smart.scene.home.invalid.g: void b(com.tuya.smart.scene.model.NormalScene)>
		SHA-256: 70105fa4cf2769bef1f2c8f02c11d1e70237bea07ac5606189043d36f764f09c
		Secure: true
	Object:
		Variable: $r1
		Type: java.security.MessageDigest
		Statement: $r1 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer410317)
		Method: <com.tuya.sdk.bluetooth.bqpdbqq: byte[] bdpdqbp(byte[])>
		SHA-256: 4637c37cff9a10c499541ede716a8b4f7308096bf96736635a7b43b0d079600d
		Secure: false
	Object:
		Variable: $r1
		Type: byte[]
		Statement: virtualinvoke $r5.<javax.crypto.Cipher: int doFinal(byte[],int,int,byte[],int)>($r0, $i0, $i4, $r1, $i5)
		Method: <com.tuya.smart.android.common.utils.RSAUtil: byte[] encrypt(java.lang.String,java.security.PublicKey,byte[])>
		SHA-256: d5ed602673203c9d710938f34cd5df0268f6bceaab75a0aa59da084f4573d9c4
		Secure: false
	Object:
		Variable: $r2
		Type: byte[]
		Statement: virtualinvoke $r1.<java.security.SecureRandom: void nextBytes(byte[])>($r2)
		Method: <com.tuya.sdk.security.EncryptionManager: byte[] bdpdqbp()>
		SHA-256: 8fe38b5edfca2bdd75f22ce1b41200f7cecba955753dd103c990652a1696adbb
		Secure: true
	Object:
		Variable: $r1
		Type: java.security.SecureRandom
		Statement: specialinvoke $r1.<java.security.SecureRandom: void <init>()>()
		Method: <com.amazon.identity.auth.device.authorization.CodeChallengeWorkflow: byte[] generateRandomOctetSequence()>
		SHA-256: 2d0fd4b34da60ccfed89abfd1af899314e4cda6acfbc267f428a68a215054fa4
		Secure: true
	Object:
		Variable: $r3
		Type: java.security.MessageDigest
		Statement: $r3 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer3080876)
		Method: <dqz: java.lang.String b(java.lang.String)>
		SHA-256: 426b31b4663bcdc401e3e5b9c47a634683a677ae3dd6e685313083a157696495
		Secure: false
	Object:
		Variable: $r2
		Type: byte[]
		Statement: virtualinvoke $r1.<java.security.SecureRandom: void nextBytes(byte[])>($r2)
		Method: <com.amazon.identity.auth.device.authorization.CodeChallengeWorkflow: byte[] generateRandomOctetSequence()>
		SHA-256: 240dd916a460a17630357dbb548178936a0c1bd9e8f0486be1fbfc7d51132ee0
		Secure: true
	Object:
		Variable: $r1
		Type: javax.net.ssl.SSLContext
		Statement: $r1 = staticinvoke <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String)>(varReplacer2748130)
		Method: <com.facebook.react.modules.network.TLSSocketFactory: void <init>()>
		SHA-256: 6a5a1cbb3e1c42bd5abb0c689ff3de98811af36a1f862cc50886469a7a77d8c7
		Secure: false
	Object:
		Variable: $r1
		Type: java.security.SecureRandom
		Statement: specialinvoke $r1.<java.security.SecureRandom: void <init>()>()
		Method: <com.tuya.sdk.bluetooth.bdbqbpp: int bdpdqbp()>
		SHA-256: f9d03b53dae74fb7593fdf229700ad06aad1ca4d5d8ca6bb480d8c4209cf9d32
		Secure: true
	Object:
		Variable: $r18
		Type: javax.crypto.CipherOutputStream
		Statement: specialinvoke $r18.<javax.crypto.CipherOutputStream: void <init>(java.io.OutputStream,javax.crypto.Cipher)>($r5, $r7)
		Method: <com: java.io.File a(java.lang.String,java.io.InputStream,java.io.File)>
		SHA-256: d0257ee94da544cc478d7dfb4d8ed2ac845d55b3a4d5a6a5b345f0ecc7783a80
		Secure: false
	Object:
		Variable: $r5
		Type: byte[]
		Statement: $r5 = virtualinvoke $r4.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r5)
		Method: <com.tuya.smart.android.common.utils.AESUtil: java.lang.String decrypt(java.lang.String)>
		SHA-256: 1ae19e8e32e1a6337016be55b5f93ee04cb281820681fcd5a7d3394ac30f11db
		Secure: false
	Object:
		Variable: $r2
		Type: java.security.SecureRandom
		Statement: specialinvoke $r2.<java.security.SecureRandom: void <init>()>()
		Method: <com.tuya.smart.pushcenter.parser.Parse: void showNotify(android.content.Context,com.tuya.smart.pushcenter.meta.CommonMeta)>
		SHA-256: 36995d2189e02a77631dffed52a6b2eba85b9717769ea259353d98d8ffda5958
		Secure: true
	Object:
		Variable: $r3
		Type: byte[]
		Statement: $r3 = virtualinvoke $r1.<java.security.MessageDigest: byte[] digest(byte[])>($r3)
		Method: <com.tuya.smart.android.common.utils.SHA256Util: java.lang.String getBase64Hash(java.lang.String)>
		SHA-256: 4f1bd606e161aba288ddf034fa2e724b5c043289f48b6f410380dc3ab417ab2d
		Secure: true
	Object:
		Variable: $r4
		Type: java.security.Signature
		Statement: $r4 = staticinvoke <java.security.Signature: java.security.Signature getInstance(java.lang.String)>(varReplacer3059256)
		Method: <com.amazon.identity.auth.device.utils.JWTDecoder: boolean verifySignatureWithRsaSha256(byte[],byte[],java.security.cert.Certificate)>
		SHA-256: d91acd381d21d816a14c758ea1f51214a6d1c92fe54e81404c3da5f36c967a9
		Secure: true
	Object:
		Variable: $r3
		Type: javax.net.ssl.SSLContext
		Statement: $r3 = staticinvoke <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String)>(varReplacer4125789)
		Method: <com.tuyasmart.stencil.component.download.a: javax.net.ssl.SSLSocketFactory a(javax.net.ssl.X509TrustManager)>
		SHA-256: de78f2249a9416ff6f1b88a9c5ec7d54d14616b53752b7afa2f93a65407584dc
		Secure: false
	Object:
		Variable: $r0
		Type: byte[]
		Statement: $r2 = virtualinvoke $r5.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r0)
		Method: <com.tuya.sdk.bluetooth.pdpbbpd: byte[] bdpdqbp(byte[],byte[],byte[])>
		SHA-256: 6ed315bb23fc6b71b2d02c2e0fa3d290a2ebff3148ac4faf3c8960bec1c0a864
		Secure: false
	Object:
		Variable: $r2
		Type: java.security.MessageDigest
		Statement: $r2 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>($r1)
		Method: <okio.SegmentedByteString: okio.ByteString digest$jvm(java.lang.String)>
		SHA-256: ea9bd02bb32dbb2be26eca134efdb9d94c1e5921cb9abf4599d98facf22c83d6
		Secure: false
	Object:
		Variable: $r24
		Type: javax.net.ssl.TrustManagerFactory
		Statement: $r24 = staticinvoke <javax.net.ssl.TrustManagerFactory: javax.net.ssl.TrustManagerFactory getInstance(java.lang.String)>($r11)
		Method: <com.tuya.smart.mqttclient.mqttv3.internal.security.SSLSocketFactoryFactory: javax.net.ssl.SSLContext getSSLContext(java.lang.String)>
		SHA-256: 347ff217c58c2774000268375cf6ecf17ac33de018df1c83b23e61eaf9dfc2fb
		Secure: false
	Object:
		Variable: $r12
		Type: byte[]
		Statement: $r12 = virtualinvoke $r14.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r10)
		Method: <afk: java.io.File a(android.content.Context,java.io.File,java.lang.String)>
		SHA-256: d58033ccb3f0d0da9bad0b17a40ae01799faf1deebc856de13195edde2142a9c
		Secure: false
	Object:
		Variable: $r2
		Type: java.security.SecureRandom
		Statement: specialinvoke $r2.<java.security.SecureRandom: void <init>()>()
		Method: <com.tuya.bouncycastle.crypto.CryptoServicesRegistrar: java.security.SecureRandom getSecureRandom()>
		SHA-256: 375867338a8d572664475cac25bcfa294db8f2af8faff8d50836d5d6dcf8ab15
		Secure: true
	Object:
		Variable: $r2
		Type: java.security.KeyStore
		Statement: $r2 = staticinvoke <java.security.KeyStore: java.security.KeyStore getInstance(java.lang.String)>(varReplacer3588202)
		Method: <aeo: javax.crypto.SecretKey c(java.lang.String)>
		SHA-256: 7d7b505f2290771004fd82ea4d1e0cc35b78e92fdd52229ee95bd1a9af7aeac6
		Secure: false
	Object:
		Variable: $r4
		Type: byte[]
		Statement: virtualinvoke $r5.<java.security.SecureRandom: void nextBytes(byte[])>($r4)
		Method: <com.tuya.sdk.security.EncryptionManager: boolean pdqppqb(android.content.SharedPreferences,byte[])>
		SHA-256: e19c827351e61151339b7808fffe70b8a33da7224822638adbc3dbdc147c95f4
		Secure: true
	Object:
		Variable: $r2
		Type: byte[]
		Statement: $r2 = virtualinvoke $r1.<java.security.MessageDigest: byte[] digest(byte[])>($r2)
		Method: <com.tuya.sdk.security.EncryptionManager: java.lang.String pppbppp(java.lang.String)>
		SHA-256: da7a1208aaa668b733c85a21eae409ea8bfcd05f55ad7a1dc3a1e3a02cf0e898
		Secure: true
	Object:
		Variable: $r4
		Type: javax.crypto.spec.SecretKeySpec
		Statement: specialinvoke $r4.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r3, varReplacer3263102)
		Method: <com.tuya.sdk.security.EncryptionManager: javax.crypto.SecretKey pdqppqb(android.content.SharedPreferences)>
		SHA-256: 9575fb75d1842236c4737364d74cc5ab27fb1e943782b3fdfa2832abd63b34
		Secure: true
	Object:
		Variable: $r0
		Type: byte[]
		Statement: virtualinvoke $r1.<java.security.SecureRandom: void nextBytes(byte[])>($r0)
		Method: <com.amazon.identity.auth.device.datastore.AESEncryptor: byte[] generateIV()>
		SHA-256: b6c6e3be86ac5492774fec2ca988ffedc36a1b20186cead82d38de516c6b0f4b
		Secure: true
	Object:
		Variable: $r5
		Type: javax.net.ssl.TrustManager[]
		Statement: $r5 = virtualinvoke $r4.<javax.net.ssl.TrustManagerFactory: javax.net.ssl.TrustManager[] getTrustManagers()>()
		Method: <com.tuya.tyutils.tyfiledownloader.a: javax.net.ssl.X509TrustManager c()>
		SHA-256: df3492f12dd6bdebaf28a06599bc8d00e8d3d3950b7f62804db41161cce50aad
		Secure: false
	Object:
		Variable: $r3
		Type: javax.crypto.Cipher
		Statement: $r3 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>($r4)
		Method: <com.amazon.identity.auth.device.datastore.AESEncryptor: javax.crypto.Cipher createAESCipher(int,java.lang.String,java.security.spec.AlgorithmParameterSpec)>
		SHA-256: 9771baa305581276c5f1a5e0af5a72e1fcf4e34e7c98d244c07ae1e2ea1e9dc4
		Secure: false
	Object:
		Variable: varReplacer62680
		Type: java.lang.String
		Statement: specialinvoke $r4.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r0, varReplacer62680)
		Method: <com.tuya.smart.android.network.util.AESCTRUtil: java.lang.String decrypt(byte[],java.lang.String)>
		SHA-256: 20c3bec409ed54fe8970e77d17bbc23dc330e8796ba8595bee8b3c6665dca9ab
		Secure: false
	Object:
		Variable: $r1
		Type: java.security.MessageDigest
		Statement: $r1 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer4124706)
		Method: <com.tuya.smart.android.common.utils.SHA256Util: byte[] getHash(byte[])>
		SHA-256: ffcb886ffd464daa14387ee04e3cb769ea8db9e5a7ac842b40b59d22f310f18e
		Secure: true
	Object:
		Variable: $r2
		Type: java.security.MessageDigest
		Statement: $r2 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>($r1)
		Method: <com.tuyasmart.stencil.component.webview.util.c: byte[] a(byte[],java.lang.String)>
		SHA-256: 97652795f3c4092679b7762fe2e8a16ea58e8b9d1c1820b1afc99ae18fc739fe
		Secure: false
	Object:
		Variable: $r5
		Type: java.security.SecureRandom
		Statement: specialinvoke $r5.<java.security.SecureRandom: void <init>()>()
		Method: <mf: void a(long,java.io.File,com.tuya.device.base.info.interactor.repository.GroupInfoRepository$UploadGroupImgCallback)>
		SHA-256: 675f7d9349440c2bd81f78a27b886a1cf829baf4c54c81c52516156b2248b5c4
		Secure: true
	Object:
		Variable: $r3
		Type: javax.net.ssl.TrustManagerFactory
		Statement: $r3 = staticinvoke <javax.net.ssl.TrustManagerFactory: javax.net.ssl.TrustManagerFactory getInstance(java.lang.String)>($r2)
		Method: <com.tuya.fetch.g: okhttp3.OkHttpClient$Builder a(okhttp3.OkHttpClient$Builder)>
		SHA-256: 8402c99d1795c9893ea733c5d8f740abdcca401d7db6f7f0033734f00a68f7df
		Secure: false
	Object:
		Variable: $r3
		Type: javax.crypto.Mac
		Statement: $r3 = staticinvoke <javax.crypto.Mac: javax.crypto.Mac getInstance(java.lang.String)>(varReplacer1686027)
		Method: <com.tuya.smart.android.network.util.ECDHEngine: java.lang.String hmacSha256(byte[],byte[],boolean)>
		SHA-256: b9651710498e8de083b402adbc3096079018d4365e264a430dbe816218b764c4
		Secure: false
	Object:
		Variable: $r6
		Type: byte[]
		Statement: $r6 = virtualinvoke $r5.<java.security.MessageDigest: byte[] digest(byte[])>($r6)
		Method: <com.google.android.gms.common.zzm: java.lang.String zzc(boolean,java.lang.String,com.google.android.gms.common.zzi)>
		SHA-256: 32545d2a6e3a346329f62774c4cf40147b4b80d26df06d430d2ebe09bf733d90
		Secure: false
	Object:
		Variable: $r10
		Type: javax.crypto.Cipher
		Statement: $r10 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer335287)
		Method: <com.tuya.smart.camera.utils.o: android.graphics.Bitmap a(java.lang.String,java.lang.String)>
		SHA-256: 2b8cb0df318da2c886ad2c778f5b716a8d3bb86b4181c2ce98cf323088da3518
		Secure: false
	Object:
		Variable: $r28
		Type: java.security.SecureRandom
		Statement: specialinvoke $r28.<java.security.SecureRandom: void <init>()>()
		Method: <com.tuya.smart.scene.construct.extension.SceneExtensionInfoFragment$i: java.lang.Object invokeSuspend(java.lang.Object)>
		SHA-256: 879f9d69bfa6480bedc35430893bc07ff89888eab183492efb424d706e209aa4
		Secure: true
	Object:
		Variable: $r3
		Type: javax.crypto.spec.IvParameterSpec
		Statement: specialinvoke $r3.<javax.crypto.spec.IvParameterSpec: void <init>(byte[])>($r4)
		Method: <com.tuya.smart.android.network.util.AESCBCUtil: java.lang.String encrypt(byte[],java.lang.String,java.lang.String)>
		SHA-256: b9df9d738d1bd95e99a5840fc5cb2b30d747e00dcc1ab3d80effa14c57260034
		Secure: false
	Object:
		Variable: $r13
		Type: java.security.spec.ECParameterSpec
		Statement: specialinvoke $r13.<java.security.spec.ECParameterSpec: void <init>(java.security.spec.EllipticCurve,java.security.spec.ECPoint,java.math.BigInteger,int)>($r12, $r15, $r8, $i0)
		Method: <com.tuya.bouncycastle.jcajce.provider.asymmetric.ec.BCECPrivateKey: void <init>(java.lang.String,com.tuya.bouncycastle.crypto.params.ECPrivateKeyParameters,com.tuya.bouncycastle.jcajce.provider.asymmetric.ec.BCECPublicKey,com.tuya.bouncycastle.jce.spec.ECParameterSpec,com.tuya.bouncycastle.jcajce.provider.config.ProviderConfiguration)>
		SHA-256: 86df246b8c1578d3501a486e27f08db6d1aa41db6923499c742aa2e3fe110297
		Secure: true
	Object:
		Variable: $r11
		Type: javax.crypto.Cipher
		Statement: $r11 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer1005699)
		Method: <com.tuya.smart.android.thirdparty.duck.DuckTool: java.lang.String catchDuck(android.content.Context,java.lang.String,java.lang.String,long)>
		SHA-256: d4c1185520798bd3fe06bda0a6d3643905e51e70023d0b0376540c8fd46366d5
		Secure: false
	Object:
		Variable: $r16
		Type: javax.net.ssl.KeyManagerFactory
		Statement: $r16 = staticinvoke <javax.net.ssl.KeyManagerFactory: javax.net.ssl.KeyManagerFactory getInstance(java.lang.String)>($r11)
		Method: <com.tuya.smart.mqttclient.mqttv3.internal.security.SSLSocketFactoryFactory: javax.net.ssl.SSLContext getSSLContext(java.lang.String)>
		SHA-256: 3502fa758305a1dec42a6535b8ce8189f7707f9bdc917efceea97f5a2943e84d
		Secure: false
	Object:
		Variable: $r3
		Type: java.security.SecureRandom
		Statement: specialinvoke $r3.<java.security.SecureRandom: void <init>()>()
		Method: <com.tuya.smart.android.common.utils.PhoneUtil: java.lang.String generateRandomId()>
		SHA-256: 2420b27bf389373b96eb7f89fa4fea9691382d20dd771e9bf99fd500032a6a83
		Secure: true
	Object:
		Variable: $r15
		Type: java.security.SecureRandom
		Statement: specialinvoke $r15.<java.security.SecureRandom: void <init>()>()
		Method: <com.tuya.smart.scene.construct.detail.NormalSceneDetailViewModel: java.lang.Object b(kotlin.coroutines.Continuation)>
		SHA-256: 1b534673a597c4194db6a2e61e380c48ca407ac44f6ed846f5e87fcc65395862
		Secure: true
	Object:
		Variable: $r19
		Type: javax.crypto.CipherInputStream
		Statement: specialinvoke $r19.<javax.crypto.CipherInputStream: void <init>(java.io.InputStream,javax.crypto.Cipher)>($r7, $r10)
		Method: <com.tuya.smart.camera.uiview.utils.EncryptUtils: java.io.File encryptFile(java.lang.String,java.io.File,java.lang.String)>
		SHA-256: aa3812e3a9a1156004711d934e72933dbed9843e7de04982fd794def80fae1e2
		Secure: false
	Object:
		Variable: $r2
		Type: byte[]
		Statement: $r2 = virtualinvoke $r6.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r0)
		Method: <com.tuya.smart.android.common.utils.AesGcmUtil: byte[] encryptBytes2Bytes(byte[],byte[],byte[],byte[])>
		SHA-256: d54e212a3931a0d02e6d35927c1b1c0b6f13b3073ec8573fcdfa3f9002340099
		Secure: false
	Object:
		Variable: $r9
		Type: javax.crypto.spec.SecretKeySpec
		Statement: specialinvoke $r9.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r5, varReplacer2324560)
		Method: <dgc: java.lang.String a(java.lang.String,java.lang.String)>
		SHA-256: 406ad5fcb8f62574d2b9217f80a88db66643f78eb92056e082adddc7867251d5
		Secure: false
	Object:
		Variable: $r9
		Type: javax.net.ssl.TrustManagerFactory
		Statement: $r9 = staticinvoke <javax.net.ssl.TrustManagerFactory: javax.net.ssl.TrustManagerFactory getInstance(java.lang.String)>($r7)
		Method: <com.tuya.smart.android.network.TuyaSmartNetWork: javax.net.ssl.X509TrustManager h2TrustManager()>
		SHA-256: 3be9c50fb34ddc21896671bf06d1a1d73225f8fe1cb27f90f8c135591fb7bfe7
		Secure: true
	Object:
		Variable: $r4
		Type: byte[]
		Statement: $r4 = virtualinvoke $r3.<java.security.MessageDigest: byte[] digest(byte[])>($r4)
		Method: <dqz: java.lang.String b(java.lang.String)>
		SHA-256: 8d32eaf21ff067b1824165934f2030d0c8c390077f170c75b0c9ca56a81109a0
		Secure: false
	Object:
		Variable: $r1
		Type: java.security.MessageDigest
		Statement: $r1 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer1964603)
		Method: <com.tuya.smart.transferpeertopeer.b: byte[] a(byte[])>
		SHA-256: d2245b134b692c2c5d731d48f6b82d0232009fdd027b45c511faace57f2cd323
		Secure: false
	Object:
		Variable: $r5
		Type: byte[]
		Statement: $r5 = virtualinvoke $r4.<java.security.MessageDigest: byte[] digest(byte[])>($r5)
		Method: <com.amazon.identity.auth.device.authorization.CodeChallengeWorkflow: java.lang.String generateCodeChallenge(java.lang.String,java.lang.String)>
		SHA-256: 5f321e42eae828040594fd26633f556349005357246a3c37d9463972145acb11
		Secure: true
	Object:
		Variable: $r3
		Type: java.security.SecureRandom
		Statement: specialinvoke $r3.<java.security.SecureRandom: void <init>()>()
		Method: <ki: void <init>(java.lang.String,int,boolean)>
		SHA-256: 450b0932d04a807faef5f01c6bb23d21395b9d254213750da035889c6c0f428f
		Secure: true
	Object:
		Variable: $r2
		Type: java.security.KeyStore
		Statement: $r2 = staticinvoke <java.security.KeyStore: java.security.KeyStore getInstance(java.lang.String)>(varReplacer1317222)
		Method: <com.amazon.identity.auth.device.datastore.AESEncryptor: void <init>(android.content.Context)>
		SHA-256: 4bd2f9cf7b023ffcd063af1e6308f3ece28dc749d11948ddc30d631a6afd20e
		Secure: false
	Object:
		Variable: $r12
		Type: javax.net.ssl.TrustManager[]
		Statement: $r12 = virtualinvoke $r11.<javax.net.ssl.TrustManagerFactory: javax.net.ssl.TrustManager[] getTrustManagers()>()
		Method: <com.tuya.smart.alexa.speech.connect.d: javax.net.ssl.X509TrustManager a(java.io.InputStream)>
		SHA-256: 3e71b91d0f0277f4b7eeb153689af97bdc6919b525209ec1f76cff5804e8468c
		Secure: false
	Object:
		Variable: $r7
		Type: javax.net.ssl.SSLContext
		Statement: $r7 = staticinvoke <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String)>(varReplacer300606)
		Method: <com.tuya.fetch.g: okhttp3.OkHttpClient$Builder a(okhttp3.OkHttpClient$Builder)>
		SHA-256: 37ed7635268fb6ba79bc5976ac576c0a2ebb0cf4fc343e983c8395d333890c6c
		Secure: false
	Object:
		Variable: varReplacer1686014
		Type: java.lang.String
		Statement: specialinvoke $r0.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r1, varReplacer1686014)
		Method: <com.tuya.smart.android.network.util.ECDHEngine: java.lang.String hmacSha256(byte[],byte[],boolean)>
		SHA-256: 1df6af841c3cf815229e43cad1d09de93dfd34b9b9f09d7bb6f18e03445082b5
		Secure: false
	Object:
		Variable: $r3
		Type: java.security.KeyFactory
		Statement: $r3 = staticinvoke <java.security.KeyFactory: java.security.KeyFactory getInstance(java.lang.String)>(varReplacer1686079)
		Method: <com.tuya.smart.android.network.util.ECDHEngine: byte[] ecdhKey(java.lang.String,java.lang.String)>
		SHA-256: 19a8c53802d888409235056dda05d3e40b99877b443d12c1bcafdad787479f06
		Secure: false
	Object:
		Variable: $r4
		Type: java.security.MessageDigest
		Statement: $r4 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer2855799)
		Method: <aof$a: java.lang.String a(java.lang.String,long)>
		SHA-256: 56a76f53ab09ea36bc165a079c2c871df43909d54aa46e6fa82d643b02be9c28
		Secure: false
	Object:
		Variable: $r5
		Type: java.security.PublicKey
		Statement: $r5 = virtualinvoke $r4.<java.security.KeyPair: java.security.PublicKey getPublic()>()
		Method: <com.tuya.smart.android.network.util.ECDHEngine: com.tuya.smart.android.network.util.ECDHEngine$KeyEntity generateKeyPair(java.lang.String)>
		SHA-256: 4122dd3df2510c4840256778df64984ecac50416a8e7b01c8af8e8c0608dccb7
		Secure: false
	Object:
		Variable: varReplacer1686053
		Type: java.lang.String
		Statement: specialinvoke $r5.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r0, varReplacer1686053)
		Method: <com.tuya.smart.android.network.util.AESCBCUtil: java.lang.String encrypt(byte[],java.lang.String,java.lang.String)>
		SHA-256: bab7f4c92d637929777033b4eea60fb71a030e0fb783d4675544a48888cb9e4c
		Secure: false
	Object:
		Variable: $r0
		Type: byte[]
		Statement: $r0 = virtualinvoke $r6.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r0)
		Method: <com.tuya.smart.android.network.util.AESCBCUtil: java.lang.String encrypt(byte[],java.lang.String,java.lang.String)>
		SHA-256: 658be9a6200ea22d929701cbb59a94bf211bd90f479483295afcf4ee31e001b9
		Secure: false
	Object:
		Variable: $r16
		Type: java.security.PublicKey
		Statement: $r16 = virtualinvoke $r15.<java.security.KeyFactory: java.security.PublicKey generatePublic(java.security.spec.KeySpec)>($r14)
		Method: <com.tuya.smart.android.network.util.ECDHEngine: java.security.PublicKey decodeECPoint(java.lang.String,java.lang.String)>
		SHA-256: f034d4217b0bdd02cfac99589988cd71635f3f88584c50fc4e9dd0b352cc467f
		Secure: false
	Object:
		Variable: $r6
		Type: byte[]
		Statement: $r6 = virtualinvoke $r11.<java.security.MessageDigest: byte[] digest(byte[])>($r6)
		Method: <com.tuya.smart.google_flip.view.GoogleFlipAuthActivity: boolean c()>
		SHA-256: e70f873f7c12890d0a4798a4dd2322d876ae9c02c588b9962977dc5b2c400a1a
		Secure: true
	Object:
		Variable: $r5
		Type: javax.crypto.Cipher
		Statement: $r5 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer410113)
		Method: <com.tuya.sdk.bluetooth.pdpbbpd: byte[] bdpdqbp(byte[],byte[],byte[])>
		SHA-256: 8042154d4ab47f644baab13fd5a99457736b091fd3c07fe1dc29dea288a0c314
		Secure: false
	Object:
		Variable: $r1
		Type: java.security.SecureRandom
		Statement: specialinvoke $r1.<java.security.SecureRandom: void <init>()>()
		Method: <org.a.a.ch: void <clinit>()>
		SHA-256: 4a9e869c3a3253a1a83fb2d7bb2a5ab0a8b9d0f7d600a28c8a76e15664f03192
		Secure: true
	Object:
		Variable: $r7
		Type: javax.net.ssl.SSLParameters
		Statement: specialinvoke $r7.<javax.net.ssl.SSLParameters: void <init>()>()
		Method: <com.tuya.smart.mqttclient.mqttv3.internal.SSLNetworkModule: void start()>
		SHA-256: e66c8b429228ff396b64854dc404cff12999707f03ac1dc95d4fc996b038bb3f
		Secure: false
	Object:
		Variable: $r5
		Type: javax.net.ssl.SSLContext
		Statement: $r5 = staticinvoke <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String)>(varReplacer2422014)
		Method: <okhttp3.internal.platform.Platform: javax.net.ssl.SSLContext getSSLContext()>
		SHA-256: a9bb62adf922e59e0a3f1f5f44150d92509a5283595f524c6ace29dcae8908a
		Secure: false
	Object:
		Variable: $r3
		Type: javax.net.ssl.TrustManager[]
		Statement: $r3 = virtualinvoke $r2.<javax.net.ssl.TrustManagerFactory: javax.net.ssl.TrustManager[] getTrustManagers()>()
		Method: <com.tuya.sdk.mqtt.dpdqppp: javax.net.ssl.X509TrustManager pppbppp()>
		SHA-256: 4c3e4701813e185f81d0bf0e8f46811067d399513d4439534a319d7355115364
		Secure: false
	Object:
		Variable: $r2
		Type: java.security.KeyFactory
		Statement: $r2 = staticinvoke <java.security.KeyFactory: java.security.KeyFactory getInstance(java.lang.String)>(varReplacer371877)
		Method: <com.tuya.smart.gzlminiapp.core.utils.c: java.security.PublicKey d(java.lang.String)>
		SHA-256: 9dbde5bcd61db7492a3a1edb004d877caa99ff94e185864b43ff8c5c0edd682d
		Secure: false
	Object:
		Variable: $r2
		Type: java.lang.String
		Statement: specialinvoke $r0.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r4, $r2)
		Method: <com.tuya.smart.camera.utils.m: byte[] a(byte[],java.lang.String)>
		SHA-256: f6cc57f76a319a5623250ab54bfa9b86898e42fcc7b259cd1b7012e10ef9339a
		Secure: false
	Object:
		Variable: $r31
		Type: javax.crypto.spec.SecretKeySpec
		Statement: specialinvoke $r31.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r14, varReplacer1284503)
		Method: <afk: java.io.File b(android.content.Context,java.io.File,java.lang.String)>
		SHA-256: 3c1a5cf3f71527629529a18a3a7d4104b0d668e432b628288bfed5d99b1780ff
		Secure: false
	Object:
		Variable: $r26
		Type: java.security.SecureRandom
		Statement: specialinvoke $r26.<java.security.SecureRandom: void <init>()>()
		Method: <com.tuya.smart.scene.construct.extension.IconStyleActivity$b: java.lang.Object invokeSuspend(java.lang.Object)>
		SHA-256: 3b226df627c59a60f3d2802689a7520b2ff61eb285671dc7f40ac16c743606be
		Secure: true
	Object:
		Variable: $r2
		Type: java.security.MessageDigest
		Statement: $r2 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer1715441)
		Method: <com.google.android.play.core.assetpacks.bw: java.lang.String a(java.util.List)>
		SHA-256: 2351299e69aeac1f38289271d178917b37b5047dac3345a79cf47a6e99670c33
		Secure: false
	Object:
		Variable: $r4
		Type: javax.crypto.SecretKeyFactory
		Statement: $r4 = staticinvoke <javax.crypto.SecretKeyFactory: javax.crypto.SecretKeyFactory getInstance(java.lang.String)>(varReplacer981484)
		Method: <ki: void <init>(java.lang.String,int,boolean)>
		SHA-256: 1fda6ae2aaf73b56606cb274c75fa1a26bfd8594db3b2cad51b016290021ce5b
		Secure: false
	Object:
		Variable: $r32
		Type: javax.crypto.spec.IvParameterSpec
		Statement: specialinvoke $r32.<javax.crypto.spec.IvParameterSpec: void <init>(byte[])>($r10)
		Method: <afk: java.io.File b(android.content.Context,java.io.File,java.lang.String)>
		SHA-256: d5aa412cbddc95e38451f97df19da5b01c4da6059608c8ce709a9db7aed37759
		Secure: false
	Object:
		Variable: $r3
		Type: javax.crypto.spec.SecretKeySpec
		Statement: specialinvoke $r3.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r1, varReplacer2169707)
		Method: <com.amazon.identity.auth.device.datastore.AESEncryptor: javax.crypto.spec.SecretKeySpec getKeySpec()>
		SHA-256: ffc7a9d6a00f874c2330b310488935958ef8e99f930d21b267439b4af8ff018b
		Secure: false
	Object:
		Variable: $r0
		Type: byte[]
		Statement: $r0 = virtualinvoke $r1.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r0)
		Method: <com.amazon.identity.auth.device.datastore.AESEncryptor: byte[] performRSACipherOperation(javax.crypto.Cipher,byte[])>
		SHA-256: 14a4573860ebdb622256c3a153eaf360e069ac63cff54960b4fec6d92588d0e3
		Secure: false
	Object:
		Variable: $r4
		Type: byte[]
		Statement: $r4 = virtualinvoke $r3.<java.security.MessageDigest: byte[] digest(byte[])>($r4)
		Method: <okio.ByteString: okio.ByteString digest$jvm(java.lang.String)>
		SHA-256: 8ce052ed6c630e0078d05e19ab4bff46430fe8453e4fc121d3b9ee58a22dc10e
		Secure: false
	Object:
		Variable: $r0
		Type: byte[]
		Statement: $r0 = virtualinvoke $r1.<java.security.MessageDigest: byte[] digest(byte[])>($r0)
		Method: <com.tuya.smart.android.common.utils.MD5Util: byte[] computeMD5Hash(byte[])>
		SHA-256: 5e51b04a64b810fd3cad35f7e4e49c9a466893111d828b369573eff1457aef0a
		Secure: false
	Object:
		Variable: $r0
		Type: byte[]
		Statement: $r0 = virtualinvoke $r1.<java.security.MessageDigest: byte[] digest(byte[])>($r0)
		Method: <com.tuya.sdk.bluetooth.bqpdbqq: byte[] bdpdqbp(byte[])>
		SHA-256: 77e8a40b6c2d02f507aa95643313d0e46b04000c4ee46f5c88aa19094b5f1cdf
		Secure: false
	Object:
		Variable: $r4
		Type: javax.crypto.KeyGenerator
		Statement: $r4 = staticinvoke <javax.crypto.KeyGenerator: javax.crypto.KeyGenerator getInstance(java.lang.String,java.lang.String)>(varReplacer3262874, varReplacer3262875)
		Method: <com.tuya.sdk.security.EncryptionManager: boolean pbbppqb(byte[])>
		SHA-256: 6f4154aa347f7ee2201cab455de38cd659a68a0de0abed8b3858540e7f37035f
		Secure: true
	Object:
		Variable: varReplacer1841906
		Type: java.lang.String
		Statement: specialinvoke $r4.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r1, varReplacer1841906)
		Method: <com.tuya.sdk.bluetooth.bbddqbq: byte[] pdqppqb(byte[],byte[],byte[])>
		SHA-256: 35cfc727dbbff4cc810eb314a60ef5cd520cc0c4c337b1dd634728fc01153a2b
		Secure: false
	Object:
		Variable: $r0
		Type: java.security.SecureRandom
		Statement: specialinvoke $r0.<java.security.SecureRandom: void <init>()>()
		Method: <com.tuya.smart.android.common.utils.AesGcmUtil: byte[] generateRandomNonce()>
		SHA-256: 49c0a91de6e1e863041807a6c809ddc5af17771b73e7c40b28cf63865cfb1794
		Secure: true
	Object:
		Variable: $r14
		Type: java.security.KeyStore
		Statement: $r14 = staticinvoke <java.security.KeyStore: java.security.KeyStore getInstance(java.lang.String)>($r9)
		Method: <com.tuya.smart.mqttclient.mqttv3.internal.security.SSLSocketFactoryFactory: javax.net.ssl.SSLContext getSSLContext(java.lang.String)>
		SHA-256: 5149894d05ef20df222d58c4a033421d6302e35e69a14f445f906bc16807ea17
		Secure: false
	Object:
		Variable: $r2
		Type: java.security.MessageDigest
		Statement: $r2 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer3053722)
		Method: <com.google.android.play.core.splitcompat.a: java.lang.String a(byte[])>
		SHA-256: 91d029b758b09b5872ec2e98af34db545fac428cd32725096cabb762b560b8d9
		Secure: true
	Object:
		Variable: $r5
		Type: java.security.KeyPairGenerator
		Statement: $r5 = staticinvoke <java.security.KeyPairGenerator: java.security.KeyPairGenerator getInstance(java.lang.String,java.lang.String)>(varReplacer3262896, varReplacer3262897)
		Method: <com.tuya.sdk.security.EncryptionManager: boolean bdpdqbp(android.content.Context,byte[])>
		SHA-256: 4122eff8933fb1cff9b0d26a211be32eeebe3999360dab5a4d4c5a56de0a4586
		Secure: false
	Object:
		Variable: $r0
		Type: byte[]
		Statement: $r0 = virtualinvoke $r3.<java.security.MessageDigest: byte[] digest()>()
		Method: <cjd: java.lang.String a(java.io.File)>
		SHA-256: 9fb7639adb75cfbef994b7bc1efd4ed68453e5ba53aa81422fc4c9e0888506bf
		Secure: false
	Object:
		Variable: $r0
		Type: byte[]
		Statement: $r1 = virtualinvoke $r5.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r0)
		Method: <com.tuya.sdk.bluetooth.bbddqbq: byte[] pdqppqb(byte[],byte[],byte[])>
		SHA-256: 3e4b5d9827ac7967af56c9e9a8c0a4f84cacbd82ed319cccd18788afc829dd88
		Secure: false
	Object:
		Variable: $r4
		Type: javax.crypto.spec.SecretKeySpec
		Statement: specialinvoke $r4.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r5, $r6)
		Method: <nn: java.io.InputStream a(okhttp3.ResponseBody)>
		SHA-256: cb4d6f53e3fd388d14c30b74f120e39e03c15c7afa696a5946478ff12d47f2
		Secure: false
	Object:
		Variable: varReplacer3075372
		Type: java.lang.String
		Statement: specialinvoke $r7.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r3, varReplacer3075372)
		Method: <com.tuya.smart.android.common.utils.AesGcmUtil: byte[] decryptBytes2Bytes(byte[],byte[],byte[],byte[])>
		SHA-256: 20749414b250a0c8f4a3cfda70f0e8b8d906b617efb56074d8f67a4a23bd5f8d
		Secure: false
	Object:
		Variable: $z0
		Type: boolean
		Statement: $z0 = virtualinvoke $r3.<java.security.Signature: boolean verify(byte[])>($r2)
		Method: <io.jsonwebtoken.impl.crypto.RsaSignatureValidator: boolean doVerify(java.security.Signature,java.security.PublicKey,byte[],byte[])>
		SHA-256: 9eb31fa6be2affee0ef6c6c2971c5363bb802c84b9c2adef2bccbbf06bcf105b
		Secure: false
	Object:
		Variable: $r14
		Type: java.security.SecureRandom
		Statement: specialinvoke $r14.<java.security.SecureRandom: void <init>()>()
		Method: <com.tuya.smart.scene.home.invalid.g: void b(com.tuya.smart.scene.model.NormalScene)>
		SHA-256: 70105fa4cf2769bef1f2c8f02c11d1e70237bea07ac5606189043d36f764f09c
		Secure: true
	Object:
		Variable: $r5
		Type: javax.crypto.Cipher
		Statement: $r5 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer2596456)
		Method: <com.tuya.smart.android.network.util.AESCTRUtil: java.lang.String encrypt(byte[],byte[],java.lang.String)>
		SHA-256: dff41182521d1ed137821f087f171647241d93c56c7d35560cdc1dc38895363a
		Secure: false
	Object:
		Variable: varReplacer2710678
		Type: java.lang.String
		Statement: specialinvoke $r23.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r11, varReplacer2710678)
		Method: <com.tuya.smart.camera.utils.o: java.lang.String a(android.content.Context,java.lang.String,java.lang.String,boolean)>
		SHA-256: 293abce584ef9ae1405cc0324e430351b0fb07c7fe4b13b0c18bc329bade9ec6
		Secure: false
	Object:
		Variable: $r7
		Type: javax.net.ssl.SSLParameters
		Statement: specialinvoke $r7.<javax.net.ssl.SSLParameters: void <init>()>()
		Method: <com.tuya.smart.mqttclient.mqttv3.internal.SSLNetworkModule: void start()>
		SHA-256: e66c8b429228ff396b64854dc404cff12999707f03ac1dc95d4fc996b038bb3f
		Secure: false
	Object:
		Variable: $r3
		Type: byte[]
		Statement: $r3 = virtualinvoke $r2.<java.security.MessageDigest: byte[] digest()>()
		Method: <com.tuya.smart.camera.utils.v: java.lang.String a(java.lang.String)>
		SHA-256: ff7387296aef2f4be8eb978531813b5bfd6f4649ebfad532d16ad572ce7584ee
		Secure: false
	Object:
		Variable: $r6
		Type: byte[]
		Statement: $r12 = virtualinvoke $r10.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r6)
		Method: <com.tuya.smart.camera.utils.o: android.graphics.Bitmap a(java.lang.String,java.lang.String)>
		SHA-256: fc329deaf557c452793827e09241da79ffb2eb569d1e49d38c074ae32d6f3937
		Secure: false
	Object:
		Variable: $r5
		Type: java.security.KeyFactory
		Statement: $r5 = staticinvoke <java.security.KeyFactory: java.security.KeyFactory getInstance(java.lang.String)>(varReplacer4367434)
		Method: <kq: java.security.interfaces.ECPublicKey a(com.linecorp.linesdk.internal.g$b)>
		SHA-256: 7f20bcbf35e9bf843b8a60d42d1a00c6831b54bd61135db1136a51490eb1864
		Secure: false
	Object:
		Variable: $r4
		Type: java.security.MessageDigest
		Statement: $r4 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer3058880)
		Method: <com.amazon.identity.auth.device.authorization.CodeChallengeWorkflow: java.lang.String generateCodeChallenge(java.lang.String,java.lang.String)>
		SHA-256: b4258b42133a6bd54e15f324822e92ee00ebb65839adb85393a2ac6a367b8ce7
		Secure: true
	Object:
		Variable: $r5
		Type: javax.crypto.SecretKey
		Statement: $r5 = virtualinvoke $r4.<javax.crypto.KeyGenerator: javax.crypto.SecretKey generateKey()>()
		Method: <com.amazon.identity.auth.device.datastore.AESEncryptor: byte[] getEncryptionKey()>
		SHA-256: 8bc4232dba406a5ebecd8d3859b400826a3d77ba6a234be56933dd443f2408ec
		Secure: true
	Object:
		Variable: $r2
		Type: java.security.MessageDigest
		Statement: $r2 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer349251)
		Method: <com.tuya.smart.android.common.utils.MD5: java.lang.String md5(java.lang.String)>
		SHA-256: 3535dc287b604cabea6f928c5ce93adc0cf8ec3fa109adbf7295e943a6605c54
		Secure: false
	Object:
		Variable: $r5
		Type: javax.crypto.spec.IvParameterSpec
		Statement: specialinvoke $r5.<javax.crypto.spec.IvParameterSpec: void <init>(byte[])>($r3)
		Method: <com.amazon.identity.auth.device.datastore.AESEncryptor: java.lang.String encryptData(java.lang.String)>
		SHA-256: 972d344a2fac637e9cbfe94ac4a1894bda51d0793651c0c6cc078e7e1909bbe
		Secure: true
	Object:
		Variable: $r2
		Type: javax.net.ssl.SSLContext
		Statement: $r2 = staticinvoke <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String)>(varReplacer363500)
		Method: <com.tuya.smart.android.network.TuyaSmartNetWork: javax.net.ssl.SSLSocketFactory systemDefaultSslSocketFactory(javax.net.ssl.X509TrustManager)>
		SHA-256: 76a7d32d4534fd31bd10661a843f9cec595ff849dbb9b2387087d4c7894a9dc9
		Secure: false
	Object:
		Variable: $r6
		Type: javax.crypto.spec.SecretKeySpec
		Statement: specialinvoke $r6.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r5, varReplacer1998192)
		Method: <com.tuya.smart.camera.utils.a: java.lang.String a(java.lang.String,java.lang.String,java.lang.String)>
		SHA-256: 891c3053d9346482360389d4a586fd88c6d058a5886e5ea28efb6a7d6d3c53
		Secure: false
	Object:
		Variable: $r3
		Type: byte[]
		Statement: $r3 = virtualinvoke $r2.<java.security.MessageDigest: byte[] digest()>()
		Method: <com.google.android.play.core.assetpacks.bw: java.lang.String a(java.util.List)>
		SHA-256: 4080861fb3bb4a44af7c61b0f9e054743333b9f55847c4b6ca706f5dfb78318f
		Secure: false
	Object:
		Variable: $r0
		Type: java.security.SecureRandom
		Statement: specialinvoke $r0.<java.security.SecureRandom: void <init>()>()
		Method: <com.tuya.smart.camera.utils.o: byte[] a()>
		SHA-256: 42acd821f2f3c8214829eeb4f0b9777a5e9ba14e2cf77e2e5da2cb339fc81dfb
		Secure: true
	Object:
		Variable: $r6
		Type: javax.crypto.Cipher
		Statement: $r6 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer1748428)
		Method: <com.tuya.smart.android.common.utils.AesGcmUtil: byte[] encryptBytes2Bytes(byte[],byte[],byte[],byte[])>
		SHA-256: 6557eda5851aba39ef0d105b80689f1860db7b5ec5afe2a51878a244b9e4960d
		Secure: false
	Object:
		Variable: $r5
		Type: javax.crypto.spec.SecretKeySpec
		Statement: specialinvoke $r5.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r0, varReplacer1686053)
		Method: <com.tuya.smart.android.network.util.AESCBCUtil: java.lang.String encrypt(byte[],java.lang.String,java.lang.String)>
		SHA-256: e559d6d3d34d40c377408b438efa9c4825352ce9b7bbab533065ae17c6ed1027
		Secure: false
	Object:
		Variable: $r0
		Type: java.security.spec.ECGenParameterSpec
		Statement: specialinvoke $r0.<java.security.spec.ECGenParameterSpec: void <init>(java.lang.String)>($r1)
		Method: <com.tuya.smart.android.network.util.ECDHEngine: com.tuya.smart.android.network.util.ECDHEngine$KeyEntity generateKeyPair(java.lang.String)>
		SHA-256: 86b249fecb4b3bedf0314c356a49773c7b2798556e57660955e23e32d85c64fc
		Secure: true
	Object:
		Variable: $r6
		Type: byte[]
		Statement: $r6 = virtualinvoke $r4.<java.security.MessageDigest: byte[] digest()>()
		Method: <aof$a: java.lang.String a(java.lang.String,long)>
		SHA-256: 2b5ed47dee5cbae5d1e51ee775ec9825ca4c11b6401c3d9de2851c69419e9e69
		Secure: false
	Object:
		Variable: r0
		Type: com.tuya.bouncycastle.jce.spec.ECNamedCurveSpec
		Statement: specialinvoke r0.<java.security.spec.ECParameterSpec: void <init>(java.security.spec.EllipticCurve,java.security.spec.ECPoint,java.math.BigInteger,int)>($r7, $r8, $r2, $i0)
		Method: <com.tuya.bouncycastle.jce.spec.ECNamedCurveSpec: void <init>(java.lang.String,com.tuya.bouncycastle.math.ec.ECCurve,com.tuya.bouncycastle.math.ec.ECPoint,java.math.BigInteger,java.math.BigInteger,byte[])>
		SHA-256: bcf570b34f8a17ec2bf4d52452528fe052d0e6bfbcbc0e9448c15568d3730cec
		Secure: true
	Object:
		Variable: $r2
		Type: java.security.spec.ECGenParameterSpec
		Statement: specialinvoke $r2.<java.security.spec.ECGenParameterSpec: void <init>(java.lang.String)>(varReplacer2521666)
		Method: <com.tuya.bouncycastle.jcajce.provider.asymmetric.ec.KeyPairGeneratorSpi$EC: void <clinit>()>
		SHA-256: c7ed7676c53b2d8b73b80882a09436e7a6c3d46b35c53e28bbe00ee2ec20316f
		Secure: true
	Object:
		Variable: $r1
		Type: javax.net.ssl.TrustManagerFactory
		Statement: $r1 = staticinvoke <javax.net.ssl.TrustManagerFactory: javax.net.ssl.TrustManagerFactory getInstance(java.lang.String)>($r0)
		Method: <okhttp3.internal.Util: javax.net.ssl.X509TrustManager platformTrustManager()>
		SHA-256: a8764d384e0e6acd4407dba0e4c2025660362892494036c03c4b52a40e75c66b
		Secure: false
	Object:
		Variable: $r5
		Type: javax.crypto.Cipher
		Statement: $r5 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>($r2)
		Method: <com.tuya.smart.android.common.utils.RSAUtil: byte[] encrypt(java.lang.String,java.security.PublicKey,byte[])>
		SHA-256: de5bd5ac252cb19a029b8387cab569036aebb8b079de44fdbd1a21fb7d57fd3f
		Secure: false
	Object:
		Variable: $r6
		Type: javax.crypto.Cipher
		Statement: $r6 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer3075397)
		Method: <com.tuya.smart.android.common.utils.AesGcmUtil: byte[] decryptBytes2Bytes(byte[],byte[],byte[],byte[])>
		SHA-256: 1666b0c7c4a999ad2925b4e6ccd4302c0a73e4f05c3792602e4bff249692b9d0
		Secure: false
	Object:
		Variable: $r2
		Type: java.security.spec.ECParameterSpec
		Statement: specialinvoke $r2.<java.security.spec.ECParameterSpec: void <init>(java.security.spec.EllipticCurve,java.security.spec.ECPoint,java.math.BigInteger,int)>($r1, $r5, $r6, $i0)
		Method: <com.tuya.bouncycastle.jcajce.provider.asymmetric.ec.BCECPublicKey: java.security.spec.ECParameterSpec createSpec(java.security.spec.EllipticCurve,com.tuya.bouncycastle.crypto.params.ECDomainParameters)>
		SHA-256: 4bf68a34c81d1edf795aedd92ddee186f149b3050b72dd9d67beac9a5963e08a
		Secure: true
	Object:
		Variable: $r6
		Type: java.security.SecureRandom
		Statement: specialinvoke $r6.<java.security.SecureRandom: void <init>()>()
		Method: <com.tuya.sdk.user.qpppdqb: void uploadUserAvatar(java.io.File,com.tuya.smart.android.user.api.IBooleanCallback)>
		SHA-256: 3a8ca816a00de9e1b9aa0ba446486d2a4fe078b0d8f1558c6deece39f9dc2dcc
		Secure: true
	Object:
		Variable: $r6
		Type: java.security.MessageDigest
		Statement: $r6 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer2660602)
		Method: <com.facebook.soloader.SoLoader$1: java.lang.String getLibHash(java.lang.String)>
		SHA-256: 697231914a00178e276a85d8847efebabfa725191d341a876935cca531e2985b
		Secure: false
	Object:
		Variable: $r6
		Type: java.security.SecureRandom
		Statement: specialinvoke $r6.<java.security.SecureRandom: void <init>()>()
		Method: <com.tuya.bouncycastle.math.ec.ECCurve$AbstractF2m: com.tuya.bouncycastle.math.ec.ECFieldElement solveQuadraticEquation(com.tuya.bouncycastle.math.ec.ECFieldElement)>
		SHA-256: 551f04a6ceb84ff41f806673479a8811d348745323d197d42d04dca1faf102b5
		Secure: true
	Object:
		Variable: $r7
		Type: java.security.SecureRandom
		Statement: specialinvoke $r7.<java.security.SecureRandom: void <init>()>()
		Method: <me: void a(java.lang.String,java.lang.String,java.io.File,com.tuya.device.base.info.interactor.repository.DeviceInfoRepository$UploadDeviceImgCallback)>
		SHA-256: e90ebbe7c5701b8ec5cdc6855a691c018cf0a4b88624a3f3575db9fcd0585862
		Secure: true
	Object:
		Variable: $r4
		Type: java.security.KeyPair
		Statement: $r4 = virtualinvoke $r3.<java.security.KeyPairGenerator: java.security.KeyPair generateKeyPair()>()
		Method: <com.tuya.smart.android.network.util.ECDHEngine: com.tuya.smart.android.network.util.ECDHEngine$KeyEntity generateKeyPair(java.lang.String)>
		SHA-256: 6dffd03fe8fc70080f2ab3c8a9430a52d10c94bc607095a29d757d58c668b6bc
		Secure: false
	Object:
		Variable: $r2
		Type: javax.crypto.KeyGenerator
		Statement: $r2 = staticinvoke <javax.crypto.KeyGenerator: javax.crypto.KeyGenerator getInstance(java.lang.String,java.lang.String)>(varReplacer3849231, varReplacer3849232)
		Method: <aeo: javax.crypto.SecretKey d(java.lang.String)>
		SHA-256: 6317fd0269f7cf5f5825710f83cda2cb968b444f5f14aad11757fbb88eb96d2
		Secure: true
	Object:
		Variable: varReplacer371875
		Type: java.lang.String
		Statement: $r5 = staticinvoke <java.security.KeyFactory: java.security.KeyFactory getInstance(java.lang.String)>(varReplacer371875)
		Method: <com.tuya.smart.gzlminiapp.core.utils.c: boolean a(java.lang.String,java.security.PublicKey,java.lang.String)>
		SHA-256: b6310ad6ec989a66b463740c586da7950ec467a069d24bb435d395c4c3b40d5c
		Secure: false
	Object:
		Variable: varReplacer335261
		Type: java.lang.String
		Statement: specialinvoke $r22.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r8, varReplacer335261)
		Method: <com.tuya.smart.camera.utils.o: android.graphics.Bitmap a(java.lang.String,java.lang.String)>
		SHA-256: 49e487bff379f790961434a6f312bc2414cdc563b2c97f0a547295868018c8e5
		Secure: false
	Object:
		Variable: $r6
		Type: javax.crypto.Mac
		Statement: $r6 = staticinvoke <javax.crypto.Mac: javax.crypto.Mac getInstance(java.lang.String)>(varReplacer981485)
		Method: <ki: void <init>(java.lang.String,int,boolean)>
		SHA-256: 16ac55560954d9e14ea19b9f2df34c7f97a1ba386e5ff061c4bb090e1981cbf1
		Secure: true
	Object:
		Variable: $r1
		Type: byte[]
		Statement: $r1 = virtualinvoke $r4.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r1)
		Method: <com.tuya.smart.android.common.utils.AESUtil: byte[] decryptWithBytes(byte[])>
		SHA-256: 8f201932059d3425e2f977fb0261b23cfdad7d684e7acf00b95b6a1abcc15cd6
		Secure: false
	Object:
		Variable: $r0
		Type: byte[]
		Statement: $r0 = virtualinvoke $r3.<java.security.MessageDigest: byte[] digest()>()
		Method: <com.tuya.smart.android.common.utils.MD5Util: byte[] computeMD5Hash(java.io.InputStream)>
		SHA-256: cb432b05d22ca73f7c30c678287d92bab11b0bb08ecd67f7a337976afbc898a3
		Secure: false
	Object:
		Variable: $r3
		Type: javax.net.ssl.TrustManagerFactory
		Statement: $r3 = staticinvoke <javax.net.ssl.TrustManagerFactory: javax.net.ssl.TrustManagerFactory getInstance(java.lang.String)>($r2)
		Method: <com.tuyasmart.stencil.component.download.a: javax.net.ssl.X509TrustManager a()>
		SHA-256: b658b0f4126f1dbd5bb8212c2600b52441d4d9c74c084ff29cbc60181bf78d6f
		Secure: false
	Object:
		Variable: $r2
		Type: java.security.MessageDigest
		Statement: $r2 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer1076579)
		Method: <com.tuya.smart.camera.utils.v: java.lang.String a(java.lang.String)>
		SHA-256: 8df018669fb2ec75b231339bd73f4b8141aec1c7280ae175774638c7df50b784
		Secure: false
	Object:
		Variable: $r12
		Type: javax.net.ssl.TrustManager[]
		Statement: $r12 = virtualinvoke $r11.<javax.net.ssl.TrustManagerFactory: javax.net.ssl.TrustManager[] getTrustManagers()>()
		Method: <com.tuya.smart.alexa.speech.connect.b: okhttp3.OkHttpClient a(java.lang.String)>
		SHA-256: 5095dddb0c45a5cc35a6a136856f81a57be91664f3d071f9460503765a67e4c0
		Secure: false
	Object:
		Variable: $r1
		Type: java.security.MessageDigest
		Statement: $r1 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer351948)
		Method: <anb: byte[] a(byte[])>
		SHA-256: 5060f87aacc7d1cb9cf975998236e28220a4c284ec7c402176bfdcee0add9acb
		Secure: false
	Object:
		Variable: $r2
		Type: java.security.KeyPairGenerator
		Statement: $r2 = staticinvoke <java.security.KeyPairGenerator: java.security.KeyPairGenerator getInstance(java.lang.String,java.lang.String)>(varReplacer4007791, varReplacer4007792)
		Method: <com.tuya.sdk.bluetooth.pqppbdp: void bppdpdq()>
		SHA-256: 6477c08f908d71c5db1ed868472dddd7f1b4ccf9c8c71b56f846487caaf5bae6
		Secure: false
	Object:
		Variable: $r10
		Type: javax.crypto.spec.SecretKeySpec
		Statement: specialinvoke $r10.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r3, varReplacer1577061)
		Method: <ki: ki$a b(android.content.Context)>
		SHA-256: f8bb76d4c5f1e0f877deb5cbefd2eff0c7c9a0b2c0ddaf3ed70d64c3717c2a97
		Secure: false
	Object:
		Variable: $z0
		Type: boolean
		Statement: $z0 = virtualinvoke $r6.<java.security.Signature: boolean verify(byte[])>($r3)
		Method: <com.tuya.smart.gzlminiapp.core.utils.c: boolean a(java.lang.String,java.security.PublicKey,java.lang.String)>
		SHA-256: 686d4a4e44b058afef6cdf610f0b34d1fad85cf357cb42f0bd057f3e2f80ef90
		Secure: false
	Object:
		Variable: $r2
		Type: javax.crypto.spec.SecretKeySpec
		Statement: specialinvoke $r2.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r3, varReplacer3295314)
		Method: <com.tuya.security.vas.setting.password.b: java.lang.String a(java.lang.String,java.lang.String)>
		SHA-256: 4bec0e1ebca056059a0a8ea5f306bfec429889aee664ad0944a8fc504fca9380
		Secure: false
	Object:
		Variable: $r4
		Type: javax.net.ssl.TrustManager[]
		Statement: $r4 = virtualinvoke $r3.<javax.net.ssl.TrustManagerFactory: javax.net.ssl.TrustManager[] getTrustManagers()>()
		Method: <com.tuya.fetch.g: okhttp3.OkHttpClient$Builder a(okhttp3.OkHttpClient$Builder)>
		SHA-256: 6c293f78d5fd6eebd7e34c9488048464d6ab535e8f181a854ed35eb52e0bffce
		Secure: false
	Object:
		Variable: $r1
		Type: java.security.MessageDigest
		Statement: $r1 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer423212)
		Method: <com.tuya.sdk.security.EncryptionManager: java.lang.String pppbppp(java.lang.String)>
		SHA-256: 80b5b6f0310cb5234dcb48f099184307d14989e418a7b7ae9fccd5cbc0da9013
		Secure: true
	Object:
		Variable: $r3
		Type: javax.net.ssl.SSLContext
		Statement: $r3 = staticinvoke <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String,java.security.Provider)>(varReplacer2422140, $r2)
		Method: <okhttp3.internal.platform.ConscryptPlatform: javax.net.ssl.SSLContext getSSLContext()>
		SHA-256: a062a3675fe617eda543fe4ec809ed53729f3db38ff4a2f0b12cb253c7fe94c5
		Secure: false
	Object:
		Variable: $r0
		Type: byte[]
		Statement: $r0 = virtualinvoke $r1.<java.security.MessageDigest: byte[] digest(byte[])>($r0)
		Method: <com.tuya.smart.android.common.utils.SHA256Util: byte[] getHash(byte[])>
		SHA-256: 5999bebcf665390b586137fb4a894e7391b0c6f0874104348df2a80548bd6ce2
		Secure: true
	Object:
		Variable: $r4
		Type: java.security.spec.X509EncodedKeySpec
		Statement: specialinvoke $r4.<java.security.spec.X509EncodedKeySpec: void <init>(byte[])>($r2)
		Method: <cy: java.security.PublicKey b(java.lang.String)>
		SHA-256: 86cbd7ef203cdef07e2bdbb87c0f4b5a89c08d000029fea37428ae3fcbe58eb0
		Secure: false
	Object:
		Variable: $r6
		Type: java.security.Signature
		Statement: $r6 = staticinvoke <java.security.Signature: java.security.Signature getInstance(java.lang.String)>(varReplacer371876)
		Method: <com.tuya.smart.gzlminiapp.core.utils.c: boolean a(java.lang.String,java.security.PublicKey,java.lang.String)>
		SHA-256: 2d39257c043f15727779a43b6efaf3ceff2ddce57fea1c83064e5a34a76fb07b
		Secure: false
	Object:
		Variable: $r2
		Type: javax.crypto.Cipher
		Statement: $r2 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer3849192)
		Method: <aeo: javax.crypto.Cipher a(java.lang.String)>
		SHA-256: 8f3cceca5b32a6e8ae9f9151c8c85d205f989da14904894656c06ec9144e78cc
		Secure: false
	Object:
		Variable: $r4
		Type: javax.crypto.Cipher
		Statement: $r4 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer3193648)
		Method: <aeo: javax.crypto.Cipher a(java.lang.String,byte[])>
		SHA-256: d67d6de0aa0d4975e7701049140fca06e8e1f6862cb40c7bb5d5742586c132e
		Secure: false
	Object:
		Variable: $r39
		Type: javax.crypto.spec.SecretKeySpec
		Statement: specialinvoke $r39.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r13, $r1)
		Method: <io.jsonwebtoken.impl.DefaultJwtParser: io.jsonwebtoken.Jwt parse(java.lang.String)>
		SHA-256: f80989adcf7789e57174bcda2542dfbfca6b93719d40859165b485df61993b34
		Secure: false
	Object:
		Variable: $r2
		Type: byte[]
		Statement: virtualinvoke $r0.<java.security.SecureRandom: void nextBytes(byte[])>($r2)
		Method: <com.tuya.smart.android.common.utils.AesGcmUtil: byte[] generateRandomNonce()>
		SHA-256: 10fb1ea32a7a42c282a8d55eec59def4df54341c654b3bf3c95070026ba7dcb0
		Secure: true
	Object:
		Variable: $r4
		Type: java.security.PublicKey
		Statement: $r4 = virtualinvoke $r3.<java.security.KeyPair: java.security.PublicKey getPublic()>()
		Method: <com.tuya.sdk.bluetooth.pqppbdp: void bppdpdq()>
		SHA-256: 9bac1dcf562d96a8b2445f81375e549a4bbc2950048b92fb8ac24b0f62b2d838
		Secure: false
	Object:
		Variable: $r17
		Type: java.security.SecureRandom
		Statement: specialinvoke $r17.<java.security.SecureRandom: void <init>()>()
		Method: <com.tuya.smart.pushcenter.view.NotificationHelper: android.app.Notification$Builder getNotification(com.tuya.smart.pushcenter.meta.CommonMeta)>
		SHA-256: ffefe05914db7802f46acb689020060891dd3e254dedaad18ddf5f8df0a2130f
		Secure: true
	Object:
		Variable: $r2
		Type: byte[]
		Statement: $r0 = virtualinvoke $r5.<javax.crypto.Cipher: byte[] doFinal(byte[],int,int)>($r2, varReplacer62686, $i0)
		Method: <com.tuya.smart.android.network.util.AESCTRUtil: java.lang.String decrypt(byte[],java.lang.String)>
		SHA-256: 166fcb9729c58700e2c1205139c1a4c2ce287d1602bd172fb719c2666fb8a71a
		Secure: false
	Object:
		Variable: $r4
		Type: javax.crypto.CipherInputStream
		Statement: specialinvoke $r4.<javax.crypto.CipherInputStream: void <init>(java.io.InputStream,javax.crypto.Cipher)>($r5, $r2)
		Method: <com.tuya.sdk.security.EncryptionManager: byte[] bdpdqbp(byte[])>
		SHA-256: 676576a5124a8ff1fdda4229b50ccfc4c79f84cbef62dbfd0cbe45c162a333c3
		Secure: false
	Object:
		Variable: $r5
		Type: byte[]
		Statement: $r5 = virtualinvoke $r4.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r5)
		Method: <com.tuya.smart.android.common.utils.AESUtil: byte[] encryptWithBytes(java.lang.String)>
		SHA-256: 4870598332f10eb5ebfa8a36f059ae1566f01fb5961adaa24c99a37ea78d5daa
		Secure: false
	Object:
		Variable: varReplacer1826294
		Type: java.lang.String
		Statement: specialinvoke $r0.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r1, varReplacer1826294)
		Method: <com.tuya.sdk.bluetooth.bppdpdq: byte[] bppdpdq(byte[],byte[])>
		SHA-256: f88f484bb3540ac6eccf6821abda42fcd3fabeefa8f21bfd9bd139dce907c7ae
		Secure: false
	Object:
		Variable: $r4
		Type: java.security.SecureRandom
		Statement: specialinvoke $r4.<java.security.SecureRandom: void <init>()>()
		Method: <com.tuya.sdk.bluetooth.dbqpppq$pppbppp: void bdpdqbp(com.tuya.smart.android.network.http.BusinessResponse,java.lang.Integer,java.lang.String)>
		SHA-256: 570bf0b6e6abb8cb6eefc68aad03c599bacf6020751ca80ce61eff2cd6ea1086
		Secure: true
	Object:
		Variable: $r2
		Type: byte[]
		Statement: $r2 = virtualinvoke $r5.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r0)
		Method: <com.tuya.sdk.bluetooth.pdpbbpd: byte[] bdpdqbp(byte[],byte[],byte[])>
		SHA-256: a85a0d8b4d0fe463c46ab522854a0a056b8f1e6019e53aac4a376cac40de36c
		Secure: false
	Object:
		Variable: $r11
		Type: java.security.SecureRandom
		Statement: specialinvoke $r11.<java.security.SecureRandom: void <init>()>()
		Method: <com.tuya.smart.splash.util.a: com.tuya.smart.splash.bean.SplashAdBean a()>
		SHA-256: 29d68c6716da3f8832b71a7a818fe1dc04f5bd47b26ee749aefd5872abc883ae
		Secure: true
	Object:
		Variable: $r4
		Type: javax.crypto.Cipher
		Statement: $r4 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer3617479)
		Method: <com.tuya.sdk.security.EncryptionManager: javax.crypto.Cipher bdpdqbp(byte[],boolean)>
		SHA-256: f27070c6a0b383bca50656a04b1176e1a92f2517b016ed5b179d606f62e9937c
		Secure: false
	Object:
		Variable: $r5
		Type: java.security.PublicKey
		Statement: $r5 = virtualinvoke $r3.<java.security.KeyFactory: java.security.PublicKey generatePublic(java.security.spec.KeySpec)>($r4)
		Method: <com.tuya.smart.android.common.utils.RSAUtil: java.security.interfaces.RSAPublicKey generateRSAPublicKey(java.lang.String,java.math.BigInteger,java.math.BigInteger)>
		SHA-256: fd89c94a2a452a517e746b187e4cd68854394b252b0b776bfb46b8762f1f7f65
		Secure: false
	Object:
		Variable: $r14
		Type: javax.net.ssl.SSLContext
		Statement: $r14 = staticinvoke <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String)>(varReplacer1000105)
		Method: <com.tuya.smart.alexa.speech.connect.b: okhttp3.OkHttpClient a(java.lang.String)>
		SHA-256: ec77c23ee1c0270822d6b2871f6fd81449d79244b94c17ba27029df79b97021a
		Secure: false
	Object:
		Variable: $r3
		Type: javax.crypto.spec.IvParameterSpec
		Statement: specialinvoke $r3.<javax.crypto.spec.IvParameterSpec: void <init>(byte[])>($r1)
		Method: <com.tuya.smart.android.network.util.AESCTRUtil: java.lang.String encrypt(byte[],byte[],java.lang.String)>
		SHA-256: ad202890549c72aef3c8b4f0752b249d7825cc95ee47262e82a2c0cce211794d
		Secure: false
	Object:
		Variable: $r7
		Type: javax.crypto.KeyAgreement
		Statement: $r7 = staticinvoke <javax.crypto.KeyAgreement: javax.crypto.KeyAgreement getInstance(java.lang.String)>(varReplacer1686089)
		Method: <com.tuya.smart.android.network.util.ECDHEngine: byte[] ecdhKey(java.lang.String,java.lang.String)>
		SHA-256: d2b7b8c5c88ae69bef903b8068c410892a89bea3cf784e55b27af87f1502d3e7
		Secure: false
	Object:
		Variable: $r12
		Type: java.security.KeyPair
		Statement: specialinvoke $r12.<java.security.KeyPair: void <init>(java.security.PublicKey,java.security.PrivateKey)>($r9, $r13)
		Method: <com.tuya.bouncycastle.jcajce.provider.asymmetric.ec.KeyPairGeneratorSpi$EC: java.security.KeyPair generateKeyPair()>
		SHA-256: c9e1ff5450f21aae65af053d6ed29f81c5a7b267991078defbfa3059af0e266a
		Secure: false
	Object:
		Variable: varReplacer371877
		Type: java.lang.String
		Statement: $r2 = staticinvoke <java.security.KeyFactory: java.security.KeyFactory getInstance(java.lang.String)>(varReplacer371877)
		Method: <com.tuya.smart.gzlminiapp.core.utils.c: java.security.PublicKey d(java.lang.String)>
		SHA-256: a5c9e4ddd5ac64c37bc55acbafa0d0b97553b17782c4070c49703668a6ad2e72
		Secure: false
	Object:
		Variable: $r19
		Type: javax.crypto.CipherInputStream
		Statement: specialinvoke $r19.<javax.crypto.CipherInputStream: void <init>(java.io.InputStream,javax.crypto.Cipher)>($r7, $r10)
		Method: <cqp: java.io.File a(java.lang.String,java.io.File,java.lang.String)>
		SHA-256: 64e1aaf6cc268be8de64056a45154b60c640193ca57b02956b5dc4d992e4a957
		Secure: false
	Object:
		Variable: $r5
		Type: java.security.SecureRandom
		Statement: specialinvoke $r5.<java.security.SecureRandom: void <init>()>()
		Method: <com.tuya.sdk.security.EncryptionManager: boolean pdqppqb(android.content.SharedPreferences,byte[])>
		SHA-256: fa0a68eb566763395b85b7a99dc8304c2e93b911461255687a7652f1ab29ef14
		Secure: true
	Object:
		Variable: varReplacer3263102
		Type: java.lang.String
		Statement: specialinvoke $r4.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r3, varReplacer3263102)
		Method: <com.tuya.sdk.security.EncryptionManager: javax.crypto.SecretKey pdqppqb(android.content.SharedPreferences)>
		SHA-256: b8d99414f9fe81d3f3c4966e9aea487717ab7845b37329f9e1b90edcffb8e404
		Secure: true
	Object:
		Variable: $r11
		Type: java.security.MessageDigest
		Statement: $r11 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer1991955)
		Method: <com.tuya.smart.google_flip.view.GoogleFlipAuthActivity: boolean c()>
		SHA-256: 83ab934570fb24bee01243c27e739f886283d8c148619a1d8119054e700e989b
		Secure: true
	Object:
		Variable: $r3
		Type: javax.crypto.spec.SecretKeySpec
		Statement: specialinvoke $r3.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r1, $r2)
		Method: <com.tuya.smart.android.common.utils.AESUtil: java.security.Key generateKey()>
		SHA-256: 771573cba5b190bc1f21cf05264c8b8e1f7be2a2f3bcb980c9f3611f5f7017e6
		Secure: false
	Object:
		Variable: $r9
		Type: javax.crypto.spec.SecretKeySpec
		Statement: specialinvoke $r9.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r8, varReplacer1005717)
		Method: <com.tuya.smart.android.thirdparty.duck.DuckTool: java.lang.String catchDuck(android.content.Context,java.lang.String,java.lang.String,long)>
		SHA-256: 65728914f57dbf3e581bd78ba707681da123e5159ecf0f87ca7e56b88c78ba85
		Secure: false
	Object:
		Variable: $r0
		Type: java.security.SecureRandom
		Statement: specialinvoke $r0.<java.security.SecureRandom: void <init>()>()
		Method: <com.tuya.smart.camera.uiview.utils.EncryptUtils: byte[] getIv()>
		SHA-256: b11fd397f03a2b09883fe0c3e11227e06ceab5506642b011a8350352815456e7
		Secure: true
	Object:
		Variable: $r1
		Type: byte[]
		Statement: $r1 = virtualinvoke $r4.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r1)
		Method: <com.tuya.smart.android.common.utils.AESUtil: byte[] encryptWithBytes(byte[])>
		SHA-256: 3391739ff9365f2fb45717cf8220ddf2a308570437aa6157efbbea8fc20fb4a
		Secure: false
	Object:
		Variable: $r2
		Type: java.lang.String
		Statement: specialinvoke $r3.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r1, $r2)
		Method: <com.tuya.smart.android.common.utils.AESUtil: java.security.Key generateKey()>
		SHA-256: 748b3615b944dfbaaf19253d8e7d5776efd10e0a0cf052329036d8d107f0ecf5
		Secure: false
	Object:
		Variable: $r3
		Type: javax.net.ssl.SSLContext
		Statement: $r3 = staticinvoke <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String,java.security.Provider)>(varReplacer2422139, $r2)
		Method: <okhttp3.internal.platform.ConscryptPlatform: javax.net.ssl.SSLContext getSSLContext()>
		SHA-256: 391fcd7a0d0813d221d131c337988dcdb2a6c8258ec6e9e8c323e3d146d8d34f
		Secure: false
	Object:
		Variable: $r0
		Type: byte[]
		Statement: $r3 = virtualinvoke $r6.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r0)
		Method: <com.tuya.smart.android.common.utils.AesGcmUtil: byte[] decryptBytes2Bytes(byte[],byte[],byte[],byte[])>
		SHA-256: e8b453c57ced4d04f065253f948fda4563662699b790e34c3930c009ce8aa14a
		Secure: false
	Object:
		Variable: $r4
		Type: javax.crypto.spec.SecretKeySpec
		Statement: specialinvoke $r4.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r0, varReplacer2596461)
		Method: <com.tuya.smart.android.network.util.AESCTRUtil: java.lang.String encrypt(byte[],byte[],java.lang.String)>
		SHA-256: 62210d568a145736f46e431c8f6314acde5467147cf20cf152a4e6ebf58b58ce
		Secure: false
	Object:
		Variable: $r2
		Type: java.security.SecureRandom
		Statement: specialinvoke $r2.<java.security.SecureRandom: void <init>()>()
		Method: <com.tuya.smart.camera.push.TuyaCameraService: void a(android.content.Intent)>
		SHA-256: 3bafcbaf94fe7d0c60fe3d5b557504c91e97b774f4af4d6e47a5bc3a55ea30ab
		Secure: true
	Object:
		Variable: $r1
		Type: java.security.SecureRandom
		Statement: specialinvoke $r1.<java.security.SecureRandom: void <init>()>()
		Method: <com.tuya.sdk.bluetooth.bddppbd: byte[] bdpdqbp()>
		SHA-256: eac5d30d9380d4b959d854db5c4dff9d0cc532de7f4866b59755dcc4a6acc2bc
		Secure: true
	Object:
		Variable: $r4
		Type: javax.crypto.spec.SecretKeySpec
		Statement: specialinvoke $r4.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r2, varReplacer2316250)
		Method: <com.tuya.sdk.bluetooth.pdpbbpd: byte[] pdqppqb(byte[],byte[],byte[])>
		SHA-256: 61372b3fad6d7b2c67216da195cf744c30fd5cc00f469ceb34357c98cf04b295
		Secure: false
	Object:
		Variable: $r4
		Type: javax.crypto.Cipher
		Statement: $r4 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>($r3)
		Method: <com.tuya.smart.android.common.utils.AESUtil: byte[] decryptWithBytes(byte[])>
		SHA-256: 9a97ab8158c304f102c41f7e78d4c53ad9fb716256d9eadfdc38ac1803ce0030
		Secure: false
	Object:
		Variable: $r3
		Type: javax.crypto.Cipher
		Statement: $r3 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String,java.lang.String)>(varReplacer3617471, varReplacer3617472)
		Method: <com.tuya.sdk.security.EncryptionManager: javax.crypto.Cipher pdqppqb(byte[],boolean)>
		SHA-256: a5679ab7f2c9d9d86fa212f0f65a2994cb07862caf9463bea7d1a299fe13fdef
		Secure: false
	Object:
		Variable: $r0
		Type: javax.crypto.spec.SecretKeySpec
		Statement: specialinvoke $r0.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r1, varReplacer1686014)
		Method: <com.tuya.smart.android.network.util.ECDHEngine: java.lang.String hmacSha256(byte[],byte[],boolean)>
		SHA-256: 4c809b1b4cdc661fdf32e8212a9fa3ac38e4cf20895c3ee68d435b1207a57d71
		Secure: false
	Object:
		Variable: varReplacer2316250
		Type: java.lang.String
		Statement: specialinvoke $r4.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r2, varReplacer2316250)
		Method: <com.tuya.sdk.bluetooth.pdpbbpd: byte[] pdqppqb(byte[],byte[],byte[])>
		SHA-256: f2e15e0962bf68a2cd4d83f21485ce55679fa8e5b15149d3db3e6f946462d229
		Secure: false
	Object:
		Variable: $r5
		Type: java.security.SecureRandom
		Statement: specialinvoke $r5.<java.security.SecureRandom: void <init>()>()
		Method: <dqz: void <init>(java.util.List,java.util.List,int)>
		SHA-256: 49c7bccf32b42282120fa846db3f96771b24189752f1a7c25a7c52f9f9d55c75
		Secure: true
	Object:
		Variable: $r3
		Type: javax.net.ssl.SSLContext
		Statement: $r3 = staticinvoke <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String)>(varReplacer945258)
		Method: <org.java_websocket.client.a: void c()>
		SHA-256: 1c0faa8dc319e23d21e93b188bec09871e5546ea17ba00361afdff49cfe45e04
		Secure: false
	Object:
		Variable: $r2
		Type: java.security.spec.ECGenParameterSpec
		Statement: specialinvoke $r2.<java.security.spec.ECGenParameterSpec: void <init>(java.lang.String)>(varReplacer2521677)
		Method: <com.tuya.bouncycastle.jcajce.provider.asymmetric.ec.KeyPairGeneratorSpi$EC: void <clinit>()>
		SHA-256: 998f0a420e86b0777ec9e5de8c963fe007c503db0ef59bd4e4f9558b0109c06f
		Secure: true
	Object:
		Variable: $r10
		Type: javax.net.ssl.KeyManagerFactory
		Statement: $r10 = staticinvoke <javax.net.ssl.KeyManagerFactory: javax.net.ssl.KeyManagerFactory getInstance(java.lang.String)>($r4)
		Method: <com.tuya.smart.alexa.speech.connect.d: javax.net.ssl.X509TrustManager a(java.io.InputStream)>
		SHA-256: b147305baef3e5dec20fd0b9f806f89c51e9f9fc6adf3120a094545c3b426eb9
		Secure: false
	Object:
		Variable: $r7
		Type: byte[]
		Statement: $r7 = virtualinvoke $r5.<java.security.MessageDigest: byte[] digest(byte[])>($r7)
		Method: <com.google.android.gms.common.util.AndroidUtilsLight: byte[] getPackageCertificateHashBytes(android.content.Context,java.lang.String)>
		SHA-256: b1b700d3bac9a15845b2a1446581968f445f05df9861b6e2918912b25ad1a23d
		Secure: false
	Object:
		Variable: $r5
		Type: javax.crypto.Cipher
		Statement: $r5 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>($r4)
		Method: <com.tuya.sdk.bluetooth.bppdpdq: byte[] bppdpdq(byte[],byte[])>
		SHA-256: 9902cf57db684ae296a372173438b02cc21b4e3c0078b828c5478e2f61c84feb
		Secure: false
	Object:
		Variable: $r0
		Type: javax.crypto.spec.SecretKeySpec
		Statement: specialinvoke $r0.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r1, varReplacer1826294)
		Method: <com.tuya.sdk.bluetooth.bppdpdq: byte[] bppdpdq(byte[],byte[])>
		SHA-256: 1209972c27856be225aa7f61383ca804b190cd20066e1bab9113fe30d56f3789
		Secure: false
	Object:
		Variable: $r0
		Type: javax.crypto.spec.SecretKeySpec
		Statement: specialinvoke $r0.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r5, varReplacer1528529)
		Method: <add: java.lang.String a(java.lang.String,java.lang.String)>
		SHA-256: f367429d13885b56ec1c5aefa8ba621f27cc56ccf1136e51a14be228aa087d2f
		Secure: false
	Object:
		Variable: $r11
		Type: java.security.PublicKey
		Statement: $r11 = virtualinvoke $r5.<java.security.KeyFactory: java.security.PublicKey generatePublic(java.security.spec.KeySpec)>($r10)
		Method: <kq: java.security.interfaces.ECPublicKey a(com.linecorp.linesdk.internal.g$b)>
		SHA-256: 5ed8732f01d59d26b95dc0383a0deb6a8e7ef8b1a7038469c2ffce3c0f47bbda
		Secure: false
	Object:
		Variable: $r0
		Type: byte[]
		Statement: $r0 = virtualinvoke $r1.<java.security.MessageDigest: byte[] digest(byte[])>($r0)
		Method: <com.tuya.smart.transferpeertopeer.b: byte[] a(byte[])>
		SHA-256: 30334e86ff925e874c9a30d60e816e380ba29a2b2bbce82e9e4ef6ae8840aa41
		Secure: false
	Object:
		Variable: varReplacer1686143
		Type: java.lang.String
		Statement: $r15 = staticinvoke <java.security.KeyFactory: java.security.KeyFactory getInstance(java.lang.String)>(varReplacer1686143)
		Method: <com.tuya.smart.android.network.util.ECDHEngine: java.security.PublicKey decodeECPoint(java.lang.String,java.lang.String)>
		SHA-256: a1e66511149f4b5f79dd333e5638a0b54eb1ad4b738e93f4d9ea9d4f8da74413
		Secure: false
	Object:
		Variable: $r3
		Type: javax.net.ssl.SSLContext
		Statement: $r3 = staticinvoke <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String)>(varReplacer2422111)
		Method: <okhttp3.internal.platform.AndroidPlatform: javax.net.ssl.SSLContext getSSLContext()>
		SHA-256: 310bc9fe53fb8cb3ba50a854a9c766e7ce89ebc19598600850d5f4c9ae158cc9
		Secure: false
	Object:
		Variable: $r7
		Type: java.security.PrivateKey
		Statement: $r7 = virtualinvoke $r4.<java.security.KeyPair: java.security.PrivateKey getPrivate()>()
		Method: <com.tuya.smart.android.network.util.ECDHEngine: com.tuya.smart.android.network.util.ECDHEngine$KeyEntity generateKeyPair(java.lang.String)>
		SHA-256: cb9f87fa754425809f9376d12042459446ff99e412ae7342c7a4d9cd71e51073
		Secure: false
	Object:
		Variable: r0
		Type: com.tuya.smart.android.common.utils.FixedSecureRandom
		Statement: specialinvoke r0.<java.security.SecureRandom: void <init>()>()
		Method: <com.tuya.smart.android.common.utils.FixedSecureRandom: void <init>()>
		SHA-256: c6036e9e7c875fe564fdde7319a908d8e330139e306440a672f8af29a3147138
		Secure: true
	Object:
		Variable: $r0
		Type: java.security.SecureRandom
		Statement: specialinvoke $r0.<java.security.SecureRandom: void <init>()>()
		Method: <afk: byte[] a()>
		SHA-256: 261fc3def6d75e6d3cb771b72f445b61c75fe7a02c3a090a8c5b4de7edc9943
		Secure: true
	Object:
		Variable: $r4
		Type: javax.crypto.Cipher
		Statement: $r4 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>($r3)
		Method: <com.tuya.smart.android.common.utils.AESUtil: byte[] encryptWithBytes(java.lang.String)>
		SHA-256: c07c92637065f9963c307700984b9b22baa6e07708cd5fd04e6038051df5143d
		Secure: false
	Object:
		Variable: varReplacer2169707
		Type: java.lang.String
		Statement: specialinvoke $r3.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r1, varReplacer2169707)
		Method: <com.amazon.identity.auth.device.datastore.AESEncryptor: javax.crypto.spec.SecretKeySpec getKeySpec()>
		SHA-256: 1b229359c83217c450047868ce73bfc579af6c813ad91653cc97718658077cb4
		Secure: false
	Object:
		Variable: $r0
		Type: java.security.SecureRandom
		Statement: specialinvoke $r0.<java.security.SecureRandom: void <init>()>()
		Method: <kf: void <clinit>()>
		SHA-256: b681c8e9c2c29fad2228bbdeb1b9077a0f9ea29354c85af6d507c4f4600a23de
		Secure: true
	Object:
		Variable: $r6
		Type: byte[]
		Statement: $r6 = virtualinvoke $r11.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r6)
		Method: <com.tuya.smart.android.thirdparty.duck.DuckTool: java.lang.String catchDuck(android.content.Context,java.lang.String,java.lang.String,long)>
		SHA-256: e3fff8ee7e5d99f403d4187b20428a2713250d8fe1f1b2da26fc0a69f4e4bab0
		Secure: false
	Object:
		Variable: $r5
		Type: java.security.SecureRandom
		Statement: specialinvoke $r5.<java.security.SecureRandom: void <init>()>()
		Method: <com.tuya.sdk.bluetooth.qpqpppd: void <init>(byte[],byte[],com.tuya.sdk.bluetooth.qpqpppd$qddqppb)>
		SHA-256: 79f98dd82021cfb933b9f3983d21ede7bfcca6e2a2ddc0b1d0f4874aa71bf307
		Secure: true
	Object:
		Variable: $r0
		Type: byte[]
		Statement: $r2 = virtualinvoke $r6.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r0)
		Method: <com.tuya.smart.android.common.utils.AesGcmUtil: byte[] encryptBytes2Bytes(byte[],byte[],byte[],byte[])>
		SHA-256: 8704d08eb3b97f79f9087331498e64c231320ebab057504efe3e966e641b4360
		Secure: false
	Object:
		Variable: r0
		Type: dte
		Statement: specialinvoke r0.<java.security.spec.ECParameterSpec: void <init>(java.security.spec.EllipticCurve,java.security.spec.ECPoint,java.math.BigInteger,int)>($r5, $r6, $r2, varReplacer4387765)
		Method: <dte: void <init>(java.lang.String,org.spongycastle.math.ec.b,org.spongycastle.math.ec.d,java.math.BigInteger)>
		SHA-256: f1f1b6288341641d2aca24b5817daacbcbfd8502debd19bbc3a0afc70eedfde
		Secure: true
	Object:
		Variable: $r5
		Type: java.security.SecureRandom
		Statement: specialinvoke $r5.<java.security.SecureRandom: void <init>()>()
		Method: <com.tuya.sdk.bluetooth.pqqpqpq: long pdqppqb(java.lang.String)>
		SHA-256: f00b5577bafba10b1bcf33ebc6326c3b1e481dd24e286137f4985e10e271af0b
		Secure: true
	Object:
		Variable: $r4
		Type: javax.crypto.Mac
		Statement: $r4 = staticinvoke <javax.crypto.Mac: javax.crypto.Mac getInstance(java.lang.String)>(varReplacer3295326)
		Method: <com.tuya.security.vas.setting.password.b: java.lang.String a(java.lang.String,java.lang.String)>
		SHA-256: 4b06f392f00961fe709564f1b28ab59895dc66028f9083dbe2f2d421a298a647
		Secure: false
	Object:
		Variable: $r2
		Type: java.security.SecureRandom
		Statement: specialinvoke $r2.<java.security.SecureRandom: void <init>()>()
		Method: <com.tuya.smart.android.network.http.dns.manager.TuyaDnsStaticIpManager: java.lang.String getIotDnsDomainIp(java.lang.String)>
		SHA-256: 632c23759378b84895af327c941e1f89fee10eab3dda56ccf391364d12793752
		Secure: true
	Object:
		Variable: $r3
		Type: javax.crypto.Mac
		Statement: $r3 = staticinvoke <javax.crypto.Mac: javax.crypto.Mac getInstance(java.lang.String)>(varReplacer2301401)
		Method: <and: java.lang.String a(java.lang.String,java.lang.String)>
		SHA-256: 3653d930e123f204e74e82687b619bc544114a1fbbda060ef2cc8997fa9fbdd3
		Secure: false
	Object:
		Variable: $r1
		Type: java.security.SecureRandom
		Statement: $r1 = staticinvoke <java.security.SecureRandom: java.security.SecureRandom getInstance(java.lang.String)>(varReplacer1765298)
		Method: <lq: java.lang.String a()>
		SHA-256: 63cc8b1d4a850773dbcba32c612cf01dfd52124c319fac131d6fdbac19148269
		Secure: true

Findings in Java Class: com.tuya.smart.android.common.utils.MD5Util

	 in Method: byte[] computeMD5Hash(byte[])
		ConstraintError violating CrySL rule for java.security.MessageDigest (on Object #4fa7c3513f1c349f1c527e91a2ba3a0e8cb08762d6056f9d8fdcda16642d7e1f)
			First parameter (with value "MD5") should be any of {SHA-256, SHA-384, SHA-512}
			at statement: $r1 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer61268)


	 in Method: byte[] computeMD5Hash(java.io.InputStream)
		TypestateError violating CrySL rule for java.security.MessageDigest (on Object #364d78e90e45f7b3a567206899fe54d8b0812f9afd59fef62a8ffef481170045)
			Unexpected call to method <java.security.MessageDigest: byte[] digest()> on object of type java.security.MessageDigest. Expect a call to one of the following methods java.security.MessageDigest: void update(byte[],int,int),java.security.MessageDigest: void update(java.nio.ByteBuffer),java.security.MessageDigest: byte[] digest(byte[]),java.security.MessageDigest: void update(byte),java.security.MessageDigest: void update(byte[])
			at statement: $r0 = virtualinvoke $r3.<java.security.MessageDigest: byte[] digest()>()

		ConstraintError violating CrySL rule for java.security.MessageDigest (on Object #364d78e90e45f7b3a567206899fe54d8b0812f9afd59fef62a8ffef481170045)
			First parameter (with value "MD5") should be any of {SHA-256, SHA-384, SHA-512}
			at statement: $r3 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer362236)


Findings in Java Class: com.tuya.fetch.g

	 in Method: okhttp3.OkHttpClient$Builder a(okhttp3.OkHttpClient$Builder)
		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			First parameter was not properly generated as generatedKeyManagers
			at statement: virtualinvoke $r7.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>(varReplacer300619, $r4, varReplacer300619)

		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			Third parameter was not properly generated as randomized
			at statement: virtualinvoke $r7.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>(varReplacer300619, $r4, varReplacer300619)

		RequiredPredicateError violating CrySL rule for javax.net.ssl.TrustManagerFactory
			First parameter was not properly generated as generatedKeyStore
			at statement: virtualinvoke $r3.<javax.net.ssl.TrustManagerFactory: void init(java.security.KeyStore)>(varReplacer300574)

		ConstraintError violating CrySL rule for javax.net.ssl.SSLContext (on Object #37ed7635268fb6ba79bc5976ac576c0a2ebb0cf4fc343e983c8395d333890c6c)
			First parameter (with value "SSL") should be any of {TLSv1.2}
			at statement: $r7 = staticinvoke <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String)>(varReplacer300606)

		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			Second parameter was not properly generated as generatedTrustManagers
			at statement: virtualinvoke $r7.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>(varReplacer300619, $r4, varReplacer300619)


Findings in Java Class: com.tuya.fetch.h

	 in Method: java.lang.String a(java.lang.String)
		ConstraintError violating CrySL rule for java.security.MessageDigest (on Object #27bfb6a26c99183f3e9e5c9ce6b6f859421350ac9b281ce1a51b6185011f320c)
			First parameter (with value "MD5") should be any of {SHA-256, SHA-384, SHA-512}
			at statement: $r3 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer300719)


Findings in Java Class: com.tuya.fetch.e

	 in Method: void b(java.lang.String,java.lang.String,com.facebook.react.bridge.Promise)
		TypestateError violating CrySL rule for java.security.MessageDigest (on Object #3d4aebdf86c4478df7780bbd70dbb7473ec6166bac0d0df64886745427ee3065)
			Unexpected call to method <java.security.MessageDigest: byte[] digest()> on object of type java.security.MessageDigest. Expect a call to one of the following methods java.security.MessageDigest: void update(byte[],int,int),java.security.MessageDigest: void update(java.nio.ByteBuffer),java.security.MessageDigest: byte[] digest(byte[]),java.security.MessageDigest: void update(byte),java.security.MessageDigest: void update(byte[])
			at statement: $r9 = virtualinvoke $r7.<java.security.MessageDigest: byte[] digest()>()


Findings in Java Class: com.tuya.smart.camera.uiview.utils.EncryptUtils

	 in Method: java.io.File encryptFile(java.lang.String,java.io.File,java.lang.String)
		IncompleteOperationError violating CrySL rule for javax.crypto.CipherInputStream (on Object #aa3812e3a9a1156004711d934e72933dbed9843e7de04982fd794def80fae1e2)
			Operation on object of type javax.crypto.CipherInputStream object not completed. Expected call to read
			at statement: specialinvoke $r19.<javax.crypto.CipherInputStream: void <init>(java.io.InputStream,javax.crypto.Cipher)>($r7, $r10)

		IncompleteOperationError violating CrySL rule for javax.crypto.Cipher (on Object #2e4047144978683477aa5a878dfa81cc0c8fba668651c9ec924848946cd119f2)
			Operation on object of type javax.crypto.Cipher object not completed. Expected call to update, wrap, doFinal
			at statement: specialinvoke $r19.<javax.crypto.CipherInputStream: void <init>(java.io.InputStream,javax.crypto.Cipher)>($r7, $r10)


	 in Method: javax.crypto.Cipher initAESCipher(byte[],java.lang.String,int)
		RequiredPredicateError violating CrySL rule for javax.crypto.Cipher
			Third parameter was not properly generated as preparedIV [ with CBC, It's required to use IVParameterSpec]
			at statement: virtualinvoke $r4.<javax.crypto.Cipher: void init(int,java.security.Key,java.security.spec.AlgorithmParameterSpec)>($i0, $r3, $r0)

		RequiredPredicateError violating CrySL rule for javax.crypto.spec.IvParameterSpec
			First parameter was not properly generated as randomized
			at statement: specialinvoke $r9.<javax.crypto.spec.IvParameterSpec: void <init>(byte[])>($r1)

		RequiredPredicateError violating CrySL rule for javax.crypto.Cipher
			Second parameter was not properly generated as generatedKey
			at statement: virtualinvoke $r4.<javax.crypto.Cipher: void init(int,java.security.Key,java.security.spec.AlgorithmParameterSpec)>($i0, $r3, $r0)

		RequiredPredicateError violating CrySL rule for javax.crypto.spec.SecretKeySpec
			First parameter was not properly generated as preparedKeyMaterial
			at statement: specialinvoke $r10.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r1, varReplacer343817)


Findings in Java Class: com.tuya.smart.camera.utils.o

	 in Method: android.graphics.Bitmap a(java.lang.String,java.lang.String)
		IncompleteOperationError violating CrySL rule for javax.crypto.Cipher (on Object #2b8cb0df318da2c886ad2c778f5b716a8d3bb86b4181c2ce98cf323088da3518)
			Operation on object of type javax.crypto.Cipher object not completed. Expected call to javax.crypto.Cipher: int doFinal(java.nio.ByteBuffer,java.nio.ByteBuffer), javax.crypto.Cipher: byte[] doFinal(byte[]), javax.crypto.Cipher: byte[] doFinal(byte[],int,int), javax.crypto.Cipher: int doFinal(byte[],int,int,byte[]), javax.crypto.Cipher: int doFinal(byte[],int,int,byte[],int), update, wrap
			at statement: $r12 = virtualinvoke $r10.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r6)

		RequiredPredicateError violating CrySL rule for javax.crypto.spec.SecretKeySpec
			First parameter was not properly generated as preparedKeyMaterial
			at statement: specialinvoke $r22.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r8, varReplacer335261)

		RequiredPredicateError violating CrySL rule for javax.crypto.spec.IvParameterSpec
			First parameter was not properly generated as randomized
			at statement: specialinvoke $r23.<javax.crypto.spec.IvParameterSpec: void <init>(byte[])>($r6)

		IncompleteOperationError violating CrySL rule for javax.crypto.Cipher (on Object #2b8cb0df318da2c886ad2c778f5b716a8d3bb86b4181c2ce98cf323088da3518)
			Operation on object of type javax.crypto.Cipher object not completed. Expected call to update, wrap, doFinal
			at statement: virtualinvoke $r10.<javax.crypto.Cipher: void init(int,java.security.Key,java.security.spec.AlgorithmParameterSpec)>(varReplacer335267, $r7, $r9)

		RequiredPredicateError violating CrySL rule for javax.crypto.Cipher
			Second parameter was not properly generated as generatedKey
			at statement: virtualinvoke $r10.<javax.crypto.Cipher: void init(int,java.security.Key,java.security.spec.AlgorithmParameterSpec)>(varReplacer335267, $r7, $r9)


	 in Method: java.lang.String a(android.content.Context,java.lang.String,java.lang.String,boolean)
		IncompleteOperationError violating CrySL rule for javax.crypto.Cipher (on Object #e6b2ef8598dcc5660e6c8b98b47333c397c8b8824cc395b1aae76a6ea9d56d17)
			Operation on object of type javax.crypto.Cipher object not completed. Expected call to javax.crypto.Cipher: int doFinal(java.nio.ByteBuffer,java.nio.ByteBuffer), javax.crypto.Cipher: byte[] doFinal(byte[]), javax.crypto.Cipher: byte[] doFinal(byte[],int,int), javax.crypto.Cipher: int doFinal(byte[],int,int,byte[]), javax.crypto.Cipher: int doFinal(byte[],int,int,byte[],int), update, wrap
			at statement: $r9 = virtualinvoke $r13.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r11)

		RequiredPredicateError violating CrySL rule for javax.crypto.spec.SecretKeySpec
			First parameter was not properly generated as preparedKeyMaterial
			at statement: specialinvoke $r23.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r11, varReplacer2710678)

		RequiredPredicateError violating CrySL rule for javax.crypto.Cipher
			Second parameter was not properly generated as generatedKey
			at statement: virtualinvoke $r13.<javax.crypto.Cipher: void init(int,java.security.Key,java.security.spec.AlgorithmParameterSpec)>(varReplacer2710689, $r10, $r12)

		IncompleteOperationError violating CrySL rule for javax.crypto.Cipher (on Object #e6b2ef8598dcc5660e6c8b98b47333c397c8b8824cc395b1aae76a6ea9d56d17)
			Operation on object of type javax.crypto.Cipher object not completed. Expected call to update, wrap, doFinal
			at statement: virtualinvoke $r13.<javax.crypto.Cipher: void init(int,java.security.Key,java.security.spec.AlgorithmParameterSpec)>(varReplacer2710689, $r10, $r12)

		RequiredPredicateError violating CrySL rule for javax.crypto.spec.IvParameterSpec
			First parameter was not properly generated as randomized
			at statement: specialinvoke $r24.<javax.crypto.spec.IvParameterSpec: void <init>(byte[])>($r9)

		RequiredPredicateError violating CrySL rule for javax.crypto.Cipher
			Third parameter was not properly generated as preparedIV [ with CBC, It's required to use IVParameterSpec]
			at statement: virtualinvoke $r13.<javax.crypto.Cipher: void init(int,java.security.Key,java.security.spec.AlgorithmParameterSpec)>(varReplacer2710689, $r10, $r12)


Findings in Java Class: com.tuya.smart.android.common.utils.MD5

	 in Method: java.lang.String md5(java.lang.String)
		ConstraintError violating CrySL rule for java.security.MessageDigest (on Object #3535dc287b604cabea6f928c5ce93adc0cf8ec3fa109adbf7295e943a6605c54)
			First parameter (with value "MD5") should be any of {SHA-256, SHA-384, SHA-512}
			at statement: $r2 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer349251)


Findings in Java Class: anb

	 in Method: byte[] a(byte[])
		ConstraintError violating CrySL rule for java.security.MessageDigest (on Object #5060f87aacc7d1cb9cf975998236e28220a4c284ec7c402176bfdcee0add9acb)
			First parameter (with value "MD5") should be any of {SHA-256, SHA-384, SHA-512}
			at statement: $r1 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer351948)


Findings in Java Class: com.tuyasmart.stencil.component.webview.util.c

	 in Method: byte[] a(byte[],java.lang.String)
		ConstraintError violating CrySL rule for java.security.MessageDigest (on Object #97652795f3c4092679b7762fe2e8a16ea58e8b9d1c1820b1afc99ae18fc739fe)
			First parameter (with value "MD5") should be any of {SHA-256, SHA-384, SHA-512}
			at statement: $r2 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>($r1)


Findings in Java Class: com.tuya.smart.android.network.TuyaSmartNetWork

	 in Method: javax.net.ssl.SSLSocketFactory systemDefaultSslSocketFactory(javax.net.ssl.X509TrustManager)
		ConstraintError violating CrySL rule for javax.net.ssl.SSLContext (on Object #76a7d32d4534fd31bd10661a843f9cec595ff849dbb9b2387087d4c7894a9dc9)
			First parameter (with value "TLS") should be any of {TLSv1.2}
			at statement: $r2 = staticinvoke <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String)>(varReplacer363500)

		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			First parameter was not properly generated as generatedKeyManagers
			at statement: virtualinvoke $r2.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>(varReplacer363518, $r6, varReplacer363518)

		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			Third parameter was not properly generated as randomized
			at statement: virtualinvoke $r2.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>(varReplacer363518, $r6, varReplacer363518)

		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			Second parameter was not properly generated as generatedTrustManagers
			at statement: virtualinvoke $r2.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>(varReplacer363518, $r6, varReplacer363518)


	 in Method: javax.net.ssl.X509TrustManager systemDefaultTrustManager()
		RequiredPredicateError violating CrySL rule for javax.net.ssl.TrustManagerFactory
			First parameter was not properly generated as generatedKeyStore
			at statement: virtualinvoke $r2.<javax.net.ssl.TrustManagerFactory: void init(java.security.KeyStore)>(varReplacer363530)


Findings in Java Class: com.tuya.smart.gzlminiapp.core.utils.c

	 in Method: java.lang.String c(java.lang.String)
		IncompleteOperationError violating CrySL rule for java.security.MessageDigest (on Object #d08deae7c904b68f59627bc4c8ff3f785d2aad10f8e4753868b3e1ea80263bbd)
			Operation on object of type java.security.MessageDigest object not completed. Expected call to digest, update
			at statement: $r1 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer372078)

		TypestateError violating CrySL rule for java.security.MessageDigest (on Object #d08deae7c904b68f59627bc4c8ff3f785d2aad10f8e4753868b3e1ea80263bbd)
			Unexpected call to method <java.security.MessageDigest: byte[] digest()> on object of type java.security.MessageDigest. Expect a call to one of the following methods java.security.MessageDigest: void update(byte[],int,int),java.security.MessageDigest: void update(java.nio.ByteBuffer),java.security.MessageDigest: byte[] digest(byte[]),java.security.MessageDigest: void update(byte),java.security.MessageDigest: void update(byte[])
			at statement: $r4 = virtualinvoke $r1.<java.security.MessageDigest: byte[] digest()>()


	 in Method: boolean a(java.lang.String,java.security.PublicKey,java.lang.String)
		RequiredPredicateError violating CrySL rule for java.security.spec.X509EncodedKeySpec
			First parameter was not properly generated as preparedKeyMaterial
			at statement: specialinvoke $r4.<java.security.spec.X509EncodedKeySpec: void <init>(byte[])>($r3)

		RequiredPredicateError violating CrySL rule for java.security.KeyFactory
			First parameter was not properly generated as speccedKey
			at statement: $r2 = virtualinvoke $r5.<java.security.KeyFactory: java.security.PublicKey generatePublic(java.security.spec.KeySpec)>($r4)

		RequiredPredicateError violating CrySL rule for java.security.Signature
			First parameter was not properly generated as generatedPubkey
			at statement: virtualinvoke $r6.<java.security.Signature: void initVerify(java.security.PublicKey)>($r2)


	 in Method: java.security.PublicKey d(java.lang.String)
		RequiredPredicateError violating CrySL rule for java.security.KeyFactory
			First parameter was not properly generated as speccedKey
			at statement: $r4 = virtualinvoke $r2.<java.security.KeyFactory: java.security.PublicKey generatePublic(java.security.spec.KeySpec)>($r0)

		RequiredPredicateError violating CrySL rule for java.security.spec.X509EncodedKeySpec
			First parameter was not properly generated as preparedKeyMaterial
			at statement: specialinvoke $r0.<java.security.spec.X509EncodedKeySpec: void <init>(byte[])>($r3)


Findings in Java Class: com.tuya.sdk.bluetooth.pdpbbpd

	 in Method: byte[] bdpdqbp(byte[],byte[],byte[])
		ConstraintError violating CrySL rule for javax.crypto.Cipher (on Object #8042154d4ab47f644baab13fd5a99457736b091fd3c07fe1dc29dea288a0c314)
			First parameter (with value "AES/CBC/NoPadding") should be any of AES/CBC/{PKCS5Padding, ISO10126Padding}
			at statement: $r5 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer410113)

		RequiredPredicateError violating CrySL rule for javax.crypto.spec.SecretKeySpec
			First parameter was not properly generated as preparedKeyMaterial
			at statement: specialinvoke $r4.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r2, varReplacer410129)

		RequiredPredicateError violating CrySL rule for javax.crypto.Cipher
			Second parameter was not properly generated as generatedKey
			at statement: virtualinvoke $r5.<javax.crypto.Cipher: void init(int,java.security.Key,java.security.spec.AlgorithmParameterSpec)>(varReplacer410115, $r4, $r1)

		RequiredPredicateError violating CrySL rule for javax.crypto.spec.IvParameterSpec
			First parameter was not properly generated as randomized
			at statement: specialinvoke $r1.<javax.crypto.spec.IvParameterSpec: void <init>(byte[])>($r3)


	 in Method: byte[] pdqppqb(byte[],byte[],byte[])
		RequiredPredicateError violating CrySL rule for javax.crypto.spec.IvParameterSpec
			First parameter was not properly generated as randomized
			at statement: specialinvoke $r1.<javax.crypto.spec.IvParameterSpec: void <init>(byte[])>($r3)

		ConstraintError violating CrySL rule for javax.crypto.Cipher (on Object #d969468c97d03204952d1314c113d0755ca9b459a0961d82ff38006fe9e55c18)
			First parameter (with value "AES/CBC/NoPadding") should be any of AES/CBC/{PKCS5Padding, ISO10126Padding}
			at statement: $r5 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer2316259)

		RequiredPredicateError violating CrySL rule for javax.crypto.Cipher
			Second parameter was not properly generated as generatedKey
			at statement: virtualinvoke $r5.<javax.crypto.Cipher: void init(int,java.security.Key,java.security.spec.AlgorithmParameterSpec)>(varReplacer2316297, $r4, $r1)

		RequiredPredicateError violating CrySL rule for javax.crypto.Cipher
			Third parameter was not properly generated as preparedIV [ with CBC, It's required to use IVParameterSpec]
			at statement: virtualinvoke $r5.<javax.crypto.Cipher: void init(int,java.security.Key,java.security.spec.AlgorithmParameterSpec)>(varReplacer2316297, $r4, $r1)

		RequiredPredicateError violating CrySL rule for javax.crypto.spec.SecretKeySpec
			First parameter was not properly generated as preparedKeyMaterial
			at statement: specialinvoke $r4.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r2, varReplacer2316250)


Findings in Java Class: com.tuya.sdk.bluetooth.bqpdbqq

	 in Method: byte[] bdpdqbp(byte[])
		ConstraintError violating CrySL rule for java.security.MessageDigest (on Object #4637c37cff9a10c499541ede716a8b4f7308096bf96736635a7b43b0d079600d)
			First parameter (with value "MD5") should be any of {SHA-256, SHA-384, SHA-512}
			at statement: $r1 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer410317)


Findings in Java Class: com.google.android.gms.common.util.AndroidUtilsLight

	 in Method: java.security.MessageDigest zza(java.lang.String)
		ConstraintError violating CrySL rule for java.security.MessageDigest (on Object #c613dcbe025721f48d3fcab4e003017d7cb704971fc9d0296bae42be0b7eb30a)
			First parameter (with value "SHA-1") should be any of {SHA-256, SHA-384, SHA-512}
			at statement: $r0 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>($r2)

		ConstraintError violating CrySL rule for java.security.MessageDigest (on Object #c613dcbe025721f48d3fcab4e003017d7cb704971fc9d0296bae42be0b7eb30a)
			First parameter (with value "SHA1") should be any of {SHA-256, SHA-384, SHA-512}
			at statement: $r0 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>($r2)

		IncompleteOperationError violating CrySL rule for java.security.MessageDigest (on Object #c613dcbe025721f48d3fcab4e003017d7cb704971fc9d0296bae42be0b7eb30a)
			Operation on object of type java.security.MessageDigest object not completed. Expected call to digest, update
			at statement: $r0 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>($r2)


	 in Method: byte[] getPackageCertificateHashBytes(android.content.Context,java.lang.String)
		IncompleteOperationError violating CrySL rule for java.security.MessageDigest (on Object #c613dcbe025721f48d3fcab4e003017d7cb704971fc9d0296bae42be0b7eb30a)
			Operation on object of type java.security.MessageDigest object not completed. Expected call to digest, update
			at statement: $r5 = staticinvoke <com.google.android.gms.common.util.AndroidUtilsLight: java.security.MessageDigest zza(java.lang.String)>(varReplacer3806190)


Findings in Java Class: com.tuya.smart.android.network.util.ECDHEngine

	 in Method: com.tuya.smart.android.network.util.ECDHEngine$KeyEntity generateKeyPair(java.lang.String)
		ConstraintError violating CrySL rule for java.security.KeyPairGenerator (on Object #17fbd5e57b1d4c6e46ab072c253be467b8f2e345603b08519d63b0b0132c205c)
			First parameter (with value "ECDH") should be any of {RSA, EC, DSA, DiffieHellman, DH}
			at statement: $r3 = staticinvoke <java.security.KeyPairGenerator: java.security.KeyPairGenerator getInstance(java.lang.String)>(varReplacer975265)

		IncompleteOperationError violating CrySL rule for java.security.KeyPairGenerator (on Object #17fbd5e57b1d4c6e46ab072c253be467b8f2e345603b08519d63b0b0132c205c)
			Operation on object of type java.security.KeyPairGenerator object not completed. Expected call to java.security.KeyPairGenerator: java.security.KeyPair generateKeyPair(), genKeyPair, java.security.KeyPairGeneratorSpi: java.security.KeyPair generateKeyPair()
			at statement: $r4 = virtualinvoke $r3.<java.security.KeyPairGenerator: java.security.KeyPair generateKeyPair()>()


	 in Method: java.lang.String hmacSha256(byte[],byte[],boolean)
		TypestateError violating CrySL rule for javax.crypto.Mac (on Object #b9651710498e8de083b402adbc3096079018d4365e264a430dbe816218b764c4)
			Unexpected call to method <javax.crypto.Mac: byte[] doFinal(byte[])> on object of type javax.crypto.Mac. Expect a call to one of the following methods javax.crypto.Mac: void doFinal(byte[],int),javax.crypto.Mac: void update(byte[]),javax.crypto.Mac: void update(byte),javax.crypto.Mac: byte[] doFinal(),javax.crypto.Mac: void update(byte[],int,int)
			at statement: $r1 = virtualinvoke $r3.<javax.crypto.Mac: byte[] doFinal(byte[])>($r2)

		RequiredPredicateError violating CrySL rule for javax.crypto.spec.SecretKeySpec
			First parameter was not properly generated as preparedKeyMaterial
			at statement: specialinvoke $r0.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r1, varReplacer1686014)


	 in Method: byte[] ecdhKey(java.lang.String,java.lang.String)
		RequiredPredicateError violating CrySL rule for java.security.KeyFactory
			First parameter was not properly generated as speccedKey
			at statement: $r5 = virtualinvoke $r3.<java.security.KeyFactory: java.security.PrivateKey generatePrivate(java.security.spec.KeySpec)>($r0)

		ConstraintError violating CrySL rule for javax.crypto.KeyAgreement (on Object #d2b7b8c5c88ae69bef903b8068c410892a89bea3cf784e55b27af87f1502d3e7)
			First parameter (with value "ECDH") should be any of {DH, DiffieHellman, NH}
			at statement: $r7 = staticinvoke <javax.crypto.KeyAgreement: javax.crypto.KeyAgreement getInstance(java.lang.String)>(varReplacer1686089)

		ConstraintError violating CrySL rule for java.security.KeyFactory (on Object #19a8c53802d888409235056dda05d3e40b99877b443d12c1bcafdad787479f06)
			First parameter (with value "ECDH") should be any of {RSA, DiffieHellman, DH, DSA, EC}
			at statement: $r3 = staticinvoke <java.security.KeyFactory: java.security.KeyFactory getInstance(java.lang.String)>(varReplacer1686079)


	 in Method: java.security.PublicKey decodeECPoint(java.lang.String,java.lang.String)
		RequiredPredicateError violating CrySL rule for java.security.KeyFactory
			First parameter was not properly generated as speccedKey
			at statement: $r16 = virtualinvoke $r15.<java.security.KeyFactory: java.security.PublicKey generatePublic(java.security.spec.KeySpec)>($r14)


Findings in Java Class: ki

	 in Method: void <init>(java.lang.String,int,boolean)
		ConstraintError violating CrySL rule for javax.crypto.SecretKeyFactory (on Object #1fda6ae2aaf73b56606cb274c75fa1a26bfd8594db3b2cad51b016290021ce5b)
			First parameter (with value "PBKDF2WithHmacSHA1") should be any of {PBKDF2WithHmacSHA512, PBKDF2WithHmacSHA384, PBKDF2WithHmacSHA256, PBKDF2WithHmacSHA224, PBEWithHmacSHA512AndAES_128, PBEWithHmacSHA384AndAES_128, PBEWithHmacSHA384AndAES_128, PBEWithHmacSHA224AndAES_128, PBEWithHmacSHA256AndAES_128, PBEWithHmacSHA224AndAES_256, PBEWithHmacSHA256AndAES_256, PBEWithHmacSHA384AndAES_256, PBEWithHmacSHA512AndAES_256}
			at statement: $r4 = staticinvoke <javax.crypto.SecretKeyFactory: javax.crypto.SecretKeyFactory getInstance(java.lang.String)>(varReplacer981484)


	 in Method: ki$a b(android.content.Context)
		RequiredPredicateError violating CrySL rule for javax.crypto.spec.PBEKeySpec
			Second parameter was not properly generated as randomized
			at statement: specialinvoke $r4.<javax.crypto.spec.PBEKeySpec: void <init>(char[],byte[],int,int)>($r5, $r3, $i0, varReplacer1577069)

		IncompleteOperationError violating CrySL rule for javax.crypto.spec.PBEKeySpec (on Object #fb12a5cc8c7c7ab37ba852bd3a174920e7c42113ed1db8bf560552813565e43)
			Operation on object of type javax.crypto.spec.PBEKeySpec object not completed. Expected call to clearPassword
			at statement: $r7 = virtualinvoke $r6.<javax.crypto.SecretKeyFactory: javax.crypto.SecretKey generateSecret(java.security.spec.KeySpec)>($r4)

		NeverTypeOfError violating CrySL rule for javax.crypto.spec.PBEKeySpec (on Object #fb12a5cc8c7c7ab37ba852bd3a174920e7c42113ed1db8bf560552813565e43)
			First parameter should never be of type java.lang.String.
			at statement: specialinvoke $r4.<javax.crypto.spec.PBEKeySpec: void <init>(char[],byte[],int,int)>($r5, $r3, $i0, varReplacer1577069)

		HardCodedError violating CrySL rule for javax.crypto.spec.PBEKeySpec (on Object #fb12a5cc8c7c7ab37ba852bd3a174920e7c42113ed1db8bf560552813565e43)
			First parameter should never be hardcoded.
			at statement: specialinvoke $r4.<javax.crypto.spec.PBEKeySpec: void <init>(char[],byte[],int,int)>($r5, $r3, $i0, varReplacer1577069)

		RequiredPredicateError violating CrySL rule for javax.crypto.spec.SecretKeySpec
			First parameter was not properly generated as preparedKeyMaterial
			at statement: specialinvoke $r8.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r9, varReplacer1577053)


	 in Method: java.lang.String a(android.content.Context,java.lang.String)
		RequiredPredicateError violating CrySL rule for javax.crypto.spec.IvParameterSpec
			First parameter was not properly generated as randomized
			at statement: specialinvoke $r7.<javax.crypto.spec.IvParameterSpec: void <init>(byte[])>($r5)


	 in Method: java.lang.String b(android.content.Context,java.lang.String)
		RequiredPredicateError violating CrySL rule for javax.crypto.spec.IvParameterSpec
			First parameter was not properly generated as randomized
			at statement: specialinvoke $r10.<javax.crypto.spec.IvParameterSpec: void <init>(byte[],int,int)>($r4, varReplacer4406702, varReplacer4406703)


Findings in Java Class: com.tuya.sdk.bluetooth.bbddqbq

	 in Method: byte[] pppbppp(byte[])
		ConstraintError violating CrySL rule for java.security.MessageDigest (on Object #471c4e4782229ccccf733ae9f4cc45d4fd4980540e6236bdf414c02111939054)
			First parameter (with value "MD5") should be any of {SHA-256, SHA-384, SHA-512}
			at statement: $r1 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer997656)


	 in Method: byte[] pdqppqb(byte[],byte[],byte[])
		RequiredPredicateError violating CrySL rule for javax.crypto.spec.IvParameterSpec
			First parameter was not properly generated as randomized
			at statement: specialinvoke $r3.<javax.crypto.spec.IvParameterSpec: void <init>(byte[])>($r2)

		ConstraintError violating CrySL rule for javax.crypto.Cipher (on Object #322d971503b3ceaa21a9e0ca25ec405b422e5b65fdb0bdf66b597cf999a3234c)
			First parameter (with value "AES/CBC/NoPadding") should be any of AES/CBC/{PKCS5Padding, ISO10126Padding}
			at statement: $r5 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer1841907)

		RequiredPredicateError violating CrySL rule for javax.crypto.Cipher
			Third parameter was not properly generated as preparedIV [ with CBC, It's required to use IVParameterSpec]
			at statement: virtualinvoke $r5.<javax.crypto.Cipher: void init(int,java.security.Key,java.security.spec.AlgorithmParameterSpec)>(varReplacer1841903, $r4, $r3)

		RequiredPredicateError violating CrySL rule for javax.crypto.Cipher
			Second parameter was not properly generated as generatedKey
			at statement: virtualinvoke $r5.<javax.crypto.Cipher: void init(int,java.security.Key,java.security.spec.AlgorithmParameterSpec)>(varReplacer1841903, $r4, $r3)

		RequiredPredicateError violating CrySL rule for javax.crypto.spec.SecretKeySpec
			First parameter was not properly generated as preparedKeyMaterial
			at statement: specialinvoke $r4.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r1, varReplacer1841906)


Findings in Java Class: com.tuya.smart.android.thirdparty.duck.DuckTool

	 in Method: java.lang.String catchDuck(android.content.Context,java.lang.String,java.lang.String,long)
		RequiredPredicateError violating CrySL rule for javax.crypto.spec.IvParameterSpec
			First parameter was not properly generated as randomized
			at statement: specialinvoke $r12.<javax.crypto.spec.IvParameterSpec: void <init>(byte[])>($r8)

		RequiredPredicateError violating CrySL rule for javax.crypto.Cipher
			Second parameter was not properly generated as generatedKey
			at statement: virtualinvoke $r11.<javax.crypto.Cipher: void init(int,java.security.Key,java.security.spec.AlgorithmParameterSpec)>(varReplacer1005711, $r13, $r14)

		RequiredPredicateError violating CrySL rule for javax.crypto.spec.SecretKeySpec
			First parameter was not properly generated as preparedKeyMaterial
			at statement: specialinvoke $r9.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r8, varReplacer1005717)

		NeverTypeOfError violating CrySL rule for javax.crypto.spec.SecretKeySpec (on Object #65728914f57dbf3e581bd78ba707681da123e5159ecf0f87ca7e56b88c78ba85)
			First parameter should never be of type java.lang.String.
			at statement: specialinvoke $r9.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r8, varReplacer1005717)


Findings in Java Class: com.tuya.smart.camera.utils.v

	 in Method: java.lang.String a(java.lang.String)
		ConstraintError violating CrySL rule for java.security.MessageDigest (on Object #8df018669fb2ec75b231339bd73f4b8141aec1c7280ae175774638c7df50b784)
			First parameter (with value "MD5") should be any of {SHA-256, SHA-384, SHA-512}
			at statement: $r2 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer1076579)


Findings in Java Class: afk

	 in Method: java.io.File b(android.content.Context,java.io.File,java.lang.String)
		RequiredPredicateError violating CrySL rule for javax.crypto.spec.SecretKeySpec
			First parameter was not properly generated as preparedKeyMaterial
			at statement: specialinvoke $r31.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r14, varReplacer1284503)

		IncompleteOperationError violating CrySL rule for javax.crypto.Cipher (on Object #4ff78c84ca15a311f2409cc969f2867ec1b545aa1398f319da2555fb0686350c)
			Operation on object of type javax.crypto.Cipher object not completed. Expected call to javax.crypto.Cipher: int doFinal(java.nio.ByteBuffer,java.nio.ByteBuffer), javax.crypto.Cipher: byte[] doFinal(byte[]), javax.crypto.Cipher: byte[] doFinal(byte[],int,int), javax.crypto.Cipher: int doFinal(byte[],int,int,byte[]), javax.crypto.Cipher: int doFinal(byte[],int,int,byte[],int), update, wrap
			at statement: $r18 = virtualinvoke $r16.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r14)

		RequiredPredicateError violating CrySL rule for javax.crypto.Cipher
			Second parameter was not properly generated as generatedKey
			at statement: virtualinvoke $r16.<javax.crypto.Cipher: void init(int,java.security.Key,java.security.spec.AlgorithmParameterSpec)>(varReplacer1284497, $r13, $r15)

		IncompleteOperationError violating CrySL rule for javax.crypto.Cipher (on Object #4ff78c84ca15a311f2409cc969f2867ec1b545aa1398f319da2555fb0686350c)
			Operation on object of type javax.crypto.Cipher object not completed. Expected call to update, wrap, doFinal
			at statement: virtualinvoke $r16.<javax.crypto.Cipher: void init(int,java.security.Key,java.security.spec.AlgorithmParameterSpec)>(varReplacer1284497, $r13, $r15)

		RequiredPredicateError violating CrySL rule for javax.crypto.spec.IvParameterSpec
			First parameter was not properly generated as randomized
			at statement: specialinvoke $r32.<javax.crypto.spec.IvParameterSpec: void <init>(byte[])>($r10)


	 in Method: java.io.File a(android.content.Context,java.io.File,java.lang.String)
		IncompleteOperationError violating CrySL rule for javax.crypto.Cipher (on Object #2d17a5947ab248ed4f5411266364717bb5669dffd52420110e175e2533ed17a1)
			Operation on object of type javax.crypto.Cipher object not completed. Expected call to javax.crypto.Cipher: int doFinal(java.nio.ByteBuffer,java.nio.ByteBuffer), javax.crypto.Cipher: byte[] doFinal(byte[]), javax.crypto.Cipher: byte[] doFinal(byte[],int,int), javax.crypto.Cipher: int doFinal(byte[],int,int,byte[]), javax.crypto.Cipher: int doFinal(byte[],int,int,byte[],int), update, wrap
			at statement: $r12 = virtualinvoke $r14.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r10)

		RequiredPredicateError violating CrySL rule for javax.crypto.spec.SecretKeySpec
			First parameter was not properly generated as preparedKeyMaterial
			at statement: specialinvoke $r23.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r12, varReplacer2312989)

		RequiredPredicateError violating CrySL rule for javax.crypto.Cipher
			Third parameter was not properly generated as preparedIV [ with CBC, It's required to use IVParameterSpec]
			at statement: virtualinvoke $r14.<javax.crypto.Cipher: void init(int,java.security.Key,java.security.spec.AlgorithmParameterSpec)>(varReplacer2312969, $r11, $r13)

		RequiredPredicateError violating CrySL rule for javax.crypto.spec.IvParameterSpec
			First parameter was not properly generated as randomized
			at statement: specialinvoke $r24.<javax.crypto.spec.IvParameterSpec: void <init>(byte[])>($r10)

		IncompleteOperationError violating CrySL rule for javax.crypto.Cipher (on Object #2d17a5947ab248ed4f5411266364717bb5669dffd52420110e175e2533ed17a1)
			Operation on object of type javax.crypto.Cipher object not completed. Expected call to update, wrap, doFinal
			at statement: virtualinvoke $r14.<javax.crypto.Cipher: void init(int,java.security.Key,java.security.spec.AlgorithmParameterSpec)>(varReplacer2312969, $r11, $r13)

		RequiredPredicateError violating CrySL rule for javax.crypto.Cipher
			Second parameter was not properly generated as generatedKey
			at statement: virtualinvoke $r14.<javax.crypto.Cipher: void init(int,java.security.Key,java.security.spec.AlgorithmParameterSpec)>(varReplacer2312969, $r11, $r13)


Findings in Java Class: com.amazon.identity.auth.device.datastore.AESEncryptor

	 in Method: void <init>(android.content.Context)
		ConstraintError violating CrySL rule for java.security.KeyStore (on Object #4bd2f9cf7b023ffcd063af1e6308f3ece28dc749d11948ddc30d631a6afd20e)
			First parameter (with value "AndroidKeyStore") should be any of {JCEKS, JKS, DKS, PKCS11, PKCS12}
			at statement: $r2 = staticinvoke <java.security.KeyStore: java.security.KeyStore getInstance(java.lang.String)>(varReplacer1317222)


	 in Method: java.lang.String encryptData(java.lang.String)
		IncompleteOperationError violating CrySL rule for javax.crypto.Cipher (on Object #9771baa305581276c5f1a5e0af5a72e1fcf4e34e7c98d244c07ae1e2ea1e9dc4)
			Operation on object of type javax.crypto.Cipher object not completed. Expected call to update, wrap, doFinal
			at statement: $r4 = staticinvoke <com.amazon.identity.auth.device.datastore.AESEncryptor: byte[] performAESCipherOperation(javax.crypto.Cipher,byte[],int,int)>($r6, $r4, varReplacer1317083, $i0)


	 in Method: java.lang.String decryptData(java.lang.String)
		IncompleteOperationError violating CrySL rule for javax.crypto.Cipher (on Object #9771baa305581276c5f1a5e0af5a72e1fcf4e34e7c98d244c07ae1e2ea1e9dc4)
			Operation on object of type javax.crypto.Cipher object not completed. Expected call to update, wrap, doFinal
			at statement: $r3 = staticinvoke <com.amazon.identity.auth.device.datastore.AESEncryptor: byte[] performAESCipherOperation(javax.crypto.Cipher,byte[],int,int)>($r5, $r3, varReplacer3587806, $i0)

		RequiredPredicateError violating CrySL rule for javax.crypto.spec.IvParameterSpec
			First parameter was not properly generated as randomized
			at statement: specialinvoke $r4.<javax.crypto.spec.IvParameterSpec: void <init>(byte[],int,int)>($r3, varReplacer3587808, varReplacer3587809)


	 in Method: void generateRSAKeysIfNeeded(android.content.Context)
		IncompleteOperationError violating CrySL rule for java.security.KeyPairGenerator (on Object #2035bf7f2781bd77ae51c3240b23ed0243956e218c08fa020cb3dfb1329cb013)
			Operation on object of type java.security.KeyPairGenerator object not completed. Expected call to java.security.KeyPairGenerator: java.security.KeyPair generateKeyPair(), genKeyPair, java.security.KeyPairGeneratorSpi: java.security.KeyPair generateKeyPair()
			at statement: virtualinvoke $r11.<java.security.KeyPairGenerator: java.security.KeyPair generateKeyPair()>()

		RequiredPredicateError violating CrySL rule for java.security.KeyPairGenerator
			First parameter was not properly generated as preparedRSA
			at statement: virtualinvoke $r11.<java.security.KeyPairGenerator: void initialize(java.security.spec.AlgorithmParameterSpec)>($r10)


	 in Method: javax.crypto.Cipher createRSACipher(int,java.lang.String,java.security.Key)
		ConstraintError violating CrySL rule for javax.crypto.Cipher (on Object #b82e9385bfb41a5c7d5e9ff715c3efff421dbd6ae9f68ef8c7b60fb635946552)
			First parameter (with value "RSA/ECB/PKCS1Padding") should be any of {AES, PBEWithHmacSHA224AndAES_128, PBEWithHmacSHA256AndAES_128, PBEWithHmacSHA384AndAES_128, PBEWithHmacSHA512AndAES_128, PBEWithHmacSHA224AndAES_256, PBEWithHmacSHA256AndAES_256, PBEWithHmacSHA384AndAES_256, PBEWithHmacSHA512AndAES_256}
			at statement: $r2 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>($r3)

		RequiredPredicateError violating CrySL rule for javax.crypto.Cipher
			Second parameter was not properly generated as generatedKey
			at statement: virtualinvoke $r2.<javax.crypto.Cipher: void init(int,java.security.Key)>($i0, $r1)


	 in Method: byte[] getDecryptedAESKey(java.lang.String)
		IncompleteOperationError violating CrySL rule for javax.crypto.Cipher (on Object #b82e9385bfb41a5c7d5e9ff715c3efff421dbd6ae9f68ef8c7b60fb635946552)
			Operation on object of type javax.crypto.Cipher object not completed. Expected call to update, wrap, doFinal
			at statement: $r7 = staticinvoke <com.amazon.identity.auth.device.datastore.AESEncryptor: byte[] performRSACipherOperation(javax.crypto.Cipher,byte[])>($r6, $r7)


	 in Method: java.lang.String encryptAESKey(byte[])
		IncompleteOperationError violating CrySL rule for javax.crypto.Cipher (on Object #b82e9385bfb41a5c7d5e9ff715c3efff421dbd6ae9f68ef8c7b60fb635946552)
			Operation on object of type javax.crypto.Cipher object not completed. Expected call to update, wrap, doFinal
			at statement: $r1 = staticinvoke <com.amazon.identity.auth.device.datastore.AESEncryptor: byte[] performRSACipherOperation(javax.crypto.Cipher,byte[])>($r6, $r1)


	 in Method: javax.crypto.Cipher createAESCipher(int,java.lang.String,java.security.spec.AlgorithmParameterSpec)
		RequiredPredicateError violating CrySL rule for javax.crypto.Cipher
			Second parameter was not properly generated as generatedKey
			at statement: virtualinvoke $r3.<javax.crypto.Cipher: void init(int,java.security.Key,java.security.spec.AlgorithmParameterSpec)>($i0, $r2, $r1)


	 in Method: javax.crypto.spec.SecretKeySpec getKeySpec()
		RequiredPredicateError violating CrySL rule for javax.crypto.spec.SecretKeySpec
			First parameter was not properly generated as preparedKeyMaterial
			at statement: specialinvoke $r3.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r1, varReplacer2169707)


Findings in Java Class: com.tuya.smart.android.common.utils.RSAUtil

	 in Method: byte[] encrypt(java.lang.String,java.security.PublicKey,byte[])
		RequiredPredicateError violating CrySL rule for javax.crypto.Cipher
			Second parameter was not properly generated as generatedKey
			at statement: virtualinvoke $r5.<javax.crypto.Cipher: void init(int,java.security.Key,java.security.SecureRandom)>(varReplacer1492360, $r3, $r4)

		ConstraintError violating CrySL rule for javax.crypto.Cipher (on Object #de5bd5ac252cb19a029b8387cab569036aebb8b079de44fdbd1a21fb7d57fd3f)
			First parameter (with value "RSA") should be any of {AES, PBEWithHmacSHA224AndAES_128, PBEWithHmacSHA256AndAES_128, PBEWithHmacSHA384AndAES_128, PBEWithHmacSHA512AndAES_128, PBEWithHmacSHA224AndAES_256, PBEWithHmacSHA256AndAES_256, PBEWithHmacSHA384AndAES_256, PBEWithHmacSHA512AndAES_256}
			at statement: $r5 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>($r2)

		IncompleteOperationError violating CrySL rule for javax.crypto.Cipher (on Object #de5bd5ac252cb19a029b8387cab569036aebb8b079de44fdbd1a21fb7d57fd3f)
			Operation on object of type javax.crypto.Cipher object not completed. Expected call to javax.crypto.Cipher: int doFinal(java.nio.ByteBuffer,java.nio.ByteBuffer), javax.crypto.Cipher: byte[] doFinal(byte[]), javax.crypto.Cipher: byte[] doFinal(byte[],int,int), javax.crypto.Cipher: int doFinal(byte[],int,int,byte[]), javax.crypto.Cipher: int doFinal(byte[],int,int,byte[],int), update, wrap
			at statement: virtualinvoke $r5.<javax.crypto.Cipher: int doFinal(byte[],int,int,byte[],int)>($r0, $i0, $i4, $r1, $i5)

		IncompleteOperationError violating CrySL rule for javax.crypto.Cipher (on Object #de5bd5ac252cb19a029b8387cab569036aebb8b079de44fdbd1a21fb7d57fd3f)
			Operation on object of type javax.crypto.Cipher object not completed. Expected call to javax.crypto.Cipher: int doFinal(java.nio.ByteBuffer,java.nio.ByteBuffer), javax.crypto.Cipher: byte[] doFinal(byte[]), javax.crypto.Cipher: byte[] doFinal(byte[],int,int), javax.crypto.Cipher: int doFinal(byte[],int,int,byte[]), javax.crypto.Cipher: int doFinal(byte[],int,int,byte[],int), update, wrap
			at statement: virtualinvoke $r5.<javax.crypto.Cipher: int doFinal(byte[],int,int,byte[],int)>($r0, $i0, $i1, $r1, $i4)

		IncompleteOperationError violating CrySL rule for javax.crypto.Cipher (on Object #de5bd5ac252cb19a029b8387cab569036aebb8b079de44fdbd1a21fb7d57fd3f)
			Operation on object of type javax.crypto.Cipher object not completed. Expected call to update, wrap, doFinal
			at statement: $i2 = virtualinvoke $r5.<javax.crypto.Cipher: int getOutputSize(int)>($i2)


	 in Method: java.security.interfaces.RSAPublicKey generateRSAPublicKey(java.lang.String,java.math.BigInteger,java.math.BigInteger)
		RequiredPredicateError violating CrySL rule for java.security.KeyFactory
			First parameter was not properly generated as speccedKey
			at statement: $r5 = virtualinvoke $r3.<java.security.KeyFactory: java.security.PublicKey generatePublic(java.security.spec.KeySpec)>($r4)


Findings in Java Class: add

	 in Method: java.lang.String a(java.lang.String,java.lang.String)
		RequiredPredicateError violating CrySL rule for javax.crypto.Cipher
			Second parameter was not properly generated as generatedKey
			at statement: virtualinvoke $r3.<javax.crypto.Cipher: void init(int,java.security.Key)>(varReplacer1528468, $r0)

		ConstraintError violating CrySL rule for javax.crypto.Cipher (on Object #522d24a225f48743fa7e83d22fddd0336a0d0bc531f9c8f20b33584ee3b50bd8)
			First parameter (with value "AES/ECB/PKCS5Padding") should be any of AES/{CBC, GCM, PCBC, CTR, CTS, CFB, OFB}
			at statement: $r3 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer1528475)

		RequiredPredicateError violating CrySL rule for javax.crypto.spec.SecretKeySpec
			First parameter was not properly generated as preparedKeyMaterial
			at statement: specialinvoke $r0.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r5, varReplacer1528529)


Findings in Java Class: com.tuya.smart.p2p.e

	 in Method: java.lang.String a(java.lang.String)
		ConstraintError violating CrySL rule for java.security.MessageDigest (on Object #f136de17f7ec9bf121777aa15b5b2ca9f391522d80b868ea64c841e540fa4531)
			First parameter (with value "MD5") should be any of {SHA-256, SHA-384, SHA-512}
			at statement: $r2 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer1534495)


Findings in Java Class: com.tuya.smart.android.network.util.AESCBCUtil

	 in Method: java.lang.String encrypt(byte[],java.lang.String,java.lang.String)
		RequiredPredicateError violating CrySL rule for javax.crypto.Cipher
			Second parameter was not properly generated as generatedKey
			at statement: virtualinvoke $r6.<javax.crypto.Cipher: void init(int,java.security.Key,java.security.spec.AlgorithmParameterSpec)>(varReplacer1686071, $r5, $r3)

		RequiredPredicateError violating CrySL rule for javax.crypto.spec.SecretKeySpec
			First parameter was not properly generated as preparedKeyMaterial
			at statement: specialinvoke $r5.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r0, varReplacer1686053)

		ConstraintError violating CrySL rule for javax.crypto.Cipher (on Object #2073ade871cfa547472538408a68de3f67e28ae296408659f06c6a05dfa6fcbe)
			First parameter (with value "AES/CBC/PKCS7PADDING") should be any of AES/CBC/{PKCS5Padding, ISO10126Padding}
			at statement: $r6 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer1686058)

		RequiredPredicateError violating CrySL rule for javax.crypto.Cipher
			Third parameter was not properly generated as preparedIV [ with CBC, It's required to use IVParameterSpec]
			at statement: virtualinvoke $r6.<javax.crypto.Cipher: void init(int,java.security.Key,java.security.spec.AlgorithmParameterSpec)>(varReplacer1686071, $r5, $r3)

		RequiredPredicateError violating CrySL rule for javax.crypto.spec.IvParameterSpec
			First parameter was not properly generated as randomized
			at statement: specialinvoke $r3.<javax.crypto.spec.IvParameterSpec: void <init>(byte[])>($r4)


Findings in Java Class: cjd

	 in Method: java.lang.String a(java.io.File)
		TypestateError violating CrySL rule for java.security.MessageDigest (on Object #5a2cbf0335fb13a7977b04bb81b4e70edcd95df9eae6a3d5236f43f09e4e6c0e)
			Unexpected call to method <java.security.MessageDigest: byte[] digest()> on object of type java.security.MessageDigest. Expect a call to one of the following methods java.security.MessageDigest: void update(byte[],int,int),java.security.MessageDigest: void update(java.nio.ByteBuffer),java.security.MessageDigest: byte[] digest(byte[]),java.security.MessageDigest: void update(byte),java.security.MessageDigest: void update(byte[])
			at statement: $r0 = virtualinvoke $r3.<java.security.MessageDigest: byte[] digest()>()

		ConstraintError violating CrySL rule for java.security.MessageDigest (on Object #5a2cbf0335fb13a7977b04bb81b4e70edcd95df9eae6a3d5236f43f09e4e6c0e)
			First parameter (with value "MD5") should be any of {SHA-256, SHA-384, SHA-512}
			at statement: $r3 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer1686730)


Findings in Java Class: com.tuyasmart.stencil.component.webview.connect.e

	 in Method: com.tuyasmart.stencil.component.webview.connect.g b(com.tuyasmart.stencil.component.webview.connect.f)
		ConstraintError violating CrySL rule for javax.net.ssl.SSLContext (on Object #29089790c91b779dfec93be95ea4a683f19f46f0423b28fbb39c207e091a4eff)
			First parameter (with value "TLS") should be any of {TLSv1.2}
			at statement: $r13 = staticinvoke <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String)>(varReplacer1703238)

		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			First parameter was not properly generated as generatedKeyManagers
			at statement: virtualinvoke $r13.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>(varReplacer1703363, $r103, $r14)

		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			Third parameter was not properly generated as randomized
			at statement: virtualinvoke $r13.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>(varReplacer1703363, $r103, $r14)

		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			Second parameter was not properly generated as generatedTrustManagers
			at statement: virtualinvoke $r13.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>(varReplacer1703363, $r103, $r14)


Findings in Java Class: com.google.android.play.core.assetpacks.bw

	 in Method: java.lang.String a(java.util.List)
		ConstraintError violating CrySL rule for java.security.MessageDigest (on Object #2351299e69aeac1f38289271d178917b37b5047dac3345a79cf47a6e99670c33)
			First parameter (with value "SHA256") should be any of {SHA-256, SHA-384, SHA-512}
			at statement: $r2 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer1715441)

		TypestateError violating CrySL rule for java.security.MessageDigest (on Object #2351299e69aeac1f38289271d178917b37b5047dac3345a79cf47a6e99670c33)
			Unexpected call to method <java.security.MessageDigest: byte[] digest()> on object of type java.security.MessageDigest. Expect a call to one of the following methods java.security.MessageDigest: void update(byte[],int,int),java.security.MessageDigest: void update(java.nio.ByteBuffer),java.security.MessageDigest: byte[] digest(byte[]),java.security.MessageDigest: void update(byte),java.security.MessageDigest: void update(byte[])
			at statement: $r3 = virtualinvoke $r2.<java.security.MessageDigest: byte[] digest()>()


Findings in Java Class: com

	 in Method: java.io.File a(java.lang.String,java.io.InputStream,java.io.File)
		IncompleteOperationError violating CrySL rule for javax.crypto.CipherOutputStream (on Object #d0257ee94da544cc478d7dfb4d8ed2ac845d55b3a4d5a6a5b345f0ecc7783a80)
			Operation on object of type javax.crypto.CipherOutputStream object not completed. Expected call to write
			at statement: specialinvoke $r18.<javax.crypto.CipherOutputStream: void <init>(java.io.OutputStream,javax.crypto.Cipher)>($r5, $r7)

		IncompleteOperationError violating CrySL rule for javax.crypto.Cipher (on Object #5a9358b399dd804a394c46d97c11c0372b74db92c85067d324687e15c7a9bea5)
			Operation on object of type javax.crypto.Cipher object not completed. Expected call to update, wrap, doFinal
			at statement: specialinvoke $r18.<javax.crypto.CipherOutputStream: void <init>(java.io.OutputStream,javax.crypto.Cipher)>($r5, $r7)


	 in Method: javax.crypto.Cipher a(byte[],java.lang.String,int)
		RequiredPredicateError violating CrySL rule for javax.crypto.spec.SecretKeySpec
			First parameter was not properly generated as preparedKeyMaterial
			at statement: specialinvoke $r10.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r1, varReplacer1725390)

		RequiredPredicateError violating CrySL rule for javax.crypto.Cipher
			Second parameter was not properly generated as generatedKey
			at statement: virtualinvoke $r4.<javax.crypto.Cipher: void init(int,java.security.Key,java.security.spec.AlgorithmParameterSpec)>($i0, $r3, $r0)

		RequiredPredicateError violating CrySL rule for javax.crypto.spec.IvParameterSpec
			First parameter was not properly generated as randomized
			at statement: specialinvoke $r9.<javax.crypto.spec.IvParameterSpec: void <init>(byte[])>($r1)


Findings in Java Class: cqp

	 in Method: java.io.File a(java.lang.String,java.io.InputStream,java.io.File)
		IncompleteOperationError violating CrySL rule for javax.crypto.Cipher (on Object #a3eadfd27ef5cf1dae1093756c491421fb4dda6b78adbb14728289a1f7368e87)
			Operation on object of type javax.crypto.Cipher object not completed. Expected call to update, wrap, doFinal
			at statement: specialinvoke $r18.<javax.crypto.CipherOutputStream: void <init>(java.io.OutputStream,javax.crypto.Cipher)>($r5, $r7)

		IncompleteOperationError violating CrySL rule for javax.crypto.CipherOutputStream (on Object #85df3e73abbd1cff414df03aca0d379712dd95ced4df6645eefc9c78087b6db2)
			Operation on object of type javax.crypto.CipherOutputStream object not completed. Expected call to write
			at statement: specialinvoke $r18.<javax.crypto.CipherOutputStream: void <init>(java.io.OutputStream,javax.crypto.Cipher)>($r5, $r7)


	 in Method: java.io.File a(java.lang.String,java.io.File,java.lang.String)
		IncompleteOperationError violating CrySL rule for javax.crypto.Cipher (on Object #a3eadfd27ef5cf1dae1093756c491421fb4dda6b78adbb14728289a1f7368e87)
			Operation on object of type javax.crypto.Cipher object not completed. Expected call to update, wrap, doFinal
			at statement: specialinvoke $r19.<javax.crypto.CipherInputStream: void <init>(java.io.InputStream,javax.crypto.Cipher)>($r7, $r10)

		IncompleteOperationError violating CrySL rule for javax.crypto.CipherInputStream (on Object #64e1aaf6cc268be8de64056a45154b60c640193ca57b02956b5dc4d992e4a957)
			Operation on object of type javax.crypto.CipherInputStream object not completed. Expected call to read
			at statement: specialinvoke $r19.<javax.crypto.CipherInputStream: void <init>(java.io.InputStream,javax.crypto.Cipher)>($r7, $r10)


	 in Method: javax.crypto.Cipher a(byte[],java.lang.String,int)
		RequiredPredicateError violating CrySL rule for javax.crypto.Cipher
			Second parameter was not properly generated as generatedKey
			at statement: virtualinvoke $r4.<javax.crypto.Cipher: void init(int,java.security.Key,java.security.spec.AlgorithmParameterSpec)>($i0, $r3, $r0)

		RequiredPredicateError violating CrySL rule for javax.crypto.spec.SecretKeySpec
			First parameter was not properly generated as preparedKeyMaterial
			at statement: specialinvoke $r10.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r1, varReplacer1725508)

		RequiredPredicateError violating CrySL rule for javax.crypto.spec.IvParameterSpec
			First parameter was not properly generated as randomized
			at statement: specialinvoke $r9.<javax.crypto.spec.IvParameterSpec: void <init>(byte[])>($r1)


Findings in Java Class: com.facebook.common.util.SecureHashUtil

	 in Method: java.lang.String makeSHA1HashBase64(byte[])
		ConstraintError violating CrySL rule for java.security.MessageDigest (on Object #db03d8192c32d2bd54781513d774dc1fff7b37bda68153936d7ff1ea91b6c78f)
			First parameter (with value "SHA-1") should be any of {SHA-256, SHA-384, SHA-512}
			at statement: $r1 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer1845782)


Findings in Java Class: com.tuya.smart.alexa.speech.connect.d

	 in Method: void <init>()
		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			Third parameter was not properly generated as randomized
			at statement: virtualinvoke $r3.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>(varReplacer1846950, $r8, varReplacer1846950)

		ConstraintError violating CrySL rule for javax.net.ssl.SSLContext (on Object #15e103c49573c6eb05e7e4ad235b51e498c73e3679f7f798ae6c1516bb23940a)
			First parameter (with value "TLS") should be any of {TLSv1.2}
			at statement: $r3 = staticinvoke <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String)>(varReplacer1846949)

		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			First parameter was not properly generated as generatedKeyManagers
			at statement: virtualinvoke $r3.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>(varReplacer1846950, $r8, varReplacer1846950)

		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			Second parameter was not properly generated as generatedTrustManagers
			at statement: virtualinvoke $r3.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>(varReplacer1846950, $r8, varReplacer1846950)


	 in Method: javax.net.ssl.X509TrustManager a(java.io.InputStream)
		RequiredPredicateError violating CrySL rule for javax.net.ssl.TrustManagerFactory
			First parameter was not properly generated as generatedKeyStore
			at statement: virtualinvoke $r11.<javax.net.ssl.TrustManagerFactory: void init(java.security.KeyStore)>($r6)

		RequiredPredicateError violating CrySL rule for javax.net.ssl.KeyManagerFactory
			First parameter was not properly generated as generatedKeyStore
			at statement: virtualinvoke $r10.<javax.net.ssl.KeyManagerFactory: void init(java.security.KeyStore,char[])>($r6, $r5)

		NeverTypeOfError violating CrySL rule for javax.net.ssl.KeyManagerFactory (on Object #b147305baef3e5dec20fd0b9f806f89c51e9f9fc6adf3120a094545c3b426eb9)
			Second parameter should never be of type java.lang.String.
			at statement: virtualinvoke $r10.<javax.net.ssl.KeyManagerFactory: void init(java.security.KeyStore,char[])>($r6, $r5)

		HardCodedError violating CrySL rule for javax.net.ssl.KeyManagerFactory (on Object #b147305baef3e5dec20fd0b9f806f89c51e9f9fc6adf3120a094545c3b426eb9)
			Second parameter should never be hardcoded.
			at statement: virtualinvoke $r10.<javax.net.ssl.KeyManagerFactory: void init(java.security.KeyStore,char[])>($r6, $r5)


	 in Method: java.security.KeyStore a(char[])
		NeverTypeOfError violating CrySL rule for java.security.KeyStore (on Object #d77c0ae4e2c68f06bf04e2cf0402c8c87e43082dc728a9bda557190e6d0c2e84)
			Second parameter should never be of type java.lang.String.
			at statement: virtualinvoke $r3.<java.security.KeyStore: void load(java.io.InputStream,char[])>(varReplacer3177176, $r1)

		HardCodedError violating CrySL rule for java.security.KeyStore (on Object #d77c0ae4e2c68f06bf04e2cf0402c8c87e43082dc728a9bda557190e6d0c2e84)
			Second parameter should never be hardcoded.
			at statement: virtualinvoke $r3.<java.security.KeyStore: void load(java.io.InputStream,char[])>(varReplacer3177176, $r1)


Findings in Java Class: com.tuya.smart.android.common.utils.AESUtil

	 in Method: byte[] encryptWithBytes(byte[])
		ConstraintError violating CrySL rule for javax.crypto.Cipher (on Object #c07c92637065f9963c307700984b9b22baa6e07708cd5fd04e6038051df5143d)
			First parameter (with value "AES") should be any of AES/{CBC, GCM, PCBC, CTR, CTS, CFB, OFB}
			at statement: $r4 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>($r3)

		RequiredPredicateError violating CrySL rule for javax.crypto.Cipher
			Second parameter was not properly generated as generatedKey
			at statement: virtualinvoke $r4.<javax.crypto.Cipher: void init(int,java.security.Key)>(varReplacer1852375, $r2)


	 in Method: byte[] encryptWithBytes(java.lang.String)
		RequiredPredicateError violating CrySL rule for javax.crypto.Cipher
			Second parameter was not properly generated as generatedKey
			at statement: virtualinvoke $r4.<javax.crypto.Cipher: void init(int,java.security.Key)>(varReplacer2629322, $r2)

		ConstraintError violating CrySL rule for javax.crypto.Cipher (on Object #c07c92637065f9963c307700984b9b22baa6e07708cd5fd04e6038051df5143d)
			First parameter (with value "AES") should be any of AES/{CBC, GCM, PCBC, CTR, CTS, CFB, OFB}
			at statement: $r4 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>($r3)


	 in Method: java.lang.String decryptWithBase64(java.lang.String)
		RequiredPredicateError violating CrySL rule for javax.crypto.Cipher
			Second parameter was not properly generated as generatedKey
			at statement: virtualinvoke $r4.<javax.crypto.Cipher: void init(int,java.security.Key)>(varReplacer3502981, $r2)

		ConstraintError violating CrySL rule for javax.crypto.Cipher (on Object #73279fcdf8f3ca9f352ab916e0f36b579a36dc46c69387d1c60ba0e3eba76d2b)
			First parameter (with value "AES") should be any of AES/{CBC, GCM, PCBC, CTR, CTS, CFB, OFB}
			at statement: $r4 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>($r3)


	 in Method: java.lang.String encryptWithBase64(java.lang.String)
		RequiredPredicateError violating CrySL rule for javax.crypto.Cipher
			Second parameter was not properly generated as generatedKey
			at statement: virtualinvoke $r4.<javax.crypto.Cipher: void init(int,java.security.Key)>(varReplacer3515487, $r2)

		ConstraintError violating CrySL rule for javax.crypto.Cipher (on Object #52cbc22322ffedac3ccaaaa5b6117d4a593a771c212e4a4e460c3b84ad397a31)
			First parameter (with value "AES") should be any of AES/{CBC, GCM, PCBC, CTR, CTS, CFB, OFB}
			at statement: $r4 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>($r3)


	 in Method: byte[] decryptWithBytes(byte[])
		ConstraintError violating CrySL rule for javax.crypto.Cipher (on Object #9a97ab8158c304f102c41f7e78d4c53ad9fb716256d9eadfdc38ac1803ce0030)
			First parameter (with value "AES") should be any of AES/{CBC, GCM, PCBC, CTR, CTS, CFB, OFB}
			at statement: $r4 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>($r3)

		RequiredPredicateError violating CrySL rule for javax.crypto.Cipher
			Second parameter was not properly generated as generatedKey
			at statement: virtualinvoke $r4.<javax.crypto.Cipher: void init(int,java.security.Key)>(varReplacer3617437, $r2)


	 in Method: java.lang.String encrypt(java.lang.String)
		ConstraintError violating CrySL rule for javax.crypto.Cipher (on Object #1053fd1204fd79e79f1988d177e7dfe5968736074acfe778afed99fad39bfaa6)
			First parameter (with value "AES") should be any of AES/{CBC, GCM, PCBC, CTR, CTS, CFB, OFB}
			at statement: $r4 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>($r3)

		RequiredPredicateError violating CrySL rule for javax.crypto.Cipher
			Second parameter was not properly generated as generatedKey
			at statement: virtualinvoke $r4.<javax.crypto.Cipher: void init(int,java.security.Key)>(varReplacer3840305, $r2)


	 in Method: java.lang.String decrypt(byte[])
		ConstraintError violating CrySL rule for javax.crypto.Cipher (on Object #d20a17eedf9d76fdc72dd37c023530af2c2764050615a9f141cf62f05b85cd92)
			First parameter (with value "AES") should be any of AES/{CBC, GCM, PCBC, CTR, CTS, CFB, OFB}
			at statement: $r4 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>($r3)

		RequiredPredicateError violating CrySL rule for javax.crypto.Cipher
			Second parameter was not properly generated as generatedKey
			at statement: virtualinvoke $r4.<javax.crypto.Cipher: void init(int,java.security.Key)>(varReplacer4178779, $r2)


	 in Method: java.lang.String decrypt(java.lang.String)
		RequiredPredicateError violating CrySL rule for javax.crypto.Cipher
			Second parameter was not properly generated as generatedKey
			at statement: virtualinvoke $r4.<javax.crypto.Cipher: void init(int,java.security.Key)>(varReplacer4247081, $r2)

		ConstraintError violating CrySL rule for javax.crypto.Cipher (on Object #d20a17eedf9d76fdc72dd37c023530af2c2764050615a9f141cf62f05b85cd92)
			First parameter (with value "AES") should be any of AES/{CBC, GCM, PCBC, CTR, CTS, CFB, OFB}
			at statement: $r4 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>($r3)


	 in Method: java.security.Key generateKey()
		RequiredPredicateError violating CrySL rule for javax.crypto.spec.SecretKeySpec
			First parameter was not properly generated as preparedKeyMaterial
			at statement: specialinvoke $r3.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r1, $r2)


Findings in Java Class: com.tuya.smart.transferpeertopeer.b

	 in Method: byte[] a(byte[])
		ConstraintError violating CrySL rule for java.security.MessageDigest (on Object #d2245b134b692c2c5d731d48f6b82d0232009fdd027b45c511faace57f2cd323)
			First parameter (with value "MD5") should be any of {SHA-256, SHA-384, SHA-512}
			at statement: $r1 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer1964603)


Findings in Java Class: com.tuya.smart.camera.utils.m

	 in Method: byte[] a(byte[],java.lang.String)
		RequiredPredicateError violating CrySL rule for javax.crypto.spec.SecretKeySpec
			First parameter was not properly generated as preparedKeyMaterial
			at statement: specialinvoke $r0.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r4, $r2)

		TypestateError violating CrySL rule for javax.crypto.Mac (on Object #64d6330a604b5022947fa38bb1ea141f131686d0d2d24c6947f516ed16571c6a)
			Unexpected call to method <javax.crypto.Mac: byte[] doFinal(byte[])> on object of type javax.crypto.Mac. Expect a call to one of the following methods javax.crypto.Mac: void doFinal(byte[],int),javax.crypto.Mac: void update(byte[]),javax.crypto.Mac: void update(byte),javax.crypto.Mac: byte[] doFinal(),javax.crypto.Mac: void update(byte[],int,int)
			at statement: $r1 = virtualinvoke $r3.<javax.crypto.Mac: byte[] doFinal(byte[])>($r1)


Findings in Java Class: com.tuya.sdk.security.EncryptionManager

	 in Method: void bppdpdq()
		ConstraintError violating CrySL rule for java.security.KeyStore (on Object #2488e2f41f2e52483b36f7cd1738f8dc0670d3fe0ef35fa84d163417cdaac6d2)
			First parameter (with value "AndroidKeyStore") should be any of {JCEKS, JKS, DKS, PKCS11, PKCS12}
			at statement: $r1 = staticinvoke <java.security.KeyStore: java.security.KeyStore getInstance(java.lang.String)>(varReplacer2012370)


	 in Method: boolean bdpdqbp(android.content.Context,byte[])
		RequiredPredicateError violating CrySL rule for java.security.KeyPairGenerator
			First parameter was not properly generated as preparedRSA
			at statement: virtualinvoke $r5.<java.security.KeyPairGenerator: void initialize(java.security.spec.AlgorithmParameterSpec)>($r12)

		IncompleteOperationError violating CrySL rule for java.security.KeyPairGenerator (on Object #4122eff8933fb1cff9b0d26a211be32eeebe3999360dab5a4d4c5a56de0a4586)
			Operation on object of type java.security.KeyPairGenerator object not completed. Expected call to java.security.KeyPairGenerator: java.security.KeyPair generateKeyPair(), genKeyPair, initialize, java.security.KeyPairGeneratorSpi: java.security.KeyPair generateKeyPair()
			at statement: virtualinvoke $r5.<java.security.KeyPairGenerator: java.security.KeyPair generateKeyPair()>()

		IncompleteOperationError violating CrySL rule for java.security.KeyPairGenerator (on Object #1136227a00cae2813901e1d07623293788fee33949336bc2d42aeab82b5192e5)
			Operation on object of type java.security.KeyPairGenerator object not completed. Expected call to java.security.KeyPairGenerator: java.security.KeyPair generateKeyPair(), genKeyPair, initialize, java.security.KeyPairGeneratorSpi: java.security.KeyPair generateKeyPair()
			at statement: virtualinvoke $r5.<java.security.KeyPairGenerator: java.security.KeyPair generateKeyPair()>()

		TypestateError violating CrySL rule for java.security.KeyPairGenerator (on Object #4122eff8933fb1cff9b0d26a211be32eeebe3999360dab5a4d4c5a56de0a4586)
			Unexpected call to method generateKeyPair on object of type java.security.KeyPairGenerator. Expect a call to one of the following methods initialize
			at statement: virtualinvoke $r5.<java.security.KeyPairGenerator: java.security.KeyPair generateKeyPair()>()

		TypestateError violating CrySL rule for java.security.KeyPairGenerator (on Object #1136227a00cae2813901e1d07623293788fee33949336bc2d42aeab82b5192e5)
			Unexpected call to method generateKeyPair on object of type java.security.KeyPairGenerator. Expect a call to one of the following methods initialize
			at statement: virtualinvoke $r5.<java.security.KeyPairGenerator: java.security.KeyPair generateKeyPair()>()

		IncompleteOperationError violating CrySL rule for java.security.KeyPairGenerator (on Object #4122eff8933fb1cff9b0d26a211be32eeebe3999360dab5a4d4c5a56de0a4586)
			Operation on object of type java.security.KeyPairGenerator object not completed. Expected call to initialize
			at statement: $r5 = staticinvoke <java.security.KeyPairGenerator: java.security.KeyPairGenerator getInstance(java.lang.String,java.lang.String)>(varReplacer3262885, varReplacer3262886)

		IncompleteOperationError violating CrySL rule for java.security.KeyPairGenerator (on Object #4122eff8933fb1cff9b0d26a211be32eeebe3999360dab5a4d4c5a56de0a4586)
			Operation on object of type java.security.KeyPairGenerator object not completed. Expected call to initialize
			at statement: $r5 = staticinvoke <java.security.KeyPairGenerator: java.security.KeyPairGenerator getInstance(java.lang.String,java.lang.String)>(varReplacer3262896, varReplacer3262897)

		IncompleteOperationError violating CrySL rule for java.security.KeyPairGenerator (on Object #1136227a00cae2813901e1d07623293788fee33949336bc2d42aeab82b5192e5)
			Operation on object of type java.security.KeyPairGenerator object not completed. Expected call to initialize
			at statement: $r5 = staticinvoke <java.security.KeyPairGenerator: java.security.KeyPairGenerator getInstance(java.lang.String,java.lang.String)>(varReplacer3262885, varReplacer3262886)

		IncompleteOperationError violating CrySL rule for java.security.KeyPairGenerator (on Object #1136227a00cae2813901e1d07623293788fee33949336bc2d42aeab82b5192e5)
			Operation on object of type java.security.KeyPairGenerator object not completed. Expected call to initialize
			at statement: $r5 = staticinvoke <java.security.KeyPairGenerator: java.security.KeyPairGenerator getInstance(java.lang.String,java.lang.String)>(varReplacer3262896, varReplacer3262897)


	 in Method: javax.crypto.Cipher pdqppqb(byte[],boolean)
		RequiredPredicateError violating CrySL rule for javax.crypto.Cipher
			Second parameter was not properly generated as generatedKey
			at statement: virtualinvoke $r3.<javax.crypto.Cipher: void init(int,java.security.Key,java.security.spec.AlgorithmParameterSpec)>($b0, $r4, $r2)

		ConstraintError violating CrySL rule for javax.crypto.Cipher (on Object #a5679ab7f2c9d9d86fa212f0f65a2994cb07862caf9463bea7d1a299fe13fdef)
			First parameter (with value "AES/CBC/PKCS7Padding") should be any of AES/CBC/{PKCS5Padding, ISO10126Padding}
			at statement: $r3 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String,java.lang.String)>(varReplacer3617471, varReplacer3617472)


	 in Method: byte[] qddqppb(byte[])
		TypestateError violating CrySL rule for javax.crypto.Mac (on Object #9f100cbdd252d7c6ae4969325576a31e5d412d96444d7eaa1cd933805d174a83)
			Unexpected call to method <javax.crypto.Mac: byte[] doFinal(byte[])> on object of type javax.crypto.Mac. Expect a call to one of the following methods javax.crypto.Mac: void doFinal(byte[],int),javax.crypto.Mac: void update(byte[]),javax.crypto.Mac: void update(byte),javax.crypto.Mac: byte[] doFinal(),javax.crypto.Mac: void update(byte[],int,int)
			at statement: $r2 = virtualinvoke $r3.<javax.crypto.Mac: byte[] doFinal(byte[])>($r2)


	 in Method: byte[] pdqppqb(byte[])
		IncompleteOperationError violating CrySL rule for javax.crypto.Cipher (on Object #3075154bcd0aea176f82ac8168ead067fb4ba7da7b721d691e88ad895263ceb8)
			Operation on object of type javax.crypto.Cipher object not completed. Expected call to update, wrap, doFinal
			at statement: specialinvoke $r5.<javax.crypto.CipherOutputStream: void <init>(java.io.OutputStream,javax.crypto.Cipher)>($r4, $r2)

		RequiredPredicateError violating CrySL rule for javax.crypto.Cipher
			Second parameter was not properly generated as generatedKey
			at statement: virtualinvoke $r2.<javax.crypto.Cipher: void init(int,java.security.Key)>(varReplacer3626815, $r3)

		ConstraintError violating CrySL rule for javax.crypto.Cipher (on Object #3075154bcd0aea176f82ac8168ead067fb4ba7da7b721d691e88ad895263ceb8)
			First parameter (with value "RSA/NONE/PKCS1Padding") should be any of RSA/{Empty String, ECB}
			at statement: $r2 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String,java.lang.String)>(varReplacer3626827, varReplacer3626828)

		RequiredPredicateError violating CrySL rule for javax.crypto.CipherOutputStream
			Second parameter was not properly generated as generatedCipher
			at statement: specialinvoke $r5.<javax.crypto.CipherOutputStream: void <init>(java.io.OutputStream,javax.crypto.Cipher)>($r4, $r2)


	 in Method: byte[] bdpdqbp(byte[])
		IncompleteOperationError violating CrySL rule for javax.crypto.Cipher (on Object #e92f11ec9cf632000a58c81696f324817d23256e8bf8e872c62d222fafbe9fde)
			Operation on object of type javax.crypto.Cipher object not completed. Expected call to update, wrap, doFinal
			at statement: specialinvoke $r4.<javax.crypto.CipherInputStream: void <init>(java.io.InputStream,javax.crypto.Cipher)>($r5, $r2)

		RequiredPredicateError violating CrySL rule for javax.crypto.CipherInputStream
			Second parameter was not properly generated as generatedCipher
			at statement: specialinvoke $r4.<javax.crypto.CipherInputStream: void <init>(java.io.InputStream,javax.crypto.Cipher)>($r5, $r2)

		ConstraintError violating CrySL rule for javax.crypto.Cipher (on Object #e92f11ec9cf632000a58c81696f324817d23256e8bf8e872c62d222fafbe9fde)
			First parameter (with value "RSA/NONE/PKCS1Padding") should be any of RSA/{Empty String, ECB}
			at statement: $r2 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String,java.lang.String)>(varReplacer3626838, varReplacer3626839)

		RequiredPredicateError violating CrySL rule for javax.crypto.Cipher
			Second parameter was not properly generated as generatedKey
			at statement: virtualinvoke $r2.<javax.crypto.Cipher: void init(int,java.security.Key)>(varReplacer3626840, $r3)


	 in Method: javax.crypto.Cipher bdpdqbp(byte[],boolean)
		RequiredPredicateError violating CrySL rule for javax.crypto.Cipher
			Second parameter was not properly generated as generatedKey
			at statement: virtualinvoke $r4.<javax.crypto.Cipher: void init(int,java.security.Key,java.security.spec.AlgorithmParameterSpec)>($b0, $r2, $r3)


Findings in Java Class: com.tuya.smart.mqttclient.mqttv3.internal.SSLNetworkModule

	 in Method: void start()
		IncompleteOperationError violating CrySL rule for javax.net.ssl.SSLParameters (on Object #e66c8b429228ff396b64854dc404cff12999707f03ac1dc95d4fc996b038bb3f)
			Operation on object of type javax.net.ssl.SSLParameters object not completed. Expected call to setProtocols, setCipherSuites
			at statement: virtualinvoke $r10.<javax.net.ssl.SSLSocket: void setSSLParameters(javax.net.ssl.SSLParameters)>($r7)

		IncompleteOperationError violating CrySL rule for javax.net.ssl.SSLParameters (on Object #e66c8b429228ff396b64854dc404cff12999707f03ac1dc95d4fc996b038bb3f)
			Operation on object of type javax.net.ssl.SSLParameters object not completed. Expected call to setProtocols, setCipherSuites
			at statement: virtualinvoke $r10.<javax.net.ssl.SSLSocket: void setSSLParameters(javax.net.ssl.SSLParameters)>($r7)

		IncompleteOperationError violating CrySL rule for javax.net.ssl.SSLParameters (on Object #e66c8b429228ff396b64854dc404cff12999707f03ac1dc95d4fc996b038bb3f)
			Operation on object of type javax.net.ssl.SSLParameters object not completed. Expected call to setProtocols, setCipherSuites
			at statement: virtualinvoke $r10.<javax.net.ssl.SSLSocket: void setSSLParameters(javax.net.ssl.SSLParameters)>($r7)

		IncompleteOperationError violating CrySL rule for javax.net.ssl.SSLParameters (on Object #e66c8b429228ff396b64854dc404cff12999707f03ac1dc95d4fc996b038bb3f)
			Operation on object of type javax.net.ssl.SSLParameters object not completed. Expected call to setProtocols, setCipherSuites
			at statement: virtualinvoke $r10.<javax.net.ssl.SSLSocket: void setSSLParameters(javax.net.ssl.SSLParameters)>($r7)


Findings in Java Class: and

	 in Method: java.lang.String a(java.lang.String,java.lang.String)
		RequiredPredicateError violating CrySL rule for javax.crypto.spec.SecretKeySpec
			First parameter was not properly generated as preparedKeyMaterial
			at statement: specialinvoke $r0.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r5, $r1)

		TypestateError violating CrySL rule for javax.crypto.Mac (on Object #3653d930e123f204e74e82687b619bc544114a1fbbda060ef2cc8997fa9fbdd3)
			Unexpected call to method <javax.crypto.Mac: byte[] doFinal(byte[])> on object of type javax.crypto.Mac. Expect a call to one of the following methods javax.crypto.Mac: void doFinal(byte[],int),javax.crypto.Mac: void update(byte[]),javax.crypto.Mac: void update(byte),javax.crypto.Mac: byte[] doFinal(),javax.crypto.Mac: void update(byte[],int,int)
			at statement: $r5 = virtualinvoke $r3.<javax.crypto.Mac: byte[] doFinal(byte[])>($r5)


Findings in Java Class: dgc

	 in Method: java.lang.String a(java.lang.String,java.lang.String)
		RequiredPredicateError violating CrySL rule for javax.crypto.spec.SecretKeySpec
			First parameter was not properly generated as preparedKeyMaterial
			at statement: specialinvoke $r9.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r5, varReplacer2324560)

		TypestateError violating CrySL rule for javax.crypto.Mac (on Object #bcabf16a342615ccfae5aa674d6ec6246e626a7042e8fa1a87007f5ecfe82f3c)
			Unexpected call to method <javax.crypto.Mac: byte[] doFinal(byte[])> on object of type javax.crypto.Mac. Expect a call to one of the following methods javax.crypto.Mac: void doFinal(byte[],int),javax.crypto.Mac: void update(byte[]),javax.crypto.Mac: void update(byte),javax.crypto.Mac: byte[] doFinal(),javax.crypto.Mac: void update(byte[],int,int)
			at statement: $r5 = virtualinvoke $r6.<javax.crypto.Mac: byte[] doFinal(byte[])>($r5)


Findings in Java Class: okhttp3.internal.platform.Platform

	 in Method: javax.net.ssl.SSLContext getSSLContext()
		ConstraintError violating CrySL rule for javax.net.ssl.SSLContext (on Object #a9bb62adf922e59e0a3f1f5f44150d92509a5283595f524c6ace29dcae8908a)
			First parameter (with value "TLS") should be any of {TLSv1.2}
			at statement: $r5 = staticinvoke <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String)>(varReplacer2422014)


Findings in Java Class: okhttp3.internal.platform.AndroidPlatform

	 in Method: javax.net.ssl.SSLContext getSSLContext()
		ConstraintError violating CrySL rule for javax.net.ssl.SSLContext (on Object #17c1b4865649bf857067d0b5212c734290dce5c284c9443c854cd88adf8fc228)
			First parameter (with value "TLS") should be any of {TLSv1.2}
			at statement: $r3 = staticinvoke <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String)>(varReplacer2422101)


Findings in Java Class: okhttp3.internal.platform.ConscryptPlatform

	 in Method: javax.net.ssl.SSLContext getSSLContext()
		ConstraintError violating CrySL rule for javax.net.ssl.SSLContext (on Object #391fcd7a0d0813d221d131c337988dcdb2a6c8258ec6e9e8c323e3d146d8d34f)
			First parameter (with value "TLSv1.3") should be any of {TLSv1.2}
			at statement: $r3 = staticinvoke <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String,java.security.Provider)>(varReplacer2422139, $r2)

		ConstraintError violating CrySL rule for javax.net.ssl.SSLContext (on Object #a062a3675fe617eda543fe4ec809ed53729f3db38ff4a2f0b12cb253c7fe94c5)
			First parameter (with value "TLS") should be any of {TLSv1.2}
			at statement: $r3 = staticinvoke <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String,java.security.Provider)>(varReplacer2422140, $r2)


Findings in Java Class: nn

	 in Method: java.io.InputStream a(okhttp3.ResponseBody)
		RequiredPredicateError violating CrySL rule for javax.crypto.spec.IvParameterSpec
			First parameter was not properly generated as randomized
			at statement: specialinvoke $r8.<javax.crypto.spec.IvParameterSpec: void <init>(byte[])>($r1)

		RequiredPredicateError violating CrySL rule for javax.crypto.Cipher
			Second parameter was not properly generated as generatedKey
			at statement: virtualinvoke $r7.<javax.crypto.Cipher: void init(int,java.security.Key,java.security.spec.AlgorithmParameterSpec)>(varReplacer2491643, $r4, $r8)

		IncompleteOperationError violating CrySL rule for javax.crypto.Cipher (on Object #18dbb14bd8bf67d76dfab5af524c7c4e200483163056a857cfd9d684f1f5285e)
			Operation on object of type javax.crypto.Cipher object not completed. Expected call to update, wrap, doFinal
			at statement: specialinvoke $r9.<javax.crypto.CipherInputStream: void <init>(java.io.InputStream,javax.crypto.Cipher)>($r3, $r7)

		RequiredPredicateError violating CrySL rule for javax.crypto.spec.SecretKeySpec
			First parameter was not properly generated as preparedKeyMaterial
			at statement: specialinvoke $r4.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r5, $r6)

		RequiredPredicateError violating CrySL rule for javax.crypto.Cipher
			Third parameter was not properly generated as preparedGCM
			at statement: virtualinvoke $r7.<javax.crypto.Cipher: void init(int,java.security.Key,java.security.spec.AlgorithmParameterSpec)>(varReplacer2491643, $r4, $r8)

		RequiredPredicateError violating CrySL rule for javax.crypto.Cipher
			Third parameter was not properly generated as preparedOAEP
			at statement: virtualinvoke $r7.<javax.crypto.Cipher: void init(int,java.security.Key,java.security.spec.AlgorithmParameterSpec)>(varReplacer2491643, $r4, $r8)


Findings in Java Class: np$2

	 in Method: void onResponse(okhttp3.Call,okhttp3.Response)
		IncompleteOperationError violating CrySL rule for javax.crypto.CipherInputStream (on Object #bdeb9afd938edd0650b569b6e482a3ae5d748f84f3d2c750bff524746c326b8d)
			Operation on object of type javax.crypto.CipherInputStream object not completed. Expected call to read, close
			at statement: interfaceinvoke $r9.<com.facebook.imagepipeline.producers.NetworkFetcher$Callback: void onResponse(java.io.InputStream,int)>($r14, $i3)

		IncompleteOperationError violating CrySL rule for javax.crypto.CipherInputStream (on Object #bdeb9afd938edd0650b569b6e482a3ae5d748f84f3d2c750bff524746c326b8d)
			Operation on object of type javax.crypto.CipherInputStream object not completed. Expected call to read, close
			at statement: interfaceinvoke $r9.<com.facebook.imagepipeline.producers.NetworkFetcher$Callback: void onResponse(java.io.InputStream,int)>($r14, $i3)


Findings in Java Class: com.facebook.soloader.SoLoader$1

	 in Method: java.lang.String getLibHash(java.lang.String)
		TypestateError violating CrySL rule for java.security.MessageDigest (on Object #697231914a00178e276a85d8847efebabfa725191d341a876935cca531e2985b)
			Unexpected call to method <java.security.MessageDigest: byte[] digest()> on object of type java.security.MessageDigest. Expect a call to one of the following methods java.security.MessageDigest: void update(byte[],int,int),java.security.MessageDigest: void update(java.nio.ByteBuffer),java.security.MessageDigest: byte[] digest(byte[]),java.security.MessageDigest: void update(byte),java.security.MessageDigest: void update(byte[])
			at statement: $r7 = virtualinvoke $r6.<java.security.MessageDigest: byte[] digest()>()

		ConstraintError violating CrySL rule for java.security.MessageDigest (on Object #697231914a00178e276a85d8847efebabfa725191d341a876935cca531e2985b)
			First parameter (with value "MD5") should be any of {SHA-256, SHA-384, SHA-512}
			at statement: $r6 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer2660602)


Findings in Java Class: com.facebook.react.modules.network.TLSSocketFactory

	 in Method: void <init>()
		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			Second parameter was not properly generated as generatedTrustManagers
			at statement: virtualinvoke $r1.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>(varReplacer2748127, varReplacer2748127, varReplacer2748127)

		ConstraintError violating CrySL rule for javax.net.ssl.SSLContext (on Object #6a5a1cbb3e1c42bd5abb0c689ff3de98811af36a1f862cc50886469a7a77d8c7)
			First parameter (with value "TLS") should be any of {TLSv1.2}
			at statement: $r1 = staticinvoke <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String)>(varReplacer2748130)

		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			Third parameter was not properly generated as randomized
			at statement: virtualinvoke $r1.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>(varReplacer2748127, varReplacer2748127, varReplacer2748127)

		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			First parameter was not properly generated as generatedKeyManagers
			at statement: virtualinvoke $r1.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>(varReplacer2748127, varReplacer2748127, varReplacer2748127)


Findings in Java Class: aof$a

	 in Method: java.lang.String a(java.lang.String,long)
		ConstraintError violating CrySL rule for java.security.MessageDigest (on Object #56a76f53ab09ea36bc165a079c2c871df43909d54aa46e6fa82d643b02be9c28)
			First parameter (with value "MD5") should be any of {SHA-256, SHA-384, SHA-512}
			at statement: $r4 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer2855799)


Findings in Java Class: dqz

	 in Method: java.lang.String b(java.lang.String)
		ConstraintError violating CrySL rule for java.security.MessageDigest (on Object #426b31b4663bcdc401e3e5b9c47a634683a677ae3dd6e685313083a157696495)
			First parameter (with value "SHA1") should be any of {SHA-256, SHA-384, SHA-512}
			at statement: $r3 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer3080876)


Findings in Java Class: aeo

	 in Method: javax.crypto.Cipher a(java.lang.String,byte[])
		ConstraintError violating CrySL rule for javax.crypto.Cipher (on Object #d67d6de0aa0d4975e7701049140fca06e8e1f6862cb40c7bb5d5742586c132e)
			First parameter (with value "AES/CBC/PKCS7Padding") should be any of AES/CBC/{PKCS5Padding, ISO10126Padding}
			at statement: $r4 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer3193648)

		RequiredPredicateError violating CrySL rule for javax.crypto.spec.IvParameterSpec
			First parameter was not properly generated as randomized
			at statement: specialinvoke $r1.<javax.crypto.spec.IvParameterSpec: void <init>(byte[])>($r3)


	 in Method: javax.crypto.SecretKey c(java.lang.String)
		ConstraintError violating CrySL rule for java.security.KeyStore (on Object #7d7b505f2290771004fd82ea4d1e0cc35b78e92fdd52229ee95bd1a9af7aeac6)
			First parameter (with value "AndroidKeyStore") should be any of {JCEKS, JKS, DKS, PKCS11, PKCS12}
			at statement: $r2 = staticinvoke <java.security.KeyStore: java.security.KeyStore getInstance(java.lang.String)>(varReplacer3588202)

		IncompleteOperationError violating CrySL rule for java.security.KeyStore (on Object #7d7b505f2290771004fd82ea4d1e0cc35b78e92fdd52229ee95bd1a9af7aeac6)
			Operation on object of type java.security.KeyStore object not completed. Expected call to getKey
			at statement: $r3 = virtualinvoke $r2.<java.security.KeyStore: java.security.KeyStore$Entry getEntry(java.lang.String,java.security.KeyStore$ProtectionParameter)>($r1, varReplacer3588217)


	 in Method: boolean b(java.lang.String)
		ConstraintError violating CrySL rule for java.security.KeyStore (on Object #3499ca75bfe495c9e95e4c03728489b90e4cb90a1241de2b3ae1a771474748a2)
			First parameter (with value "AndroidKeyStore") should be any of {JCEKS, JKS, DKS, PKCS11, PKCS12}
			at statement: $r1 = staticinvoke <java.security.KeyStore: java.security.KeyStore getInstance(java.lang.String)>(varReplacer3835177)


	 in Method: javax.crypto.Cipher a(java.lang.String)
		ConstraintError violating CrySL rule for javax.crypto.Cipher (on Object #8f3cceca5b32a6e8ae9f9151c8c85d205f989da14904894656c06ec9144e78cc)
			First parameter (with value "AES/CBC/PKCS7Padding") should be any of AES/CBC/{PKCS5Padding, ISO10126Padding}
			at statement: $r2 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer3849192)


Findings in Java Class: com.tuya.smart.social.finger_login.b

	 in Method: void a(androidx.fragment.app.c,java.lang.String,java.lang.String,java.lang.String,com.tuya.smart.sociallogin_api.callback.ITuyaBiometricFingerCallback)
		IncompleteOperationError violating CrySL rule for javax.crypto.Cipher (on Object #d67d6de0aa0d4975e7701049140fca06e8e1f6862cb40c7bb5d5742586c132e)
			Operation on object of type javax.crypto.Cipher object not completed. Expected call to update, wrap, doFinal
			at statement: $r8 = virtualinvoke $r6.<aeo: javax.crypto.Cipher a(java.lang.String,byte[])>($r5, $r7)

		IncompleteOperationError violating CrySL rule for javax.crypto.Cipher (on Object #d67d6de0aa0d4975e7701049140fca06e8e1f6862cb40c7bb5d5742586c132e)
			Operation on object of type javax.crypto.Cipher object not completed. Expected call to update, wrap, doFinal
			at statement: interfaceinvoke $r10.<com.tuya.smart.biometricfinger.api.IBiometricsFingerBuilder: void a(androidx.fragment.app.c,javax.crypto.Cipher)>($r1, $r8)


	 in Method: void a(androidx.fragment.app.c,java.lang.String,com.tuya.smart.sociallogin_api.callback.ITuyaBiometricFingerCallback)
		IncompleteOperationError violating CrySL rule for javax.crypto.Cipher (on Object #8f3cceca5b32a6e8ae9f9151c8c85d205f989da14904894656c06ec9144e78cc)
			Operation on object of type javax.crypto.Cipher object not completed. Expected call to update, wrap, doFinal
			at statement: $r5 = virtualinvoke $r4.<aeo: javax.crypto.Cipher a(java.lang.String)>($r3)

		IncompleteOperationError violating CrySL rule for javax.crypto.Cipher (on Object #8f3cceca5b32a6e8ae9f9151c8c85d205f989da14904894656c06ec9144e78cc)
			Operation on object of type javax.crypto.Cipher object not completed. Expected call to update, wrap, doFinal
			at statement: interfaceinvoke $r7.<com.tuya.smart.biometricfinger.api.IBiometricsFingerBuilder: void a(androidx.fragment.app.c,javax.crypto.Cipher)>($r1, $r5)


	 in Method: boolean a(java.lang.String)
		IncompleteOperationError violating CrySL rule for javax.crypto.Cipher (on Object #8f3cceca5b32a6e8ae9f9151c8c85d205f989da14904894656c06ec9144e78cc)
			Operation on object of type javax.crypto.Cipher object not completed. Expected call to update, wrap, doFinal
			at statement: $r3 = virtualinvoke $r2.<aeo: javax.crypto.Cipher a(java.lang.String)>($r1)


Findings in Java Class: com.tuya.security.vas.setting.password.b

	 in Method: java.lang.String a(java.lang.String,java.lang.String)
		RequiredPredicateError violating CrySL rule for javax.crypto.spec.SecretKeySpec
			First parameter was not properly generated as preparedKeyMaterial
			at statement: specialinvoke $r2.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r3, varReplacer3295314)

		ConstraintError violating CrySL rule for javax.crypto.spec.SecretKeySpec (on Object #4bec0e1ebca056059a0a8ea5f306bfec429889aee664ad0944a8fc504fca9380)
			Second parameter (with value "HmacMD5") should be any of {AES, HmacSHA224, HmacSHA256, HmacSHA384, HmacSHA512}
			at statement: specialinvoke $r2.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r3, varReplacer3295314)

		TypestateError violating CrySL rule for javax.crypto.Mac (on Object #4b06f392f00961fe709564f1b28ab59895dc66028f9083dbe2f2d421a298a647)
			Unexpected call to method <javax.crypto.Mac: byte[] doFinal(byte[])> on object of type javax.crypto.Mac. Expect a call to one of the following methods javax.crypto.Mac: void doFinal(byte[],int),javax.crypto.Mac: void update(byte[]),javax.crypto.Mac: void update(byte),javax.crypto.Mac: byte[] doFinal(),javax.crypto.Mac: void update(byte[],int,int)
			at statement: $r3 = virtualinvoke $r4.<javax.crypto.Mac: byte[] doFinal(byte[])>($r3)


Findings in Java Class: okio.ByteString

	 in Method: okio.ByteString digest$jvm(java.lang.String)
		ConstraintError violating CrySL rule for java.security.MessageDigest (on Object #4fff7c5d15f021d956e87c05e0dc87688a11eec9c61bcdc27645605a965776c9)
			First parameter (with value "MD5") should be any of {SHA-256, SHA-384, SHA-512}
			at statement: $r3 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>($r1)

		ConstraintError violating CrySL rule for java.security.MessageDigest (on Object #4fff7c5d15f021d956e87c05e0dc87688a11eec9c61bcdc27645605a965776c9)
			First parameter (with value "SHA-1") should be any of {SHA-256, SHA-384, SHA-512}
			at statement: $r3 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>($r1)


Findings in Java Class: okio.SegmentedByteString

	 in Method: okio.ByteString digest$jvm(java.lang.String)
		ConstraintError violating CrySL rule for java.security.MessageDigest (on Object #ea9bd02bb32dbb2be26eca134efdb9d94c1e5921cb9abf4599d98facf22c83d6)
			First parameter (with value "SHA-1") should be any of {SHA-256, SHA-384, SHA-512}
			at statement: $r2 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>($r1)

		ConstraintError violating CrySL rule for java.security.MessageDigest (on Object #ea9bd02bb32dbb2be26eca134efdb9d94c1e5921cb9abf4599d98facf22c83d6)
			First parameter (with value "MD5") should be any of {SHA-256, SHA-384, SHA-512}
			at statement: $r2 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>($r1)

		TypestateError violating CrySL rule for java.security.MessageDigest (on Object #ea9bd02bb32dbb2be26eca134efdb9d94c1e5921cb9abf4599d98facf22c83d6)
			Unexpected call to method <java.security.MessageDigest: byte[] digest()> on object of type java.security.MessageDigest. Expect a call to one of the following methods java.security.MessageDigest: void update(byte[],int,int),java.security.MessageDigest: void update(java.nio.ByteBuffer),java.security.MessageDigest: byte[] digest(byte[]),java.security.MessageDigest: void update(byte),java.security.MessageDigest: void update(byte[])
			at statement: $r6 = virtualinvoke $r2.<java.security.MessageDigest: byte[] digest()>()


Findings in Java Class: com.google.firebase.messaging.i

	 in Method: java.lang.String c()
		ConstraintError violating CrySL rule for java.security.MessageDigest (on Object #25e423f9b11694ee87fab10fbfc49084867bb23b12f4ec5c133781d872eb4563)
			First parameter (with value "SHA-1") should be any of {SHA-256, SHA-384, SHA-512}
			at statement: $r4 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer3567994)


Findings in Java Class: com.tuya.tyutils.tyfiledownloader.a

	 in Method: javax.net.ssl.SSLSocketFactory a(javax.net.ssl.X509TrustManager)
		ConstraintError violating CrySL rule for javax.net.ssl.SSLContext (on Object #8b392a53a79550e5b7364a2968a32a28d399bad9f57002c4317dd27840d5de2)
			First parameter (with value "TLS") should be any of {TLSv1.2}
			at statement: $r3 = staticinvoke <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String)>(varReplacer3714538)

		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			First parameter was not properly generated as generatedKeyManagers
			at statement: virtualinvoke $r3.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>(varReplacer3714531, $r7, varReplacer3714531)

		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			Third parameter was not properly generated as randomized
			at statement: virtualinvoke $r3.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>(varReplacer3714531, $r7, varReplacer3714531)

		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			Second parameter was not properly generated as generatedTrustManagers
			at statement: virtualinvoke $r3.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>(varReplacer3714531, $r7, varReplacer3714531)


	 in Method: javax.net.ssl.X509TrustManager c()
		RequiredPredicateError violating CrySL rule for javax.net.ssl.TrustManagerFactory
			First parameter was not properly generated as generatedKeyStore
			at statement: virtualinvoke $r4.<javax.net.ssl.TrustManagerFactory: void init(java.security.KeyStore)>(varReplacer3714482)


Findings in Java Class: com.google.android.libraries.places.internal.zzda

	 in Method: java.lang.String zzb(android.content.pm.Signature)
		ConstraintError violating CrySL rule for java.security.MessageDigest (on Object #e5cc9a326ddcb9de6d8f02788c0cc3b15f77fcafc18f665fd3b1e8e4466c84de)
			First parameter (with value "SHA-1") should be any of {SHA-256, SHA-384, SHA-512}
			at statement: $r1 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer3775276)


Findings in Java Class: cy

	 in Method: java.lang.String a(java.security.PublicKey)
		ConstraintError violating CrySL rule for java.security.MessageDigest (on Object #3a2738147a120222043cd745c0b8676512deeff80945d6db9ed74c829435098a)
			First parameter (with value "SHA1") should be any of {SHA-256, SHA-384, SHA-512}
			at statement: $r3 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer3830167)


	 in Method: java.security.PublicKey b(java.lang.String)
		RequiredPredicateError violating CrySL rule for java.security.KeyFactory
			First parameter was not properly generated as speccedKey
			at statement: $r5 = virtualinvoke $r3.<java.security.KeyFactory: java.security.PublicKey generatePublic(java.security.spec.KeySpec)>($r4)

		RequiredPredicateError violating CrySL rule for java.security.spec.X509EncodedKeySpec
			First parameter was not properly generated as preparedKeyMaterial
			at statement: specialinvoke $r4.<java.security.spec.X509EncodedKeySpec: void <init>(byte[])>($r2)


Findings in Java Class: com.tuya.sdk.mqtt.dpdqppp

	 in Method: javax.net.ssl.SSLSocketFactory bdpdqbp(javax.net.ssl.X509TrustManager)
		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			Second parameter was not properly generated as generatedTrustManagers
			at statement: virtualinvoke $r2.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>(varReplacer3993765, $r6, varReplacer3993765)

		ConstraintError violating CrySL rule for javax.net.ssl.SSLContext (on Object #3eddd7ac7b1b1404936bad21c3f8d081df0affe087407504c3e2be85d2186998)
			First parameter (with value "TLS") should be any of {TLSv1.2}
			at statement: $r2 = staticinvoke <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String)>(varReplacer3993788)

		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			First parameter was not properly generated as generatedKeyManagers
			at statement: virtualinvoke $r2.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>(varReplacer3993765, $r6, varReplacer3993765)

		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			Third parameter was not properly generated as randomized
			at statement: virtualinvoke $r2.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>(varReplacer3993765, $r6, varReplacer3993765)


	 in Method: javax.net.ssl.X509TrustManager pppbppp()
		RequiredPredicateError violating CrySL rule for javax.net.ssl.TrustManagerFactory
			First parameter was not properly generated as generatedKeyStore
			at statement: virtualinvoke $r2.<javax.net.ssl.TrustManagerFactory: void init(java.security.KeyStore)>(varReplacer3993797)


Findings in Java Class: com.tuya.sdk.bluetooth.pqppbdp

	 in Method: void bppdpdq()
		ConstraintError violating CrySL rule for java.security.KeyPairGenerator (on Object #6477c08f908d71c5db1ed868472dddd7f1b4ccf9c8c71b56f846487caaf5bae6)
			First parameter (with value "ECDH") should be any of {RSA, EC, DSA, DiffieHellman, DH}
			at statement: $r2 = staticinvoke <java.security.KeyPairGenerator: java.security.KeyPairGenerator getInstance(java.lang.String,java.lang.String)>(varReplacer4007791, varReplacer4007792)

		IncompleteOperationError violating CrySL rule for java.security.KeyPairGenerator (on Object #6477c08f908d71c5db1ed868472dddd7f1b4ccf9c8c71b56f846487caaf5bae6)
			Operation on object of type java.security.KeyPairGenerator object not completed. Expected call to java.security.KeyPairGenerator: java.security.KeyPair generateKeyPair(), genKeyPair, java.security.KeyPairGeneratorSpi: java.security.KeyPair generateKeyPair()
			at statement: $r3 = virtualinvoke $r2.<java.security.KeyPairGenerator: java.security.KeyPair generateKeyPair()>()


Findings in Java Class: com.tuya.smart.mqttclient.mqttv3.internal.security.SSLSocketFactoryFactory

	 in Method: javax.net.ssl.SSLContext getSSLContext(java.lang.String)
		ConstraintError violating CrySL rule for javax.net.ssl.SSLContext (on Object #2de0dbcb962ff3cb3e0d9dc8e9469638e8762c9aa5d9bef5cf875912fda1093)
			First parameter (with value "TLS") should be any of {TLSv1.2}
			at statement: $r7 = staticinvoke <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String,java.lang.String)>($r4, $r3)

		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			Third parameter was not properly generated as randomized
			at statement: virtualinvoke $r7.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>($r17, $r25, varReplacer4034898)

		NeverTypeOfError violating CrySL rule for java.security.KeyStore (on Object #5149894d05ef20df222d58c4a033421d6302e35e69a14f445f906bc16807ea17)
			Second parameter should never be of type java.lang.String.
			at statement: virtualinvoke $r14.<java.security.KeyStore: void load(java.io.InputStream,char[])>($r15, $r10)

		HardCodedError violating CrySL rule for java.security.KeyStore (on Object #5149894d05ef20df222d58c4a033421d6302e35e69a14f445f906bc16807ea17)
			Second parameter should never be hardcoded.
			at statement: virtualinvoke $r14.<java.security.KeyStore: void load(java.io.InputStream,char[])>($r15, $r10)

		RequiredPredicateError violating CrySL rule for javax.net.ssl.TrustManagerFactory
			First parameter was not properly generated as generatedKeyStore
			at statement: virtualinvoke $r24.<javax.net.ssl.TrustManagerFactory: void init(java.security.KeyStore)>($r14)

		NeverTypeOfError violating CrySL rule for javax.net.ssl.KeyManagerFactory (on Object #3502fa758305a1dec42a6535b8ce8189f7707f9bdc917efceea97f5a2943e84d)
			Second parameter should never be of type java.lang.String.
			at statement: virtualinvoke $r16.<javax.net.ssl.KeyManagerFactory: void init(java.security.KeyStore,char[])>($r14, $r10)

		HardCodedError violating CrySL rule for javax.net.ssl.KeyManagerFactory (on Object #3502fa758305a1dec42a6535b8ce8189f7707f9bdc917efceea97f5a2943e84d)
			Second parameter should never be hardcoded.
			at statement: virtualinvoke $r16.<javax.net.ssl.KeyManagerFactory: void init(java.security.KeyStore,char[])>($r14, $r10)

		NeverTypeOfError violating CrySL rule for javax.net.ssl.KeyManagerFactory (on Object #3502fa758305a1dec42a6535b8ce8189f7707f9bdc917efceea97f5a2943e84d)
			Second parameter should never be of type java.lang.String.
			at statement: virtualinvoke $r16.<javax.net.ssl.KeyManagerFactory: void init(java.security.KeyStore,char[])>($r14, $r10)

		HardCodedError violating CrySL rule for javax.net.ssl.KeyManagerFactory (on Object #3502fa758305a1dec42a6535b8ce8189f7707f9bdc917efceea97f5a2943e84d)
			Second parameter should never be hardcoded.
			at statement: virtualinvoke $r16.<javax.net.ssl.KeyManagerFactory: void init(java.security.KeyStore,char[])>($r14, $r10)

		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			Second parameter was not properly generated as generatedTrustManagers
			at statement: virtualinvoke $r7.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>($r17, $r25, varReplacer4034898)

		NeverTypeOfError violating CrySL rule for java.security.KeyStore (on Object #5149894d05ef20df222d58c4a033421d6302e35e69a14f445f906bc16807ea17)
			Second parameter should never be of type java.lang.String.
			at statement: virtualinvoke $r14.<java.security.KeyStore: void load(java.io.InputStream,char[])>($r15, $r10)

		HardCodedError violating CrySL rule for java.security.KeyStore (on Object #5149894d05ef20df222d58c4a033421d6302e35e69a14f445f906bc16807ea17)
			Second parameter should never be hardcoded.
			at statement: virtualinvoke $r14.<java.security.KeyStore: void load(java.io.InputStream,char[])>($r15, $r10)

		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			First parameter was not properly generated as generatedKeyManagers
			at statement: virtualinvoke $r7.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>($r17, $r25, varReplacer4034898)

		ConstraintError violating CrySL rule for javax.net.ssl.SSLContext (on Object #faf8a006ee2bf18d70acac36e6184b973d313a1f622eaa10afaeb42c1349d99c)
			First parameter (with value "TLS") should be any of {TLSv1.2}
			at statement: $r7 = staticinvoke <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String)>($r4)

		RequiredPredicateError violating CrySL rule for javax.net.ssl.KeyManagerFactory
			First parameter was not properly generated as generatedKeyStore
			at statement: virtualinvoke $r16.<javax.net.ssl.KeyManagerFactory: void init(java.security.KeyStore,char[])>($r14, $r10)

		NeverTypeOfError violating CrySL rule for java.security.KeyStore (on Object #5149894d05ef20df222d58c4a033421d6302e35e69a14f445f906bc16807ea17)
			Second parameter should never be of type java.lang.String.
			at statement: virtualinvoke $r14.<java.security.KeyStore: void load(java.io.InputStream,char[])>($r15, $r10)

		HardCodedError violating CrySL rule for java.security.KeyStore (on Object #5149894d05ef20df222d58c4a033421d6302e35e69a14f445f906bc16807ea17)
			Second parameter should never be hardcoded.
			at statement: virtualinvoke $r14.<java.security.KeyStore: void load(java.io.InputStream,char[])>($r15, $r10)


Findings in Java Class: com.tuya.smart.android.common.utils.SHA256Util

	 in Method: byte[] getHash(byte[])
		IncompleteOperationError violating CrySL rule for java.security.MessageDigest (on Object #ffcb886ffd464daa14387ee04e3cb769ea8db9e5a7ac842b40b59d22f310f18e)
			Operation on object of type java.security.MessageDigest object not completed. Expected call to digest, update
			at statement: $r1 = null

		IncompleteOperationError violating CrySL rule for java.security.MessageDigest (on Object #ffcb886ffd464daa14387ee04e3cb769ea8db9e5a7ac842b40b59d22f310f18e)
			Operation on object of type java.security.MessageDigest object not completed. Expected call to digest, update
			at statement: $r1 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer4124706)


Findings in Java Class: com.tuyasmart.stencil.component.download.a

	 in Method: javax.net.ssl.SSLSocketFactory a(javax.net.ssl.X509TrustManager)
		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			Second parameter was not properly generated as generatedTrustManagers
			at statement: virtualinvoke $r3.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>(varReplacer4125790, $r7, varReplacer4125790)

		ConstraintError violating CrySL rule for javax.net.ssl.SSLContext (on Object #de78f2249a9416ff6f1b88a9c5ec7d54d14616b53752b7afa2f93a65407584dc)
			First parameter (with value "TLS") should be any of {TLSv1.2}
			at statement: $r3 = staticinvoke <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String)>(varReplacer4125789)

		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			First parameter was not properly generated as generatedKeyManagers
			at statement: virtualinvoke $r3.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>(varReplacer4125790, $r7, varReplacer4125790)

		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			Third parameter was not properly generated as randomized
			at statement: virtualinvoke $r3.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>(varReplacer4125790, $r7, varReplacer4125790)


	 in Method: javax.net.ssl.X509TrustManager a()
		RequiredPredicateError violating CrySL rule for javax.net.ssl.TrustManagerFactory
			First parameter was not properly generated as generatedKeyStore
			at statement: virtualinvoke $r3.<javax.net.ssl.TrustManagerFactory: void init(java.security.KeyStore)>(varReplacer4125786)


Findings in Java Class: com.tuya.sdk.bluetooth.bpqddqq

	 in Method: byte[] bdpdqbp(byte[])
		ConstraintError violating CrySL rule for java.security.MessageDigest (on Object #55e2284d7b67abe0f050979efcfd507b4aecf788e7ab593124df11474aee09e4)
			First parameter (with value "MD5") should be any of {SHA-256, SHA-384, SHA-512}
			at statement: $r1 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer4131743)


Findings in Java Class: com.tuya.sdk.bluetooth.bddqdbd

	 in Method: byte[] bdpdqbp(byte[])
		ConstraintError violating CrySL rule for java.security.MessageDigest (on Object #1aa41ecb3b7dc538cc24a1f28355ee81095bf81775dc80a3f05c7e11805bd703)
			First parameter (with value "MD5") should be any of {SHA-256, SHA-384, SHA-512}
			at statement: $r2 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer4382003)


Findings in Java Class: io.jsonwebtoken.impl.crypto.MacSigner

	 in Method: byte[] sign(byte[])
		TypestateError violating CrySL rule for javax.crypto.Mac (on Object #a1d1f1a96b2229cb8032249f276d2e6d47471c6890809e6db563b576e5d67a47)
			Unexpected call to method <javax.crypto.Mac: byte[] doFinal(byte[])> on object of type javax.crypto.Mac. Expect a call to one of the following methods javax.crypto.Mac: void doFinal(byte[],int),javax.crypto.Mac: void update(byte[]),javax.crypto.Mac: void update(byte),javax.crypto.Mac: byte[] doFinal(),javax.crypto.Mac: void update(byte[],int,int)
			at statement: $r1 = virtualinvoke $r2.<javax.crypto.Mac: byte[] doFinal(byte[])>($r1)


Findings in Java Class: com.tuya.smart.android.common.utils.AesGcmUtil

	 in Method: byte[] decryptBytes2Bytes(byte[],byte[],byte[],byte[])
		RequiredPredicateError violating CrySL rule for javax.crypto.spec.SecretKeySpec
			First parameter was not properly generated as preparedKeyMaterial
			at statement: specialinvoke $r7.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r3, varReplacer3075372)

		RequiredPredicateError violating CrySL rule for javax.crypto.Cipher
			Second parameter was not properly generated as generatedKey
			at statement: virtualinvoke $r6.<javax.crypto.Cipher: void init(int,java.security.Key,java.security.spec.AlgorithmParameterSpec)>(varReplacer3075402, $r2, $r10)

		RequiredPredicateError violating CrySL rule for javax.crypto.spec.GCMParameterSpec
			Second parameter was not properly generated as randomized
			at statement: specialinvoke $r9.<javax.crypto.spec.GCMParameterSpec: void <init>(int,byte[])>(varReplacer3075387, $r4)

		RequiredPredicateError violating CrySL rule for javax.crypto.spec.IvParameterSpec
			First parameter was not properly generated as randomized
			at statement: specialinvoke $r8.<javax.crypto.spec.IvParameterSpec: void <init>(byte[])>($r4)

		RequiredPredicateError violating CrySL rule for javax.crypto.Cipher
			Third parameter was not properly generated as preparedGCM
			at statement: virtualinvoke $r6.<javax.crypto.Cipher: void init(int,java.security.Key,java.security.spec.AlgorithmParameterSpec)>(varReplacer3075402, $r2, $r10)


	 in Method: byte[] encryptBytes2Bytes(byte[],byte[],byte[],byte[])
		RequiredPredicateError violating CrySL rule for javax.crypto.spec.GCMParameterSpec
			Second parameter was not properly generated as randomized
			at statement: specialinvoke $r9.<javax.crypto.spec.GCMParameterSpec: void <init>(int,byte[])>(varReplacer1748419, $r3)

		RequiredPredicateError violating CrySL rule for javax.crypto.Cipher
			Third parameter was not properly generated as preparedGCM
			at statement: virtualinvoke $r6.<javax.crypto.Cipher: void init(int,java.security.Key,java.security.spec.AlgorithmParameterSpec)>(varReplacer1748441, $r4, $r10)

		RequiredPredicateError violating CrySL rule for javax.crypto.spec.SecretKeySpec
			First parameter was not properly generated as preparedKeyMaterial
			at statement: specialinvoke $r7.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r2, varReplacer1748421)

		RequiredPredicateError violating CrySL rule for javax.crypto.Cipher
			Second parameter was not properly generated as generatedKey
			at statement: virtualinvoke $r6.<javax.crypto.Cipher: void init(int,java.security.Key,java.security.spec.AlgorithmParameterSpec)>(varReplacer1748441, $r4, $r10)


Findings in Java Class: io.jsonwebtoken.impl.crypto.EllipticCurveSignatureValidator

	 in Method: boolean doVerify(java.security.Signature,java.security.PublicKey,byte[],byte[])
		RequiredPredicateError violating CrySL rule for java.security.Signature
			First parameter was not properly generated as generatedPubkey
			at statement: virtualinvoke $r4.<java.security.Signature: void initVerify(java.security.PublicKey)>($r1)


Findings in Java Class: io.jsonwebtoken.impl.crypto.RsaSigner

	 in Method: byte[] doSign(byte[])
		RequiredPredicateError violating CrySL rule for java.security.Signature
			First parameter was not properly generated as generatedPrivkey
			at statement: virtualinvoke $r4.<java.security.Signature: void initSign(java.security.PrivateKey)>($r3)


Findings in Java Class: okhttp3.OkHttpClient

	 in Method: javax.net.ssl.SSLSocketFactory newSslSocketFactory(javax.net.ssl.X509TrustManager)
		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			Second parameter was not properly generated as generatedTrustManagers
			at statement: virtualinvoke $r2.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>(varReplacer1645844, $r7, varReplacer1645844)

		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			Third parameter was not properly generated as randomized
			at statement: virtualinvoke $r2.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>(varReplacer1645844, $r7, varReplacer1645844)

		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			First parameter was not properly generated as generatedKeyManagers
			at statement: virtualinvoke $r2.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>(varReplacer1645844, $r7, varReplacer1645844)


Findings in Java Class: com.tuya.smart.camera.utils.a

	 in Method: byte[] a(java.lang.String,javax.crypto.SecretKey,javax.crypto.spec.IvParameterSpec,byte[])
		RequiredPredicateError violating CrySL rule for javax.crypto.Cipher
			Second parameter was not properly generated as generatedKey
			at statement: virtualinvoke $r6.<javax.crypto.Cipher: void init(int,java.security.Key,java.security.spec.AlgorithmParameterSpec)>(varReplacer2737464, $r1, $r2)

		RequiredPredicateError violating CrySL rule for javax.crypto.Cipher
			Third parameter was not properly generated as preparedIV [ with CBC, It's required to use IVParameterSpec]
			at statement: virtualinvoke $r6.<javax.crypto.Cipher: void init(int,java.security.Key,java.security.spec.AlgorithmParameterSpec)>(varReplacer2737464, $r1, $r2)


	 in Method: java.lang.String a(java.lang.String,java.lang.String,java.lang.String)
		RequiredPredicateError violating CrySL rule for javax.crypto.spec.SecretKeySpec
			First parameter was not properly generated as preparedKeyMaterial
			at statement: specialinvoke $r6.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r5, varReplacer1998192)


	 in Method: void a(java.lang.String)
		RequiredPredicateError violating CrySL rule for javax.crypto.spec.IvParameterSpec
			First parameter was not properly generated as randomized
			at statement: specialinvoke $r1.<javax.crypto.spec.IvParameterSpec: void <init>(byte[])>($r2)


Findings in Java Class: com.tuya.smart.android.network.util.AESCTRUtil

	 in Method: java.lang.String decrypt(byte[],java.lang.String)
		RequiredPredicateError violating CrySL rule for javax.crypto.spec.SecretKeySpec
			First parameter was not properly generated as preparedKeyMaterial
			at statement: specialinvoke $r4.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r0, varReplacer62680)

		RequiredPredicateError violating CrySL rule for javax.crypto.Cipher
			Second parameter was not properly generated as generatedKey
			at statement: virtualinvoke $r5.<javax.crypto.Cipher: void init(int,java.security.Key,java.security.spec.AlgorithmParameterSpec)>(varReplacer62679, $r4, $r3)

		RequiredPredicateError violating CrySL rule for javax.crypto.spec.IvParameterSpec
			First parameter was not properly generated as randomized
			at statement: specialinvoke $r3.<javax.crypto.spec.IvParameterSpec: void <init>(byte[],int,int)>($r2, varReplacer62684, varReplacer62685)


	 in Method: java.lang.String encrypt(byte[],byte[],java.lang.String)
		RequiredPredicateError violating CrySL rule for javax.crypto.spec.IvParameterSpec
			First parameter was not properly generated as randomized
			at statement: specialinvoke $r3.<javax.crypto.spec.IvParameterSpec: void <init>(byte[])>($r1)

		RequiredPredicateError violating CrySL rule for javax.crypto.Cipher
			Third parameter was not properly generated as preparedIV [ with CBC, It's required to use IVParameterSpec]
			at statement: virtualinvoke $r5.<javax.crypto.Cipher: void init(int,java.security.Key,java.security.spec.AlgorithmParameterSpec)>(varReplacer2596460, $r4, $r3)

		RequiredPredicateError violating CrySL rule for javax.crypto.Cipher
			Second parameter was not properly generated as generatedKey
			at statement: virtualinvoke $r5.<javax.crypto.Cipher: void init(int,java.security.Key,java.security.spec.AlgorithmParameterSpec)>(varReplacer2596460, $r4, $r3)

		RequiredPredicateError violating CrySL rule for javax.crypto.spec.SecretKeySpec
			First parameter was not properly generated as preparedKeyMaterial
			at statement: specialinvoke $r4.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r0, varReplacer2596461)


Findings in Java Class: io.jsonwebtoken.SigningKeyResolverAdapter

	 in Method: java.security.Key resolveSigningKey(io.jsonwebtoken.JwsHeader,java.lang.String)
		RequiredPredicateError violating CrySL rule for javax.crypto.spec.SecretKeySpec
			First parameter was not properly generated as preparedKeyMaterial
			at statement: specialinvoke $r7.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r6, $r2)


	 in Method: java.security.Key resolveSigningKey(io.jsonwebtoken.JwsHeader,io.jsonwebtoken.Claims)
		RequiredPredicateError violating CrySL rule for javax.crypto.spec.SecretKeySpec
			First parameter was not properly generated as preparedKeyMaterial
			at statement: specialinvoke $r7.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r6, $r3)


Findings in Java Class: com.tuya.smart.alexa.speech.connect.b

	 in Method: okhttp3.OkHttpClient a(java.lang.String)
		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			Third parameter was not properly generated as randomized
			at statement: virtualinvoke $r14.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>(varReplacer1000106, varReplacer1000106, varReplacer1000106)

		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			First parameter was not properly generated as generatedKeyManagers
			at statement: virtualinvoke $r14.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>(varReplacer1000106, varReplacer1000106, varReplacer1000106)

		RequiredPredicateError violating CrySL rule for javax.net.ssl.TrustManagerFactory
			First parameter was not properly generated as generatedKeyStore
			at statement: virtualinvoke $r11.<javax.net.ssl.TrustManagerFactory: void init(java.security.KeyStore)>(varReplacer1000099)

		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			Second parameter was not properly generated as generatedTrustManagers
			at statement: virtualinvoke $r14.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>(varReplacer1000106, varReplacer1000106, varReplacer1000106)


Findings in Java Class: kq

	 in Method: java.security.interfaces.ECPublicKey a(com.linecorp.linesdk.internal.g$b)
		RequiredPredicateError violating CrySL rule for java.security.KeyFactory
			First parameter was not properly generated as speccedKey
			at statement: $r11 = virtualinvoke $r5.<java.security.KeyFactory: java.security.PublicKey generatePublic(java.security.spec.KeySpec)>($r10)


Findings in Java Class: com.tuya.bouncycastle.jcajce.provider.asymmetric.ec.KeyPairGeneratorSpi$EC

	 in Method: java.security.KeyPair generateKeyPair()
		RequiredPredicateError violating CrySL rule for java.security.KeyPair
			Second parameter was not properly generated as generatedPrivkey
			at statement: specialinvoke $r12.<java.security.KeyPair: void <init>(java.security.PublicKey,java.security.PrivateKey)>($r9, $r13)

		RequiredPredicateError violating CrySL rule for java.security.KeyPair
			First parameter was not properly generated as generatedPubkey
			at statement: specialinvoke $r12.<java.security.KeyPair: void <init>(java.security.PublicKey,java.security.PrivateKey)>($r9, $r13)


Findings in Java Class: okhttp3.internal.Util

	 in Method: javax.net.ssl.X509TrustManager platformTrustManager()
		RequiredPredicateError violating CrySL rule for javax.net.ssl.TrustManagerFactory
			First parameter was not properly generated as generatedKeyStore
			at statement: virtualinvoke $r1.<javax.net.ssl.TrustManagerFactory: void init(java.security.KeyStore)>(varReplacer1645908)


Findings in Java Class: io.jsonwebtoken.impl.DefaultJwtParser

	 in Method: io.jsonwebtoken.Jwt parse(java.lang.String)
		RequiredPredicateError violating CrySL rule for javax.crypto.spec.SecretKeySpec
			First parameter was not properly generated as preparedKeyMaterial
			at statement: specialinvoke $r39.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r13, $r1)


Findings in Java Class: org.java_websocket.client.a

	 in Method: void c()
		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			First parameter was not properly generated as generatedKeyManagers
			at statement: virtualinvoke $r3.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>(varReplacer945265, varReplacer945265, varReplacer945265)

		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			Third parameter was not properly generated as randomized
			at statement: virtualinvoke $r3.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>(varReplacer945265, varReplacer945265, varReplacer945265)

		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			Second parameter was not properly generated as generatedTrustManagers
			at statement: virtualinvoke $r3.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>(varReplacer945265, varReplacer945265, varReplacer945265)


Findings in Java Class: com.tuya.sdk.bluetooth.bppdpdq

	 in Method: byte[] bppdpdq(byte[],byte[])
		RequiredPredicateError violating CrySL rule for javax.crypto.spec.SecretKeySpec
			First parameter was not properly generated as preparedKeyMaterial
			at statement: specialinvoke $r0.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r1, varReplacer1826294)

		RequiredPredicateError violating CrySL rule for javax.crypto.Cipher
			Second parameter was not properly generated as generatedKey
			at statement: virtualinvoke $r5.<javax.crypto.Cipher: void init(int,java.security.Key)>(varReplacer1826259, $r0)


======================= CryptoAnalysis Summary ==========================
	Number of CrySL rules: 47
	Number of Objects Analyzed: 466

	CryptoAnalysis found the following violations. For details see description above.
	IncompleteOperationError: 53
	NeverTypeOfError: 9
	RequiredPredicateError: 168
	ConstraintError: 72
	HardCodedError: 8
	TypestateError: 16
=====================================================================
