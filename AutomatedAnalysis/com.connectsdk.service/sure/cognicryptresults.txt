SLF4J: Failed to load class "org.slf4j.impl.StaticLoggerBinder".
SLF4J: Defaulting to no-operation (NOP) logger implementation
SLF4J: See http://www.slf4j.org/codes.html#StaticLoggerBinder for further details.
0    [main] WARN  pes.access.impl.DeclaredTypeFactory  - --- xtext.common.types ---------------------------------------------------
1    [main] WARN  pes.access.impl.DeclaredTypeFactory  - ASM library is too old. Falling back to java.lang.reflect API.
1    [main] WARN  pes.access.impl.DeclaredTypeFactory  - Please note that no information about compile time constants is available.
1    [main] WARN  pes.access.impl.DeclaredTypeFactory  - It's recommended to use org.objectweb.asm 9.3.0 or better (Maven group id: org.ow2.asm).
1    [main] WARN  pes.access.impl.DeclaredTypeFactory  - --------------------------------------------------------------------------
Alive 17569  5000
Ruleset: 
	javax.net.ssl.KeyStoreBuilderParameters
	javax.crypto.spec.PBEKeySpec
	java.security.spec.MGF1ParameterSpec
	java.security.MessageDigest
	javax.crypto.Cipher
	java.security.KeyPair
	javax.crypto.SecretKeyFactory
	java.security.cert.PKIXBuilderParameters
	javax.crypto.SecretKey
	javax.crypto.spec.IvParameterSpec
	javax.crypto.spec.PBEParameterSpec
	javax.net.ssl.TrustManagerFactory
	javax.crypto.spec.GCMParameterSpec
	javax.crypto.spec.SecretKeySpec
	javax.net.ssl.CertPathTrustManagerParameters
	java.security.spec.DSAParameterSpec
	javax.crypto.KeyAgreement
	java.security.cert.TrustAnchor
	javax.crypto.spec.DHParameterSpec
	javax.net.ssl.SSLParameters
	javax.net.ssl.SSLContext
	java.security.Key
	java.security.KeyFactory
	void
	java.security.DigestOutputStream
	java.security.SecureRandom
	java.security.cert.PKIXParameters
	java.security.spec.X509EncodedKeySpec
	javax.crypto.spec.DHGenParameterSpec
	javax.net.ssl.SSLEngine
	java.security.spec.RSAKeyGenParameterSpec
	java.security.Signature
	javax.crypto.CipherOutputStream
	javax.xml.crypto.dsig.spec.HMACParameterSpec
	java.security.AlgorithmParameterGenerator
	javax.crypto.Mac
	javax.crypto.spec.OAEPParameterSpec
	java.security.AlgorithmParameters
	javax.crypto.CipherInputStream
	java.security.DigestInputStream
	java.security.spec.ECParameterSpec
	javax.crypto.KeyGenerator
	java.security.KeyStore
	java.security.spec.ECGenParameterSpec
	java.security.KeyPairGenerator
	javax.net.ssl.KeyManagerFactory
	java.security.spec.DSAGenParameterSpec

Analyzed Objects: 
	Object:
		Variable: $r0
		Type: java.security.Signature
		Statement: $r0 = staticinvoke <java.security.Signature: java.security.Signature getInstance(java.lang.String)>($r1)
		Method: <org.bouncycastle.x509.X509Util: java.security.Signature getSignatureInstance(java.lang.String)>
		SHA-256: 6ed6d6cafdad6677f2cde5718fd419647ab4cbf23c64a3972859bdabf4ec1870
		Secure: false
	Object:
		Variable: $r3
		Type: java.security.MessageDigest
		Statement: $r3 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String,java.security.Provider)>($r2, $r1)
		Method: <com.google.android.gms.internal.ads.zzazf: java.lang.Object zzb(java.lang.String,java.security.Provider)>
		SHA-256: b663e8e6604e3724038f47ecd9e3461bfc4d085e8f51475e35d0df0838320694
		Secure: false
	Object:
		Variable: $r20
		Type: byte[]
		Statement: $r20 = virtualinvoke $r21.<java.security.MessageDigest: byte[] digest()>()
		Method: <com.facebook.ads.internal.o.c: void a(java.lang.String)>
		SHA-256: b34f0e1ebce1fb007d1bc9d912b40ed58ac419350c6a12c6fb304a22453eb36c
		Secure: false
	Object:
		Variable: $r4
		Type: java.security.KeyPair
		Statement: $r4 = virtualinvoke $r3.<java.security.KeyPairGenerator: java.security.KeyPair generateKeyPair()>()
		Method: <com.google.android.gms.internal.ads.zzayt: java.security.KeyPair zza(java.security.spec.ECParameterSpec)>
		SHA-256: 1fe5598ef898b9da0b41e3e720b782ddbe7583dbabb6dd1a22ad9b28c7502c7
		Secure: false
	Object:
		Variable: $r9
		Type: byte[]
		Statement: $r9 = virtualinvoke $r7.<java.security.MessageDigest: byte[] digest()>()
		Method: <com.facebook.FacebookSdk: java.lang.String getApplicationSignature(android.content.Context)>
		SHA-256: 8b81790206af6e35eaa721ded56516aeb0bd593e01d5696170f064cda184b471
		Secure: false
	Object:
		Variable: $r4
		Type: javax.net.ssl.TrustManager[]
		Statement: $r4 = virtualinvoke $r2.<javax.net.ssl.TrustManagerFactory: javax.net.ssl.TrustManager[] getTrustManagers()>()
		Method: <io.fabric.sdk.android.services.network.PinningTrustManager: javax.net.ssl.TrustManager[] initializeSystemTrustManagers(io.fabric.sdk.android.services.network.SystemKeyStore)>
		SHA-256: 267ddfdf604651697c34db1fc94591e0189f4dc272815b9bb761efbbe9e2dcb7
		Secure: false
	Object:
		Variable: $r5
		Type: javax.crypto.Mac
		Statement: $r5 = staticinvoke <javax.crypto.Mac: javax.crypto.Mac getInstance(java.lang.String)>($r3)
		Method: <com.amazon.whisperlink.util.EncryptionUtil: java.lang.String hmacEncrypt(java.lang.String[],long,byte[],java.lang.String)>
		SHA-256: 44564eb31a55a6cc3b99eb191014d76b5045fccd5049eceed754b2c688a2148d
		Secure: false
	Object:
		Variable: $r3
		Type: byte[]
		Statement: $r3 = virtualinvoke $r1.<java.security.MessageDigest: byte[] digest(byte[])>($r3)
		Method: <com.willblaschko.android.alexa.AuthorizationManager: byte[] getHash(java.lang.String)>
		SHA-256: f3385f153acb7188c9089deb9cec385a452813f857382129853b69a1265df362
		Secure: true
	Object:
		Variable: $r4
		Type: java.security.KeyFactory
		Statement: $r4 = staticinvoke <java.security.KeyFactory: java.security.KeyFactory getInstance(java.lang.String)>(varReplacer123869)
		Method: <com.google.firebase.iid.zzy: java.security.KeyPair zzc(java.lang.String,java.lang.String)>
		SHA-256: 4ce135237e34d24e20a1c1e2de8a442288efc25053f08844719a2ab544e68015
		Secure: false
	Object:
		Variable: $r6
		Type: byte[]
		Statement: $r6 = virtualinvoke $r4.<java.security.MessageDigest: byte[] digest()>()
		Method: <org.eclipse.jetty.security.authentication.DigestAuthenticator$Digest: boolean check(java.lang.Object)>
		SHA-256: d5f5a7a9ea69143e5509e8c324c5acfe668631e43e7f2084811cc9240e96d1d8
		Secure: false
	Object:
		Variable: $r3
		Type: byte[]
		Statement: $r3 = virtualinvoke $r2.<java.security.MessageDigest: byte[] digest()>()
		Method: <io.fabric.sdk.android.services.common.CommonUtils: java.lang.String hash(java.io.InputStream,java.lang.String)>
		SHA-256: 2a8bb7bdd975ef88d06e80a05666decf0aaf243ddba65d659145ee1e12c3280d
		Secure: false
	Object:
		Variable: $r20
		Type: byte[]
		Statement: $r20 = virtualinvoke $r21.<java.security.MessageDigest: byte[] digest()>()
		Method: <com.facebook.ads.internal.o.c: void a(java.lang.String)>
		SHA-256: b34f0e1ebce1fb007d1bc9d912b40ed58ac419350c6a12c6fb304a22453eb36c
		Secure: false
	Object:
		Variable: $r9
		Type: byte[]
		Statement: $r9 = virtualinvoke $r5.<java.security.MessageDigest: byte[] digest(byte[])>($r9)
		Method: <com.tom.rtsprtp.RTSPClient: java.lang.String calcDigestResponse(java.lang.String,java.lang.String,java.lang.String,java.lang.String)>
		SHA-256: 31a7fa89de673528a884e79586d17eb7a99b181632e0eca91011f7001a90df28
		Secure: false
	Object:
		Variable: $r2
		Type: byte[]
		Statement: virtualinvoke $r1.<java.security.SecureRandom: void nextBytes(byte[])>($r2)
		Method: <tekoiacore.core.h.a: java.lang.String a()>
		SHA-256: 4b623628d6ef66c222c2bd4184486700ba6718ec0c0f25ba023df0e29ab59459
		Secure: true
	Object:
		Variable: $r16
		Type: javax.crypto.spec.IvParameterSpec
		Statement: specialinvoke $r16.<javax.crypto.spec.IvParameterSpec: void <init>(byte[])>($r15)
		Method: <com.google.android.exoplayer2.upstream.cache.CachedContentIndex: boolean readFile()>
		SHA-256: b6c697fa0162487d2234220839affd07a08a1b765452b0abb8abcfe1b41dc7a6
		Secure: false
	Object:
		Variable: $r1
		Type: java.security.SecureRandom
		Statement: specialinvoke $r1.<java.security.SecureRandom: void <init>()>()
		Method: <org.bouncycastle.jcajce.provider.asymmetric.ec.KeyPairGeneratorSpi$EC: java.security.KeyPair generateKeyPair()>
		SHA-256: 52666556eb0b9e0106968c3639d610cef0bbf743129b6a2f13e952dd3c4ccbd6
		Secure: true
	Object:
		Variable: varReplacer84360
		Type: java.lang.String
		Statement: specialinvoke $r3.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r1, varReplacer84360)
		Method: <com.google.android.gms.internal.ads.zzck: java.lang.String zzb(byte[],byte[])>
		SHA-256: cd96fdb0e38899bb8e8dcc441bba1b86ad0fe8fd89283139b570703037df01a6
		Secure: false
	Object:
		Variable: $r3
		Type: javax.crypto.spec.SecretKeySpec
		Statement: specialinvoke $r3.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r4, varReplacer65884)
		Method: <com.google.android.exoplayer2.source.hls.Aes128DataSource: long open(com.google.android.exoplayer2.upstream.DataSpec)>
		SHA-256: 10684c64762846449dfe992b92f40779a9615e040dc7414ea025bd575b2739f7
		Secure: false
	Object:
		Variable: $r3
		Type: java.security.SecureRandom
		Statement: specialinvoke $r3.<java.security.SecureRandom: void <init>()>()
		Method: <com.samsung.multiscreen.Channel: void <clinit>()>
		SHA-256: 8da8ab719730be15b6e6b5503c2e264384c04e6b07cd02b1788adccf92ec1315
		Secure: true
	Object:
		Variable: $r26
		Type: javax.crypto.spec.IvParameterSpec
		Statement: specialinvoke $r26.<javax.crypto.spec.IvParameterSpec: void <init>(byte[])>($r6)
		Method: <com.google.android.exoplayer2.upstream.cache.CachedContentIndex: void writeFile()>
		SHA-256: 51aa827ccdddf15ce4c01bc27cfd724751c02e83d0ef83992ef8754a3cbe6089
		Secure: false
	Object:
		Variable: $r5
		Type: byte[]
		Statement: $r5 = virtualinvoke $r4.<java.security.MessageDigest: byte[] digest(byte[])>($r5)
		Method: <com.amazon.identity.auth.device.authorization.CodeChallengeWorkflow: java.lang.String generateCodeChallenge(java.lang.String,java.lang.String)>
		SHA-256: 5f321e42eae828040594fd26633f556349005357246a3c37d9463972145acb11
		Secure: true
	Object:
		Variable: $r5
		Type: javax.net.ssl.TrustManagerFactory
		Statement: $r5 = staticinvoke <javax.net.ssl.TrustManagerFactory: javax.net.ssl.TrustManagerFactory getInstance(java.lang.String)>($r4)
		Method: <com.google.android.tv.remote.pairing.KeyStoreManager$DynamicTrustManager: void reloadTrustManager(java.security.KeyStore)>
		SHA-256: 5ffa9bb7b54b7457bcc504a769663154dcccf02bcde83833e410717201fe83da
		Secure: false
	Object:
		Variable: $r3
		Type: byte[]
		Statement: $r3 = virtualinvoke $r2.<java.security.MessageDigest: byte[] digest()>()
		Method: <com.facebook.appevents.UserDataStore: java.lang.String encryptData(java.lang.String)>
		SHA-256: a6213812eb105dae3b886edeaa3f56b735ef9dd220f30d7f62aee0bf9b023c3d
		Secure: true
	Object:
		Variable: $r2
		Type: byte[]
		Statement: $r2 = virtualinvoke $r1.<java.security.MessageDigest: byte[] digest()>()
		Method: <com.spotxchange.internal.util.Encrypt: java.lang.String sha1(java.lang.String)>
		SHA-256: b99846193de9c45e5f7f03530068d164b82881dfadf7ada27e432f1879792f1f
		Secure: false
	Object:
		Variable: $r1
		Type: byte[]
		Statement: $r1 = virtualinvoke $r7.<jcifs.util.c: byte[] digest()>()
		Method: <jcifs.smb.r: void a(byte[],byte[],int)>
		SHA-256: d4ef3af15194311859724dd4a24ce78fc200a7dc60dc9bc3ae1477e6ce951a46
		Secure: false
	Object:
		Variable: $r3
		Type: java.security.MessageDigest
		Statement: $r3 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>($r2)
		Method: <com.google.android.gms.internal.ads.zzazf: java.lang.Object zzb(java.lang.String,java.security.Provider)>
		SHA-256: aaa18cd8e00995ae23872a00997eacf36fbdc0809e7c9a12cb497bfe5d1ceab0
		Secure: false
	Object:
		Variable: $r12
		Type: java.security.PublicKey
		Statement: $r12 = virtualinvoke $r9.<java.security.KeyPair: java.security.PublicKey getPublic()>()
		Method: <com.amazon.whisperlink.port.android.KeyStoreGenerator: java.io.File generateKeyStore(android.content.Context,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)>
		SHA-256: ef1e40c251e4a4b8e631f5d133ecba8b1ebbb21b73d1b6c1e6ba2e28f47354a1
		Secure: true
	Object:
		Variable: $r12
		Type: java.security.spec.X509EncodedKeySpec
		Statement: specialinvoke $r12.<java.security.spec.X509EncodedKeySpec: void <init>(byte[])>($r2)
		Method: <com.google.firebase.iid.zzy: java.security.KeyPair zzc(java.lang.String,java.lang.String)>
		SHA-256: c698f40eb2f9dcf45e817fa11087b44917240f511f4a4266e1225806907f1f24
		Secure: false
	Object:
		Variable: $r4
		Type: javax.net.ssl.TrustManager[]
		Statement: $r4 = virtualinvoke $r3.<javax.net.ssl.TrustManagerFactory: javax.net.ssl.TrustManager[] getTrustManagers()>()
		Method: <com.willblaschko.android.alexa.connection.ClientUtil: okhttp3.OkHttpClient getTLS12OkHttpClient()>
		SHA-256: 787cdd49322e538e74dd3ae2a66155426bfb55605dea9a6a70097ecfbfc2580c
		Secure: false
	Object:
		Variable: $r2
		Type: java.security.SecureRandom
		Statement: $r2 = staticinvoke <java.security.SecureRandom: java.security.SecureRandom getInstance(java.lang.String)>(varReplacer35595)
		Method: <com.amazon.whisperlink.util.EncryptionUtil: void initializeRandomGenerator()>
		SHA-256: 83db034797ffbfdd97d6087d797d6011e59b5e14c7da28d3724d8d5523afffe8
		Secure: true
	Object:
		Variable: $r1
		Type: javax.net.ssl.SSLContext
		Statement: $r1 = staticinvoke <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String)>(varReplacer159128)
		Method: <com.loopj.android.http.MySSLSocketFactory: void <init>(java.security.KeyStore)>
		SHA-256: b3114f1a982f59c374a6358e70f82a4121a0b03c545246fce87ac921123d8639
		Secure: false
	Object:
		Variable: $r5
		Type: byte[]
		Statement: $r0 = virtualinvoke $r6.<java.security.MessageDigest: byte[] digest(byte[])>($r5)
		Method: <org.java_websocket.drafts.Draft_76: byte[] createChallenge(java.lang.String,java.lang.String,byte[])>
		SHA-256: 80c037d133dfae34ddb8b3ebdc23c7e665cf0a31b614905c01e06ab69198cacc
		Secure: false
	Object:
		Variable: $r7
		Type: java.security.MessageDigest
		Statement: $r7 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer51151)
		Method: <com.facebook.ads.internal.q.a.f: java.lang.String b(android.content.Context)>
		SHA-256: 4497117c4d169d1797cf616ba5e34230f40005212dbb00f8a012d3b049309383
		Secure: false
	Object:
		Variable: $r2
		Type: byte[]
		Statement: $r2 = virtualinvoke $r1.<java.security.MessageDigest: byte[] digest()>()
		Method: <com.facebook.appevents.AppEvent: java.lang.String md5Checksum(java.lang.String)>
		SHA-256: eb5aa20233d0a39f9efa2c49b15b711fba57bf442f97f41aee15900a081180c4
		Secure: false
	Object:
		Variable: $r2
		Type: byte[]
		Statement: $r2 = virtualinvoke $r4.<java.security.MessageDigest: byte[] digest()>()
		Method: <jcifs.smb.r: byte[] a(byte[],byte[],byte[])>
		SHA-256: a49212942614ac3463807286fee0793a7551c06bc22aa78b8ad7aa593db7043d
		Secure: false
	Object:
		Variable: $r11
		Type: java.security.MessageDigest
		Statement: $r11 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>($r7)
		Method: <com.google.android.gms.tagmanager.zzbv: com.google.android.gms.internal.measurement.zzp zze(java.util.Map)>
		SHA-256: bffc36c04d19001f2a7a22affa6f3940c85b60762a56e153cca266e0d407aedf
		Secure: true
	Object:
		Variable: $r6
		Type: javax.crypto.CipherInputStream
		Statement: specialinvoke $r6.<javax.crypto.CipherInputStream: void <init>(java.io.InputStream,javax.crypto.Cipher)>($r7, $r1)
		Method: <com.google.android.exoplayer2.source.hls.Aes128DataSource: long open(com.google.android.exoplayer2.upstream.DataSpec)>
		SHA-256: b1c95b83a0b54225f85323d6e64404f4f9fb65cf558dc3cc43ef619428a138c7
		Secure: false
	Object:
		Variable: $r2
		Type: javax.crypto.spec.SecretKeySpec
		Statement: specialinvoke $r2.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r1, varReplacer158955)
		Method: <com.google.android.gms.internal.ads.zzayh: void <init>(byte[],int)>
		SHA-256: b1ce2d02c9bb0a899f6fc859cb1e6fcb0459f2ce934ca8e7acfe4cb2112f09be
		Secure: false
	Object:
		Variable: $r1
		Type: java.security.MessageDigest
		Statement: $r1 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer178437)
		Method: <okhttp3.internal.Util: okio.ByteString sha256(okio.ByteString)>
		SHA-256: 7d664108fac8665ca47f4dece5de96d25412295df4426a5509a02472cf16a266
		Secure: true
	Object:
		Variable: $r8
		Type: javax.crypto.spec.IvParameterSpec
		Statement: specialinvoke $r8.<javax.crypto.spec.IvParameterSpec: void <init>(byte[])>($r2)
		Method: <com.google.android.exoplayer2.upstream.crypto.AesFlushingCipher: void <init>(int,byte[],long,long)>
		SHA-256: 89e66808fdd4d44950f8f05d6392a01fd0c8f1f822f8047e1a281f8bc53e1592
		Secure: false
	Object:
		Variable: $r17
		Type: java.security.PrivateKey
		Statement: $r17 = virtualinvoke $r1.<java.security.KeyPair: java.security.PrivateKey getPrivate()>()
		Method: <com.google.polo.ssl.SslUtil: java.security.cert.X509Certificate generateX509V3Certificate(java.security.KeyPair,java.lang.String,java.util.Date,java.util.Date,java.math.BigInteger)>
		SHA-256: 48f67e2390e79f0ec0f79b4ce3844a532b423d83a55a1d36a74a114b29f15f3e
		Secure: false
	Object:
		Variable: $r6
		Type: byte[]
		Statement: $r6 = virtualinvoke $r4.<java.security.MessageDigest: byte[] digest(byte[])>($r6)
		Method: <org.eclipse.jetty.client.security.DigestAuthentication: java.lang.String newCnonce(org.eclipse.jetty.client.HttpExchange,org.eclipse.jetty.client.security.Realm,java.util.Map)>
		SHA-256: 75b9d9becbc3dd2f1d400ff82bd201c696a1a94c996ef1962862761c64cf4114
		Secure: false
	Object:
		Variable: $r12
		Type: javax.crypto.spec.DHParameterSpec
		Statement: specialinvoke $r12.<javax.crypto.spec.DHParameterSpec: void <init>(java.math.BigInteger,java.math.BigInteger,int)>($r5, $r13, $i0)
		Method: <org.bouncycastle.jcajce.provider.asymmetric.dh.BCDHPublicKey: void <init>(org.bouncycastle.asn1.x509.SubjectPublicKeyInfo)>
		SHA-256: 5c7feb4cfb8d8151025093d942db5e43c695a3cee0ea35deba16aa325fdb88e9
		Secure: true
	Object:
		Variable: $r9
		Type: javax.net.ssl.SSLContext
		Statement: $r9 = staticinvoke <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String)>(varReplacer65568)
		Method: <cn.com.broadlink.base.b: java.lang.String a(java.lang.String,java.util.Map,byte[],int,javax.net.ssl.TrustManager[])>
		SHA-256: e106963269d052b4e2b5254b60ab75cf68199119af05e7d51b88328fa7e08ac3
		Secure: false
	Object:
		Variable: $r3
		Type: java.security.KeyPair
		Statement: $r3 = virtualinvoke $r2.<java.security.KeyPairGenerator: java.security.KeyPair genKeyPair()>()
		Method: <com.a.a.c: com.a.a.c a(com.a.a.a)>
		SHA-256: 92947b02ff939e5f0185465b2e76b8cef29fa25fb1757ec24cf6b04c8cc58ae7
		Secure: true
	Object:
		Variable: $r2
		Type: java.security.MessageDigest
		Statement: $r2 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>($r1)
		Method: <okio.ByteString: okio.ByteString digest(java.lang.String)>
		SHA-256: b336d574501b28a5bd90db22472c23a68acb0c1b99c4f14746fdc2a23c69a24e
		Secure: false
	Object:
		Variable: $r2
		Type: java.security.SecureRandom
		Statement: specialinvoke $r2.<java.security.SecureRandom: void <init>()>()
		Method: <org.eclipse.jetty.server.session.AbstractSessionIdManager: void initRandom()>
		SHA-256: edd44b93896dfe00450928d17f69d9a90bcac2b55f70116c617c1facc82cac06
		Secure: true
	Object:
		Variable: $r0
		Type: byte[]
		Statement: $r0 = virtualinvoke $r3.<java.security.MessageDigest: byte[] digest(byte[])>($r0)
		Method: <com.amazon.identity.auth.device.utils.PackageSignatureUtil: byte[] getFingerprint(com.amazon.identity.auth.device.utils.HashAlgorithm,byte[])>
		SHA-256: f28eeef0237b0d1ca708825f530dadfc706c6f34ecd5e6d2b95090c0f168d6b5
		Secure: true
	Object:
		Variable: $z0
		Type: boolean
		Statement: $z0 = virtualinvoke $r2.<java.security.Signature: boolean verify(byte[])>($r8)
		Method: <org.bouncycastle.jce.provider.X509CertificateObject: void checkSignature(java.security.PublicKey,java.security.Signature)>
		SHA-256: 55c0ef59d2e8f2d9e7c3b9d886f8a0561a8e9e82e242551a90594b801b63073c
		Secure: false
	Object:
		Variable: $r3
		Type: java.security.MessageDigest
		Statement: $r3 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer158814)
		Method: <com.amazon.whisperlink.port.DeviceIds: java.lang.String getIdFromString(java.lang.String)>
		SHA-256: c31e62ea9af727c6f0084fab0f7d477d07c5d6b96f5a32f85b6c5ee338ca3def
		Secure: false
	Object:
		Variable: $r5
		Type: java.security.AlgorithmParameters
		Statement: $r5 = staticinvoke <java.security.AlgorithmParameters: java.security.AlgorithmParameters getInstance(java.lang.String,java.security.Provider)>($r3, $r4)
		Method: <org.bouncycastle.jce.provider.X509SignatureUtil: void setSignatureParameters(java.security.Signature,org.bouncycastle.asn1.ASN1Encodable)>
		SHA-256: 5542b69dc5336cc3d00547288fa7f3d8d3237d121f2ce57576e26391c36e1a8d
		Secure: false
	Object:
		Variable: $r2
		Type: java.security.MessageDigest
		Statement: $r2 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>($r1)
		Method: <com.facebook.ads.internal.p.a.o: java.lang.String a(byte[],java.lang.String)>
		SHA-256: ba4e4bfe6a694192decf64050e0aed2bb871a8ccea5bec83a9963aaf22784bb8
		Secure: false
	Object:
		Variable: $r7
		Type: javax.net.ssl.SSLContext
		Statement: $r7 = staticinvoke <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String)>(varReplacer47676)
		Method: <com.willblaschko.android.alexa.connection.ClientUtil: okhttp3.OkHttpClient getTLS12OkHttpClient()>
		SHA-256: 785a710de770753b6ef1477903096fa25efadfeb480b1c059cfc8186c02935ec
		Secure: false
	Object:
		Variable: $r4
		Type: java.security.MessageDigest
		Statement: $r4 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer175591)
		Method: <org.eclipse.jetty.security.authentication.DigestAuthenticator$Digest: boolean check(java.lang.Object)>
		SHA-256: f81e1187dba68bf4ed75710e1e027c20e18210885cfe893cb99ab29071fce10d
		Secure: false
	Object:
		Variable: $r1
		Type: java.security.MessageDigest
		Statement: $r1 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer38547)
		Method: <com.haier.uhome.usdk.f.a: java.lang.String a(byte[])>
		SHA-256: 8c88a0d65582ab3312cf260e736a12c5988e0a1f35a39d363f08d8f65275b2be
		Secure: false
	Object:
		Variable: $r1
		Type: java.security.SecureRandom
		Statement: specialinvoke $r1.<java.security.SecureRandom: void <init>()>()
		Method: <com.amazon.identity.auth.device.authorization.CodeChallengeWorkflow: byte[] generateRandomOctetSequence()>
		SHA-256: 2d0fd4b34da60ccfed89abfd1af899314e4cda6acfbc267f428a68a215054fa4
		Secure: true
	Object:
		Variable: $r4
		Type: java.security.cert.PKIXBuilderParameters
		Statement: specialinvoke $r4.<java.security.cert.PKIXBuilderParameters: void <init>(java.security.KeyStore,java.security.cert.CertSelector)>($r1, $r5)
		Method: <org.eclipse.jetty.util.ssl.SslContextFactory: javax.net.ssl.TrustManager[] getTrustManagers(java.security.KeyStore,java.util.Collection)>
		SHA-256: 61d7ae6c8198ba19dfb7d5e2e173ae934eceaee3098f3304877291093921f44e
		Secure: false
	Object:
		Variable: $r2
		Type: byte[]
		Statement: $r1 = virtualinvoke $r5.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r2)
		Method: <com.google.android.gms.internal.ads.zzck: java.lang.String zzb(byte[],byte[])>
		SHA-256: 8fb51ced167b1325ad9434265704d6e72fed40ea4077398c37a1512ec4c8a31a
		Secure: false
	Object:
		Variable: varReplacer158949
		Type: java.lang.String
		Statement: specialinvoke $r3.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r1, varReplacer158949)
		Method: <com.google.android.gms.internal.ads.zzayi: void <init>(byte[],int)>
		SHA-256: 548e42290a3cc227a873081d3c3a24f54389def6bc7a24a758766cd9a5d21ab2
		Secure: false
	Object:
		Variable: $r2
		Type: byte[]
		Statement: virtualinvoke $r8.<jcifs.util.c: int digest(byte[],int,int)>($r2, $i0, varReplacer162698)
		Method: <jcifs.smb.r: void a(byte[],byte[],int)>
		SHA-256: 4eaa3070d1b72c045e437dba0b06609d5a170ecae6e38f4376cba06724812ae7
		Secure: false
	Object:
		Variable: $r4
		Type: byte[]
		Statement: $r4 = virtualinvoke $r2.<java.security.MessageDigest: byte[] digest(byte[])>($r4)
		Method: <io.fabric.sdk.android.services.network.PinningTrustManager: boolean isValidPin(java.security.cert.X509Certificate)>
		SHA-256: 5ca66cf0dae2516c74e999d3d8b7bd7f279bd0729f99c1db99a4b3aed789c600
		Secure: false
	Object:
		Variable: $r2
		Type: java.security.spec.ECGenParameterSpec
		Statement: specialinvoke $r2.<java.security.spec.ECGenParameterSpec: void <init>(java.lang.String)>(varReplacer141347)
		Method: <org.bouncycastle.jcajce.provider.asymmetric.ec.KeyPairGeneratorSpi$EC: void <clinit>()>
		SHA-256: e5e644ec7fa725d46a19719e9233a3a951e09187cea296817ad799fdbf1ba6cd
		Secure: true
	Object:
		Variable: $r5
		Type: javax.net.ssl.KeyManager[]
		Statement: $r5 = virtualinvoke $r3.<javax.net.ssl.KeyManagerFactory: javax.net.ssl.KeyManager[] getKeyManagers()>()
		Method: <com.google.android.tv.remote.pairing.KeyStoreManager: javax.net.ssl.KeyManager[] getKeyManagers()>
		SHA-256: d617a14b49662629f0b204812884e372269ad388bdab979b923401d164e8f2eb
		Secure: false
	Object:
		Variable: $r6
		Type: byte[]
		Statement: $r6 = virtualinvoke $r4.<java.security.MessageDigest: byte[] digest()>()
		Method: <org.eclipse.jetty.security.authentication.DigestAuthenticator$Digest: boolean check(java.lang.Object)>
		SHA-256: d5f5a7a9ea69143e5509e8c324c5acfe668631e43e7f2084811cc9240e96d1d8
		Secure: false
	Object:
		Variable: $r4
		Type: javax.crypto.spec.DHParameterSpec
		Statement: specialinvoke $r4.<javax.crypto.spec.DHParameterSpec: void <init>(java.math.BigInteger,java.math.BigInteger,int)>($r3, $r6, $i0)
		Method: <org.bouncycastle.jcajce.provider.asymmetric.dh.BCDHPrivateKey: void <init>(org.bouncycastle.crypto.params.DHPrivateKeyParameters)>
		SHA-256: 2a4b346577c9be66b1ecc846096673fb16cf25cfe658c92b9a2f9f8f9ed3a857
		Secure: true
	Object:
		Variable: $r2
		Type: java.security.MessageDigest
		Statement: $r2 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer19230)
		Method: <com.facebook.appevents.UserDataStore: java.lang.String encryptData(java.lang.String)>
		SHA-256: a1a4a57083beafa8cb74c3551f319ebae63339bac3e0a3fff53102df65680dd4
		Secure: true
	Object:
		Variable: $r4
		Type: byte[]
		Statement: $r4 = virtualinvoke $r3.<java.security.MessageDigest: byte[] digest(byte[])>($r4)
		Method: <org.java_websocket.drafts.Draft_10: java.lang.String generateFinalKey(java.lang.String)>
		SHA-256: 6f7e0d009fe843781c6583c4c2d94575a8e4890331abe5d479f088ab2467a31e
		Secure: false
	Object:
		Variable: $r1
		Type: java.security.MessageDigest
		Statement: $r1 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer163318)
		Method: <tekoiacore.core.h.a: java.lang.String a(java.lang.String,int)>
		SHA-256: 5664d60acd1665f4d29c3a80e4943c28e2ebbb4e9e107eb7d27365b737f828fe
		Secure: true
	Object:
		Variable: $r3
		Type: java.security.MessageDigest
		Statement: $r3 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>($r2)
		Method: <com.amazon.identity.auth.device.utils.PackageSignatureUtil: byte[] getFingerprint(com.amazon.identity.auth.device.utils.HashAlgorithm,byte[])>
		SHA-256: 751c50a4c6f147c774c61af3cf5dace9766a38fa7cf11c8631e3866d98048e53
		Secure: true
	Object:
		Variable: $r2
		Type: java.lang.String
		Statement: $r3 = staticinvoke <java.security.KeyFactory: java.security.KeyFactory getInstance(java.lang.String,java.security.Provider)>($r2, $r1)
		Method: <com.google.android.gms.internal.ads.zzazc: java.lang.Object zzb(java.lang.String,java.security.Provider)>
		SHA-256: 3ef359418d86922f2e13249910ace0c0fb97ac014f2961fb1a947fb9ccec9f47
		Secure: false
	Object:
		Variable: $r9
		Type: java.security.KeyStore
		Statement: $r9 = staticinvoke <java.security.KeyStore: java.security.KeyStore getInstance(java.lang.String,java.lang.String)>($r0, $r1)
		Method: <org.eclipse.jetty.util.security.CertificateUtils: java.security.KeyStore getKeyStore(java.io.InputStream,java.lang.String,java.lang.String,java.lang.String,java.lang.String)>
		SHA-256: f37c29025a192792c87dbda553d3497426cf94920d5059cc79b2b08916802cd7
		Secure: false
	Object:
		Variable: $r1
		Type: java.security.MessageDigest
		Statement: $r1 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer129860)
		Method: <com.flurry.sdk.jn: byte[] f(java.lang.String)>
		SHA-256: a0b94e50d5703cb1a875f45398d77136c05c3253122b2bb73dcb88bcfdfe0d70
		Secure: false
	Object:
		Variable: varReplacer135631
		Type: java.lang.String
		Statement: $r5 = staticinvoke <java.security.KeyFactory: java.security.KeyFactory getInstance(java.lang.String)>(varReplacer135631)
		Method: <com.google.android.gms.internal.ads.zzayt: byte[] zza(java.security.interfaces.ECPrivateKey,java.security.spec.ECPoint)>
		SHA-256: 9fc6bbd99991da9e7cea8b400f95b71db5d2bf0854afb3d5d7932736199681bc
		Secure: false
	Object:
		Variable: $r1
		Type: java.lang.String
		Statement: specialinvoke $r31.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r2, $r1)
		Method: <com.google.android.gms.internal.ads.zzayr: com.google.android.gms.internal.ads.zzays zza(java.lang.String,byte[],byte[],int,com.google.android.gms.internal.ads.zzayw)>
		SHA-256: 8dc9b59c83ae429db6a578b7988808edd22bd551aae912efcd67088393be4bec
		Secure: false
	Object:
		Variable: $r5
		Type: java.security.KeyStore
		Statement: $r5 = staticinvoke <java.security.KeyStore: java.security.KeyStore getInstance(java.lang.String)>($r4)
		Method: <com.google.android.tv.remote.pairing.KeyStoreManager: java.security.KeyStore load()>
		SHA-256: a695dcf2cab1d39ed979da588f11598c020649e34d773f0177a22f2ae88884dc
		Secure: true
	Object:
		Variable: $r8
		Type: javax.net.ssl.KeyManager[]
		Statement: $r8 = virtualinvoke $r4.<javax.net.ssl.KeyManagerFactory: javax.net.ssl.KeyManager[] getKeyManagers()>()
		Method: <com.amazon.whisperlink.port.android.SecurityManagerFactory: void init(android.content.Context)>
		SHA-256: a7f73e334c3f09bd12d3f94955833583b7ca8e506c463a97d9f53a01c3fb1a19
		Secure: false
	Object:
		Variable: $r9
		Type: byte[]
		Statement: $r9 = virtualinvoke $r5.<java.security.MessageDigest: byte[] digest()>()
		Method: <org.eclipse.jetty.client.security.DigestAuthentication: java.lang.String newResponse(java.lang.String,org.eclipse.jetty.client.HttpExchange,org.eclipse.jetty.client.security.Realm,java.util.Map)>
		SHA-256: 91b1a30b88b9c5530eee739f8ac49cfeca10a06dc3cadc5213b760545bd41045
		Secure: false
	Object:
		Variable: $r2
		Type: java.security.MessageDigest
		Statement: $r2 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer74409)
		Method: <com.connectsdk.service.AirPlayService: java.lang.String digestAuthentication(java.lang.String)>
		SHA-256: 13b05f9ab32bead0f3351e31b5dcc2537330ef7b29d4fe65a1cd386bf45413f8
		Secure: false
	Object:
		Variable: $r2
		Type: java.security.spec.ECGenParameterSpec
		Statement: specialinvoke $r2.<java.security.spec.ECGenParameterSpec: void <init>(java.lang.String)>(varReplacer141341)
		Method: <org.bouncycastle.jcajce.provider.asymmetric.ec.KeyPairGeneratorSpi$EC: void <clinit>()>
		SHA-256: dd28574359e229baac40116b8b8acecc89f93472464928bfc87a3a668a489c12
		Secure: true
	Object:
		Variable: $r2
		Type: javax.crypto.spec.IvParameterSpec
		Statement: specialinvoke $r2.<javax.crypto.spec.IvParameterSpec: void <init>(byte[])>($r1)
		Method: <com.google.android.gms.internal.ads.zzck: byte[] zza(byte[],java.lang.String)>
		SHA-256: 13d922cb9eb6c14094b10f9a8fcf905abb1dd183b00f161a6e731befc31e2aba
		Secure: false
	Object:
		Variable: $r3
		Type: java.security.spec.DSAParameterSpec
		Statement: specialinvoke $r3.<java.security.spec.DSAParameterSpec: void <init>(java.math.BigInteger,java.math.BigInteger,java.math.BigInteger)>($r2, $r5, $r6)
		Method: <org.bouncycastle.jcajce.provider.asymmetric.dsa.BCDSAPublicKey: void <init>(org.bouncycastle.crypto.params.DSAPublicKeyParameters)>
		SHA-256: 9390edae09a93724017ade479bb47ea94287e6460977d2dad3759cd566636f64
		Secure: true
	Object:
		Variable: $r1
		Type: java.security.KeyPair
		Statement: $r1 = virtualinvoke $r0.<java.security.KeyPairGenerator: java.security.KeyPair generateKeyPair()>()
		Method: <com.google.firebase.iid.zza: java.security.KeyPair zzb()>
		SHA-256: a5c31e3ff3f5e3b1366f168c50ae1e8c0b22e1fefc025bb8ab591162c66c4a2
		Secure: true
	Object:
		Variable: $r2
		Type: javax.crypto.spec.SecretKeySpec
		Statement: specialinvoke $r2.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r1, varReplacer158948)
		Method: <com.google.android.gms.internal.ads.zzayj: void <init>(byte[])>
		SHA-256: dda556db2b8cd0596ee5da14f20b3014af8302234fc3444519dcadd7a02e34cc
		Secure: false
	Object:
		Variable: $r21
		Type: java.security.MessageDigest
		Statement: $r21 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer49857)
		Method: <com.facebook.ads.internal.o.c: void a(java.lang.String)>
		SHA-256: acc45e3ee239334040376d0d4f5ddf5d0a9b5e4b8df3517e4ecfc03568f5178d
		Secure: false
	Object:
		Variable: $r12
		Type: java.security.KeyPair
		Statement: specialinvoke $r12.<java.security.KeyPair: void <init>(java.security.PublicKey,java.security.PrivateKey)>($r9, $r13)
		Method: <org.bouncycastle.jcajce.provider.asymmetric.ec.KeyPairGeneratorSpi$EC: java.security.KeyPair generateKeyPair()>
		SHA-256: c9e1ff5450f21aae65af053d6ed29f81c5a7b267991078defbfa3059af0e266a
		Secure: false
	Object:
		Variable: $r8
		Type: byte[]
		Statement: $r8 = virtualinvoke $r7.<java.security.MessageDigest: byte[] digest(byte[])>($r8)
		Method: <com.google.android.gms.measurement.internal.zzba: java.lang.String zzbz(java.lang.String)>
		SHA-256: 95450ecd61597048b5094acfa5e3dd4efb2ae64bb93f86e0535ef1e27a717f0e
		Secure: false
	Object:
		Variable: $r5
		Type: java.security.SecureRandom
		Statement: specialinvoke $r5.<java.security.SecureRandom: void <init>()>()
		Method: <com.google.android.gms.internal.ads.zzbk: byte[] zza(byte[],java.lang.String,boolean)>
		SHA-256: c6102b70428983c4be93cf6d72f88d13eb5628aacceff36be81fde47f369e86b
		Secure: true
	Object:
		Variable: $r1
		Type: byte[]
		Statement: $r1 = virtualinvoke $r2.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r1)
		Method: <com.a.a.c: byte[] a(byte[])>
		SHA-256: d0c5052182f617601a166aaf95ed10f50cc60f7ab85e8b8d20420f968476e371
		Secure: false
	Object:
		Variable: $r12
		Type: java.security.MessageDigest
		Statement: $r12 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer175618)
		Method: <org.eclipse.jetty.util.security.Credential$MD5: boolean check(java.lang.Object)>
		SHA-256: 1e56cb6e2d56e03ca717a3e7c388c9854393667d7d6859a3d32642470f4a38b4
		Secure: false
	Object:
		Variable: $r1
		Type: byte[]
		Statement: $r1 = virtualinvoke $r0.<java.security.MessageDigest: byte[] digest()>()
		Method: <com.facebook.internal.Utility: java.lang.String hashBytes(java.security.MessageDigest,byte[])>
		SHA-256: 1bd65c7e3ef7c5880ee054dd01ba963cb9b0d277e32cad1c7526c867dab34e4b
		Secure: false
	Object:
		Variable: $r2
		Type: byte[]
		Statement: $r2 = virtualinvoke $r1.<java.security.MessageDigest: byte[] digest(byte[])>($r2)
		Method: <okhttp3.internal.Util: okio.ByteString sha1(okio.ByteString)>
		SHA-256: 533790f741ccce52b37b13a1f5b15685cf6be9dbae4d3ca5f2ae063c0b550248
		Secure: false
	Object:
		Variable: $r12
		Type: java.security.spec.ECParameterSpec
		Statement: specialinvoke $r12.<java.security.spec.ECParameterSpec: void <init>(java.security.spec.EllipticCurve,java.security.spec.ECPoint,java.math.BigInteger,int)>($r11, $r13, $r8, $i0)
		Method: <org.bouncycastle.jcajce.provider.asymmetric.ec.BCECPrivateKey: void <init>(java.lang.String,org.bouncycastle.crypto.params.ECPrivateKeyParameters,org.bouncycastle.jcajce.provider.asymmetric.ec.BCECPublicKey,org.bouncycastle.jce.spec.ECParameterSpec,org.bouncycastle.jcajce.provider.config.ProviderConfiguration)>
		SHA-256: a1d5c1019a937ff6b0dec47095ae3215e200e9859a8bed325078ed91f3857d0c
		Secure: true
	Object:
		Variable: $r8
		Type: javax.crypto.spec.IvParameterSpec
		Statement: specialinvoke $r8.<javax.crypto.spec.IvParameterSpec: void <init>(byte[])>($r5)
		Method: <tekoiacore.core.h.a: byte[] a(java.lang.String,java.lang.String,tekoiacore.core.h.a$a,java.lang.String)>
		SHA-256: 11fd0f6d2a8afc6ec8461b8e18cd94665bab35b0eb1fb9a536a1640d52313a0c
		Secure: false
	Object:
		Variable: $r5
		Type: byte[]
		Statement: virtualinvoke $r2.<javax.crypto.Cipher: byte[] update(byte[])>($r5)
		Method: <com.a.a.c: byte[] a(byte[])>
		SHA-256: 9a2db965e1eff466c94044b5940940684d6639bb8db486cd2af4683335fcda39
		Secure: false
	Object:
		Variable: $r9
		Type: byte[]
		Statement: $r9 = virtualinvoke $r7.<java.security.MessageDigest: byte[] digest(byte[])>($r9)
		Method: <com.facebook.ads.internal.q.a.f: java.lang.String b(android.content.Context)>
		SHA-256: 8b17835f05b8f1db7fb74451e9c8e7436b062586eb2519a35dcbcfd9af3153b3
		Secure: false
	Object:
		Variable: $r0
		Type: java.security.MessageDigest
		Statement: $r0 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer89214)
		Method: <com.google.android.gms.measurement.internal.zzfk: java.security.MessageDigest getMessageDigest()>
		SHA-256: 38164c218be70c4a61b985f5b00cca8431b5fd1855596e378a07b3d52317e52f
		Secure: false
	Object:
		Variable: $r4
		Type: javax.net.ssl.KeyManagerFactory
		Statement: $r4 = staticinvoke <javax.net.ssl.KeyManagerFactory: javax.net.ssl.KeyManagerFactory getInstance(java.lang.String)>($r3)
		Method: <org.eclipse.jetty.util.ssl.SslContextFactory: javax.net.ssl.KeyManager[] getKeyManagers(java.security.KeyStore)>
		SHA-256: c3dab8329dc120e657299892c7d112d947fad6c6c22e38cf1394f4fd5bc3eaa7
		Secure: false
	Object:
		Variable: $r1
		Type: javax.crypto.Cipher
		Statement: $r1 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer105698)
		Method: <com.tekoia.sure.utils.Enigma: void InitCipher()>
		SHA-256: 3a45ef56a54f66f4d3912aab082e867f1d73e30f41811ee4cc5ef48ccec574b6
		Secure: true
	Object:
		Variable: $r2
		Type: byte[]
		Statement: $r2 = virtualinvoke $r1.<jcifs.util.c: byte[] digest()>()
		Method: <jcifs.smb.r: byte[] a(byte[],byte[],byte[],int,int)>
		SHA-256: 200e5df524a00a9ef6ad95859838d89bbc32b23d470455775d4e6101da7ed666
		Secure: false
	Object:
		Variable: varReplacer158948
		Type: java.lang.String
		Statement: specialinvoke $r2.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r1, varReplacer158948)
		Method: <com.google.android.gms.internal.ads.zzayj: void <init>(byte[])>
		SHA-256: 609566ce72e7e0aa057c15a2f26d4f481a6dd99ed7350f28a9181ebb06db7f6c
		Secure: false
	Object:
		Variable: $r9
		Type: byte[]
		Statement: $r9 = virtualinvoke $r5.<java.security.MessageDigest: byte[] digest(byte[])>($r9)
		Method: <com.tom.rtsprtp.RTSPClient: java.lang.String calcDigestResponse(java.lang.String,java.lang.String,java.lang.String,java.lang.String)>
		SHA-256: 31a7fa89de673528a884e79586d17eb7a99b181632e0eca91011f7001a90df28
		Secure: false
	Object:
		Variable: varReplacer158955
		Type: java.lang.String
		Statement: specialinvoke $r2.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r1, varReplacer158955)
		Method: <com.google.android.gms.internal.ads.zzayh: void <init>(byte[],int)>
		SHA-256: c7cce97e6e83f75b54ec7efd63b811b81f4a08c887a049622d425dd75c0589f1
		Secure: false
	Object:
		Variable: $r3
		Type: javax.crypto.spec.DHParameterSpec
		Statement: specialinvoke $r3.<javax.crypto.spec.DHParameterSpec: void <init>(java.math.BigInteger,java.math.BigInteger,int)>($r2, $r5, $i0)
		Method: <org.bouncycastle.jcajce.provider.asymmetric.dh.BCDHPublicKey: void <init>(org.bouncycastle.crypto.params.DHPublicKeyParameters)>
		SHA-256: 8afc5c7eb96b36d8829bf9167e10c334a2090367af9364094726e410dd8ac903
		Secure: true
	Object:
		Variable: $r3
		Type: java.security.MessageDigest
		Statement: $r3 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer83125)
		Method: <tekoiacore.utils.constants.a: java.lang.String a(byte[],java.lang.String,java.lang.String)>
		SHA-256: 5c4155ba743bc8a013c1058d976ffe9f58616dfe51050c0bd30405254ff3916f
		Secure: false
	Object:
		Variable: $r1
		Type: java.security.MessageDigest
		Statement: $r1 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer89141)
		Method: <com.spotxchange.internal.util.Encrypt: java.lang.String sha1(java.lang.String)>
		SHA-256: bb367f510deabe4dda4c428cf91c87a0d34e1c64c56cf9b9c55ea90b4383472f
		Secure: false
	Object:
		Variable: $r0
		Type: java.security.KeyPairGenerator
		Statement: $r0 = staticinvoke <java.security.KeyPairGenerator: java.security.KeyPairGenerator getInstance(java.lang.String)>(varReplacer100683)
		Method: <com.google.firebase.iid.zza: java.security.KeyPair zzb()>
		SHA-256: 4b62baa68b112ae453c64f4b792dffc45e17635fdcacd3b147fbe0f01c6c226d
		Secure: false
	Object:
		Variable: $r9
		Type: java.security.MessageDigest
		Statement: $r9 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer106482)
		Method: <com.google.polo.pairing.PoloChallengeResponse: byte[] getAlpha(byte[])>
		SHA-256: 69ecc4f2f95041d7c3c2d721083dbf6c02de47c1bef6d2cedb23ee8c40843a3e
		Secure: true
	Object:
		Variable: $r3
		Type: javax.crypto.KeyAgreement
		Statement: $r3 = staticinvoke <javax.crypto.KeyAgreement: javax.crypto.KeyAgreement getInstance(java.lang.String,java.security.Provider)>($r2, $r1)
		Method: <com.google.android.gms.internal.ads.zzazb: java.lang.Object zzb(java.lang.String,java.security.Provider)>
		SHA-256: 99fc601a8a59da240a4401bba1989daa6d108a7bcf93c4060f5ae35be77f45e0
		Secure: false
	Object:
		Variable: $r1
		Type: byte[]
		Statement: $i2 = virtualinvoke $r2.<javax.crypto.Cipher: int update(byte[],int,int,byte[],int)>($r3, $i2, $i0, $r1, $i1)
		Method: <com.google.android.exoplayer2.upstream.crypto.AesFlushingCipher: int nonFlushingUpdate(byte[],int,int,byte[],int)>
		SHA-256: a2794281e59fcb03f8a146b8b02191b5c39b0693c95c95de6844e3bb14450314
		Secure: false
	Object:
		Variable: $r1
		Type: byte[]
		Statement: virtualinvoke $r0.<java.security.SecureRandom: void nextBytes(byte[])>($r1)
		Method: <com.google.android.tv.support.remote.core.AbstractDeviceImpl: java.lang.String randomMACAddress()>
		SHA-256: eec248f2f19cfe2b439192660efcb213f926b12488c4220429f0966326b0e131
		Secure: true
	Object:
		Variable: $r4
		Type: javax.net.ssl.SSLContext
		Statement: $r4 = staticinvoke <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String)>(varReplacer83002)
		Method: <com.google.polo.ssl.SSLSocketFactoryWrapper: void <init>(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[])>
		SHA-256: c9821eee32473d6c9cb1e3fc6a1aaa007dd319bf5a4d8db6f79422cdf96b3735
		Secure: false
	Object:
		Variable: $r8
		Type: javax.crypto.spec.GCMParameterSpec
		Statement: specialinvoke $r8.<javax.crypto.spec.GCMParameterSpec: void <init>(int,byte[])>(varReplacer135593, $r4)
		Method: <com.google.android.gms.internal.ads.zzayj: byte[] zzc(byte[],byte[])>
		SHA-256: 57e372bd40ba7cbe3f5070deb26c8b37df00353850baffca61bbb72bba5af7d4
		Secure: false
	Object:
		Variable: varReplacer51281
		Type: java.lang.String
		Statement: specialinvoke $r7.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r3, varReplacer51281)
		Method: <com.google.android.gms.internal.ads.zzck: byte[] zza(byte[],java.lang.String)>
		SHA-256: c3ae734b013fd1697a313d50fc221404ca39c743faa500825cf234a316c21a64
		Secure: false
	Object:
		Variable: $r1
		Type: java.security.MessageDigest
		Statement: $r1 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer89564)
		Method: <com.facebook.appevents.AppEvent: java.lang.String md5Checksum(java.lang.String)>
		SHA-256: a15f027ccd1bb617c6d0e2ff49d3e4ee4712f7fb16504e72e80cfd60bca61b6c
		Secure: false
	Object:
		Variable: $r3
		Type: java.security.SecureRandom
		Statement: $r3 = staticinvoke <java.security.SecureRandom: java.security.SecureRandom getInstance(java.lang.String)>($r5)
		Method: <org.eclipse.jetty.util.ssl.SslContextFactory: void doStart()>
		SHA-256: fe977b0a16bded9d091ed63d54c935dd33980919b0b80611f1152e2a51f49e00
		Secure: true
	Object:
		Variable: $r7
		Type: javax.crypto.Cipher
		Statement: $r7 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer135601)
		Method: <com.google.android.gms.internal.ads.zzayi: byte[] zzc(byte[],byte[])>
		SHA-256: 65f0238fb72a3aa4d5145158ff80b47e6cfd6301bcf30de6f85da58798f9de7c
		Secure: false
	Object:
		Variable: $r3
		Type: byte[]
		Statement: virtualinvoke $r4.<java.security.SecureRandom: void nextBytes(byte[])>($r3)
		Method: <com.google.android.gms.measurement.internal.zzfk: java.lang.String zzmf()>
		SHA-256: 48942ea2c3b347a743c700f18e33d6af4db2e2a457f889e48a404613d08486d4
		Secure: true
	Object:
		Variable: $r3
		Type: javax.net.ssl.KeyManagerFactory
		Statement: $r3 = staticinvoke <javax.net.ssl.KeyManagerFactory: javax.net.ssl.KeyManagerFactory getInstance(java.lang.String)>($r2)
		Method: <com.google.android.tv.remote.pairing.KeyStoreManager: javax.net.ssl.KeyManager[] getKeyManagers()>
		SHA-256: 142b80b0eb3c6099520f9c1be31bea3a59f6bf3f0a6e62a7d8eb3d47737f06c5
		Secure: false
	Object:
		Variable: $r2
		Type: byte[]
		Statement: $r2 = virtualinvoke $r1.<java.security.MessageDigest: byte[] digest()>()
		Method: <com.flurry.sdk.jn: byte[] f(java.lang.String)>
		SHA-256: 1240f0c2f2f4aab2b7f225aba623094fa141b673c038a4b40c9e5146899d8e43
		Secure: false
	Object:
		Variable: $r2
		Type: byte[]
		Statement: $r2 = virtualinvoke $r1.<java.security.MessageDigest: byte[] digest(byte[])>($r2)
		Method: <okhttp3.internal.Util: okio.ByteString sha256(okio.ByteString)>
		SHA-256: c95ad3356cf22a282bc26b2cccf59f036790f05e2d6fabb584d459fd1ade5901
		Secure: true
	Object:
		Variable: $r2
		Type: byte[]
		Statement: virtualinvoke $r1.<java.security.SecureRandom: void nextBytes(byte[])>($r2)
		Method: <com.amazon.identity.auth.device.authorization.CodeChallengeWorkflow: byte[] generateRandomOctetSequence()>
		SHA-256: 240dd916a460a17630357dbb548178936a0c1bd9e8f0486be1fbfc7d51132ee0
		Secure: true
	Object:
		Variable: $r14
		Type: java.security.spec.ECParameterSpec
		Statement: specialinvoke $r14.<java.security.spec.ECParameterSpec: void <init>(java.security.spec.EllipticCurve,java.security.spec.ECPoint,java.math.BigInteger,int)>($r12, $r13, $r7, varReplacer147141)
		Method: <com.google.android.gms.internal.ads.zzayt: java.security.spec.ECParameterSpec zza(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)>
		SHA-256: 8a892e50b489d8fc24774e9dffe8469f46c8beb940afa93045a600239525830b
		Secure: true
	Object:
		Variable: $r9
		Type: javax.net.ssl.TrustManagerFactory
		Statement: $r9 = staticinvoke <javax.net.ssl.TrustManagerFactory: javax.net.ssl.TrustManagerFactory getInstance(java.lang.String)>($r8)
		Method: <com.koushikdutta.async.d: void a(javax.net.ssl.SSLEngineResult$HandshakeStatus)>
		SHA-256: 56b67d22ab6f45246040a0ee5b82097375a894707df3a3f49a74ee97c7698562
		Secure: false
	Object:
		Variable: $r6
		Type: java.security.Signature
		Statement: $r6 = staticinvoke <java.security.Signature: java.security.Signature getInstance(java.lang.String,java.lang.String)>($r5, varReplacer147748)
		Method: <org.bouncycastle.jce.provider.X509CertificateObject: void verify(java.security.PublicKey)>
		SHA-256: a9384b379f267fdb1f8d6d7c468e8172eb8b3da6eeaca54c682723c2fbee2756
		Secure: false
	Object:
		Variable: $r1
		Type: java.security.MessageDigest
		Statement: $r1 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer164450)
		Method: <okhttp3.internal.Util: java.lang.String md5Hex(java.lang.String)>
		SHA-256: 54982bbc50a449d9c29c653ae5a341ed0927de7336e9a20065dfd1b945c8147a
		Secure: false
	Object:
		Variable: $r8
		Type: java.security.PublicKey
		Statement: $r8 = virtualinvoke $r7.<java.security.KeyPair: java.security.PublicKey getPublic()>()
		Method: <com.google.android.gms.internal.ads.zzayr: com.google.android.gms.internal.ads.zzays zza(java.lang.String,byte[],byte[],int,com.google.android.gms.internal.ads.zzayw)>
		SHA-256: ab3abcf6638f6c9760d1506bc8005528ec4eee95690451be33c2471188a2859c
		Secure: false
	Object:
		Variable: $r1
		Type: byte[]
		Statement: $r1 = virtualinvoke $r5.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r2)
		Method: <com.google.android.gms.internal.ads.zzck: java.lang.String zzb(byte[],byte[])>
		SHA-256: 6f12c957a749396d24036bd912dcaeedc4e8a1242a62f259dea7fbf56499ce06
		Secure: false
	Object:
		Variable: $r3
		Type: java.security.MessageDigest
		Statement: $r3 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer69666)
		Method: <com.haier.uhome.usdk.f.e: java.lang.String a(java.io.File)>
		SHA-256: d044f097c31be4945b7807c82230047a1941788ab6a6adb365c23c587719ee1d
		Secure: false
	Object:
		Variable: $r5
		Type: java.security.MessageDigest
		Statement: $r5 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer78061)
		Method: <com.tom.rtsprtp.RTSPClient: java.lang.String calcDigestResponse(java.lang.String,java.lang.String,java.lang.String,java.lang.String)>
		SHA-256: 9b0b13e17f8123d4450dfeb52d0758c69dd7fad93c618477802194e89fd1e5ff
		Secure: false
	Object:
		Variable: $r1
		Type: java.security.KeyPair
		Statement: specialinvoke $r1.<java.security.KeyPair: void <init>(java.security.PublicKey,java.security.PrivateKey)>($r2, $r8)
		Method: <org.bouncycastle.jcajce.provider.asymmetric.rsa.KeyPairGeneratorSpi: java.security.KeyPair generateKeyPair()>
		SHA-256: cb79cd7b201479506b2f0eadb1108d9d0e823c44a83388b719962de82b4cd7cc
		Secure: false
	Object:
		Variable: $r4
		Type: byte[]
		Statement: $r11 = virtualinvoke $r8.<java.security.MessageDigest: byte[] digest(byte[])>($r4)
		Method: <com.google.android.gms.measurement.internal.zzq: long zza(com.google.android.gms.internal.measurement.zzgi)>
		SHA-256: e76d94e4a807fb8033e90441b424c04e162634702209ed1f90b0813650c82d04
		Secure: false
	Object:
		Variable: $r1
		Type: java.security.MessageDigest
		Statement: $r1 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer18828)
		Method: <com.c.a.b.b: java.lang.String b(java.lang.String)>
		SHA-256: fa2aa6d5e6176977994edf234b5f4908bb89b33dae5f17124282aaf70f45bdc6
		Secure: true
	Object:
		Variable: $r19
		Type: java.security.KeyPair
		Statement: specialinvoke $r19.<java.security.KeyPair: void <init>(java.security.PublicKey,java.security.PrivateKey)>($r20, $r21)
		Method: <org.bouncycastle.jcajce.provider.asymmetric.dh.KeyPairGeneratorSpi: java.security.KeyPair generateKeyPair()>
		SHA-256: f165deac9d3236c4d3b1e050ecb8c2be103af1c92a60e23fc6dbdb1549a2f087
		Secure: false
	Object:
		Variable: $r6
		Type: java.security.Signature
		Statement: $r6 = staticinvoke <java.security.Signature: java.security.Signature getInstance(java.lang.String)>($r5)
		Method: <org.bouncycastle.jcajce.provider.asymmetric.x509.X509CertificateObject: void verify(java.security.PublicKey)>
		SHA-256: 112e0b98b9789074d4ec3ee999f422c7c115607a7d5cddcfc5fefe2723a7aec7
		Secure: false
	Object:
		Variable: $r11
		Type: byte[]
		Statement: $r11 = virtualinvoke $r4.<java.security.MessageDigest: byte[] digest(byte[])>($r11)
		Method: <com.google.android.gms.measurement.internal.zzfk: long zzd(android.content.Context,java.lang.String)>
		SHA-256: 1dd49df5f05a3942c8c5491ca757b1b084799b81b3faa9ae4f0b1daa55bcf1c0
		Secure: false
	Object:
		Variable: $r21
		Type: java.security.MessageDigest
		Statement: $r21 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer49858)
		Method: <com.facebook.ads.internal.o.c: void a(java.lang.String)>
		SHA-256: 8d37e21c379af1c4b778718c00201f2281fe8e291bfa6dfd436a1d881d90f920
		Secure: false
	Object:
		Variable: $r1
		Type: javax.net.ssl.SSLContext
		Statement: $r1 = staticinvoke <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String)>(varReplacer84301)
		Method: <com.koushikdutta.async.d: void <clinit>()>
		SHA-256: b6db9b49deb8c2e1e90be297f88ccfce9871f3f102765f1e0479b9d133335311
		Secure: false
	Object:
		Variable: $r1
		Type: java.lang.String
		Statement: specialinvoke $r31.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r19, $r1)
		Method: <com.google.android.gms.internal.ads.zzayr: com.google.android.gms.internal.ads.zzays zza(java.lang.String,byte[],byte[],int,com.google.android.gms.internal.ads.zzayw)>
		SHA-256: 3bc576d93bccb812c0e167b7a45af2e81149689232af079c18ed2c3e7c96a039
		Secure: false
	Object:
		Variable: $r7
		Type: byte[]
		Statement: $z0 = virtualinvoke $r8.<java.security.Signature: boolean verify(byte[])>($r7)
		Method: <com.tekoia.sure2.money.googleplaybillingserver.utils.Security: boolean verify(java.security.PublicKey,java.lang.String,java.lang.String)>
		SHA-256: 2d1b077cab08ba2c6b30a8b1c0ebf13a1e3ca56fa1674dad7004363ed91f7cbb
		Secure: false
	Object:
		Variable: $r2
		Type: java.security.SecureRandom
		Statement: $r2 = staticinvoke <java.security.SecureRandom: java.security.SecureRandom getInstance(java.lang.String)>(varReplacer35593)
		Method: <com.amazon.whisperlink.util.EncryptionUtil: void initializeRandomGenerator()>
		SHA-256: 7ac3038c08c10e1c34c9ab5d1f3ca42183a04dd4c5bda36aa99877a3c8b2f5ca
		Secure: true
	Object:
		Variable: $r12
		Type: javax.crypto.spec.DHParameterSpec
		Statement: specialinvoke $r12.<javax.crypto.spec.DHParameterSpec: void <init>(java.math.BigInteger,java.math.BigInteger)>($r5, $r13)
		Method: <org.bouncycastle.jcajce.provider.asymmetric.dh.BCDHPublicKey: void <init>(org.bouncycastle.asn1.x509.SubjectPublicKeyInfo)>
		SHA-256: 55769ba8c754825ca57452ac3077c95d1c966f44b3e5ff2959f34465568fc0b3
		Secure: true
	Object:
		Variable: $r11
		Type: byte[]
		Statement: $r11 = virtualinvoke $r8.<java.security.MessageDigest: byte[] digest(byte[])>($r4)
		Method: <com.google.android.gms.measurement.internal.zzq: long zza(com.google.android.gms.internal.measurement.zzgi)>
		SHA-256: deacee27295359d7aaad3ce96e4158699540e0b071c5f9e1ae06c71317ae8cae
		Secure: false
	Object:
		Variable: $r5
		Type: byte[]
		Statement: $r5 = virtualinvoke $r10.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r5)
		Method: <tekoiacore.core.h.a: byte[] a(java.lang.String,java.lang.String,tekoiacore.core.h.a$a,java.lang.String)>
		SHA-256: 6e6e694d72397aca6af1c479b5614b63372938ab6d7d419a69fd31d84e4c70c
		Secure: false
	Object:
		Variable: $r3
		Type: javax.net.ssl.SSLContext
		Statement: $r3 = staticinvoke <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String)>(varReplacer120141)
		Method: <com.connectsdk.service.webos.WebOSTVServiceSocketClient: void setupSSL()>
		SHA-256: cef1cbc9eb1885911e37ded8813031ea75db15ccf250c7a1650316c4ff4c7160
		Secure: false
	Object:
		Variable: varReplacer169533
		Type: java.lang.String
		Statement: specialinvoke $r7.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r5, varReplacer169533)
		Method: <tekoiacore.core.h.a: byte[] a(java.lang.String,java.lang.String,tekoiacore.core.h.a$a,java.lang.String)>
		SHA-256: 5acdd7dff1cce6588941a5a4946724a28d833d5411189a478fadca75ca0e90b4
		Secure: false
	Object:
		Variable: $r3
		Type: javax.crypto.spec.SecretKeySpec
		Statement: specialinvoke $r3.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r1, varReplacer158949)
		Method: <com.google.android.gms.internal.ads.zzayi: void <init>(byte[],int)>
		SHA-256: 35b63d7ca9fa62ffe09919e644054e930e96c9e61235e75e8e2dc79bcf297ac2
		Secure: false
	Object:
		Variable: $r6
		Type: byte[]
		Statement: $r6 = virtualinvoke $r4.<java.security.MessageDigest: byte[] digest()>()
		Method: <org.eclipse.jetty.security.authentication.DigestAuthenticator$Digest: boolean check(java.lang.Object)>
		SHA-256: d5f5a7a9ea69143e5509e8c324c5acfe668631e43e7f2084811cc9240e96d1d8
		Secure: false
	Object:
		Variable: $r16
		Type: java.security.PrivateKey
		Statement: $r16 = virtualinvoke $r15.<java.security.KeyFactory: java.security.PrivateKey generatePrivate(java.security.spec.KeySpec)>($r12)
		Method: <com.google.android.gms.internal.ads.zzava: com.google.android.gms.internal.ads.zzaue zzf(com.google.android.gms.internal.ads.zzbah)>
		SHA-256: 279f90a5eeeb3a6f91d228023bd666602c995d521fa9f3592a6f5ff141440950
		Secure: false
	Object:
		Variable: $r1
		Type: javax.net.ssl.SSLContext
		Statement: $r1 = staticinvoke <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String)>($r5)
		Method: <org.eclipse.jetty.util.ssl.SslContextFactory: void doStart()>
		SHA-256: 3344b686090ce6bd10a0cd6ad4554cb11fe526b6f9219e5b33737f5108743b5f
		Secure: true
	Object:
		Variable: $r4
		Type: byte[]
		Statement: virtualinvoke $r18.<java.security.SecureRandom: void nextBytes(byte[])>($r4)
		Method: <com.google.polo.pairing.PairingSession: void doPairingPhase()>
		SHA-256: b31e856b511df161268e4ecac77cb22f04ef8f34fb8f8828b0c59526dcfe2563
		Secure: true
	Object:
		Variable: $r2
		Type: byte[]
		Statement: $r2 = virtualinvoke $r1.<java.security.MessageDigest: byte[] digest()>()
		Method: <com.c.a.b.b: java.lang.String b(java.lang.String)>
		SHA-256: 1badebdbb90eeef8749be1aaa3067dc804e69e72d2516f49f733d7420f4e6e10
		Secure: true
	Object:
		Variable: $r1
		Type: java.security.KeyStore
		Statement: $r1 = staticinvoke <java.security.KeyStore: java.security.KeyStore getInstance(java.lang.String)>(varReplacer134260)
		Method: <com.google.android.tv.remote.pairing.KeyStoreManager: java.security.KeyStore createIdentityKeyStore()>
		SHA-256: c0d7f7c95039eec87f39bd84e1d6547f6b3b68d3ce4c21b4f5a448626d169492
		Secure: false
	Object:
		Variable: $r7
		Type: java.security.MessageDigest
		Statement: $r7 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer163705)
		Method: <com.facebook.FacebookSdk: java.lang.String getApplicationSignature(android.content.Context)>
		SHA-256: b5b4a2e44d80d14aedc309b0185e6b4e364588d5b818122172634d296f86c4e1
		Secure: false
	Object:
		Variable: $r2
		Type: java.security.SecureRandom
		Statement: specialinvoke $r2.<java.security.SecureRandom: void <init>()>()
		Method: <com.amazon.whisperlink.util.EncryptionUtil: void initializeRandomGenerator()>
		SHA-256: 9bc572f7c1de7cde5313bf96de0a47e65fd2023eae3c97b6b1cff3bd5f31ac96
		Secure: true
	Object:
		Variable: $r3
		Type: byte[]
		Statement: virtualinvoke $r7.<javax.crypto.Cipher: int doFinal(byte[],int,int,byte[],int)>($r1, varReplacer135590, $i0, $r3, varReplacer135591)
		Method: <com.google.android.gms.internal.ads.zzayj: byte[] zzc(byte[],byte[])>
		SHA-256: e3880dda1508d5d85a974ceef599a96941d8a31d90b99bf2dfc9516e1f4bacf1
		Secure: false
	Object:
		Variable: $r4
		Type: javax.net.ssl.KeyManagerFactory
		Statement: $r4 = staticinvoke <javax.net.ssl.KeyManagerFactory: javax.net.ssl.KeyManagerFactory getInstance(java.lang.String)>($r3)
		Method: <com.amazon.whisperlink.port.android.SecurityManagerFactory: void init(android.content.Context)>
		SHA-256: c124467974b3ca6d3c0356016bc1ad6cb38e32e2f6bd6720bcf7775aa48bd835
		Secure: false
	Object:
		Variable: $r4
		Type: java.security.MessageDigest
		Statement: $r4 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer120172)
		Method: <com.amazon.identity.auth.device.authorization.CodeChallengeWorkflow: java.lang.String generateCodeChallenge(java.lang.String,java.lang.String)>
		SHA-256: 1148205a32fa467dc9ac168d5e892f2c2f79c2ff728233c24465b563839ddbc9
		Secure: true
	Object:
		Variable: $r7
		Type: javax.net.ssl.TrustManager[]
		Statement: $r7 = virtualinvoke $r9.<javax.net.ssl.TrustManagerFactory: javax.net.ssl.TrustManager[] getTrustManagers()>()
		Method: <com.koushikdutta.async.d: void a(javax.net.ssl.SSLEngineResult$HandshakeStatus)>
		SHA-256: e27dcd86618a25bf5679bcac501c4fcc6e3cbd2a91f3b5d3ab659b40316b0d3b
		Secure: false
	Object:
		Variable: $r7
		Type: byte[]
		Statement: $r7 = virtualinvoke $r8.<jcifs.util.c: byte[] digest()>()
		Method: <jcifs.smb.r: byte[] a(java.lang.String,java.lang.String,java.lang.String,byte[],byte[])>
		SHA-256: 4aaa12c416da3fd595ab8b25f8ac1a759b5a1fce800f7e39c4e5cc4360e01ed2
		Secure: false
	Object:
		Variable: $r2
		Type: byte[]
		Statement: $i0 = virtualinvoke $r6.<javax.crypto.Cipher: int doFinal(byte[],int,int,byte[],int)>($r1, varReplacer149617, $i1, $r2, $i0)
		Method: <com.google.android.gms.internal.ads.zzayh: byte[] zzk(byte[])>
		SHA-256: a57c987c3fb16431cb2c49065cfbec3c40ae47ad669be0f4e7bdbdf1dbc1073e
		Secure: false
	Object:
		Variable: $r31
		Type: javax.crypto.spec.SecretKeySpec
		Statement: specialinvoke $r31.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r19, $r1)
		Method: <com.google.android.gms.internal.ads.zzayr: com.google.android.gms.internal.ads.zzays zza(java.lang.String,byte[],byte[],int,com.google.android.gms.internal.ads.zzayw)>
		SHA-256: 1327a0bb67cd296087979136ea7c655498be8df7ca82ce978043386aa901250d
		Secure: false
	Object:
		Variable: $r3
		Type: java.security.KeyFactory
		Statement: $r3 = staticinvoke <java.security.KeyFactory: java.security.KeyFactory getInstance(java.lang.String)>($r2)
		Method: <com.google.android.gms.internal.ads.zzazc: java.lang.Object zzb(java.lang.String,java.security.Provider)>
		SHA-256: 60db98dd7508d1d4bf64885ed32d70d73b92dba8c77d3cee9b8c0ff5549ac8b8
		Secure: false
	Object:
		Variable: $r5
		Type: java.security.KeyStore
		Statement: $r5 = staticinvoke <java.security.KeyStore: java.security.KeyStore getInstance(java.lang.String)>($r4)
		Method: <com.google.android.tv.remote.pairing.KeyStoreManager: java.security.KeyStore load()>
		SHA-256: a695dcf2cab1d39ed979da588f11598c020649e34d773f0177a22f2ae88884dc
		Secure: true
	Object:
		Variable: $r1
		Type: java.security.KeyStore
		Statement: $r1 = staticinvoke <java.security.KeyStore: java.security.KeyStore getInstance(java.lang.String)>($r5)
		Method: <com.google.android.tv.remote.pairing.KeyStoreManager: java.security.KeyStore createIdentityKeyStore()>
		SHA-256: ac9acb35787ccee06411d1df081f908291f2b794ed03ea9bd6e05c892c79559
		Secure: true
	Object:
		Variable: $r1
		Type: java.security.MessageDigest
		Statement: $r1 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>($r2)
		Method: <com.google.common.hash.MessageDigestHashFunction: java.security.MessageDigest getMessageDigest(java.lang.String)>
		SHA-256: f4e887286d0504cb5722b1da9a4eac06d6ea434977af7216dbf1f6217c285838
		Secure: true
	Object:
		Variable: $r0
		Type: java.security.MessageDigest
		Statement: $r0 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>($r2)
		Method: <com.google.android.gms.common.util.AndroidUtilsLight: java.security.MessageDigest zzi(java.lang.String)>
		SHA-256: 51cfca83351a25bd8651306a7c82d4ba539b1b3d22d2bd39903653877efadf76
		Secure: false
	Object:
		Variable: $r4
		Type: java.security.PublicKey
		Statement: $r4 = virtualinvoke $r2.<java.security.KeyFactory: java.security.PublicKey generatePublic(java.security.spec.KeySpec)>($r3)
		Method: <com.tekoia.sure2.money.googleplaybillingserver.utils.Security: java.security.PublicKey generatePublicKey(java.lang.String)>
		SHA-256: 7ffcd25aa26a3a933694198f24c2dc310a72ab049bc17b4d0a88d58881786df
		Secure: false
	Object:
		Variable: $r5
		Type: byte[]
		Statement: $r5 = virtualinvoke $r4.<java.security.MessageDigest: byte[] digest(byte[])>($r5)
		Method: <com.google.android.gms.internal.measurement.zzak: java.lang.String zzo(java.lang.String)>
		SHA-256: 19143b19998cdbf54473f776b8ff8b4cacf8fae8c9487a069c77306c2a808978
		Secure: false
	Object:
		Variable: $r3
		Type: java.security.MessageDigest
		Statement: $r3 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>($r2)
		Method: <com.facebook.internal.Utility: java.lang.String hashWithAlgorithm(java.lang.String,byte[])>
		SHA-256: 651bc5d8fa87b2d381fb5c42bff3f5479794fa3420ab1c6685272c9abf560354
		Secure: false
	Object:
		Variable: $r0
		Type: java.security.SecureRandom
		Statement: specialinvoke $r0.<java.security.SecureRandom: void <init>()>()
		Method: <com.c.a.b.c: javax.net.ssl.SSLSocketFactory b()>
		SHA-256: 3fc050cedb6e21026180ebaad6bb158ea644a2c29d2925de6376d2756ea6ace7
		Secure: true
	Object:
		Variable: $r28
		Type: java.security.SecureRandom
		Statement: specialinvoke $r28.<java.security.SecureRandom: void <init>()>()
		Method: <cn.com.broadlink.base.b: java.lang.String a(java.lang.String,java.util.Map,byte[],int,javax.net.ssl.TrustManager[])>
		SHA-256: 7253c60d693e1afdef0cbe0626e3ed267edced4bc227452754b8e366e5e1fe88
		Secure: true
	Object:
		Variable: $r3
		Type: java.security.SecureRandom
		Statement: specialinvoke $r3.<java.security.SecureRandom: void <init>()>()
		Method: <org.bouncycastle.crypto.generators.ECKeyPairGenerator: void init(org.bouncycastle.crypto.KeyGenerationParameters)>
		SHA-256: b9c970d7ca75c43cb7258988e82963e870aab49d0877fadda916613732dffc1d
		Secure: true
	Object:
		Variable: $r4
		Type: java.security.MessageDigest
		Statement: $r4 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer119003)
		Method: <org.eclipse.jetty.client.security.DigestAuthentication: java.lang.String newCnonce(org.eclipse.jetty.client.HttpExchange,org.eclipse.jetty.client.security.Realm,java.util.Map)>
		SHA-256: 48985189ef62b7f2def41c1f188b13ce5653f410480aa520357ff32d66b75a2f
		Secure: false
	Object:
		Variable: $r2
		Type: byte[]
		Statement: $r2 = virtualinvoke $r1.<java.security.MessageDigest: byte[] digest(byte[])>($r2)
		Method: <okhttp3.internal.Util: java.lang.String md5Hex(java.lang.String)>
		SHA-256: ff685f32e7a7f750cd456b35d0be518bacf6cdd5ba40802666534e9df3ec3217
		Secure: false
	Object:
		Variable: $r3
		Type: byte[]
		Statement: $r3 = virtualinvoke $r2.<java.security.MessageDigest: byte[] digest()>()
		Method: <com.koushikdutta.async.http.n: java.lang.String b(java.lang.String)>
		SHA-256: cbcba65504ca35b1d14fd1ac200c1f0c5a85461df35d02e8cd9c2bba4bbfb207
		Secure: false
	Object:
		Variable: $r1
		Type: javax.crypto.Cipher
		Statement: $r1 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer51300)
		Method: <com.google.android.gms.internal.ads.zzck: javax.crypto.Cipher getCipher()>
		SHA-256: 5a519ad5e942eac3c938c2557693fe7031c92b3a69c81cc8c83b7a9466e8eb9
		Secure: false
	Object:
		Variable: $r5
		Type: byte[]
		Statement: $r5 = virtualinvoke $r4.<java.security.MessageDigest: byte[] digest(byte[])>($r5)
		Method: <com.google.android.gms.common.zzm: java.lang.String zza(java.lang.String,com.google.android.gms.common.zze,boolean,boolean)>
		SHA-256: 1ad14fc2bf2af5501529412ee54dd50b754eee0a24f18af778d3e338376ceaa8
		Secure: false
	Object:
		Variable: $r8
		Type: byte[]
		Statement: $r8 = virtualinvoke $r7.<java.security.MessageDigest: byte[] digest()>()
		Method: <com.facebook.ads.internal.q.a.h: java.lang.String a(java.io.File)>
		SHA-256: 435474e8d80cea7143b9746bdfe1ee222cbc9b563dec4b926c15834597626e25
		Secure: false
	Object:
		Variable: $r10
		Type: javax.net.ssl.TrustManager[]
		Statement: $r10 = virtualinvoke $r8.<javax.net.ssl.TrustManagerFactory: javax.net.ssl.TrustManager[] getTrustManagers()>()
		Method: <org.eclipse.jetty.util.ssl.SslContextFactory: javax.net.ssl.TrustManager[] getTrustManagers(java.security.KeyStore,java.util.Collection)>
		SHA-256: bda6682f9855f1798f6ab26f475757bab959e404f0e5c16aa147e9e09907420c
		Secure: false
	Object:
		Variable: $r8
		Type: byte[]
		Statement: $r8 = virtualinvoke $r7.<java.security.MessageDigest: byte[] digest()>()
		Method: <com.google.android.gms.internal.ads.zzamu: java.lang.String zzsi()>
		SHA-256: 5d754525d815c5840530f1b2861f76c2e9229d770598f4daccfddcf524e676cf
		Secure: false
	Object:
		Variable: $r1
		Type: java.security.MessageDigest
		Statement: $r1 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer158908)
		Method: <com.facebook.ads.internal.p.b.m: java.lang.String d(java.lang.String)>
		SHA-256: 37b32ecef2548a8e9d92986226b7d02203fdf5a935135a66b7b7c0c20edf46d4
		Secure: false
	Object:
		Variable: $r5
		Type: javax.crypto.spec.IvParameterSpec
		Statement: specialinvoke $r5.<javax.crypto.spec.IvParameterSpec: void <init>(byte[])>($r4)
		Method: <com.google.android.exoplayer2.source.hls.Aes128DataSource: long open(com.google.android.exoplayer2.upstream.DataSpec)>
		SHA-256: 74efd2ca2013e34a93725a12b2428b082241b229a3b9c59222ec28d5225e0d5
		Secure: false
	Object:
		Variable: $r5
		Type: java.security.AlgorithmParameters
		Statement: $r5 = staticinvoke <java.security.AlgorithmParameters: java.security.AlgorithmParameters getInstance(java.lang.String,java.security.Provider)>($r3, $r4)
		Method: <org.bouncycastle.jcajce.provider.asymmetric.x509.X509SignatureUtil: void setSignatureParameters(java.security.Signature,org.bouncycastle.asn1.ASN1Encodable)>
		SHA-256: 5542b69dc5336cc3d00547288fa7f3d8d3237d121f2ce57576e26391c36e1a8d
		Secure: false
	Object:
		Variable: $r8
		Type: javax.net.ssl.TrustManagerFactory
		Statement: $r8 = staticinvoke <javax.net.ssl.TrustManagerFactory: javax.net.ssl.TrustManagerFactory getInstance(java.lang.String)>($r3)
		Method: <org.eclipse.jetty.util.ssl.SslContextFactory: javax.net.ssl.TrustManager[] getTrustManagers(java.security.KeyStore,java.util.Collection)>
		SHA-256: 9c804c0b4803f8a94e59001bbe90c094994ae10399b1413da67714a012ddf203
		Secure: false
	Object:
		Variable: varReplacer65884
		Type: java.lang.String
		Statement: specialinvoke $r3.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r4, varReplacer65884)
		Method: <com.google.android.exoplayer2.source.hls.Aes128DataSource: long open(com.google.android.exoplayer2.upstream.DataSpec)>
		SHA-256: 4b7944727bb025bb22fc6c4a213091bba20ba97701e2aa4c90abf1bcab78ccbf
		Secure: false
	Object:
		Variable: $r3
		Type: javax.net.ssl.TrustManagerFactory
		Statement: $r3 = staticinvoke <javax.net.ssl.TrustManagerFactory: javax.net.ssl.TrustManagerFactory getInstance(java.lang.String)>($r2)
		Method: <com.willblaschko.android.alexa.connection.ClientUtil: okhttp3.OkHttpClient getTLS12OkHttpClient()>
		SHA-256: b22890bb9181813a57748a6640ea4adaef407df4b69231fe428e3a49b8f0a97e
		Secure: false
	Object:
		Variable: $r8
		Type: byte[]
		Statement: $z0 = virtualinvoke $r2.<java.security.Signature: boolean verify(byte[])>($r8)
		Method: <org.bouncycastle.jcajce.provider.asymmetric.x509.X509CertificateObject: void checkSignature(java.security.PublicKey,java.security.Signature)>
		SHA-256: cebe45f59ca6821eb5e75723e2592c61a7970e6687e96537a7fa5d2712864b7
		Secure: false
	Object:
		Variable: $r5
		Type: byte[]
		Statement: virtualinvoke $r9.<jcifs.util.c: int digest(byte[],int,int)>($r5, varReplacer144652, varReplacer144653)
		Method: <jcifs.smb.r: byte[] a(java.lang.String,java.lang.String,java.lang.String,byte[],byte[])>
		SHA-256: 1ecbafab4214af7fb625abbaa39c9c91e69608ed4307df0e46900253af0ccb94
		Secure: false
	Object:
		Variable: $r15
		Type: javax.net.ssl.SSLContext
		Statement: $r15 = staticinvoke <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String)>(varReplacer121596)
		Method: <okhttp3.OkHttpClient: void <init>(okhttp3.OkHttpClient$Builder)>
		SHA-256: 890b7daf78521814c2668b2a5cf23e0d3f4043dafc1c62faa0d622349680f09f
		Secure: false
	Object:
		Variable: $r1
		Type: javax.crypto.Cipher
		Statement: $r1 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer163308)
		Method: <tekoiacore.core.h.a: void <init>()>
		SHA-256: 739bf53f3318d9b390251e486c3fe2514673f93013a4fe8052febeb2fd1ad86f
		Secure: false
	Object:
		Variable: $r3
		Type: javax.crypto.Cipher
		Statement: $r3 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String,java.security.Provider)>($r2, $r1)
		Method: <com.google.android.gms.internal.ads.zzaza: java.lang.Object zzb(java.lang.String,java.security.Provider)>
		SHA-256: b6025744d2df517f67fa27275b0feb7d01f6887e3c4f80b3d8741fdcc6179fc7
		Secure: false
	Object:
		Variable: $r1
		Type: java.security.MessageDigest
		Statement: $r1 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer179247)
		Method: <okhttp3.internal.Util: okio.ByteString sha1(okio.ByteString)>
		SHA-256: c5681ed9527a85c8e0319cf3bf16c4523895b11e2e1eb8804aee5269b81a92f7
		Secure: false
	Object:
		Variable: $r4
		Type: java.security.spec.ECParameterSpec
		Statement: specialinvoke $r4.<java.security.spec.ECParameterSpec: void <init>(java.security.spec.EllipticCurve,java.security.spec.ECPoint,java.math.BigInteger,int)>($r11, $r12, $r8, $i0)
		Method: <org.bouncycastle.jcajce.provider.asymmetric.ec.BCECPrivateKey: void <init>(java.lang.String,org.bouncycastle.crypto.params.ECPrivateKeyParameters,org.bouncycastle.jcajce.provider.asymmetric.ec.BCECPublicKey,java.security.spec.ECParameterSpec,org.bouncycastle.jcajce.provider.config.ProviderConfiguration)>
		SHA-256: c7c434ba14780f6c3b9eb57cd97eaba20db8827ea32cddaaa5681baa0f5c9353
		Secure: true
	Object:
		Variable: $r2
		Type: java.security.MessageDigest
		Statement: $r2 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>($r1)
		Method: <io.fabric.sdk.android.services.common.CommonUtils: java.lang.String hash(java.io.InputStream,java.lang.String)>
		SHA-256: a0cd7a8e8b4a1982c4187e09914bf7dc3b8735c5e8d396ebe76586457c6aeee9
		Secure: false
	Object:
		Variable: $r7
		Type: java.security.PublicKey
		Statement: $r7 = virtualinvoke $r1.<java.security.KeyPair: java.security.PublicKey getPublic()>()
		Method: <com.google.polo.ssl.SslUtil: java.security.cert.X509Certificate generateX509V3Certificate(java.security.KeyPair,java.lang.String,java.util.Date,java.util.Date,java.math.BigInteger)>
		SHA-256: f350f668abefe68f22eac373899f06976df217e77046a947382cbf9482f28a1b
		Secure: false
	Object:
		Variable: $r4
		Type: java.security.MessageDigest
		Statement: $r4 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer155744)
		Method: <com.aerserv.sdk.adapter.AbstractCustomProvider: java.lang.String makeUpperCaseMD5AndroidId()>
		SHA-256: e08b303c389feba6494e27622540acdd6e57b1e842d7e9a89471ab4cb9879713
		Secure: false
	Object:
		Variable: $r4
		Type: javax.crypto.Cipher
		Statement: $r4 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer158950)
		Method: <com.google.android.gms.internal.ads.zzayi: void <init>(byte[],int)>
		SHA-256: f03f2bcd6054967caf75d3bed27e15a6f1961638283136bf2bfa60135cbe3032
		Secure: false
	Object:
		Variable: $r10
		Type: java.security.DigestOutputStream
		Statement: specialinvoke $r10.<java.security.DigestOutputStream: void <init>(java.io.OutputStream,java.security.MessageDigest)>($r9, $r8)
		Method: <com.flurry.sdk.gu: void <init>(java.lang.String,java.lang.String,boolean,boolean,long,long,java.util.List,java.util.Map,java.util.Map,java.util.Map,java.util.Map,long)>
		SHA-256: a562be34afe7d797463798662ad12e951048b489a29227eaf847589d7ed9cc75
		Secure: false
	Object:
		Variable: $r17
		Type: java.security.PrivateKey
		Statement: $r17 = virtualinvoke $r16.<java.security.KeyFactory: java.security.PrivateKey generatePrivate(java.security.spec.KeySpec)>($r13)
		Method: <com.google.android.gms.internal.ads.zzava: java.lang.Object zza(com.google.android.gms.internal.ads.zzbcu)>
		SHA-256: d7f4293e26ece7b4d9f7b66eda74245ef67e960ac866c54ba79bf107b07e14c
		Secure: false
	Object:
		Variable: $r3
		Type: javax.net.ssl.SSLContext
		Statement: $r3 = staticinvoke <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String)>($r2)
		Method: <com.amazon.whisperlink.util.TransportUtil: javax.net.ssl.SSLContext createSSLContext(com.amazon.whisperlink.platform.PasswordProvider)>
		SHA-256: b5678fa1ac2d733b6b1d4c247b0fb1467bf5a1679fb8b99d992aeff13293d59c
		Secure: false
	Object:
		Variable: $r3
		Type: java.security.KeyPairGenerator
		Statement: $r3 = staticinvoke <java.security.KeyPairGenerator: java.security.KeyPairGenerator getInstance(java.lang.String)>($r2)
		Method: <com.google.android.gms.internal.ads.zzazd: java.lang.Object zzb(java.lang.String,java.security.Provider)>
		SHA-256: 5c75dede8fb030ad7e32324e351ff44e5338f5ea80b96eaf10c24d7680022c9f
		Secure: false
	Object:
		Variable: $r1
		Type: javax.net.ssl.SSLEngine
		Statement: virtualinvoke $r1.<javax.net.ssl.SSLEngine: void setEnabledCipherSuites(java.lang.String[])>($r2)
		Method: <org.eclipse.jetty.util.ssl.SslContextFactory: void customize(javax.net.ssl.SSLEngine)>
		SHA-256: 3db855a164a3e61c20e1472a6b39844bb720f7b4e6e5ffa20e203e2782bedcfb
		Secure: true
	Object:
		Variable: $r3
		Type: java.security.Signature
		Statement: $r3 = staticinvoke <java.security.Signature: java.security.Signature getInstance(java.lang.String)>($r2)
		Method: <com.google.android.gms.internal.ads.zzazg: java.lang.Object zzb(java.lang.String,java.security.Provider)>
		SHA-256: 7bc55ce195d22524cf8f5530f431f27cd0272bcab7d07224298701969a18d100
		Secure: false
	Object:
		Variable: $r2
		Type: java.security.KeyStore
		Statement: $r2 = staticinvoke <java.security.KeyStore: java.security.KeyStore getInstance(java.lang.String)>(varReplacer165301)
		Method: <com.amazon.whisperlink.port.android.SecurityManagerFactory$SecureX509TrustManager: java.security.KeyStore loadTrustStore(android.content.Context)>
		SHA-256: 3195afa87ce1386fac28743d3ba54653618e334e243a19573184a1bea0de2d9d
		Secure: false
	Object:
		Variable: $r7
		Type: java.security.PublicKey
		Statement: $r7 = virtualinvoke $r1.<java.security.KeyPair: java.security.PublicKey getPublic()>()
		Method: <com.google.polo.ssl.SslUtil: java.security.cert.X509Certificate generateX509V3Certificate(java.security.KeyPair,java.lang.String,java.util.Date,java.util.Date,java.math.BigInteger)>
		SHA-256: f350f668abefe68f22eac373899f06976df217e77046a947382cbf9482f28a1b
		Secure: false
	Object:
		Variable: r0
		Type: org.bouncycastle.jce.spec.ECNamedCurveSpec
		Statement: specialinvoke r0.<java.security.spec.ECParameterSpec: void <init>(java.security.spec.EllipticCurve,java.security.spec.ECPoint,java.math.BigInteger,int)>($r2, $r3, $r4, $i0)
		Method: <org.bouncycastle.jce.spec.ECNamedCurveSpec: void <init>(java.lang.String,java.security.spec.EllipticCurve,java.security.spec.ECPoint,java.math.BigInteger,java.math.BigInteger)>
		SHA-256: b36d50207c12d926e435b859cb9848007d52f50b2e62c847e597de1f84f657c6
		Secure: true
	Object:
		Variable: $r3
		Type: byte[]
		Statement: $r3 = virtualinvoke $r1.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r3)
		Method: <com.google.android.gms.internal.ads.zzayi: byte[] zza(javax.crypto.Cipher,int,byte[],int,int)>
		SHA-256: 12711994e2be4737faf81a6d4188ad16df0205847e6003b86b5ddff222348403
		Secure: false
	Object:
		Variable: $r8
		Type: java.security.Signature
		Statement: $r8 = staticinvoke <java.security.Signature: java.security.Signature getInstance(java.lang.String)>(varReplacer66338)
		Method: <com.tekoia.sure2.money.googleplaybillingserver.utils.Security: boolean verify(java.security.PublicKey,java.lang.String,java.lang.String)>
		SHA-256: 4af6c0d2e770e2f405f564c6dbdafb206b232ccc01490f45d51080ec762b5d4c
		Secure: false
	Object:
		Variable: $r14
		Type: java.security.KeyPair
		Statement: specialinvoke $r14.<java.security.KeyPair: void <init>(java.security.PublicKey,java.security.PrivateKey)>($r6, $r8)
		Method: <com.google.firebase.iid.zzy: java.security.KeyPair zzc(java.lang.String,java.lang.String)>
		SHA-256: 669e1d51147edb5337b0a36e49fe966a6b0354e66f55788db58e5ad1d0a6df91
		Secure: false
	Object:
		Variable: $r31
		Type: javax.crypto.spec.SecretKeySpec
		Statement: specialinvoke $r31.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r2, $r1)
		Method: <com.google.android.gms.internal.ads.zzayr: com.google.android.gms.internal.ads.zzays zza(java.lang.String,byte[],byte[],int,com.google.android.gms.internal.ads.zzayw)>
		SHA-256: c695c802b4dcf7276a327df456b0cc7a6bcd18f2a24e49cd237664a2cdb993ab
		Secure: false
	Object:
		Variable: $r1
		Type: byte[]
		Statement: $r1 = virtualinvoke $r4.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r1)
		Method: <com.google.android.gms.internal.ads.zzayi: void <init>(byte[],int)>
		SHA-256: ffcc74f6c1d04a7e4d11e1a9ef482403e3efe87582f9d75f0bdc5b91575a3aa
		Secure: false
	Object:
		Variable: $r18
		Type: java.security.SecureRandom
		Statement: $r18 = staticinvoke <java.security.SecureRandom: java.security.SecureRandom getInstance(java.lang.String)>(varReplacer77666)
		Method: <com.google.polo.pairing.PairingSession: void doPairingPhase()>
		SHA-256: dba2ea1cdb843bba0dc9f11b72d35371d1f533887f11369a37c51f030d70c64d
		Secure: true
	Object:
		Variable: $r3
		Type: java.security.MessageDigest
		Statement: $r3 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer157460)
		Method: <jcifs.util.c: void <init>(byte[])>
		SHA-256: 667644a16f68bfbba3210abca239b4052da4bde8fc866261c7fa0b479f7a7586
		Secure: false
	Object:
		Variable: $r7
		Type: byte[]
		Statement: $r7 = virtualinvoke $r5.<java.security.MessageDigest: byte[] digest()>()
		Method: <org.eclipse.jetty.client.security.DigestAuthentication: java.lang.String newResponse(java.lang.String,org.eclipse.jetty.client.HttpExchange,org.eclipse.jetty.client.security.Realm,java.util.Map)>
		SHA-256: 313a0c266e45a86b5dc5080fdf25c8c524e20cdd3d1d0b56d300e7e0c7996b4a
		Secure: false
	Object:
		Variable: $r2
		Type: java.lang.String
		Statement: $r3 = staticinvoke <java.security.KeyFactory: java.security.KeyFactory getInstance(java.lang.String)>($r2)
		Method: <com.google.android.gms.internal.ads.zzazc: java.lang.Object zzb(java.lang.String,java.security.Provider)>
		SHA-256: 7f4a0a241dd1b423bdc8d430319443534d5e1484f0054a9abad9587ae0ea35e6
		Secure: false
	Object:
		Variable: $r6
		Type: byte[]
		Statement: $r6 = virtualinvoke $r4.<java.security.MessageDigest: byte[] digest()>()
		Method: <com.aerserv.sdk.adapter.AbstractCustomProvider: java.lang.String makeUpperCaseMD5AndroidId()>
		SHA-256: b5621135a97a908997c13ad813c353455620aedd312f335fee6d3c09364d04
		Secure: false
	Object:
		Variable: $r9
		Type: java.security.spec.DSAParameterSpec
		Statement: specialinvoke $r9.<java.security.spec.DSAParameterSpec: void <init>(java.math.BigInteger,java.math.BigInteger,java.math.BigInteger)>($r5, $r10, $r11)
		Method: <org.bouncycastle.jcajce.provider.asymmetric.dsa.BCDSAPublicKey: void <init>(org.bouncycastle.asn1.x509.SubjectPublicKeyInfo)>
		SHA-256: ca8c57f00e636666523b3803cf2d449c7668aea2653306a5d436a81914fd7df0
		Secure: true
	Object:
		Variable: $r0
		Type: byte[]
		Statement: $r0 = virtualinvoke $r2.<java.security.MessageDigest: byte[] digest(byte[])>($r0)
		Method: <com.facebook.ads.internal.p.a.o: java.lang.String a(byte[],java.lang.String)>
		SHA-256: f9acee63bcc9ed9ad5559c89a5a0991b40aa80ee5d6a97962f90d68b2bbbd13b
		Secure: false
	Object:
		Variable: $r6
		Type: java.security.PublicKey
		Statement: $r6 = virtualinvoke $r5.<java.security.KeyFactory: java.security.PublicKey generatePublic(java.security.spec.KeySpec)>($r4)
		Method: <com.google.android.gms.internal.ads.zzayt: byte[] zza(java.security.interfaces.ECPrivateKey,java.security.spec.ECPoint)>
		SHA-256: d3ef574a629988bc0865c10f64d1e5b32fbed8d92a2c96980864992b4dca10cb
		Secure: false
	Object:
		Variable: $r3
		Type: javax.crypto.spec.SecretKeySpec
		Statement: specialinvoke $r3.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r1, varReplacer76782)
		Method: <com.tekoia.sure.utils.Enigma: void <init>()>
		SHA-256: e39d7f093a246099f9c57a88b21afa6b710cfb90215ffe9dcdb74b523e456f2d
		Secure: false
	Object:
		Variable: $r3
		Type: java.security.MessageDigest
		Statement: $r3 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>($r2)
		Method: <okio.Buffer: okio.ByteString digest(java.lang.String)>
		SHA-256: 375bf639b2c2b0148f21c039853629ebf25a57096ec0186b5ad7b1ae08b4953
		Secure: false
	Object:
		Variable: $r12
		Type: java.security.KeyPair
		Statement: specialinvoke $r12.<java.security.KeyPair: void <init>(java.security.PublicKey,java.security.PrivateKey)>($r9, $r13)
		Method: <org.bouncycastle.jcajce.provider.asymmetric.ec.KeyPairGeneratorSpi$EC: java.security.KeyPair generateKeyPair()>
		SHA-256: c9e1ff5450f21aae65af053d6ed29f81c5a7b267991078defbfa3059af0e266a
		Secure: false
	Object:
		Variable: $r2
		Type: byte[]
		Statement: $r2 = virtualinvoke $r5.<javax.crypto.Mac: byte[] doFinal()>()
		Method: <com.amazon.whisperlink.util.EncryptionUtil: java.lang.String hmacEncrypt(java.lang.String[],long,byte[],java.lang.String)>
		SHA-256: 2422b5e19e9506fe0d2648d3fe59b8d187cc63d04e6b10364f9415cfbacbc333
		Secure: false
	Object:
		Variable: $r25
		Type: java.security.spec.ECParameterSpec
		Statement: specialinvoke $r25.<java.security.spec.ECParameterSpec: void <init>(java.security.spec.EllipticCurve,java.security.spec.ECPoint,java.math.BigInteger,int)>($r12, $r23, $r16, $i0)
		Method: <org.bouncycastle.jcajce.provider.asymmetric.ec.BCECPublicKey: void populateFromPubKeyInfo(org.bouncycastle.asn1.x509.SubjectPublicKeyInfo)>
		SHA-256: ecba203f9a6032010394b1783751c1cfc47cc10d8112c83cb53149183c34226a
		Secure: true
	Object:
		Variable: $r2
		Type: java.security.MessageDigest
		Statement: $r2 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer141121)
		Method: <com.google.android.gms.internal.ads.zzgq: java.security.MessageDigest zzhg()>
		SHA-256: 43373e9613c2bf393169d7d35882f362558f1e9d897d818a72465a651a4cd367
		Secure: false
	Object:
		Variable: $r7
		Type: java.security.MessageDigest
		Statement: $r7 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer57917)
		Method: <com.facebook.ads.internal.q.a.h: java.lang.String a(java.io.File)>
		SHA-256: 6a08051de6fae8ca0c62cf996980967f34ec46655671187dd68641d0d3796c1
		Secure: false
	Object:
		Variable: $r2
		Type: java.security.KeyStore
		Statement: $r2 = staticinvoke <java.security.KeyStore: java.security.KeyStore getInstance(java.lang.String)>(varReplacer158871)
		Method: <com.amazon.whisperlink.port.android.SecurityManagerFactory: java.security.KeyStore loadKeyStore(android.content.Context)>
		SHA-256: f2c8a3ff7a51476dec43446efc4574d4ffc05b88471a90752f2d4277c398e1c3
		Secure: false
	Object:
		Variable: $r5
		Type: byte[]
		Statement: $r5 = virtualinvoke $r10.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r5)
		Method: <tekoiacore.core.h.a: byte[] a(java.lang.String,java.lang.String,tekoiacore.core.h.a$a,java.lang.String)>
		SHA-256: 6e6e694d72397aca6af1c479b5614b63372938ab6d7d419a69fd31d84e4c70c
		Secure: false
	Object:
		Variable: $r3
		Type: java.security.SecureRandom
		Statement: $r3 = staticinvoke <java.security.SecureRandom: java.security.SecureRandom getInstance(java.lang.String)>($r5)
		Method: <org.eclipse.jetty.util.ssl.SslContextFactory: void doStart()>
		SHA-256: fe977b0a16bded9d091ed63d54c935dd33980919b0b80611f1152e2a51f49e00
		Secure: true
	Object:
		Variable: $r9
		Type: java.security.PublicKey
		Statement: $r9 = virtualinvoke $r8.<java.security.KeyPair: java.security.PublicKey getPublic()>()
		Method: <com.google.android.gms.internal.ads.zzava: com.google.android.gms.internal.ads.zzbcu zzb(com.google.android.gms.internal.ads.zzbcu)>
		SHA-256: 8904131577385f0e983fe34ff8208c3e7aee7f587c575ace8f438c20fddbc55
		Secure: false
	Object:
		Variable: $r2
		Type: byte[]
		Statement: $r2 = virtualinvoke $r1.<java.security.MessageDigest: byte[] digest(byte[])>($r2)
		Method: <com.facebook.ads.internal.p.b.m: java.lang.String d(java.lang.String)>
		SHA-256: 3309e32f3f4e22c2c8dac06f48600181f9889828a193317a1a70a0ffe9926ed3
		Secure: false
	Object:
		Variable: r0
		Type: org.bouncycastle.x509.ExtendedPKIXParameters
		Statement: specialinvoke r0.<java.security.cert.PKIXParameters: void <init>(java.util.Set)>($r1)
		Method: <org.bouncycastle.x509.ExtendedPKIXParameters: void <init>(java.util.Set)>
		SHA-256: bc4db4edf85d5095c872f763083d4cdd57eaf413157a98ff957c0439448eaca6
		Secure: true
	Object:
		Variable: $r4
		Type: java.security.KeyStore
		Statement: $r4 = staticinvoke <java.security.KeyStore: java.security.KeyStore getInstance(java.lang.String)>(varReplacer158880)
		Method: <com.amazon.whisperlink.port.android.KeyStoreGenerator: java.io.File generateTrustStore(android.content.Context,java.lang.String,java.security.cert.Certificate[])>
		SHA-256: 39eb7c2386edcadf9dad3c71cd6cbfa26c81bbaa1466da7503bb236823ff0538
		Secure: false
	Object:
		Variable: r0
		Type: org.bouncycastle.jce.spec.ECNamedCurveSpec
		Statement: specialinvoke r0.<java.security.spec.ECParameterSpec: void <init>(java.security.spec.EllipticCurve,java.security.spec.ECPoint,java.math.BigInteger,int)>($r7, $r8, $r2, $i0)
		Method: <org.bouncycastle.jce.spec.ECNamedCurveSpec: void <init>(java.lang.String,org.bouncycastle.math.ec.ECCurve,org.bouncycastle.math.ec.ECPoint,java.math.BigInteger,java.math.BigInteger,byte[])>
		SHA-256: bcf570b34f8a17ec2bf4d52452528fe052d0e6bfbcbc0e9448c15568d3730cec
		Secure: true
	Object:
		Variable: varReplacer149675
		Type: java.lang.String
		Statement: specialinvoke $r1.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r7, varReplacer149675)
		Method: <com.google.android.gms.internal.ads.zzavk: java.lang.Object zza(com.google.android.gms.internal.ads.zzbcu)>
		SHA-256: 6505b9ed292d79d2fe556cbe1fdf15863bf79350134d4d9679a28a8f03f80e83
		Secure: false
	Object:
		Variable: $r3
		Type: javax.net.ssl.TrustManagerFactory
		Statement: $r3 = staticinvoke <javax.net.ssl.TrustManagerFactory: javax.net.ssl.TrustManagerFactory getInstance(java.lang.String)>($r2)
		Method: <com.amazon.whisperlink.port.android.SecurityManagerFactory$SecureX509TrustManager: void init(android.content.Context)>
		SHA-256: a751522289574dd793e97e6fed47384801052ce376db58c92fc307e95c5797ec
		Secure: false
	Object:
		Variable: $r1
		Type: java.security.MessageDigest
		Statement: $r1 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer142267)
		Method: <com.willblaschko.android.alexa.AuthorizationManager: byte[] getHash(java.lang.String)>
		SHA-256: 5b6980cb51fce5aa16f8df678b038043b2823dd0044930c917b9b256fa130b10
		Secure: true
	Object:
		Variable: $r6
		Type: java.lang.Object[]
		Statement: $r6 = virtualinvoke $r4.<javax.net.ssl.KeyManagerFactory: javax.net.ssl.KeyManager[] getKeyManagers()>()
		Method: <org.eclipse.jetty.util.ssl.SslContextFactory: javax.net.ssl.KeyManager[] getKeyManagers(java.security.KeyStore)>
		SHA-256: de2989dacfafabef4bfc8d209c479dacbfd7b2706eeec81843ca5e60059a3e9d
		Secure: false
	Object:
		Variable: $r2
		Type: byte[]
		Statement: $r2 = virtualinvoke $r3.<java.security.MessageDigest: byte[] digest()>()
		Method: <tekoiacore.utils.constants.a: java.lang.String a(byte[],java.lang.String,java.lang.String)>
		SHA-256: 5f73220851fd7f0ed8d56c0959fe85cae0f25e27938dae3a25152dc039da4b9f
		Secure: false
	Object:
		Variable: $r8
		Type: byte[]
		Statement: $r8 = virtualinvoke $r3.<javax.crypto.Mac: byte[] doFinal()>()
		Method: <com.google.android.gms.internal.ads.zzazj: byte[] zzg(byte[])>
		SHA-256: 7d812e3d5256ebb73c54f1bf10a052ffe196a304e06ee6932bd53050127ade16
		Secure: false
	Object:
		Variable: $r4
		Type: java.security.KeyPairGenerator
		Statement: $r4 = staticinvoke <java.security.KeyPairGenerator: java.security.KeyPairGenerator getInstance(java.lang.String)>(varReplacer134264)
		Method: <com.google.android.tv.remote.pairing.KeyStoreManager: void createIdentity(java.security.KeyStore,java.lang.String,java.lang.String)>
		SHA-256: 6c612dd6ab97d9f0a31ddc9c5577e33c98dba5be3e2375e37d24c53b1eadcb45
		Secure: false
	Object:
		Variable: $r2
		Type: javax.crypto.spec.IvParameterSpec
		Statement: specialinvoke $r2.<javax.crypto.spec.IvParameterSpec: void <init>(byte[])>($r1)
		Method: <com.tekoia.sure.utils.Enigma: void <init>()>
		SHA-256: 687597b95ef49377883d0e8d0410f98f0b181cb9f63a39836957c19b75029a8a
		Secure: false
	Object:
		Variable: $r2
		Type: java.security.KeyStore
		Statement: $r2 = staticinvoke <java.security.KeyStore: java.security.KeyStore getInstance(java.lang.String)>($r1)
		Method: <com.loopj.android.http.MySSLSocketFactory: java.security.KeyStore getKeystore()>
		SHA-256: 22e2a4b09c24dc3c3b284a1d0854a2378477a0c805b194671b1be04e16bde0ba
		Secure: true
	Object:
		Variable: $r1
		Type: byte[]
		Statement: $r1 = virtualinvoke $r3.<java.security.MessageDigest: byte[] digest()>()
		Method: <io.fabric.sdk.android.services.common.CommonUtils: java.lang.String hash(byte[],java.lang.String)>
		SHA-256: 847e78157c93691b2ae119253de6302419d14276894c4ea2f7fe9fb898fdae56
		Secure: false
	Object:
		Variable: $r2
		Type: java.security.KeyFactory
		Statement: $r2 = staticinvoke <java.security.KeyFactory: java.security.KeyFactory getInstance(java.lang.String)>(varReplacer66354)
		Method: <com.tekoia.sure2.money.googleplaybillingserver.utils.Security: java.security.PublicKey generatePublicKey(java.lang.String)>
		SHA-256: 31283e59802ba44c2ddc60be75588495c36c911789d82e005dbf0796044c67cf
		Secure: false
	Object:
		Variable: $r4
		Type: byte[]
		Statement: $r4 = virtualinvoke $r5.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r4)
		Method: <com.amazon.whisperlink.port.android.transport.TExternalSocketFactory: byte[] makePad(java.security.PublicKey)>
		SHA-256: 223aeaca135b74962b335666b412a7abfe7166fbc9fe78f9e31cc99bc97ab352
		Secure: false
	Object:
		Variable: $r6
		Type: byte[]
		Statement: $r6 = virtualinvoke $r9.<jcifs.util.c: byte[] digest()>()
		Method: <jcifs.a.d: void <init>(jcifs.a.c,java.lang.String,java.lang.String,java.lang.String,java.lang.String,int)>
		SHA-256: 5f99c509200bac30fdf1f3229dc46c6c6b2c6c5d4d8d2ab8f77cb004ad9687e0
		Secure: false
	Object:
		Variable: $r3
		Type: byte[]
		Statement: virtualinvoke $r7.<javax.crypto.Cipher: int doFinal(byte[],int,int,byte[],int)>($r1, varReplacer135600, $i1, $r3, $i2)
		Method: <com.google.android.gms.internal.ads.zzayi: byte[] zzc(byte[],byte[])>
		SHA-256: 26619c6059b1012d14c43ee49d1115cc8af5c06cd315ebf0c9266d94a9350eb1
		Secure: false
	Object:
		Variable: $r9
		Type: java.security.PrivateKey
		Statement: $r9 = virtualinvoke $r7.<java.security.KeyPair: java.security.PrivateKey getPrivate()>()
		Method: <com.google.android.gms.internal.ads.zzayr: com.google.android.gms.internal.ads.zzays zza(java.lang.String,byte[],byte[],int,com.google.android.gms.internal.ads.zzayw)>
		SHA-256: ff513a99452162bb21b0568687980ddebdc5f06a6fc59fbf30d5482bb1c2182e
		Secure: false
	Object:
		Variable: $r1
		Type: java.security.SecureRandom
		Statement: specialinvoke $r1.<java.security.SecureRandom: void <init>()>()
		Method: <org.eclipse.jetty.security.authentication.DigestAuthenticator: void <init>()>
		SHA-256: 95059cf4222e57e85834dbd0d3e457f82f076a0e500943c289c606c3707feaf0
		Secure: true
	Object:
		Variable: $r2
		Type: javax.net.ssl.TrustManagerFactory
		Statement: $r2 = staticinvoke <javax.net.ssl.TrustManagerFactory: javax.net.ssl.TrustManagerFactory getInstance(java.lang.String)>(varReplacer173332)
		Method: <io.fabric.sdk.android.services.network.PinningTrustManager: javax.net.ssl.TrustManager[] initializeSystemTrustManagers(io.fabric.sdk.android.services.network.SystemKeyStore)>
		SHA-256: 763d684b57d63f1adf14df0a7974e204936451fb964a9d963c97cbe17bca308
		Secure: false
	Object:
		Variable: $z0
		Type: boolean
		Statement: $z0 = virtualinvoke $r8.<java.security.Signature: boolean verify(byte[])>($r7)
		Method: <com.tekoia.sure2.money.googleplaybillingserver.utils.Security: boolean verify(java.security.PublicKey,java.lang.String,java.lang.String)>
		SHA-256: 4f9e0bf627f5c148cbe1e9a3367fc3d9766ee9b5b7a0aa448a45aeccc658b8d0
		Secure: false
	Object:
		Variable: $r12
		Type: java.security.KeyPair
		Statement: specialinvoke $r12.<java.security.KeyPair: void <init>(java.security.PublicKey,java.security.PrivateKey)>($r9, $r13)
		Method: <org.bouncycastle.jcajce.provider.asymmetric.ec.KeyPairGeneratorSpi$EC: java.security.KeyPair generateKeyPair()>
		SHA-256: c9e1ff5450f21aae65af053d6ed29f81c5a7b267991078defbfa3059af0e266a
		Secure: false
	Object:
		Variable: $r3
		Type: byte[]
		Statement: $r3 = virtualinvoke $r2.<java.security.MessageDigest: byte[] digest(byte[])>($r3)
		Method: <com.connectsdk.service.AirPlayService: java.lang.String digestAuthentication(java.lang.String)>
		SHA-256: 8812e5fdd561470f8103c41584e4363ce281091b11bb2643914b572acb552343
		Secure: false
	Object:
		Variable: $r3
		Type: byte[]
		Statement: $i2 = virtualinvoke $r2.<javax.crypto.Cipher: int update(byte[],int,int,byte[],int)>($r3, $i2, $i0, $r1, $i1)
		Method: <com.google.android.exoplayer2.upstream.crypto.AesFlushingCipher: int nonFlushingUpdate(byte[],int,int,byte[],int)>
		SHA-256: e825cff88081ae69d5668222b0d648a0933cce7e495f9322f1d102da89308174
		Secure: false
	Object:
		Variable: $r1
		Type: javax.net.ssl.SSLContext
		Statement: $r1 = staticinvoke <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String)>($r5)
		Method: <org.eclipse.jetty.util.ssl.SslContextFactory: void doStart()>
		SHA-256: 3344b686090ce6bd10a0cd6ad4554cb11fe526b6f9219e5b33737f5108743b5f
		Secure: true
	Object:
		Variable: $r3
		Type: java.security.MessageDigest
		Statement: $r3 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer129370)
		Method: <org.java_websocket.drafts.Draft_10: java.lang.String generateFinalKey(java.lang.String)>
		SHA-256: 7aedc66e2d368be6ac5d12e7ea954c2c1b297124bd01d9714f1cdf4bf4f01d7f
		Secure: false
	Object:
		Variable: $r1
		Type: java.security.SecureRandom
		Statement: specialinvoke $r1.<java.security.SecureRandom: void <init>()>()
		Method: <jcifs.a.d: void <clinit>()>
		SHA-256: a0562abd16489547ab0bcabc868b44e6fd27dc4c2866d39b9ef8b3aba467d78a
		Secure: true
	Object:
		Variable: $r1
		Type: javax.crypto.Cipher
		Statement: $r1 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer65882)
		Method: <com.google.android.exoplayer2.source.hls.Aes128DataSource: long open(com.google.android.exoplayer2.upstream.DataSpec)>
		SHA-256: de82c9d8600a8a73ddf7afcbb8bde4eee0d38b6018ebac53da79d8b2f62706d3
		Secure: false
	Object:
		Variable: $r1
		Type: java.security.MessageDigest
		Statement: $r1 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer154502)
		Method: <jcifs.smb.t: void <init>(byte[],boolean)>
		SHA-256: a7ffa9710d45a9db59f5e2fdd5133ff77ec7abe4ce00a184143190ddda9dd6a2
		Secure: false
	Object:
		Variable: $r10
		Type: byte[]
		Statement: $r10 = virtualinvoke $r11.<java.security.MessageDigest: byte[] digest()>()
		Method: <com.google.android.gms.tagmanager.zzbv: com.google.android.gms.internal.measurement.zzp zze(java.util.Map)>
		SHA-256: 155331275679e0b6e77d41a771a1c6f09abbd86ae7dc27c7a64360336036e258
		Secure: true
	Object:
		Variable: $r9
		Type: java.security.KeyStore
		Statement: $r9 = staticinvoke <java.security.KeyStore: java.security.KeyStore getInstance(java.lang.String)>($r0)
		Method: <org.eclipse.jetty.util.security.CertificateUtils: java.security.KeyStore getKeyStore(java.io.InputStream,java.lang.String,java.lang.String,java.lang.String,java.lang.String)>
		SHA-256: 2de84421c238dd35df94e8ba5819458453d277fc3a3d63a58c3d1191116d1eb3
		Secure: false
	Object:
		Variable: varReplacer66354
		Type: java.lang.String
		Statement: $r2 = staticinvoke <java.security.KeyFactory: java.security.KeyFactory getInstance(java.lang.String)>(varReplacer66354)
		Method: <com.tekoia.sure2.money.googleplaybillingserver.utils.Security: java.security.PublicKey generatePublicKey(java.lang.String)>
		SHA-256: 68e3d8e35ea03c11477cc05de6ddd05392af193464fdb3c020a5c08784370e8
		Secure: false
	Object:
		Variable: $r8
		Type: byte[]
		Statement: $z0 = virtualinvoke $r2.<java.security.Signature: boolean verify(byte[])>($r8)
		Method: <org.bouncycastle.jce.provider.X509CertificateObject: void checkSignature(java.security.PublicKey,java.security.Signature)>
		SHA-256: cebe45f59ca6821eb5e75723e2592c61a7970e6687e96537a7fa5d2712864b7
		Secure: false
	Object:
		Variable: $r8
		Type: javax.net.ssl.TrustManagerFactory
		Statement: $r8 = staticinvoke <javax.net.ssl.TrustManagerFactory: javax.net.ssl.TrustManagerFactory getInstance(java.lang.String)>($r3)
		Method: <org.eclipse.jetty.util.ssl.SslContextFactory: javax.net.ssl.TrustManager[] getTrustManagers(java.security.KeyStore,java.util.Collection)>
		SHA-256: 9c804c0b4803f8a94e59001bbe90c094994ae10399b1413da67714a012ddf203
		Secure: false
	Object:
		Variable: $r1
		Type: byte[]
		Statement: virtualinvoke $r7.<javax.crypto.Cipher: int doFinal(byte[],int,int,byte[],int)>($r1, varReplacer135600, $i1, $r3, $i2)
		Method: <com.google.android.gms.internal.ads.zzayi: byte[] zzc(byte[],byte[])>
		SHA-256: ed94d9fefcbfdb0eb53f0726f7a55a7e15f552583b2df41e8de156f8ed27d9f2
		Secure: false
	Object:
		Variable: $r12
		Type: java.security.PublicKey
		Statement: $r12 = virtualinvoke $r11.<java.security.KeyFactory: java.security.PublicKey generatePublic(java.security.spec.KeySpec)>($r8)
		Method: <com.google.android.gms.internal.ads.zzayt: java.security.interfaces.ECPublicKey zza(com.google.android.gms.internal.ads.zzayv,byte[],byte[])>
		SHA-256: ab2167ef69b8f8898e569e7b5403af3abee46abb6d357b36e48b8612028fbc85
		Secure: false
	Object:
		Variable: $r17
		Type: javax.crypto.CipherInputStream
		Statement: specialinvoke $r17.<javax.crypto.CipherInputStream: void <init>(java.io.InputStream,javax.crypto.Cipher)>($r10, $r14)
		Method: <com.google.android.exoplayer2.upstream.cache.CachedContentIndex: boolean readFile()>
		SHA-256: aaf00be843aa192c1df73f8c0e7e73c4634fdd45b36ba77693a5b34062706f7
		Secure: false
	Object:
		Variable: $r0
		Type: byte[]
		Statement: $r0 = virtualinvoke $r1.<java.security.MessageDigest: byte[] digest()>()
		Method: <com.haier.uhome.usdk.f.a: java.lang.String a(byte[])>
		SHA-256: a25b03c8a1c8821e8062ccacf408d1ea845feaa6bb545d0fb83f413ddf9e0a4f
		Secure: false
	Object:
		Variable: $r3
		Type: java.security.Signature
		Statement: $r3 = staticinvoke <java.security.Signature: java.security.Signature getInstance(java.lang.String,java.security.Provider)>($r2, $r1)
		Method: <com.google.android.gms.internal.ads.zzazg: java.lang.Object zzb(java.lang.String,java.security.Provider)>
		SHA-256: fda5abce0e7458ca5308ebaec734d819c3387e655a8e0fd1a2f588367e14322d
		Secure: false
	Object:
		Variable: $r6
		Type: java.lang.String
		Statement: specialinvoke $r4.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r2, $r6)
		Method: <com.google.android.exoplayer2.upstream.crypto.AesFlushingCipher: void <init>(int,byte[],long,long)>
		SHA-256: 32f1dc319e90e74407084112cd58f45beb111581697b43d6867254adae1f872
		Secure: false
	Object:
		Variable: $r4
		Type: javax.crypto.spec.SecretKeySpec
		Statement: specialinvoke $r4.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r2, $r3)
		Method: <com.amazon.whisperlink.util.EncryptionUtil: java.lang.String hmacEncrypt(java.lang.String[],long,byte[],java.lang.String)>
		SHA-256: 42ce696e2537357d99c37041267ce00426b049013d9f5d4a90e01983b6a0237f
		Secure: false
	Object:
		Variable: $r9
		Type: java.security.KeyPair
		Statement: $r9 = virtualinvoke $r8.<java.security.KeyPairGenerator: java.security.KeyPair generateKeyPair()>()
		Method: <com.amazon.whisperlink.port.android.KeyStoreGenerator: java.io.File generateKeyStore(android.content.Context,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)>
		SHA-256: d2584e58b849b718cef73186bee3ec4be37b3199e46f9d84cac122266d0d74d
		Secure: true
	Object:
		Variable: $r4
		Type: java.security.spec.DSAParameterSpec
		Statement: specialinvoke $r4.<java.security.spec.DSAParameterSpec: void <init>(java.math.BigInteger,java.math.BigInteger,java.math.BigInteger)>($r3, $r6, $r7)
		Method: <org.bouncycastle.jcajce.provider.asymmetric.dsa.BCDSAPrivateKey: void <init>(org.bouncycastle.crypto.params.DSAPrivateKeyParameters)>
		SHA-256: 2d5d5ac1c460f68032e60a336ee4552b59000b4adb566ea09230715136a1ffd8
		Secure: true
	Object:
		Variable: $r1
		Type: javax.crypto.spec.SecretKeySpec
		Statement: specialinvoke $r1.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r7, varReplacer149675)
		Method: <com.google.android.gms.internal.ads.zzavk: java.lang.Object zza(com.google.android.gms.internal.ads.zzbcu)>
		SHA-256: e314887fc4d712685ab0e1afcc3fa6db030dbeeeaaba68a5d0d918a5f195991e
		Secure: false
	Object:
		Variable: $r4
		Type: java.security.MessageDigest
		Statement: $r4 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer39313)
		Method: <com.google.firebase.iid.zzan: java.lang.String zza(java.security.KeyPair)>
		SHA-256: d06e997578def21aedbff2d0dc6ceccb2a84e9b0f306382aeee7fe3667a03fb2
		Secure: false
	Object:
		Variable: $r1
		Type: javax.net.ssl.SSLContext
		Statement: $r1 = staticinvoke <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String)>(varReplacer163179)
		Method: <io.fabric.sdk.android.services.network.NetworkUtils: javax.net.ssl.SSLSocketFactory getSSLSocketFactory(io.fabric.sdk.android.services.network.PinningInfoProvider)>
		SHA-256: 76cb3a912723b9ebc22991b22611762ba6e8795cfc36eb000eac9906bfad4180
		Secure: false
	Object:
		Variable: $r4
		Type: java.security.Signature
		Statement: $r4 = staticinvoke <java.security.Signature: java.security.Signature getInstance(java.lang.String,java.lang.String)>(varReplacer125285, varReplacer125286)
		Method: <com.amazon.identity.auth.device.utils.JWTDecoder: boolean verifySignatureWithRsaSha256(byte[],byte[],java.security.cert.Certificate)>
		SHA-256: a4737aaf8d4350e494824048be9cedf819f04c8c2777d3bd76289ef517575a74
		Secure: true
	Object:
		Variable: $r2
		Type: java.security.spec.ECParameterSpec
		Statement: specialinvoke $r2.<java.security.spec.ECParameterSpec: void <init>(java.security.spec.EllipticCurve,java.security.spec.ECPoint,java.math.BigInteger,int)>($r1, $r3, $r7, $i0)
		Method: <org.bouncycastle.jcajce.provider.asymmetric.ec.BCECPublicKey: java.security.spec.ECParameterSpec createSpec(java.security.spec.EllipticCurve,org.bouncycastle.crypto.params.ECDomainParameters)>
		SHA-256: 939a751b2a1599b544f502cdc0b93a80f912455cc87ed0d1dbd6a712fda08010
		Secure: true
	Object:
		Variable: $r0
		Type: byte[]
		Statement: $r0 = virtualinvoke $r3.<java.security.MessageDigest: byte[] digest()>()
		Method: <com.haier.uhome.usdk.f.e: java.lang.String a(java.io.File)>
		SHA-256: a13a358475d71306cff84250b5c17a109084aaf54480af90d07f0d9cb7844cc1
		Secure: false
	Object:
		Variable: $r2
		Type: java.security.spec.ECGenParameterSpec
		Statement: specialinvoke $r2.<java.security.spec.ECGenParameterSpec: void <init>(java.lang.String)>(varReplacer141338)
		Method: <org.bouncycastle.jcajce.provider.asymmetric.ec.KeyPairGeneratorSpi$EC: void <clinit>()>
		SHA-256: af7c908f5b8bdd8ae5347c14f961e54fa6f79d21b006bf331d0794b0653428b2
		Secure: true
	Object:
		Variable: $z0
		Type: boolean
		Statement: $z0 = virtualinvoke $r2.<java.security.Signature: boolean verify(byte[])>($r8)
		Method: <org.bouncycastle.jcajce.provider.asymmetric.x509.X509CertificateObject: void checkSignature(java.security.PublicKey,java.security.Signature)>
		SHA-256: 55c0ef59d2e8f2d9e7c3b9d886f8a0561a8e9e82e242551a90594b801b63073c
		Secure: false
	Object:
		Variable: $r2
		Type: java.security.MessageDigest
		Statement: $r2 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer82796)
		Method: <com.koushikdutta.async.http.n: java.lang.String b(java.lang.String)>
		SHA-256: b9173aed7bc50e84bd54a56337796aff5824cc6e6d5fb0f6c2ce86a69407d3e9
		Secure: false
	Object:
		Variable: $r4
		Type: java.security.MessageDigest
		Statement: $r4 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer162653)
		Method: <jcifs.smb.r: byte[] a(byte[],byte[],byte[])>
		SHA-256: 179f1eccdd705d3618d64a4ba013f6f413a0116d0557448e6626d386c5415364
		Secure: false
	Object:
		Variable: $r12
		Type: javax.crypto.spec.DHParameterSpec
		Statement: specialinvoke $r12.<javax.crypto.spec.DHParameterSpec: void <init>(java.math.BigInteger,java.math.BigInteger)>($r5, $r13)
		Method: <org.bouncycastle.jcajce.provider.asymmetric.dh.BCDHPublicKey: void <init>(org.bouncycastle.asn1.x509.SubjectPublicKeyInfo)>
		SHA-256: 55769ba8c754825ca57452ac3077c95d1c966f44b3e5ff2959f34465568fc0b3
		Secure: true
	Object:
		Variable: $r9
		Type: byte[]
		Statement: $r9 = virtualinvoke $r5.<java.security.MessageDigest: byte[] digest(byte[])>($r9)
		Method: <com.tom.rtsprtp.RTSPClient: java.lang.String calcDigestResponse(java.lang.String,java.lang.String,java.lang.String,java.lang.String)>
		SHA-256: 31a7fa89de673528a884e79586d17eb7a99b181632e0eca91011f7001a90df28
		Secure: false
	Object:
		Variable: $r1
		Type: java.security.SecureRandom
		Statement: specialinvoke $r1.<java.security.SecureRandom: void <init>()>()
		Method: <com.google.android.gms.measurement.internal.zzfk: java.security.SecureRandom zzmd()>
		SHA-256: 7ec5b82529c8404ee544bfd354eca73511e300cdfb0a07b399cbe87d16780c63
		Secure: true
	Object:
		Variable: $r3
		Type: java.lang.String
		Statement: specialinvoke $r4.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r2, $r3)
		Method: <com.amazon.whisperlink.util.EncryptionUtil: java.lang.String hmacEncrypt(java.lang.String[],long,byte[],java.lang.String)>
		SHA-256: 84b492fefc5e3004dc6684d72ff62daf4f68f0b92c1e2693ca231fa7248662f8
		Secure: false
	Object:
		Variable: $r6
		Type: byte[]
		Statement: $r6 = virtualinvoke $r5.<java.security.MessageDigest: byte[] digest()>()
		Method: <com.google.android.gms.internal.ads.zzamu: java.lang.String zzde(java.lang.String)>
		SHA-256: 72cdbe2a8ff46b5fa241f3a696a8111310cea253ee5fe9fa72e3da4ab1de90bc
		Secure: false
	Object:
		Variable: $r2
		Type: java.security.KeyPairGenerator
		Statement: $r2 = staticinvoke <java.security.KeyPairGenerator: java.security.KeyPairGenerator getInstance(java.lang.String)>(varReplacer176196)
		Method: <com.a.a.c: com.a.a.c a(com.a.a.a)>
		SHA-256: abf3d069223f60249f69877c97ea4f8d2e805e840ca18c69fe90cf37d19d227a
		Secure: true
	Object:
		Variable: $r10
		Type: javax.net.ssl.TrustManager[]
		Statement: $r10 = virtualinvoke $r8.<javax.net.ssl.TrustManagerFactory: javax.net.ssl.TrustManager[] getTrustManagers()>()
		Method: <org.eclipse.jetty.util.ssl.SslContextFactory: javax.net.ssl.TrustManager[] getTrustManagers(java.security.KeyStore,java.util.Collection)>
		SHA-256: bda6682f9855f1798f6ab26f475757bab959e404f0e5c16aa147e9e09907420c
		Secure: false
	Object:
		Variable: $r27
		Type: javax.crypto.CipherOutputStream
		Statement: specialinvoke $r27.<javax.crypto.CipherOutputStream: void <init>(java.io.OutputStream,javax.crypto.Cipher)>($r3, $r5)
		Method: <com.google.android.exoplayer2.upstream.cache.CachedContentIndex: void writeFile()>
		SHA-256: a2ab592da7ee7632be714159ea5fcd796d1d4db788d7c0adf7707a896f9e84a9
		Secure: false
	Object:
		Variable: $r8
		Type: java.security.PrivateKey
		Statement: $r8 = virtualinvoke $r4.<java.security.KeyFactory: java.security.PrivateKey generatePrivate(java.security.spec.KeySpec)>($r7)
		Method: <com.google.firebase.iid.zzy: java.security.KeyPair zzc(java.lang.String,java.lang.String)>
		SHA-256: 1c2ab7c9ba1e299096678737a545e3303a07173a3802e339f3da6139cd981be7
		Secure: false
	Object:
		Variable: $r0
		Type: java.security.SecureRandom
		Statement: specialinvoke $r0.<java.security.SecureRandom: void <init>()>()
		Method: <com.google.android.tv.support.remote.core.AbstractDeviceImpl: java.lang.String randomMACAddress()>
		SHA-256: bf0f69aa617eaaa68f1cf2ec12ee0612d47f6ce3f811a76ab6de1043c7a881a1
		Secure: true
	Object:
		Variable: $r8
		Type: java.security.KeyPairGenerator
		Statement: $r8 = staticinvoke <java.security.KeyPairGenerator: java.security.KeyPairGenerator getInstance(java.lang.String)>(varReplacer146892)
		Method: <com.amazon.whisperlink.port.android.KeyStoreGenerator: java.io.File generateKeyStore(android.content.Context,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)>
		SHA-256: dee4c72eac1cc36b21b1ef269438eebd8be5832f822d1d63228b3e8495b7cb10
		Secure: false
	Object:
		Variable: $r1
		Type: javax.net.ssl.SSLContext
		Statement: $r1 = staticinvoke <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String,java.lang.String)>($r5, $r9)
		Method: <org.eclipse.jetty.util.ssl.SslContextFactory: void doStart()>
		SHA-256: 6c24bf4e6da52b2683ebeb524e81330ebdde8e740115b119a24a15c25097c239
		Secure: true
	Object:
		Variable: $r10
		Type: java.security.KeyPair
		Statement: specialinvoke $r10.<java.security.KeyPair: void <init>(java.security.PublicKey,java.security.PrivateKey)>($r11, $r12)
		Method: <org.bouncycastle.jcajce.provider.asymmetric.dsa.KeyPairGeneratorSpi: java.security.KeyPair generateKeyPair()>
		SHA-256: c47b6631ce3720d818beeb3ff632397f4377b2c7bad13224726fa6668bbc6f5
		Secure: false
	Object:
		Variable: $r7
		Type: java.security.MessageDigest
		Statement: $r7 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer24088)
		Method: <com.google.android.gms.internal.ads.zzamu: java.lang.String zzsi()>
		SHA-256: d6f044a9d373b8b90b4286b1850ba5ee3a2683f29e86175ca24d1311e76d5624
		Secure: false
	Object:
		Variable: $r2
		Type: javax.crypto.Cipher
		Statement: $r2 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer43067)
		Method: <com.a.a.c: byte[] a(byte[])>
		SHA-256: 3393188da8949cb5ed3577cdce141c2bee37384fc6a857943c12262e170f8330
		Secure: false
	Object:
		Variable: $r3
		Type: java.security.MessageDigest
		Statement: $r3 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>($r2)
		Method: <io.fabric.sdk.android.services.common.CommonUtils: java.lang.String hash(byte[],java.lang.String)>
		SHA-256: 7fb5e1ca4e0ccb41306f524bfa8fe0a452898cd3171e10ddd8d49eb5eb47dc5a
		Secure: false
	Object:
		Variable: $r5
		Type: java.security.MessageDigest
		Statement: $r5 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer37207)
		Method: <com.google.android.gms.internal.ads.zzamu: java.lang.String zzde(java.lang.String)>
		SHA-256: 20fe668cad43dc92dbeaf47065cb078ce1a0d307862162fe8318cf87888a6038
		Secure: false
	Object:
		Variable: $r31
		Type: javax.crypto.spec.SecretKeySpec
		Statement: specialinvoke $r31.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r2, $r1)
		Method: <com.google.android.gms.internal.ads.zzayr: com.google.android.gms.internal.ads.zzays zza(java.lang.String,byte[],byte[],int,com.google.android.gms.internal.ads.zzayw)>
		SHA-256: c695c802b4dcf7276a327df456b0cc7a6bcd18f2a24e49cd237664a2cdb993ab
		Secure: false
	Object:
		Variable: $r5
		Type: java.security.KeyFactory
		Statement: $r5 = staticinvoke <java.security.KeyFactory: java.security.KeyFactory getInstance(java.lang.String)>(varReplacer135631)
		Method: <com.google.android.gms.internal.ads.zzayt: byte[] zza(java.security.interfaces.ECPrivateKey,java.security.spec.ECPoint)>
		SHA-256: d018c08b2fb845a3954b9c74d89c4fa90f4c2c9ad1ca8edb5ae13719bdfd3fda
		Secure: false
	Object:
		Variable: $r3
		Type: byte[]
		Statement: $r3 = virtualinvoke $r2.<java.security.MessageDigest: byte[] digest(byte[])>($r3)
		Method: <okio.ByteString: okio.ByteString digest(java.lang.String)>
		SHA-256: a79a1700ae9d8d44f13ea218f751e7024f8f1222b1b2ae17cdbab7b56d352181
		Secure: false
	Object:
		Variable: $r3
		Type: byte[]
		Statement: $z0 = virtualinvoke $r4.<java.security.Signature: boolean verify(byte[])>($r3)
		Method: <com.amazon.identity.auth.device.utils.JWTDecoder: boolean verifySignatureWithRsaSha256(byte[],byte[],java.security.cert.Certificate)>
		SHA-256: 41535d5c7884cc801d4fe3bc05ce7d86d5f1d63f93bba4c24ac263f1f60bf050
		Secure: true
	Object:
		Variable: $r2
		Type: byte[]
		Statement: $r2 = virtualinvoke $r1.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r2)
		Method: <com.google.android.gms.internal.ads.zzayi: byte[] zza(javax.crypto.Cipher,int,byte[],int,int)>
		SHA-256: 44013ae3598529c0fbd0d4ae1659e68ec88810e5dfc70120ffc9ac27f2302281
		Secure: false
	Object:
		Variable: $r8
		Type: java.security.PrivateKey
		Statement: $r8 = virtualinvoke $r5.<java.security.KeyPair: java.security.PrivateKey getPrivate()>()
		Method: <com.google.android.tv.remote.pairing.KeyStoreManager: void createIdentity(java.security.KeyStore,java.lang.String,java.lang.String)>
		SHA-256: ecbf3697e1859d59f6c7edea3766ba4a825cf150dd667b172fb39cb113c8ec2e
		Secure: false
	Object:
		Variable: $r6
		Type: java.security.MessageDigest
		Statement: $r6 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer106807)
		Method: <org.java_websocket.drafts.Draft_76: byte[] createChallenge(java.lang.String,java.lang.String,byte[])>
		SHA-256: be648a2825fceb59af746265e926f65deda8e8856983dd837ec46295ea8ae7ac
		Secure: false
	Object:
		Variable: $r7
		Type: java.security.PublicKey
		Statement: $r7 = virtualinvoke $r1.<java.security.KeyPair: java.security.PublicKey getPublic()>()
		Method: <com.google.polo.ssl.SslUtil: java.security.cert.X509Certificate generateX509V3Certificate(java.security.KeyPair,java.lang.String,java.util.Date,java.util.Date,java.math.BigInteger)>
		SHA-256: f350f668abefe68f22eac373899f06976df217e77046a947382cbf9482f28a1b
		Secure: false
	Object:
		Variable: $r5
		Type: byte[]
		Statement: $r5 = virtualinvoke $r3.<java.security.MessageDigest: byte[] digest()>()
		Method: <com.amazon.whisperlink.port.DeviceIds: java.lang.String getIdFromString(java.lang.String)>
		SHA-256: 6cd27d45f3dab12b59020009f3f213bdc8943323377130994040d3e29dba692b
		Secure: false
	Object:
		Variable: $r5
		Type: byte[]
		Statement: $r5 = virtualinvoke $r3.<java.security.MessageDigest: byte[] digest()>()
		Method: <okio.Buffer: okio.ByteString digest(java.lang.String)>
		SHA-256: 95513c44ebbc95024e9501e5f89ad17ef93f62d8d2e803cca97d3a7d67619a0f
		Secure: false
	Object:
		Variable: $r1
		Type: byte[]
		Statement: virtualinvoke $r7.<javax.crypto.Cipher: int doFinal(byte[],int,int,byte[],int)>($r1, varReplacer135590, $i0, $r3, varReplacer135591)
		Method: <com.google.android.gms.internal.ads.zzayj: byte[] zzc(byte[],byte[])>
		SHA-256: 1d77f9a80ac7b8b9b78fa15b12bf490d603e1bb9d0c47ab7b70b567264d3f9dc
		Secure: false
	Object:
		Variable: $r4
		Type: java.security.KeyStore
		Statement: $r4 = staticinvoke <java.security.KeyStore: java.security.KeyStore getInstance(java.lang.String)>(varReplacer173331)
		Method: <io.fabric.sdk.android.services.network.SystemKeyStore: java.security.KeyStore getTrustStore(java.io.InputStream,java.lang.String)>
		SHA-256: 1fbd3259f5cc4165f01a1beadc5daaab6ea768d0fc78697d81a3095f1f179bf7
		Secure: false
	Object:
		Variable: $r7
		Type: byte[]
		Statement: $r7 = virtualinvoke $r5.<java.security.MessageDigest: byte[] digest()>()
		Method: <org.eclipse.jetty.client.security.DigestAuthentication: java.lang.String newResponse(java.lang.String,org.eclipse.jetty.client.HttpExchange,org.eclipse.jetty.client.security.Realm,java.util.Map)>
		SHA-256: 313a0c266e45a86b5dc5080fdf25c8c524e20cdd3d1d0b56d300e7e0c7996b4a
		Secure: false
	Object:
		Variable: $r6
		Type: javax.net.ssl.TrustManager[]
		Statement: $r6 = virtualinvoke $r3.<javax.net.ssl.TrustManagerFactory: javax.net.ssl.TrustManager[] getTrustManagers()>()
		Method: <com.amazon.whisperlink.port.android.SecurityManagerFactory$SecureX509TrustManager: void init(android.content.Context)>
		SHA-256: 986dbbd053de710d12cb917209b24f2e463bf38617d4a310f3024bc9fb6d478a
		Secure: false
	Object:
		Variable: $r6
		Type: java.security.Signature
		Statement: $r6 = staticinvoke <java.security.Signature: java.security.Signature getInstance(java.lang.String)>($r5)
		Method: <org.bouncycastle.jce.provider.X509CertificateObject: void verify(java.security.PublicKey)>
		SHA-256: 112e0b98b9789074d4ec3ee999f422c7c115607a7d5cddcfc5fefe2723a7aec7
		Secure: false
	Object:
		Variable: $r0
		Type: java.security.MessageDigest
		Statement: $r0 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>($r2)
		Method: <com.google.android.gms.internal.measurement.zzdg: java.security.MessageDigest getMessageDigest(java.lang.String)>
		SHA-256: 2d99a602fdadec91c8d19ccfdd2eb3556c608014cdd4194c19faa16eae27e5d3
		Secure: false
	Object:
		Variable: $r1
		Type: javax.crypto.Cipher
		Statement: $r1 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer95243)
		Method: <com.google.android.exoplayer2.upstream.crypto.AesFlushingCipher: void <init>(int,byte[],long,long)>
		SHA-256: 24b28bbc3ccc2cc2ddb4da5e1a1725a257e0b9043b820a4f659b1abc661d522f
		Secure: false
	Object:
		Variable: $r3
		Type: java.security.KeyFactory
		Statement: $r3 = staticinvoke <java.security.KeyFactory: java.security.KeyFactory getInstance(java.lang.String,java.security.Provider)>($r2, $r1)
		Method: <com.google.android.gms.internal.ads.zzazc: java.lang.Object zzb(java.lang.String,java.security.Provider)>
		SHA-256: dd78c7bb163a4a7b78acc745e6bf87d7e4a92ffa6be2d92ded99308d6dcb77f
		Secure: false
	Object:
		Variable: $r4
		Type: byte[]
		Statement: virtualinvoke $r5.<java.security.SecureRandom: void nextBytes(byte[])>($r4)
		Method: <com.google.android.gms.internal.ads.zzbk: byte[] zza(byte[],java.lang.String,boolean)>
		SHA-256: 8d210fadc8f6c97b0cb37797bf629569fee76e792e9eaaef1fb3891d7542e447
		Secure: true
	Object:
		Variable: $r3
		Type: java.security.spec.X509EncodedKeySpec
		Statement: specialinvoke $r3.<java.security.spec.X509EncodedKeySpec: void <init>(byte[])>($r1)
		Method: <com.tekoia.sure2.money.googleplaybillingserver.utils.Security: java.security.PublicKey generatePublicKey(java.lang.String)>
		SHA-256: c34d110a9ada0e5385616cc373adba247df7b1b41374ae05753e19b0ebba5d65
		Secure: false
	Object:
		Variable: $r6
		Type: javax.net.ssl.TrustManager[]
		Statement: $r6 = virtualinvoke $r5.<javax.net.ssl.TrustManagerFactory: javax.net.ssl.TrustManager[] getTrustManagers()>()
		Method: <com.google.android.tv.remote.pairing.KeyStoreManager$DynamicTrustManager: void reloadTrustManager(java.security.KeyStore)>
		SHA-256: 42c58dae4de7a8c60dccf9a180dd752b63e160c3e11fb292182a0b02f04ae147
		Secure: false
	Object:
		Variable: $r11
		Type: java.security.PrivateKey
		Statement: $r11 = virtualinvoke $r8.<java.security.KeyPair: java.security.PrivateKey getPrivate()>()
		Method: <com.google.android.gms.internal.ads.zzava: com.google.android.gms.internal.ads.zzbcu zzb(com.google.android.gms.internal.ads.zzbcu)>
		SHA-256: f8ac8f91d8fc00d2ba9a6ed90179e4d67b03bd3bfba253394f51b930fc9f0b46
		Secure: false
	Object:
		Variable: $r12
		Type: javax.net.ssl.SSLContext
		Statement: $r12 = staticinvoke <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String)>(varReplacer102349)
		Method: <cn.com.broadlink.sdk.c: cn.com.broadlink.sdk.result.controller.BLDownloadScriptResult a(java.lang.String,int,javax.net.ssl.TrustManager[])>
		SHA-256: da486d05494f5c04dfe6b8005988e9f04ddbd1a5d248dfffa733761787d6bd99
		Secure: false
	Object:
		Variable: varReplacer76782
		Type: java.lang.String
		Statement: specialinvoke $r3.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r1, varReplacer76782)
		Method: <com.tekoia.sure.utils.Enigma: void <init>()>
		SHA-256: e1708fc03d88923e518a459cd599ef8d087c25edad47180c787915787d0e7efd
		Secure: false
	Object:
		Variable: $r5
		Type: java.security.MessageDigest
		Statement: $r5 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer119024)
		Method: <org.eclipse.jetty.client.security.DigestAuthentication: java.lang.String newResponse(java.lang.String,org.eclipse.jetty.client.HttpExchange,org.eclipse.jetty.client.security.Realm,java.util.Map)>
		SHA-256: f04b3a39101462f61028c5df840decc1445df0003341403889eb284c9ffa14e3
		Secure: false
	Object:
		Variable: $r5
		Type: javax.crypto.Cipher
		Statement: $r5 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer135604)
		Method: <com.google.android.gms.internal.ads.zzayi: byte[] zzc(byte[],byte[])>
		SHA-256: 50e430b9c6ae25b97265b8f4784bb70031109feee4654306ecf06c590a029816
		Secure: false
	Object:
		Variable: $r1
		Type: javax.net.ssl.SSLContext
		Statement: $r1 = staticinvoke <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String)>(varReplacer84300)
		Method: <com.koushikdutta.async.d: void <clinit>()>
		SHA-256: e4e06a3f1b53664af3ff50e8b197a0c346ef10eb30e27c4330d533609fa79614
		Secure: false
	Object:
		Variable: $r10
		Type: java.security.KeyStore
		Statement: $r10 = staticinvoke <java.security.KeyStore: java.security.KeyStore getInstance(java.lang.String)>(varReplacer146890)
		Method: <com.amazon.whisperlink.port.android.KeyStoreGenerator: java.io.File generateKeyStore(android.content.Context,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)>
		SHA-256: 3d5a9fa2640ef8f09332518991532135cb16c973e98583f0b73239bf77b7eaef
		Secure: false
	Object:
		Variable: $r23
		Type: java.security.cert.PKIXBuilderParameters
		Statement: specialinvoke $r23.<java.security.cert.PKIXBuilderParameters: void <init>(java.security.KeyStore,java.security.cert.CertSelector)>($r8, $r5)
		Method: <org.eclipse.jetty.util.security.CertificateValidator: void validate(java.security.cert.Certificate[])>
		SHA-256: eea1feffe670638e96a5776aeb9f435313541c1246355da7d24e4b3be943dac2
		Secure: false
	Object:
		Variable: $r8
		Type: javax.crypto.spec.IvParameterSpec
		Statement: specialinvoke $r8.<javax.crypto.spec.IvParameterSpec: void <init>(byte[])>($r4)
		Method: <com.google.android.gms.internal.ads.zzayi: byte[] zzc(byte[],byte[])>
		SHA-256: 3ec7559723e3b00ebc8ba18c50cb6a57bf8ed3c10b21ffc71fa6f5c35e2049ee
		Secure: false
	Object:
		Variable: $r3
		Type: byte[]
		Statement: $r3 = virtualinvoke $r1.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r3)
		Method: <com.google.android.gms.internal.ads.zzayi: byte[] zza(javax.crypto.Cipher,int,byte[],int,int)>
		SHA-256: 12711994e2be4737faf81a6d4188ad16df0205847e6003b86b5ddff222348403
		Secure: false
	Object:
		Variable: $r2
		Type: byte[]
		Statement: $r2 = virtualinvoke $r1.<java.security.MessageDigest: byte[] digest()>()
		Method: <tekoiacore.core.h.a: java.lang.String a(java.lang.String,int)>
		SHA-256: dc882d1e80d0c4879b4465be6f5455c2ca87100b2286e4177ce35aff39053ee6
		Secure: true
	Object:
		Variable: $r1
		Type: javax.net.ssl.SSLContext
		Statement: $r1 = staticinvoke <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String)>(varReplacer19560)
		Method: <com.c.a.b.c: javax.net.ssl.SSLSocketFactory b()>
		SHA-256: d3b75e0253bf8b23f9535b06e94cd2ad6a3703ee2468e4a6dfe55c9004739e96
		Secure: false
	Object:
		Variable: $r3
		Type: java.security.KeyPairGenerator
		Statement: $r3 = staticinvoke <java.security.KeyPairGenerator: java.security.KeyPairGenerator getInstance(java.lang.String,java.security.Provider)>($r2, $r1)
		Method: <com.google.android.gms.internal.ads.zzazd: java.lang.Object zzb(java.lang.String,java.security.Provider)>
		SHA-256: e558c8ffcabf883e50df2d4467b7ac999fb18b9a16ef448439f884413fa22814
		Secure: false
	Object:
		Variable: $r3
		Type: javax.crypto.KeyAgreement
		Statement: $r3 = staticinvoke <javax.crypto.KeyAgreement: javax.crypto.KeyAgreement getInstance(java.lang.String)>($r2)
		Method: <com.google.android.gms.internal.ads.zzazb: java.lang.Object zzb(java.lang.String,java.security.Provider)>
		SHA-256: 3ddc26250b645654fb9398ea8bb33dcb6c1d34b08067f85bcbf88665e86800bf
		Secure: false
	Object:
		Variable: varReplacer123869
		Type: java.lang.String
		Statement: $r4 = staticinvoke <java.security.KeyFactory: java.security.KeyFactory getInstance(java.lang.String)>(varReplacer123869)
		Method: <com.google.firebase.iid.zzy: java.security.KeyPair zzc(java.lang.String,java.lang.String)>
		SHA-256: ee2a5524b9bdc583eb27c3372aad361d4a0b6e07128a7905e571be812ce4ef18
		Secure: false
	Object:
		Variable: $r1
		Type: byte[]
		Statement: $i0 = virtualinvoke $r6.<javax.crypto.Cipher: int doFinal(byte[],int,int,byte[],int)>($r1, varReplacer149617, $i1, $r2, $i0)
		Method: <com.google.android.gms.internal.ads.zzayh: byte[] zzk(byte[])>
		SHA-256: bbdeab16ed21faf281a29299a15fd03256c9b9f8829cfe33dcecc67da20e4a6b
		Secure: false
	Object:
		Variable: $r8
		Type: javax.crypto.spec.IvParameterSpec
		Statement: specialinvoke $r8.<javax.crypto.spec.IvParameterSpec: void <init>(byte[])>($r7)
		Method: <com.google.android.gms.internal.ads.zzayh: byte[] zzk(byte[])>
		SHA-256: 9c6c2066f8008fa31fa5a6a9f2f3ab93770c3ec827eccc3474352c10f65f70eb
		Secure: false
	Object:
		Variable: varReplacer147057
		Type: java.lang.String
		Statement: specialinvoke $r1.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r6, varReplacer147057)
		Method: <com.google.android.gms.internal.ads.zzavk: com.google.android.gms.internal.ads.zzauk zzh(com.google.android.gms.internal.ads.zzbah)>
		SHA-256: fb9770a51de00b1e9e884b16a59343f7545c05c54fe0ef1cce560d6931ae20e9
		Secure: false
	Object:
		Variable: $r2
		Type: java.security.MessageDigest
		Statement: $r2 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer159628)
		Method: <io.fabric.sdk.android.services.network.PinningTrustManager: boolean isValidPin(java.security.cert.X509Certificate)>
		SHA-256: 22cabc9358b1800bddf7fdc9e15dc309855a394517b8fe012d6a473069043393
		Secure: false
	Object:
		Variable: $r6
		Type: byte[]
		Statement: $r6 = virtualinvoke $r9.<jcifs.util.c: byte[] digest()>()
		Method: <jcifs.a.d: void <init>(jcifs.a.c,java.lang.String,java.lang.String,java.lang.String,java.lang.String,int)>
		SHA-256: 5f99c509200bac30fdf1f3229dc46c6c6b2c6c5d4d8d2ab8f77cb004ad9687e0
		Secure: false
	Object:
		Variable: $r2
		Type: java.security.spec.ECGenParameterSpec
		Statement: specialinvoke $r2.<java.security.spec.ECGenParameterSpec: void <init>(java.lang.String)>(varReplacer141349)
		Method: <org.bouncycastle.jcajce.provider.asymmetric.ec.KeyPairGeneratorSpi$EC: void <clinit>()>
		SHA-256: 874b9c9409c95d6a0109931ee7e0b09575f0817e6777188f22f2ed313d4c46dd
		Secure: true
	Object:
		Variable: $r7
		Type: byte[]
		Statement: $r7 = virtualinvoke $r5.<java.security.Signature: byte[] sign()>()
		Method: <org.bouncycastle.x509.X509Util: byte[] calculateSignature(org.bouncycastle.asn1.DERObjectIdentifier,java.lang.String,java.security.PrivateKey,java.security.SecureRandom,org.bouncycastle.asn1.ASN1Encodable)>
		SHA-256: 1391b1cb2da6e77f0dba21038bc6d8497bae0d305fa65f711546292c6e320d20
		Secure: false
	Object:
		Variable: $r13
		Type: java.security.SecureRandom
		Statement: specialinvoke $r13.<java.security.SecureRandom: void <init>()>()
		Method: <cn.com.broadlink.sdk.c: cn.com.broadlink.sdk.result.controller.BLDownloadScriptResult a(java.lang.String,int,javax.net.ssl.TrustManager[])>
		SHA-256: 673f982788244a9a4a2536a244f4da8e791ceec6af4a15775e3f5f0fb9dec212
		Secure: true
	Object:
		Variable: $r5
		Type: javax.crypto.Cipher
		Statement: $r5 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer123611)
		Method: <com.amazon.whisperlink.port.android.transport.TExternalSocketFactory: byte[] makePad(java.security.PublicKey)>
		SHA-256: 5f36bee9fc89da249cfb8f08ab36cb007f76efe3cdbec9fc045c8e8d79f952a9
		Secure: false
	Object:
		Variable: $r9
		Type: javax.net.ssl.CertPathTrustManagerParameters
		Statement: specialinvoke $r9.<javax.net.ssl.CertPathTrustManagerParameters: void <init>(java.security.cert.CertPathParameters)>($r4)
		Method: <org.eclipse.jetty.util.ssl.SslContextFactory: javax.net.ssl.TrustManager[] getTrustManagers(java.security.KeyStore,java.util.Collection)>
		SHA-256: c35258edf08d1d663d5a370a3faeb11522857755ba531cc7021a29691607c47
		Secure: false
	Object:
		Variable: $z0
		Type: boolean
		Statement: $z0 = virtualinvoke $r4.<java.security.Signature: boolean verify(byte[])>($r3)
		Method: <com.amazon.identity.auth.device.utils.JWTDecoder: boolean verifySignatureWithRsaSha256(byte[],byte[],java.security.cert.Certificate)>
		SHA-256: eeb70b24c310df630b5173e203fda980b003419c19631b4fdab1676dc150bacd
		Secure: true
	Object:
		Variable: $r1
		Type: javax.crypto.spec.SecretKeySpec
		Statement: specialinvoke $r1.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r6, varReplacer147057)
		Method: <com.google.android.gms.internal.ads.zzavk: com.google.android.gms.internal.ads.zzauk zzh(com.google.android.gms.internal.ads.zzbah)>
		SHA-256: 6e767f60b97508ba9e1eefbdacf8809a70631669ab397f95c036dea00d20bcb1
		Secure: false
	Object:
		Variable: $r10
		Type: java.security.spec.ECParameterSpec
		Statement: specialinvoke $r10.<java.security.spec.ECParameterSpec: void <init>(java.security.spec.EllipticCurve,java.security.spec.ECPoint,java.math.BigInteger,int)>($r0, $r1, $r8, $i0)
		Method: <org.bouncycastle.jcajce.provider.asymmetric.util.EC5Util: java.security.spec.ECParameterSpec convertSpec(java.security.spec.EllipticCurve,org.bouncycastle.jce.spec.ECParameterSpec)>
		SHA-256: 2dbb4bedacfd822a104521782e3bf91eb66ffda2a8dd5998231726cc0e791ed5
		Secure: true
	Object:
		Variable: $r2
		Type: java.security.MessageDigest
		Statement: $r2 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer12659)
		Method: <com.google.android.gms.internal.ads.zzbm: void run()>
		SHA-256: 82f616a4364fe2afec870501987d1f6de1ac3a8ab95976b37c15f46f89a86623
		Secure: false
	Object:
		Variable: $r7
		Type: javax.crypto.spec.SecretKeySpec
		Statement: specialinvoke $r7.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r5, varReplacer169533)
		Method: <tekoiacore.core.h.a: byte[] a(java.lang.String,java.lang.String,tekoiacore.core.h.a$a,java.lang.String)>
		SHA-256: 40c83be9e0b35e8c52127fc84f627b91b7a024e4022aa6bc67001e0dd0ecd907
		Secure: false
	Object:
		Variable: $r0
		Type: byte[]
		Statement: $r0 = virtualinvoke $r6.<java.security.MessageDigest: byte[] digest(byte[])>($r5)
		Method: <org.java_websocket.drafts.Draft_76: byte[] createChallenge(java.lang.String,java.lang.String,byte[])>
		SHA-256: 16e619ea7c854d11cc270eb86e829bea4bc898fa31dd1105d925d1d093de6373
		Secure: false
	Object:
		Variable: $r2
		Type: java.security.spec.ECGenParameterSpec
		Statement: specialinvoke $r2.<java.security.spec.ECGenParameterSpec: void <init>(java.lang.String)>(varReplacer141343)
		Method: <org.bouncycastle.jcajce.provider.asymmetric.ec.KeyPairGeneratorSpi$EC: void <clinit>()>
		SHA-256: 9563c74391947390ae02e898efb36f3e12ed6ec7b6ae284edccf05fe1039e5b5
		Secure: true
	Object:
		Variable: $r7
		Type: javax.crypto.spec.SecretKeySpec
		Statement: specialinvoke $r7.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r3, varReplacer51281)
		Method: <com.google.android.gms.internal.ads.zzck: byte[] zza(byte[],java.lang.String)>
		SHA-256: 41e2b3418881edec339be4bb07cd556a87a48f1712c9b978135a554235cc2d53
		Secure: false
	Object:
		Variable: $r1
		Type: byte[]
		Statement: $r1 = virtualinvoke $r9.<java.security.MessageDigest: byte[] digest()>()
		Method: <com.google.polo.pairing.PoloChallengeResponse: byte[] getAlpha(byte[])>
		SHA-256: c5181d3b75d1c9ad50af8de0058a5e82b04d66914366fe3f047c98ff9a98b262
		Secure: true
	Object:
		Variable: $r6
		Type: java.security.Signature
		Statement: $r6 = staticinvoke <java.security.Signature: java.security.Signature getInstance(java.lang.String,java.lang.String)>($r5, varReplacer147747)
		Method: <org.bouncycastle.jcajce.provider.asymmetric.x509.X509CertificateObject: void verify(java.security.PublicKey)>
		SHA-256: c9eb7be9fcb30ce8a7cf2971c27deadcc8ff2e3e88e7979bd183bb11114e9707
		Secure: false
	Object:
		Variable: $r1
		Type: java.security.SecureRandom
		Statement: specialinvoke $r1.<java.security.SecureRandom: void <init>()>()
		Method: <tekoiacore.core.h.a: java.lang.String a()>
		SHA-256: b4c07faabdabf41bddd9d6b0c0cc4b23a040738888fd76d3ad15a4fd3f6f3c64
		Secure: true
	Object:
		Variable: $r3
		Type: javax.crypto.spec.SecretKeySpec
		Statement: specialinvoke $r3.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r1, varReplacer84360)
		Method: <com.google.android.gms.internal.ads.zzck: java.lang.String zzb(byte[],byte[])>
		SHA-256: 514a3310a4d44594caf765025e0cfac7a1c3eea24dab92f10d0a48057e23e06
		Secure: false
	Object:
		Variable: $r1
		Type: java.lang.String
		Statement: specialinvoke $r31.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r2, $r1)
		Method: <com.google.android.gms.internal.ads.zzayr: com.google.android.gms.internal.ads.zzays zza(java.lang.String,byte[],byte[],int,com.google.android.gms.internal.ads.zzayw)>
		SHA-256: 8dc9b59c83ae429db6a578b7988808edd22bd551aae912efcd67088393be4bec
		Secure: false
	Object:
		Variable: $r6
		Type: java.security.PublicKey
		Statement: $r6 = virtualinvoke $r4.<java.security.KeyFactory: java.security.PublicKey generatePublic(java.security.spec.KeySpec)>($r5)
		Method: <com.google.firebase.iid.zzy: java.security.KeyPair zzc(java.lang.String,java.lang.String)>
		SHA-256: aaaf8af6e34bf42b6331ccbf317a2dd3f09e6d2e3bd57c74923603c3aac116
		Secure: false
	Object:
		Variable: $r3
		Type: javax.crypto.Mac
		Statement: $r3 = staticinvoke <javax.crypto.Mac: javax.crypto.Mac getInstance(java.lang.String)>($r2)
		Method: <com.google.android.gms.internal.ads.zzaze: java.lang.Object zzb(java.lang.String,java.security.Provider)>
		SHA-256: 8c580049db94889e6dc1635ff7246767fd57d44d1889a43dd00115a8c2cabe4d
		Secure: false
	Object:
		Variable: $r3
		Type: javax.crypto.Cipher
		Statement: $r3 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>($r2)
		Method: <com.google.android.gms.internal.ads.zzaza: java.lang.Object zzb(java.lang.String,java.security.Provider)>
		SHA-256: 23a99988e288520b97935df6535a146cdae11ffc6fdcb1f0bef657f4409e64b1
		Secure: false
	Object:
		Variable: $r2
		Type: java.security.spec.ECGenParameterSpec
		Statement: specialinvoke $r2.<java.security.spec.ECGenParameterSpec: void <init>(java.lang.String)>(varReplacer141342)
		Method: <org.bouncycastle.jcajce.provider.asymmetric.ec.KeyPairGeneratorSpi$EC: void <clinit>()>
		SHA-256: 92cc34ffcfc1a033b6924a99dde373e7cc5a3422bb88008269221efae35abce4
		Secure: true
	Object:
		Variable: $r1
		Type: java.security.SecureRandom
		Statement: specialinvoke $r1.<java.security.SecureRandom: void <init>()>()
		Method: <com.google.android.gms.measurement.internal.zzfk: void zzgu()>
		SHA-256: 69dc2adaae44a9e93ab3168d73c00afbbaba532945bd441eaab6a7c7b9d374c7
		Secure: true
	Object:
		Variable: $r5
		Type: byte[]
		Statement: $r5 = virtualinvoke $r7.<jcifs.util.c: byte[] digest()>()
		Method: <jcifs.smb.r: void a(byte[],byte[],int)>
		SHA-256: 50625902aff9afe288fa15ac149e63a71bdc8001a1fdf4e73f3e383942307c0b
		Secure: false
	Object:
		Variable: $r3
		Type: byte[]
		Statement: $r3 = virtualinvoke $r4.<java.security.MessageDigest: byte[] digest(byte[])>($r3)
		Method: <com.google.firebase.iid.zzan: java.lang.String zza(java.security.KeyPair)>
		SHA-256: e946c234a6a6cfc49c34b62e7afc52b556d780beae3d50d88d040b54e984fb57
		Secure: false
	Object:
		Variable: $r1
		Type: javax.net.ssl.SSLContext
		Statement: $r1 = staticinvoke <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String,java.lang.String)>($r5, $r9)
		Method: <org.eclipse.jetty.util.ssl.SslContextFactory: void doStart()>
		SHA-256: 6c24bf4e6da52b2683ebeb524e81330ebdde8e740115b119a24a15c25097c239
		Secure: true
	Object:
		Variable: $r4
		Type: javax.crypto.spec.SecretKeySpec
		Statement: specialinvoke $r4.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r2, $r6)
		Method: <com.google.android.exoplayer2.upstream.crypto.AesFlushingCipher: void <init>(int,byte[],long,long)>
		SHA-256: 3c0b77155d98a0bf05a492f60a6a12b9f6ce9089eaada21848ca2724b7d57bb0
		Secure: false

Findings in Java Class: com.flurry.sdk.gu

	 in Method: void <init>(java.lang.String,java.lang.String,boolean,boolean,long,long,java.util.List,java.util.Map,java.util.Map,java.util.Map,java.util.Map,long)
		IncompleteOperationError violating CrySL rule for java.security.DigestOutputStream (on Object #a562be34afe7d797463798662ad12e951048b489a29227eaf847589d7ed9cc75)
			Operation on object of type java.security.DigestOutputStream object not completed. Expected call to write
			at statement: virtualinvoke $r10.<java.security.DigestOutputStream: void on(boolean)>(varReplacer107420)

		ForbiddenMethodError violating CrySL rule for java.security.DigestOutputStream
			Detected call to forbidden method void on(boolean) of class java.security.DigestOutputStream
			at statement: virtualinvoke $r10.<java.security.DigestOutputStream: void on(boolean)>(varReplacer107420)


Findings in Java Class: com.google.android.gms.internal.ads.zzbm

	 in Method: void run()
		ConstraintError violating CrySL rule for java.security.MessageDigest (on Object #82f616a4364fe2afec870501987d1f6de1ac3a8ab95976b37c15f46f89a86623)
			First parameter (with value "MD5") should be any of {SHA-256, SHA-384, SHA-512}
			at statement: $r2 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer12659)


Findings in Java Class: com.facebook.internal.Utility

	 in Method: java.lang.String hashWithAlgorithm(java.lang.String,byte[])
		ConstraintError violating CrySL rule for java.security.MessageDigest (on Object #651bc5d8fa87b2d381fb5c42bff3f5479794fa3420ab1c6685272c9abf560354)
			First parameter (with value "MD5") should be any of {SHA-256, SHA-384, SHA-512}
			at statement: $r3 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>($r2)

		ConstraintError violating CrySL rule for java.security.MessageDigest (on Object #651bc5d8fa87b2d381fb5c42bff3f5479794fa3420ab1c6685272c9abf560354)
			First parameter (with value "SHA-1") should be any of {SHA-256, SHA-384, SHA-512}
			at statement: $r3 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>($r2)


Findings in Java Class: com.c.a.b.c

	 in Method: javax.net.ssl.SSLSocketFactory b()
		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			First parameter was not properly generated as generatedKeyManagers
			at statement: virtualinvoke $r1.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>(varReplacer19561, $r2, $r0)

		ConstraintError violating CrySL rule for javax.net.ssl.SSLContext (on Object #d3b75e0253bf8b23f9535b06e94cd2ad6a3703ee2468e4a6dfe55c9004739e96)
			First parameter (with value "SSL") should be any of {TLSv1.2}
			at statement: $r1 = staticinvoke <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String)>(varReplacer19560)

		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			Second parameter was not properly generated as generatedTrustManagers
			at statement: virtualinvoke $r1.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>(varReplacer19561, $r2, $r0)


Findings in Java Class: com.google.android.gms.internal.ads.zzamu

	 in Method: java.lang.String zzsi()
		ConstraintError violating CrySL rule for java.security.MessageDigest (on Object #d6f044a9d373b8b90b4286b1850ba5ee3a2683f29e86175ca24d1311e76d5624)
			First parameter (with value "MD5") should be any of {SHA-256, SHA-384, SHA-512}
			at statement: $r7 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer24088)


	 in Method: java.lang.String zzde(java.lang.String)
		ConstraintError violating CrySL rule for java.security.MessageDigest (on Object #20fe668cad43dc92dbeaf47065cb078ce1a0d307862162fe8318cf87888a6038)
			First parameter (with value "MD5") should be any of {SHA-256, SHA-384, SHA-512}
			at statement: $r5 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer37207)


Findings in Java Class: com.google.android.gms.common.util.AndroidUtilsLight

	 in Method: java.security.MessageDigest zzi(java.lang.String)
		ConstraintError violating CrySL rule for java.security.MessageDigest (on Object #51cfca83351a25bd8651306a7c82d4ba539b1b3d22d2bd39903653877efadf76)
			First parameter (with value "SHA-1") should be any of {SHA-256, SHA-384, SHA-512}
			at statement: $r0 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>($r2)

		IncompleteOperationError violating CrySL rule for java.security.MessageDigest (on Object #51cfca83351a25bd8651306a7c82d4ba539b1b3d22d2bd39903653877efadf76)
			Operation on object of type java.security.MessageDigest object not completed. Expected call to digest, update
			at statement: $r0 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>($r2)


Findings in Java Class: com.haier.uhome.usdk.f.a

	 in Method: java.lang.String a(byte[])
		ConstraintError violating CrySL rule for java.security.MessageDigest (on Object #8c88a0d65582ab3312cf260e736a12c5988e0a1f35a39d363f08d8f65275b2be)
			First parameter (with value "MD5") should be any of {SHA-256, SHA-384, SHA-512}
			at statement: $r1 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer38547)


Findings in Java Class: com.google.firebase.iid.zzan

	 in Method: java.lang.String zza(java.security.KeyPair)
		ConstraintError violating CrySL rule for java.security.MessageDigest (on Object #d06e997578def21aedbff2d0dc6ceccb2a84e9b0f306382aeee7fe3667a03fb2)
			First parameter (with value "SHA1") should be any of {SHA-256, SHA-384, SHA-512}
			at statement: $r4 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer39313)


Findings in Java Class: com.google.android.tv.remote.pairing.KeyStoreManager

	 in Method: javax.net.ssl.KeyManager[] getKeyManagers()
		NeverTypeOfError violating CrySL rule for javax.net.ssl.KeyManagerFactory (on Object #142b80b0eb3c6099520f9c1be31bea3a59f6bf3f0a6e62a7d8eb3d47737f06c5)
			Second parameter should never be of type java.lang.String.
			at statement: virtualinvoke $r3.<javax.net.ssl.KeyManagerFactory: void init(java.security.KeyStore,char[])>($r1, $r4)

		HardCodedError violating CrySL rule for javax.net.ssl.KeyManagerFactory (on Object #142b80b0eb3c6099520f9c1be31bea3a59f6bf3f0a6e62a7d8eb3d47737f06c5)
			Second parameter should never be hardcoded.
			at statement: virtualinvoke $r3.<javax.net.ssl.KeyManagerFactory: void init(java.security.KeyStore,char[])>($r1, $r4)

		RequiredPredicateError violating CrySL rule for javax.net.ssl.KeyManagerFactory
			First parameter was not properly generated as generatedKeyStore
			at statement: virtualinvoke $r3.<javax.net.ssl.KeyManagerFactory: void init(java.security.KeyStore,char[])>($r1, $r4)


	 in Method: java.security.KeyStore createIdentityKeyStore()
		ConstraintError violating CrySL rule for java.security.KeyStore (on Object #c0d7f7c95039eec87f39bd84e1d6547f6b3b68d3ce4c21b4f5a448626d169492)
			First parameter (with value "AndroidKeyStore") should be any of {JCEKS, JKS, DKS, PKCS11, PKCS12}
			at statement: $r1 = staticinvoke <java.security.KeyStore: java.security.KeyStore getInstance(java.lang.String)>(varReplacer134260)


	 in Method: void store(java.security.KeyStore)
		TypestateError violating CrySL rule for java.security.KeyStore (on Object #c0d7f7c95039eec87f39bd84e1d6547f6b3b68d3ce4c21b4f5a448626d169492)
			Unexpected call to method store on object of type java.security.KeyStore. Expect a call to one of the following methods load
			at statement: virtualinvoke $r1.<java.security.KeyStore: void store(java.io.OutputStream,char[])>($r3, $r4)


	 in Method: void createIdentity(java.security.KeyStore,java.lang.String,java.lang.String)
		TypestateError violating CrySL rule for java.security.KeyPairGenerator (on Object #6c612dd6ab97d9f0a31ddc9c5577e33c98dba5be3e2375e37d24c53b1eadcb45)
			Unexpected call to method generateKeyPair on object of type java.security.KeyPairGenerator. Expect a call to one of the following methods initialize
			at statement: $r5 = virtualinvoke $r4.<java.security.KeyPairGenerator: java.security.KeyPair generateKeyPair()>()

		IncompleteOperationError violating CrySL rule for java.security.KeyPairGenerator (on Object #6c612dd6ab97d9f0a31ddc9c5577e33c98dba5be3e2375e37d24c53b1eadcb45)
			Operation on object of type java.security.KeyPairGenerator object not completed. Expected call to initialize
			at statement: $r5 = virtualinvoke $r4.<java.security.KeyPairGenerator: java.security.KeyPair generateKeyPair()>()


Findings in Java Class: com.facebook.ads.internal.o.c

	 in Method: void a(java.lang.String)
		ConstraintError violating CrySL rule for java.security.MessageDigest (on Object #acc45e3ee239334040376d0d4f5ddf5d0a9b5e4b8df3517e4ecfc03568f5178d)
			First parameter (with value "SHA-1") should be any of {SHA-256, SHA-384, SHA-512}
			at statement: $r21 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer49857)


Findings in Java Class: com.facebook.ads.internal.q.a.f

	 in Method: java.lang.String b(android.content.Context)
		ConstraintError violating CrySL rule for java.security.MessageDigest (on Object #4497117c4d169d1797cf616ba5e34230f40005212dbb00f8a012d3b049309383)
			First parameter (with value "SHA1") should be any of {SHA-256, SHA-384, SHA-512}
			at statement: $r7 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer51151)


Findings in Java Class: com.google.android.gms.internal.ads.zzck

	 in Method: java.lang.String zzb(byte[],byte[])
		RequiredPredicateError violating CrySL rule for javax.crypto.spec.SecretKeySpec
			First parameter was not properly generated as preparedKeyMaterial
			at statement: specialinvoke $r3.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r1, varReplacer84360)

		RequiredPredicateError violating CrySL rule for javax.crypto.Cipher
			Third parameter was not properly generated as randomized
			at statement: virtualinvoke $r5.<javax.crypto.Cipher: void init(int,java.security.Key,java.security.SecureRandom)>(varReplacer84361, $r3, varReplacer84362)

		IncompleteOperationError violating CrySL rule for javax.crypto.Cipher (on Object #5a519ad5e942eac3c938c2557693fe7031c92b3a69c81cc8c83b7a9466e8eb9)
			Operation on object of type javax.crypto.Cipher object not completed. Expected call to init
			at statement: $r2 = virtualinvoke $r5.<javax.crypto.Cipher: byte[] getIV()>()

		TypestateError violating CrySL rule for javax.crypto.Cipher (on Object #5a519ad5e942eac3c938c2557693fe7031c92b3a69c81cc8c83b7a9466e8eb9)
			Unexpected call to method doFinal on object of type javax.crypto.Cipher. Expect a call to one of the following methods init
			at statement: $r1 = virtualinvoke $r5.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r2)

		RequiredPredicateError violating CrySL rule for javax.crypto.Cipher
			Second parameter was not properly generated as generatedKey
			at statement: virtualinvoke $r5.<javax.crypto.Cipher: void init(int,java.security.Key,java.security.SecureRandom)>(varReplacer84361, $r3, varReplacer84362)


	 in Method: byte[] zza(byte[],java.lang.String)
		TypestateError violating CrySL rule for javax.crypto.Cipher (on Object #5a519ad5e942eac3c938c2557693fe7031c92b3a69c81cc8c83b7a9466e8eb9)
			Unexpected call to method doFinal on object of type javax.crypto.Cipher. Expect a call to one of the following methods init
			at statement: $r3 = virtualinvoke $r9.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r5)

		RequiredPredicateError violating CrySL rule for javax.crypto.spec.SecretKeySpec
			First parameter was not properly generated as preparedKeyMaterial
			at statement: specialinvoke $r7.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r3, varReplacer51281)

		RequiredPredicateError violating CrySL rule for javax.crypto.spec.IvParameterSpec
			First parameter was not properly generated as randomized
			at statement: specialinvoke $r2.<javax.crypto.spec.IvParameterSpec: void <init>(byte[])>($r1)


	 in Method: javax.crypto.Cipher getCipher()
		TypestateError violating CrySL rule for javax.crypto.Cipher (on Object #5a519ad5e942eac3c938c2557693fe7031c92b3a69c81cc8c83b7a9466e8eb9)
			Unexpected call to method getInstance on object of type javax.crypto.Cipher. Expect a call to one of the following methods init
			at statement: $r1 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer51300)


Findings in Java Class: com.facebook.ads.internal.q.a.h

	 in Method: java.lang.String a(java.io.File)
		TypestateError violating CrySL rule for java.security.MessageDigest (on Object #6a08051de6fae8ca0c62cf996980967f34ec46655671187dd68641d0d3796c1)
			Unexpected call to method <java.security.MessageDigest: byte[] digest()> on object of type java.security.MessageDigest. Expect a call to one of the following methods java.security.MessageDigest: void update(byte[],int,int),java.security.MessageDigest: void update(java.nio.ByteBuffer),java.security.MessageDigest: byte[] digest(byte[]),java.security.MessageDigest: void update(byte[]),java.security.MessageDigest: void update(byte)
			at statement: $r8 = virtualinvoke $r7.<java.security.MessageDigest: byte[] digest()>()

		ConstraintError violating CrySL rule for java.security.MessageDigest (on Object #6a08051de6fae8ca0c62cf996980967f34ec46655671187dd68641d0d3796c1)
			First parameter (with value "MD5") should be any of {SHA-256, SHA-384, SHA-512}
			at statement: $r7 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer57917)


Findings in Java Class: okio.ByteString

	 in Method: okio.ByteString digest(java.lang.String)
		ConstraintError violating CrySL rule for java.security.MessageDigest (on Object #b336d574501b28a5bd90db22472c23a68acb0c1b99c4f14746fdc2a23c69a24e)
			First parameter (with value "MD5") should be any of {SHA-256, SHA-384, SHA-512}
			at statement: $r2 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>($r1)


Findings in Java Class: okio.Buffer

	 in Method: okio.ByteString digest(java.lang.String)
		ConstraintError violating CrySL rule for java.security.MessageDigest (on Object #375bf639b2c2b0148f21c039853629ebf25a57096ec0186b5ad7b1ae08b4953)
			First parameter (with value "MD5") should be any of {SHA-256, SHA-384, SHA-512}
			at statement: $r3 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>($r2)


Findings in Java Class: cn.com.broadlink.base.b

	 in Method: java.lang.String a(java.lang.String,java.util.Map,byte[],int,javax.net.ssl.TrustManager[])
		ConstraintError violating CrySL rule for javax.net.ssl.SSLContext (on Object #e106963269d052b4e2b5254b60ab75cf68199119af05e7d51b88328fa7e08ac3)
			First parameter (with value "TLS") should be any of {TLSv1.2}
			at statement: $r9 = staticinvoke <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String)>(varReplacer65568)

		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			First parameter was not properly generated as generatedKeyManagers
			at statement: virtualinvoke $r9.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>(varReplacer65562, $r34, $r11)

		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			Third parameter was not properly generated as randomized
			at statement: virtualinvoke $r9.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>(varReplacer65562, $r34, $r11)

		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			Second parameter was not properly generated as generatedTrustManagers
			at statement: virtualinvoke $r9.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>(varReplacer65562, $r34, $r11)


Findings in Java Class: com.google.android.exoplayer2.source.hls.Aes128DataSource

	 in Method: long open(com.google.android.exoplayer2.upstream.DataSpec)
		IncompleteOperationError violating CrySL rule for javax.crypto.Cipher (on Object #de82c9d8600a8a73ddf7afcbb8bde4eee0d38b6018ebac53da79d8b2f62706d3)
			Operation on object of type javax.crypto.Cipher object not completed. Expected call to update, wrap, doFinal
			at statement: specialinvoke $r6.<javax.crypto.CipherInputStream: void <init>(java.io.InputStream,javax.crypto.Cipher)>($r7, $r1)

		RequiredPredicateError violating CrySL rule for javax.crypto.spec.SecretKeySpec
			First parameter was not properly generated as preparedKeyMaterial
			at statement: specialinvoke $r3.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r4, varReplacer65884)

		RequiredPredicateError violating CrySL rule for javax.crypto.Cipher
			Second parameter was not properly generated as generatedKey
			at statement: virtualinvoke $r1.<javax.crypto.Cipher: void init(int,java.security.Key,java.security.spec.AlgorithmParameterSpec)>(varReplacer65881, $r3, $r5)

		ConstraintError violating CrySL rule for javax.crypto.Cipher (on Object #de82c9d8600a8a73ddf7afcbb8bde4eee0d38b6018ebac53da79d8b2f62706d3)
			First parameter (with value "AES/CBC/PKCS7Padding") should be any of AES/CBC/{PKCS5Padding, ISO10126Padding}
			at statement: $r1 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer65882)

		RequiredPredicateError violating CrySL rule for javax.crypto.spec.IvParameterSpec
			First parameter was not properly generated as randomized
			at statement: specialinvoke $r5.<javax.crypto.spec.IvParameterSpec: void <init>(byte[])>($r4)


Findings in Java Class: com.google.android.exoplayer2.upstream.PriorityDataSource

	 in Method: long open(com.google.android.exoplayer2.upstream.DataSpec)
		IncompleteOperationError violating CrySL rule for javax.crypto.CipherInputStream (on Object #b1c95b83a0b54225f85323d6e64404f4f9fb65cf558dc3cc43ef619428a138c7)
			Operation on object of type javax.crypto.CipherInputStream object not completed. Expected call to read
			at statement: $l1 = interfaceinvoke $r3.<com.google.android.exoplayer2.upstream.DataSource: long open(com.google.android.exoplayer2.upstream.DataSpec)>($r1)

		IncompleteOperationError violating CrySL rule for javax.crypto.Cipher (on Object #24b28bbc3ccc2cc2ddb4da5e1a1725a257e0b9043b820a4f659b1abc661d522f)
			Operation on object of type javax.crypto.Cipher object not completed. Expected call to update, wrap, doFinal
			at statement: $l1 = interfaceinvoke $r3.<com.google.android.exoplayer2.upstream.DataSource: long open(com.google.android.exoplayer2.upstream.DataSpec)>($r1)


Findings in Java Class: com.google.android.exoplayer2.source.chunk.ContainerMediaChunk

	 in Method: void load()
		IncompleteOperationError violating CrySL rule for javax.crypto.Cipher (on Object #24b28bbc3ccc2cc2ddb4da5e1a1725a257e0b9043b820a4f659b1abc661d522f)
			Operation on object of type javax.crypto.Cipher object not completed. Expected call to update, wrap, doFinal
			at statement: $l2 = interfaceinvoke $r4.<com.google.android.exoplayer2.upstream.DataSource: long open(com.google.android.exoplayer2.upstream.DataSpec)>($r2)

		IncompleteOperationError violating CrySL rule for javax.crypto.CipherInputStream (on Object #b1c95b83a0b54225f85323d6e64404f4f9fb65cf558dc3cc43ef619428a138c7)
			Operation on object of type javax.crypto.CipherInputStream object not completed. Expected call to read
			at statement: $l2 = interfaceinvoke $r4.<com.google.android.exoplayer2.upstream.DataSource: long open(com.google.android.exoplayer2.upstream.DataSpec)>($r2)


Findings in Java Class: com.google.android.exoplayer2.source.hls.HlsMediaChunk

	 in Method: void maybeLoadInitData()
		IncompleteOperationError violating CrySL rule for javax.crypto.CipherInputStream (on Object #b1c95b83a0b54225f85323d6e64404f4f9fb65cf558dc3cc43ef619428a138c7)
			Operation on object of type javax.crypto.CipherInputStream object not completed. Expected call to read
			at statement: $l2 = interfaceinvoke $r6.<com.google.android.exoplayer2.upstream.DataSource: long open(com.google.android.exoplayer2.upstream.DataSpec)>($r4)

		IncompleteOperationError violating CrySL rule for javax.crypto.Cipher (on Object #24b28bbc3ccc2cc2ddb4da5e1a1725a257e0b9043b820a4f659b1abc661d522f)
			Operation on object of type javax.crypto.Cipher object not completed. Expected call to update, wrap, doFinal
			at statement: $l2 = interfaceinvoke $r6.<com.google.android.exoplayer2.upstream.DataSource: long open(com.google.android.exoplayer2.upstream.DataSpec)>($r4)


	 in Method: void loadMedia()
		IncompleteOperationError violating CrySL rule for javax.crypto.Cipher (on Object #24b28bbc3ccc2cc2ddb4da5e1a1725a257e0b9043b820a4f659b1abc661d522f)
			Operation on object of type javax.crypto.Cipher object not completed. Expected call to update, wrap, doFinal
			at statement: $l4 = interfaceinvoke $r5.<com.google.android.exoplayer2.upstream.DataSource: long open(com.google.android.exoplayer2.upstream.DataSpec)>($r2)

		IncompleteOperationError violating CrySL rule for javax.crypto.CipherInputStream (on Object #b1c95b83a0b54225f85323d6e64404f4f9fb65cf558dc3cc43ef619428a138c7)
			Operation on object of type javax.crypto.CipherInputStream object not completed. Expected call to read
			at statement: $l4 = interfaceinvoke $r5.<com.google.android.exoplayer2.upstream.DataSource: long open(com.google.android.exoplayer2.upstream.DataSpec)>($r2)


Findings in Java Class: com.google.android.exoplayer2.upstream.DefaultDataSource

	 in Method: long open(com.google.android.exoplayer2.upstream.DataSpec)
		IncompleteOperationError violating CrySL rule for javax.crypto.CipherInputStream (on Object #b1c95b83a0b54225f85323d6e64404f4f9fb65cf558dc3cc43ef619428a138c7)
			Operation on object of type javax.crypto.CipherInputStream object not completed. Expected call to read
			at statement: $l0 = interfaceinvoke $r2.<com.google.android.exoplayer2.upstream.DataSource: long open(com.google.android.exoplayer2.upstream.DataSpec)>($r1)

		IncompleteOperationError violating CrySL rule for javax.crypto.Cipher (on Object #24b28bbc3ccc2cc2ddb4da5e1a1725a257e0b9043b820a4f659b1abc661d522f)
			Operation on object of type javax.crypto.Cipher object not completed. Expected call to update, wrap, doFinal
			at statement: $l0 = interfaceinvoke $r2.<com.google.android.exoplayer2.upstream.DataSource: long open(com.google.android.exoplayer2.upstream.DataSpec)>($r1)


Findings in Java Class: com.google.android.exoplayer2.upstream.cache.CacheDataSource

	 in Method: boolean openNextSource(boolean)
		IncompleteOperationError violating CrySL rule for javax.crypto.CipherInputStream (on Object #b1c95b83a0b54225f85323d6e64404f4f9fb65cf558dc3cc43ef619428a138c7)
			Operation on object of type javax.crypto.CipherInputStream object not completed. Expected call to read
			at statement: $l2 = interfaceinvoke $r6.<com.google.android.exoplayer2.upstream.DataSource: long open(com.google.android.exoplayer2.upstream.DataSpec)>($r9)

		IncompleteOperationError violating CrySL rule for javax.crypto.Cipher (on Object #24b28bbc3ccc2cc2ddb4da5e1a1725a257e0b9043b820a4f659b1abc661d522f)
			Operation on object of type javax.crypto.Cipher object not completed. Expected call to update, wrap, doFinal
			at statement: $l2 = interfaceinvoke $r6.<com.google.android.exoplayer2.upstream.DataSource: long open(com.google.android.exoplayer2.upstream.DataSpec)>($r9)


Findings in Java Class: com.google.android.exoplayer2.upstream.TeeDataSource

	 in Method: long open(com.google.android.exoplayer2.upstream.DataSpec)
		IncompleteOperationError violating CrySL rule for javax.crypto.CipherInputStream (on Object #b1c95b83a0b54225f85323d6e64404f4f9fb65cf558dc3cc43ef619428a138c7)
			Operation on object of type javax.crypto.CipherInputStream object not completed. Expected call to read
			at statement: $l3 = interfaceinvoke $r3.<com.google.android.exoplayer2.upstream.DataSource: long open(com.google.android.exoplayer2.upstream.DataSpec)>($r2)

		IncompleteOperationError violating CrySL rule for javax.crypto.Cipher (on Object #24b28bbc3ccc2cc2ddb4da5e1a1725a257e0b9043b820a4f659b1abc661d522f)
			Operation on object of type javax.crypto.Cipher object not completed. Expected call to update, wrap, doFinal
			at statement: interfaceinvoke $r6.<com.google.android.exoplayer2.upstream.DataSink: void open(com.google.android.exoplayer2.upstream.DataSpec)>($r2)


Findings in Java Class: com.google.android.exoplayer2.upstream.DataSourceInputStream

	 in Method: void checkOpened()
		IncompleteOperationError violating CrySL rule for javax.crypto.CipherInputStream (on Object #b1c95b83a0b54225f85323d6e64404f4f9fb65cf558dc3cc43ef619428a138c7)
			Operation on object of type javax.crypto.CipherInputStream object not completed. Expected call to read
			at statement: interfaceinvoke $r2.<com.google.android.exoplayer2.upstream.DataSource: long open(com.google.android.exoplayer2.upstream.DataSpec)>($r1)

		IncompleteOperationError violating CrySL rule for javax.crypto.Cipher (on Object #24b28bbc3ccc2cc2ddb4da5e1a1725a257e0b9043b820a4f659b1abc661d522f)
			Operation on object of type javax.crypto.Cipher object not completed. Expected call to update, wrap, doFinal
			at statement: interfaceinvoke $r2.<com.google.android.exoplayer2.upstream.DataSource: long open(com.google.android.exoplayer2.upstream.DataSpec)>($r1)


Findings in Java Class: com.google.android.exoplayer2.upstream.crypto.AesCipherDataSource

	 in Method: long open(com.google.android.exoplayer2.upstream.DataSpec)
		IncompleteOperationError violating CrySL rule for javax.crypto.CipherInputStream (on Object #b1c95b83a0b54225f85323d6e64404f4f9fb65cf558dc3cc43ef619428a138c7)
			Operation on object of type javax.crypto.CipherInputStream object not completed. Expected call to read
			at statement: $l1 = interfaceinvoke $r3.<com.google.android.exoplayer2.upstream.DataSource: long open(com.google.android.exoplayer2.upstream.DataSpec)>($r1)


Findings in Java Class: com.google.android.exoplayer2.source.chunk.InitializationChunk

	 in Method: void load()
		IncompleteOperationError violating CrySL rule for javax.crypto.CipherInputStream (on Object #b1c95b83a0b54225f85323d6e64404f4f9fb65cf558dc3cc43ef619428a138c7)
			Operation on object of type javax.crypto.CipherInputStream object not completed. Expected call to read
			at statement: $l2 = interfaceinvoke $r4.<com.google.android.exoplayer2.upstream.DataSource: long open(com.google.android.exoplayer2.upstream.DataSpec)>($r2)

		IncompleteOperationError violating CrySL rule for javax.crypto.Cipher (on Object #24b28bbc3ccc2cc2ddb4da5e1a1725a257e0b9043b820a4f659b1abc661d522f)
			Operation on object of type javax.crypto.Cipher object not completed. Expected call to update, wrap, doFinal
			at statement: $l2 = interfaceinvoke $r4.<com.google.android.exoplayer2.upstream.DataSource: long open(com.google.android.exoplayer2.upstream.DataSpec)>($r2)


Findings in Java Class: com.tekoia.sure2.money.googleplaybillingserver.utils.Security

	 in Method: boolean verify(java.security.PublicKey,java.lang.String,java.lang.String)
		ConstraintError violating CrySL rule for java.security.Signature (on Object #4af6c0d2e770e2f405f564c6dbdafb206b232ccc01490f45d51080ec762b5d4c)
			First parameter (with value "SHA1withRSA") should be any of {SHA256withRSA, SHA256withECDSA, SHA256withDSA, SHA224withDSA, NONEwithDSA, SHA1withDSA}
			at statement: $r8 = staticinvoke <java.security.Signature: java.security.Signature getInstance(java.lang.String)>(varReplacer66338)

		RequiredPredicateError violating CrySL rule for java.security.Signature
			First parameter was not properly generated as generatedPubkey
			at statement: virtualinvoke $r8.<java.security.Signature: void initVerify(java.security.PublicKey)>($r4)


	 in Method: java.security.PublicKey generatePublicKey(java.lang.String)
		RequiredPredicateError violating CrySL rule for java.security.KeyFactory
			First parameter was not properly generated as speccedKey
			at statement: $r4 = virtualinvoke $r2.<java.security.KeyFactory: java.security.PublicKey generatePublic(java.security.spec.KeySpec)>($r3)

		RequiredPredicateError violating CrySL rule for java.security.spec.X509EncodedKeySpec
			First parameter was not properly generated as preparedKeyMaterial
			at statement: specialinvoke $r3.<java.security.spec.X509EncodedKeySpec: void <init>(byte[])>($r1)


Findings in Java Class: com.haier.uhome.usdk.f.e

	 in Method: java.lang.String a(java.io.File)
		ConstraintError violating CrySL rule for java.security.MessageDigest (on Object #d044f097c31be4945b7807c82230047a1941788ab6a6adb365c23c587719ee1d)
			First parameter (with value "MD5") should be any of {SHA-256, SHA-384, SHA-512}
			at statement: $r3 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer69666)

		TypestateError violating CrySL rule for java.security.MessageDigest (on Object #d044f097c31be4945b7807c82230047a1941788ab6a6adb365c23c587719ee1d)
			Unexpected call to method <java.security.MessageDigest: byte[] digest()> on object of type java.security.MessageDigest. Expect a call to one of the following methods java.security.MessageDigest: void update(byte[],int,int),java.security.MessageDigest: void update(java.nio.ByteBuffer),java.security.MessageDigest: byte[] digest(byte[]),java.security.MessageDigest: void update(byte[]),java.security.MessageDigest: void update(byte)
			at statement: $r0 = virtualinvoke $r3.<java.security.MessageDigest: byte[] digest()>()


Findings in Java Class: com.connectsdk.service.AirPlayService

	 in Method: java.lang.String digestAuthentication(java.lang.String)
		ConstraintError violating CrySL rule for java.security.MessageDigest (on Object #13b05f9ab32bead0f3351e31b5dcc2537330ef7b29d4fe65a1cd386bf45413f8)
			First parameter (with value "MD5") should be any of {SHA-256, SHA-384, SHA-512}
			at statement: $r2 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer74409)


Findings in Java Class: com.tom.rtsprtp.RTSPClient

	 in Method: java.lang.String calcDigestResponse(java.lang.String,java.lang.String,java.lang.String,java.lang.String)
		ConstraintError violating CrySL rule for java.security.MessageDigest (on Object #9b0b13e17f8123d4450dfeb52d0758c69dd7fad93c618477802194e89fd1e5ff)
			First parameter (with value "MD5") should be any of {SHA-256, SHA-384, SHA-512}
			at statement: $r5 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer78061)


Findings in Java Class: com.koushikdutta.async.http.n

	 in Method: java.lang.String b(java.lang.String)
		ConstraintError violating CrySL rule for java.security.MessageDigest (on Object #b9173aed7bc50e84bd54a56337796aff5824cc6e6d5fb0f6c2ce86a69407d3e9)
			First parameter (with value "SHA-1") should be any of {SHA-256, SHA-384, SHA-512}
			at statement: $r2 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer82796)


Findings in Java Class: com.google.polo.ssl.SSLSocketFactoryWrapper

	 in Method: void <init>(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[])
		ConstraintError violating CrySL rule for javax.net.ssl.SSLContext (on Object #c9821eee32473d6c9cb1e3fc6a1aaa007dd319bf5a4d8db6f79422cdf96b3735)
			First parameter (with value "TLS") should be any of {TLSv1.2}
			at statement: $r4 = staticinvoke <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String)>(varReplacer83002)

		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			First parameter was not properly generated as generatedKeyManagers
			at statement: virtualinvoke $r4.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>($r2, $r1, varReplacer83003)

		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			Third parameter was not properly generated as randomized
			at statement: virtualinvoke $r4.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>($r2, $r1, varReplacer83003)

		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			Second parameter was not properly generated as generatedTrustManagers
			at statement: virtualinvoke $r4.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>($r2, $r1, varReplacer83003)


Findings in Java Class: tekoiacore.utils.constants.a

	 in Method: java.lang.String a(byte[],java.lang.String,java.lang.String)
		ConstraintError violating CrySL rule for java.security.MessageDigest (on Object #5c4155ba743bc8a013c1058d976ffe9f58616dfe51050c0bd30405254ff3916f)
			First parameter (with value "SHA1") should be any of {SHA-256, SHA-384, SHA-512}
			at statement: $r3 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer83125)


Findings in Java Class: com.koushikdutta.async.d

	 in Method: void <clinit>()
		ConstraintError violating CrySL rule for javax.net.ssl.SSLContext (on Object #b6db9b49deb8c2e1e90be297f88ccfce9871f3f102765f1e0479b9d133335311)
			First parameter (with value "TLS") should be any of {TLSv1.2}
			at statement: $r1 = staticinvoke <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String)>(varReplacer84301)

		ConstraintError violating CrySL rule for javax.net.ssl.SSLContext (on Object #e4e06a3f1b53664af3ff50e8b197a0c346ef10eb30e27c4330d533609fa79614)
			First parameter (with value "Default") should be any of {TLSv1.2}
			at statement: $r1 = staticinvoke <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String)>(varReplacer84300)


	 in Method: void a(javax.net.ssl.SSLEngineResult$HandshakeStatus)
		RequiredPredicateError violating CrySL rule for javax.net.ssl.TrustManagerFactory
			First parameter was not properly generated as generatedKeyStore
			at statement: virtualinvoke $r9.<javax.net.ssl.TrustManagerFactory: void init(java.security.KeyStore)>(varReplacer111664)


Findings in Java Class: com.spotxchange.internal.util.Encrypt

	 in Method: java.lang.String sha1(java.lang.String)
		ConstraintError violating CrySL rule for java.security.MessageDigest (on Object #bb367f510deabe4dda4c428cf91c87a0d34e1c64c56cf9b9c55ea90b4383472f)
			First parameter (with value "SHA-1") should be any of {SHA-256, SHA-384, SHA-512}
			at statement: $r1 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer89141)


Findings in Java Class: com.google.android.gms.measurement.internal.zzfk

	 in Method: java.security.MessageDigest getMessageDigest()
		IncompleteOperationError violating CrySL rule for java.security.MessageDigest (on Object #38164c218be70c4a61b985f5b00cca8431b5fd1855596e378a07b3d52317e52f)
			Operation on object of type java.security.MessageDigest object not completed. Expected call to digest, update
			at statement: $r0 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer89214)

		ConstraintError violating CrySL rule for java.security.MessageDigest (on Object #38164c218be70c4a61b985f5b00cca8431b5fd1855596e378a07b3d52317e52f)
			First parameter (with value "MD5") should be any of {SHA-256, SHA-384, SHA-512}
			at statement: $r0 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer89214)


	 in Method: long zzd(android.content.Context,java.lang.String)
		IncompleteOperationError violating CrySL rule for java.security.MessageDigest (on Object #38164c218be70c4a61b985f5b00cca8431b5fd1855596e378a07b3d52317e52f)
			Operation on object of type java.security.MessageDigest object not completed. Expected call to digest, update
			at statement: $r4 = staticinvoke <com.google.android.gms.measurement.internal.zzfk: java.security.MessageDigest getMessageDigest()>()


Findings in Java Class: com.google.android.gms.measurement.internal.zzba

	 in Method: java.lang.String zzbz(java.lang.String)
		IncompleteOperationError violating CrySL rule for java.security.MessageDigest (on Object #38164c218be70c4a61b985f5b00cca8431b5fd1855596e378a07b3d52317e52f)
			Operation on object of type java.security.MessageDigest object not completed. Expected call to digest, update
			at statement: $r7 = staticinvoke <com.google.android.gms.measurement.internal.zzfk: java.security.MessageDigest getMessageDigest()>()


Findings in Java Class: com.google.android.gms.measurement.internal.zzq

	 in Method: long zza(com.google.android.gms.internal.measurement.zzgi)
		IncompleteOperationError violating CrySL rule for java.security.MessageDigest (on Object #38164c218be70c4a61b985f5b00cca8431b5fd1855596e378a07b3d52317e52f)
			Operation on object of type java.security.MessageDigest object not completed. Expected call to update, java.security.MessageDigest: byte[] digest(byte[])
			at statement: $r11 = virtualinvoke $r8.<java.security.MessageDigest: byte[] digest(byte[])>($r4)

		IncompleteOperationError violating CrySL rule for java.security.MessageDigest (on Object #38164c218be70c4a61b985f5b00cca8431b5fd1855596e378a07b3d52317e52f)
			Operation on object of type java.security.MessageDigest object not completed. Expected call to digest, update
			at statement: $r8 = staticinvoke <com.google.android.gms.measurement.internal.zzfk: java.security.MessageDigest getMessageDigest()>()


Findings in Java Class: com.facebook.appevents.AppEvent

	 in Method: java.lang.String md5Checksum(java.lang.String)
		ConstraintError violating CrySL rule for java.security.MessageDigest (on Object #a15f027ccd1bb617c6d0e2ff49d3e4ee4712f7fb16504e72e80cfd60bca61b6c)
			First parameter (with value "MD5") should be any of {SHA-256, SHA-384, SHA-512}
			at statement: $r1 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer89564)


Findings in Java Class: com.google.android.gms.internal.measurement.zzdg

	 in Method: java.security.MessageDigest getMessageDigest(java.lang.String)
		ConstraintError violating CrySL rule for java.security.MessageDigest (on Object #2d99a602fdadec91c8d19ccfdd2eb3556c608014cdd4194c19faa16eae27e5d3)
			First parameter (with value "MD5") should be any of {SHA-256, SHA-384, SHA-512}
			at statement: $r0 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>($r2)

		IncompleteOperationError violating CrySL rule for java.security.MessageDigest (on Object #2d99a602fdadec91c8d19ccfdd2eb3556c608014cdd4194c19faa16eae27e5d3)
			Operation on object of type java.security.MessageDigest object not completed. Expected call to digest, update
			at statement: $r0 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>($r2)


Findings in Java Class: com.google.android.gms.internal.measurement.zzak

	 in Method: java.lang.String zzo(java.lang.String)
		IncompleteOperationError violating CrySL rule for java.security.MessageDigest (on Object #2d99a602fdadec91c8d19ccfdd2eb3556c608014cdd4194c19faa16eae27e5d3)
			Operation on object of type java.security.MessageDigest object not completed. Expected call to digest, update
			at statement: $r4 = staticinvoke <com.google.android.gms.internal.measurement.zzdg: java.security.MessageDigest getMessageDigest(java.lang.String)>(varReplacer98462)


Findings in Java Class: com.google.firebase.iid.zza

	 in Method: java.security.KeyPair zzb()
		IncompleteOperationError violating CrySL rule for java.security.KeyPairGenerator (on Object #4b62baa68b112ae453c64f4b792dffc45e17635fdcacd3b147fbe0f01c6c226d)
			Operation on object of type java.security.KeyPairGenerator object not completed. Expected call to java.security.KeyPairGenerator: java.security.KeyPair generateKeyPair(), genKeyPair, java.security.KeyPairGeneratorSpi: java.security.KeyPair generateKeyPair()
			at statement: $r1 = virtualinvoke $r0.<java.security.KeyPairGenerator: java.security.KeyPair generateKeyPair()>()


Findings in Java Class: cn.com.broadlink.sdk.c

	 in Method: cn.com.broadlink.sdk.result.controller.BLDownloadScriptResult a(java.lang.String,int,javax.net.ssl.TrustManager[])
		ConstraintError violating CrySL rule for javax.net.ssl.SSLContext (on Object #da486d05494f5c04dfe6b8005988e9f04ddbd1a5d248dfffa733761787d6bd99)
			First parameter (with value "TLS") should be any of {TLSv1.2}
			at statement: $r12 = staticinvoke <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String)>(varReplacer102349)

		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			Second parameter was not properly generated as generatedTrustManagers
			at statement: virtualinvoke $r12.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>(varReplacer102371, $r2, $r13)

		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			First parameter was not properly generated as generatedKeyManagers
			at statement: virtualinvoke $r12.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>(varReplacer102371, $r2, $r13)


Findings in Java Class: org.eclipse.jetty.util.ssl.SslContextFactory

	 in Method: javax.net.ssl.KeyManager[] getKeyManagers(java.security.KeyStore)
		RequiredPredicateError violating CrySL rule for javax.net.ssl.KeyManagerFactory
			First parameter was not properly generated as generatedKeyStore
			at statement: virtualinvoke $r4.<javax.net.ssl.KeyManagerFactory: void init(java.security.KeyStore,char[])>($r1, $r2)

		NeverTypeOfError violating CrySL rule for javax.net.ssl.KeyManagerFactory (on Object #c3dab8329dc120e657299892c7d112d947fad6c6c22e38cf1394f4fd5bc3eaa7)
			Second parameter should never be of type java.lang.String.
			at statement: virtualinvoke $r4.<javax.net.ssl.KeyManagerFactory: void init(java.security.KeyStore,char[])>($r1, $r2)

		HardCodedError violating CrySL rule for javax.net.ssl.KeyManagerFactory (on Object #c3dab8329dc120e657299892c7d112d947fad6c6c22e38cf1394f4fd5bc3eaa7)
			Second parameter should never be hardcoded.
			at statement: virtualinvoke $r4.<javax.net.ssl.KeyManagerFactory: void init(java.security.KeyStore,char[])>($r1, $r2)


	 in Method: javax.net.ssl.TrustManager[] getTrustManagers(java.security.KeyStore,java.util.Collection)
		RequiredPredicateError violating CrySL rule for javax.net.ssl.TrustManagerFactory
			First parameter was not properly generated as generatedManagerFactoryParameters
			at statement: virtualinvoke $r8.<javax.net.ssl.TrustManagerFactory: void init(javax.net.ssl.ManagerFactoryParameters)>($r9)

		RequiredPredicateError violating CrySL rule for javax.net.ssl.CertPathTrustManagerParameters
			First parameter was not properly generated as generatedCertPathParameters
			at statement: specialinvoke $r9.<javax.net.ssl.CertPathTrustManagerParameters: void <init>(java.security.cert.CertPathParameters)>($r4)

		RequiredPredicateError violating CrySL rule for javax.net.ssl.TrustManagerFactory
			First parameter was not properly generated as generatedKeyStore
			at statement: virtualinvoke $r8.<javax.net.ssl.TrustManagerFactory: void init(java.security.KeyStore)>($r1)

		RequiredPredicateError violating CrySL rule for java.security.cert.PKIXBuilderParameters
			First parameter was not properly generated as generatedKeyStore
			at statement: specialinvoke $r4.<java.security.cert.PKIXBuilderParameters: void <init>(java.security.KeyStore,java.security.cert.CertSelector)>($r1, $r5)


Findings in Java Class: org.java_websocket.drafts.Draft_76

	 in Method: byte[] createChallenge(java.lang.String,java.lang.String,byte[])
		ConstraintError violating CrySL rule for java.security.MessageDigest (on Object #be648a2825fceb59af746265e926f65deda8e8856983dd837ec46295ea8ae7ac)
			First parameter (with value "MD5") should be any of {SHA-256, SHA-384, SHA-512}
			at statement: $r6 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer106807)


Findings in Java Class: com.amazon.whisperlink.util.TransportUtil

	 in Method: javax.net.ssl.SSLContext createSSLContext(com.amazon.whisperlink.platform.PasswordProvider)
		ConstraintError violating CrySL rule for javax.net.ssl.SSLContext (on Object #b5678fa1ac2d733b6b1d4c247b0fb1467bf5a1679fb8b99d992aeff13293d59c)
			First parameter (with value "TLS") should be any of {TLSv1.2}
			at statement: $r3 = staticinvoke <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String)>($r2)

		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			Second parameter was not properly generated as generatedTrustManagers
			at statement: virtualinvoke $r3.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>($r5, $r4, varReplacer109799)

		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			First parameter was not properly generated as generatedKeyManagers
			at statement: virtualinvoke $r3.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>($r5, $r4, varReplacer109799)

		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			Third parameter was not properly generated as randomized
			at statement: virtualinvoke $r3.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>($r5, $r4, varReplacer109799)


Findings in Java Class: com.google.android.exoplayer2.upstream.cache.CachedContentIndex

	 in Method: boolean readFile()
		RequiredPredicateError violating CrySL rule for javax.crypto.spec.IvParameterSpec
			First parameter was not properly generated as randomized
			at statement: specialinvoke $r16.<javax.crypto.spec.IvParameterSpec: void <init>(byte[])>($r15)

		IncompleteOperationError violating CrySL rule for javax.crypto.CipherInputStream (on Object #aaf00be843aa192c1df73f8c0e7e73c4634fdd45b36ba77693a5b34062706f7)
			Operation on object of type javax.crypto.CipherInputStream object not completed. Expected call to read
			at statement: specialinvoke $r9.<java.io.DataInputStream: void <init>(java.io.InputStream)>($r17)


	 in Method: void writeFile()
		RequiredPredicateError violating CrySL rule for javax.crypto.spec.IvParameterSpec
			First parameter was not properly generated as randomized
			at statement: specialinvoke $r26.<javax.crypto.spec.IvParameterSpec: void <init>(byte[])>($r6)

		IncompleteOperationError violating CrySL rule for javax.crypto.CipherOutputStream (on Object #a2ab592da7ee7632be714159ea5fcd796d1d4db788d7c0adf7707a896f9e84a9)
			Operation on object of type javax.crypto.CipherOutputStream object not completed. Expected call to write
			at statement: specialinvoke $r27.<javax.crypto.CipherOutputStream: void <init>(java.io.OutputStream,javax.crypto.Cipher)>($r3, $r5)


Findings in Java Class: com.facebook.ads.internal.p.a.o

	 in Method: java.lang.String a(byte[],java.lang.String)
		ConstraintError violating CrySL rule for java.security.MessageDigest (on Object #ba4e4bfe6a694192decf64050e0aed2bb871a8ccea5bec83a9963aaf22784bb8)
			First parameter (with value "SHA-1") should be any of {SHA-256, SHA-384, SHA-512}
			at statement: $r2 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>($r1)


Findings in Java Class: io.fabric.sdk.android.services.common.CommonUtils

	 in Method: java.lang.String hash(byte[],java.lang.String)
		ConstraintError violating CrySL rule for java.security.MessageDigest (on Object #7fb5e1ca4e0ccb41306f524bfa8fe0a452898cd3171e10ddd8d49eb5eb47dc5a)
			First parameter (with value "SHA-1") should be any of {SHA-256, SHA-384, SHA-512}
			at statement: $r3 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>($r2)


	 in Method: java.lang.String hash(java.io.InputStream,java.lang.String)
		ConstraintError violating CrySL rule for java.security.MessageDigest (on Object #a0cd7a8e8b4a1982c4187e09914bf7dc3b8735c5e8d396ebe76586457c6aeee9)
			First parameter (with value "SHA-1") should be any of {SHA-256, SHA-384, SHA-512}
			at statement: $r2 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>($r1)

		TypestateError violating CrySL rule for java.security.MessageDigest (on Object #a0cd7a8e8b4a1982c4187e09914bf7dc3b8735c5e8d396ebe76586457c6aeee9)
			Unexpected call to method <java.security.MessageDigest: byte[] digest()> on object of type java.security.MessageDigest. Expect a call to one of the following methods java.security.MessageDigest: void update(byte[],int,int),java.security.MessageDigest: void update(java.nio.ByteBuffer),java.security.MessageDigest: byte[] digest(byte[]),java.security.MessageDigest: void update(byte[]),java.security.MessageDigest: void update(byte)
			at statement: $r3 = virtualinvoke $r2.<java.security.MessageDigest: byte[] digest()>()


Findings in Java Class: org.eclipse.jetty.client.security.DigestAuthentication

	 in Method: java.lang.String newCnonce(org.eclipse.jetty.client.HttpExchange,org.eclipse.jetty.client.security.Realm,java.util.Map)
		ConstraintError violating CrySL rule for java.security.MessageDigest (on Object #48985189ef62b7f2def41c1f188b13ce5653f410480aa520357ff32d66b75a2f)
			First parameter (with value "MD5") should be any of {SHA-256, SHA-384, SHA-512}
			at statement: $r4 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer119003)


	 in Method: java.lang.String newResponse(java.lang.String,org.eclipse.jetty.client.HttpExchange,org.eclipse.jetty.client.security.Realm,java.util.Map)
		ConstraintError violating CrySL rule for java.security.MessageDigest (on Object #f04b3a39101462f61028c5df840decc1445df0003341403889eb284c9ffa14e3)
			First parameter (with value "MD5") should be any of {SHA-256, SHA-384, SHA-512}
			at statement: $r5 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer119024)


Findings in Java Class: com.connectsdk.service.webos.WebOSTVServiceSocketClient

	 in Method: void setupSSL()
		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			Second parameter was not properly generated as generatedTrustManagers
			at statement: virtualinvoke $r3.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>(varReplacer120142, $r4, varReplacer120142)

		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			Third parameter was not properly generated as randomized
			at statement: virtualinvoke $r3.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>(varReplacer120142, $r4, varReplacer120142)

		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			First parameter was not properly generated as generatedKeyManagers
			at statement: virtualinvoke $r3.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>(varReplacer120142, $r4, varReplacer120142)

		ConstraintError violating CrySL rule for javax.net.ssl.SSLContext (on Object #cef1cbc9eb1885911e37ded8813031ea75db15ccf250c7a1650316c4ff4c7160)
			First parameter (with value "TLS") should be any of {TLSv1.2}
			at statement: $r3 = staticinvoke <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String)>(varReplacer120141)


Findings in Java Class: okhttp3.OkHttpClient

	 in Method: void <init>(okhttp3.OkHttpClient$Builder)
		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			First parameter was not properly generated as generatedKeyManagers
			at statement: virtualinvoke $r15.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>(varReplacer121591, varReplacer121591, varReplacer121591)

		ConstraintError violating CrySL rule for javax.net.ssl.SSLContext (on Object #890b7daf78521814c2668b2a5cf23e0d3f4043dafc1c62faa0d622349680f09f)
			First parameter (with value "TLS") should be any of {TLSv1.2}
			at statement: $r15 = staticinvoke <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String)>(varReplacer121596)

		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			Third parameter was not properly generated as randomized
			at statement: virtualinvoke $r15.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>(varReplacer121591, varReplacer121591, varReplacer121591)

		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			Second parameter was not properly generated as generatedTrustManagers
			at statement: virtualinvoke $r15.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>(varReplacer121591, varReplacer121591, varReplacer121591)


Findings in Java Class: org.eclipse.jetty.util.security.CertificateUtils

	 in Method: java.security.KeyStore getKeyStore(java.io.InputStream,java.lang.String,java.lang.String,java.lang.String,java.lang.String)
		NeverTypeOfError violating CrySL rule for java.security.KeyStore (on Object #f37c29025a192792c87dbda553d3497426cf94920d5059cc79b2b08916802cd7)
			Second parameter should never be of type java.lang.String.
			at statement: virtualinvoke $r9.<java.security.KeyStore: void load(java.io.InputStream,char[])>($r3, $r5)

		HardCodedError violating CrySL rule for java.security.KeyStore (on Object #f37c29025a192792c87dbda553d3497426cf94920d5059cc79b2b08916802cd7)
			Second parameter should never be hardcoded.
			at statement: virtualinvoke $r9.<java.security.KeyStore: void load(java.io.InputStream,char[])>($r3, $r5)


Findings in Java Class: org.java_websocket.drafts.Draft_10

	 in Method: java.lang.String generateFinalKey(java.lang.String)
		ConstraintError violating CrySL rule for java.security.MessageDigest (on Object #7aedc66e2d368be6ac5d12e7ea954c2c1b297124bd01d9714f1cdf4bf4f01d7f)
			First parameter (with value "SHA1") should be any of {SHA-256, SHA-384, SHA-512}
			at statement: $r3 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer129370)


Findings in Java Class: com.flurry.sdk.jn

	 in Method: byte[] f(java.lang.String)
		ConstraintError violating CrySL rule for java.security.MessageDigest (on Object #a0b94e50d5703cb1a875f45398d77136c05c3253122b2bb73dcb88bcfdfe0d70)
			First parameter (with value "SHA-1") should be any of {SHA-256, SHA-384, SHA-512}
			at statement: $r1 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer129860)


Findings in Java Class: com.google.common.hash.AbstractCompositeHashFunction

	 in Method: com.google.common.hash.Hasher newHasher()
		IncompleteOperationError violating CrySL rule for java.security.MessageDigest (on Object #f4e887286d0504cb5722b1da9a4eac06d6ea434977af7216dbf1f6217c285838)
			Operation on object of type java.security.MessageDigest object not completed. Expected call to digest, update
			at statement: specialinvoke $r5.<com.google.common.hash.AbstractCompositeHashFunction$1: void <init>(com.google.common.hash.AbstractCompositeHashFunction,com.google.common.hash.Hasher[])>(r0, $r3)


Findings in Java Class: com.google.common.hash.AbstractStreamingHashFunction

	 in Method: com.google.common.hash.HashCode hashObject(java.lang.Object,com.google.common.hash.Funnel)
		IncompleteOperationError violating CrySL rule for java.security.MessageDigest (on Object #f4e887286d0504cb5722b1da9a4eac06d6ea434977af7216dbf1f6217c285838)
			Operation on object of type java.security.MessageDigest object not completed. Expected call to digest, update
			at statement: $r4 = interfaceinvoke $r3.<com.google.common.hash.Hasher: com.google.common.hash.HashCode hash()>()


Findings in Java Class: com.google.android.gms.internal.ads.zzayi

	 in Method: byte[] zzc(byte[],byte[])
		RequiredPredicateError violating CrySL rule for javax.crypto.Cipher
			Second parameter was not properly generated as generatedKey
			at statement: virtualinvoke $r7.<javax.crypto.Cipher: void init(int,java.security.Key,java.security.spec.AlgorithmParameterSpec)>(varReplacer135598, $r6, $r8)

		ConstraintError violating CrySL rule for javax.crypto.Cipher (on Object #50e430b9c6ae25b97265b8f4784bb70031109feee4654306ecf06c590a029816)
			First parameter (with value "AES/ECB/NOPADDING") should be any of AES/{CBC, GCM, PCBC, CTR, CTS, CFB, OFB}
			at statement: $r5 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer135604)

		RequiredPredicateError violating CrySL rule for javax.crypto.Cipher
			Second parameter was not properly generated as generatedKey
			at statement: virtualinvoke $r5.<javax.crypto.Cipher: void init(int,java.security.Key)>(varReplacer135597, $r6)

		RequiredPredicateError violating CrySL rule for javax.crypto.Cipher
			Third parameter was not properly generated as preparedIV [ with CBC, It's required to use IVParameterSpec]
			at statement: virtualinvoke $r7.<javax.crypto.Cipher: void init(int,java.security.Key,java.security.spec.AlgorithmParameterSpec)>(varReplacer135598, $r6, $r8)

		RequiredPredicateError violating CrySL rule for javax.crypto.spec.IvParameterSpec
			First parameter was not properly generated as randomized
			at statement: specialinvoke $r8.<javax.crypto.spec.IvParameterSpec: void <init>(byte[])>($r4)


	 in Method: void <init>(byte[],int)
		RequiredPredicateError violating CrySL rule for javax.crypto.spec.SecretKeySpec
			First parameter was not properly generated as preparedKeyMaterial
			at statement: specialinvoke $r3.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r1, varReplacer158949)

		ConstraintError violating CrySL rule for javax.crypto.Cipher (on Object #f03f2bcd6054967caf75d3bed27e15a6f1961638283136bf2bfa60135cbe3032)
			First parameter (with value "AES/ECB/NOPADDING") should be any of AES/{CBC, GCM, PCBC, CTR, CTS, CFB, OFB}
			at statement: $r4 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer158950)

		RequiredPredicateError violating CrySL rule for javax.crypto.Cipher
			Second parameter was not properly generated as generatedKey
			at statement: virtualinvoke $r4.<javax.crypto.Cipher: void init(int,java.security.Key)>(varReplacer158951, $r3)


Findings in Java Class: com.google.android.gms.internal.ads.zzgq

	 in Method: java.security.MessageDigest zzhg()
		ConstraintError violating CrySL rule for java.security.MessageDigest (on Object #43373e9613c2bf393169d7d35882f362558f1e9d897d818a72465a651a4cd367)
			First parameter (with value "MD5") should be any of {SHA-256, SHA-384, SHA-512}
			at statement: $r2 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer141121)


Findings in Java Class: com.google.android.gms.internal.ads.zzgz

	 in Method: byte[] zzx(java.lang.String)
		TypestateError violating CrySL rule for java.security.MessageDigest (on Object #43373e9613c2bf393169d7d35882f362558f1e9d897d818a72465a651a4cd367)
			Unexpected call to method <java.security.MessageDigest: byte[] digest()> on object of type java.security.MessageDigest. Expect a call to one of the following methods java.security.MessageDigest: void update(byte[],int,int),java.security.MessageDigest: void update(java.nio.ByteBuffer),java.security.MessageDigest: byte[] digest(byte[]),java.security.MessageDigest: void update(byte[]),java.security.MessageDigest: void update(byte)
			at statement: $r4 = virtualinvoke $r3.<java.security.MessageDigest: byte[] digest()>()


Findings in Java Class: com.google.android.gms.internal.ads.zzgv

	 in Method: byte[] zzx(java.lang.String)
		TypestateError violating CrySL rule for java.security.MessageDigest (on Object #43373e9613c2bf393169d7d35882f362558f1e9d897d818a72465a651a4cd367)
			Unexpected call to method <java.security.MessageDigest: byte[] digest()> on object of type java.security.MessageDigest. Expect a call to one of the following methods java.security.MessageDigest: void update(byte[],int,int),java.security.MessageDigest: void update(java.nio.ByteBuffer),java.security.MessageDigest: byte[] digest(byte[]),java.security.MessageDigest: void update(byte[]),java.security.MessageDigest: void update(byte)
			at statement: $r5 = virtualinvoke $r7.<java.security.MessageDigest: byte[] digest()>()


Findings in Java Class: com.google.android.gms.internal.ads.zzha

	 in Method: java.lang.String zza(java.util.ArrayList,java.util.ArrayList)
		IncompleteOperationError violating CrySL rule for java.security.MessageDigest (on Object #43373e9613c2bf393169d7d35882f362558f1e9d897d818a72465a651a4cd367)
			Operation on object of type java.security.MessageDigest object not completed. Expected call to digest, update
			at statement: $r18 = virtualinvoke $r17.<com.google.android.gms.internal.ads.zzgq: byte[] zzx(java.lang.String)>($r9)


Findings in Java Class: com.google.android.gms.internal.ads.zzgr

	 in Method: java.lang.String zzy(java.lang.String)
		IncompleteOperationError violating CrySL rule for java.security.MessageDigest (on Object #43373e9613c2bf393169d7d35882f362558f1e9d897d818a72465a651a4cd367)
			Operation on object of type java.security.MessageDigest object not completed. Expected call to digest, update
			at statement: $r11 = virtualinvoke $r10.<com.google.android.gms.internal.ads.zzgq: byte[] zzx(java.lang.String)>($r1)


Findings in Java Class: com.amazon.whisperlink.port.android.SecurityManagerFactory

	 in Method: void init(android.content.Context)
		NeverTypeOfError violating CrySL rule for javax.net.ssl.KeyManagerFactory (on Object #c124467974b3ca6d3c0356016bc1ad6cb38e32e2f6bd6720bcf7775aa48bd835)
			Second parameter should never be of type java.lang.String.
			at statement: virtualinvoke $r4.<javax.net.ssl.KeyManagerFactory: void init(java.security.KeyStore,char[])>($r6, $r7)

		HardCodedError violating CrySL rule for javax.net.ssl.KeyManagerFactory (on Object #c124467974b3ca6d3c0356016bc1ad6cb38e32e2f6bd6720bcf7775aa48bd835)
			Second parameter should never be hardcoded.
			at statement: virtualinvoke $r4.<javax.net.ssl.KeyManagerFactory: void init(java.security.KeyStore,char[])>($r6, $r7)

		RequiredPredicateError violating CrySL rule for javax.net.ssl.KeyManagerFactory
			First parameter was not properly generated as generatedKeyStore
			at statement: virtualinvoke $r4.<javax.net.ssl.KeyManagerFactory: void init(java.security.KeyStore,char[])>($r6, $r7)


	 in Method: java.security.KeyStore loadKeyStore(android.content.Context)
		NeverTypeOfError violating CrySL rule for java.security.KeyStore (on Object #f2c8a3ff7a51476dec43446efc4574d4ffc05b88471a90752f2d4277c398e1c3)
			Second parameter should never be of type java.lang.String.
			at statement: virtualinvoke $r2.<java.security.KeyStore: void load(java.io.InputStream,char[])>($r3, $r6)

		HardCodedError violating CrySL rule for java.security.KeyStore (on Object #f2c8a3ff7a51476dec43446efc4574d4ffc05b88471a90752f2d4277c398e1c3)
			Second parameter should never be hardcoded.
			at statement: virtualinvoke $r2.<java.security.KeyStore: void load(java.io.InputStream,char[])>($r3, $r6)

		ConstraintError violating CrySL rule for java.security.KeyStore (on Object #f2c8a3ff7a51476dec43446efc4574d4ffc05b88471a90752f2d4277c398e1c3)
			First parameter (with value "BKS") should be any of {JCEKS, JKS, DKS, PKCS11, PKCS12}
			at statement: $r2 = staticinvoke <java.security.KeyStore: java.security.KeyStore getInstance(java.lang.String)>(varReplacer158871)


Findings in Java Class: com.amazon.whisperlink.port.android.KeyStoreGenerator

	 in Method: java.io.File generateKeyStore(android.content.Context,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)
		NeverTypeOfError violating CrySL rule for java.security.KeyStore (on Object #3d5a9fa2640ef8f09332518991532135cb16c973e98583f0b73239bf77b7eaef)
			Second parameter should never be of type java.lang.String.
			at statement: virtualinvoke $r10.<java.security.KeyStore: void store(java.io.OutputStream,char[])>($r21, $r14)

		IncompleteOperationError violating CrySL rule for java.security.KeyPairGenerator (on Object #dee4c72eac1cc36b21b1ef269438eebd8be5832f822d1d63228b3e8495b7cb10)
			Operation on object of type java.security.KeyPairGenerator object not completed. Expected call to java.security.KeyPairGenerator: java.security.KeyPair generateKeyPair(), genKeyPair, java.security.KeyPairGeneratorSpi: java.security.KeyPair generateKeyPair()
			at statement: $r9 = virtualinvoke $r8.<java.security.KeyPairGenerator: java.security.KeyPair generateKeyPair()>()

		TypestateError violating CrySL rule for java.security.KeyStore (on Object #3d5a9fa2640ef8f09332518991532135cb16c973e98583f0b73239bf77b7eaef)
			Unexpected call to method store on object of type java.security.KeyStore. Expect a call to one of the following methods getKey,getEntry,setEntry
			at statement: virtualinvoke $r10.<java.security.KeyStore: void store(java.io.OutputStream,char[])>($r21, $r14)

		ConstraintError violating CrySL rule for java.security.KeyStore (on Object #3d5a9fa2640ef8f09332518991532135cb16c973e98583f0b73239bf77b7eaef)
			First parameter (with value "BKS") should be any of {JCEKS, JKS, DKS, PKCS11, PKCS12}
			at statement: $r10 = staticinvoke <java.security.KeyStore: java.security.KeyStore getInstance(java.lang.String)>(varReplacer146890)


	 in Method: java.io.File generateTrustStore(android.content.Context,java.lang.String,java.security.cert.Certificate[])
		ConstraintError violating CrySL rule for java.security.KeyStore (on Object #39eb7c2386edcadf9dad3c71cd6cbfa26c81bbaa1466da7503bb236823ff0538)
			First parameter (with value "BKS") should be any of {JCEKS, JKS, DKS, PKCS11, PKCS12}
			at statement: $r4 = staticinvoke <java.security.KeyStore: java.security.KeyStore getInstance(java.lang.String)>(varReplacer158880)

		TypestateError violating CrySL rule for java.security.KeyStore (on Object #39eb7c2386edcadf9dad3c71cd6cbfa26c81bbaa1466da7503bb236823ff0538)
			Unexpected call to method store on object of type java.security.KeyStore. Expect a call to one of the following methods getKey,getEntry,setEntry
			at statement: virtualinvoke $r4.<java.security.KeyStore: void store(java.io.OutputStream,char[])>($r10, $r7)

		NeverTypeOfError violating CrySL rule for java.security.KeyStore (on Object #39eb7c2386edcadf9dad3c71cd6cbfa26c81bbaa1466da7503bb236823ff0538)
			Second parameter should never be of type java.lang.String.
			at statement: virtualinvoke $r4.<java.security.KeyStore: void store(java.io.OutputStream,char[])>($r10, $r7)


Findings in Java Class: com.google.android.gms.internal.ads.zzavk

	 in Method: com.google.android.gms.internal.ads.zzauk zzh(com.google.android.gms.internal.ads.zzbah)
		RequiredPredicateError violating CrySL rule for javax.crypto.spec.SecretKeySpec
			First parameter was not properly generated as preparedKeyMaterial
			at statement: specialinvoke $r1.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r6, varReplacer147057)

		ConstraintError violating CrySL rule for javax.crypto.spec.SecretKeySpec (on Object #6e767f60b97508ba9e1eefbdacf8809a70631669ab397f95c036dea00d20bcb1)
			Second parameter (with value "HMAC") should be any of {AES, HmacSHA224, HmacSHA256, HmacSHA384, HmacSHA512}
			at statement: specialinvoke $r1.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r6, varReplacer147057)


	 in Method: java.lang.Object zza(com.google.android.gms.internal.ads.zzbcu)
		ConstraintError violating CrySL rule for javax.crypto.spec.SecretKeySpec (on Object #e314887fc4d712685ab0e1afcc3fa6db030dbeeeaaba68a5d0d918a5f195991e)
			Second parameter (with value "HMAC") should be any of {AES, HmacSHA224, HmacSHA256, HmacSHA384, HmacSHA512}
			at statement: specialinvoke $r1.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r7, varReplacer149675)

		RequiredPredicateError violating CrySL rule for javax.crypto.spec.SecretKeySpec
			First parameter was not properly generated as preparedKeyMaterial
			at statement: specialinvoke $r1.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r7, varReplacer149675)


Findings in Java Class: jcifs.smb.t

	 in Method: void <init>(byte[],boolean)
		ConstraintError violating CrySL rule for java.security.MessageDigest (on Object #a7ffa9710d45a9db59f5e2fdd5133ff77ec7abe4ce00a184143190ddda9dd6a2)
			First parameter (with value "MD5") should be any of {SHA-256, SHA-384, SHA-512}
			at statement: $r1 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer154502)


Findings in Java Class: jcifs.smb.bb

	 in Method: void b(jcifs.smb.s,jcifs.smb.s)
		IncompleteOperationError violating CrySL rule for java.security.MessageDigest (on Object #a7ffa9710d45a9db59f5e2fdd5133ff77ec7abe4ce00a184143190ddda9dd6a2)
			Operation on object of type java.security.MessageDigest object not completed. Expected call to digest, update
			at statement: specialinvoke $r35.<jcifs.smb.t: void <init>(byte[],boolean)>($r6, varReplacer140587)

		IncompleteOperationError violating CrySL rule for java.security.MessageDigest (on Object #a7ffa9710d45a9db59f5e2fdd5133ff77ec7abe4ce00a184143190ddda9dd6a2)
			Operation on object of type java.security.MessageDigest object not completed. Expected call to digest, update
			at statement: specialinvoke $r35.<jcifs.smb.t: void <init>(byte[],boolean)>($r16, varReplacer140592)


Findings in Java Class: jcifs.smb.bd

	 in Method: void b(jcifs.util.transport.a)
		IncompleteOperationError violating CrySL rule for java.security.MessageDigest (on Object #a7ffa9710d45a9db59f5e2fdd5133ff77ec7abe4ce00a184143190ddda9dd6a2)
			Operation on object of type java.security.MessageDigest object not completed. Expected call to digest, update
			at statement: virtualinvoke $r5.<jcifs.util.e: void println(java.lang.Object)>($r4)

		IncompleteOperationError violating CrySL rule for java.security.MessageDigest (on Object #a7ffa9710d45a9db59f5e2fdd5133ff77ec7abe4ce00a184143190ddda9dd6a2)
			Operation on object of type java.security.MessageDigest object not completed. Expected call to digest, update
			at statement: $r4 = $r6.<jcifs.smb.b: jcifs.smb.s a>

		IncompleteOperationError violating CrySL rule for java.security.MessageDigest (on Object #a7ffa9710d45a9db59f5e2fdd5133ff77ec7abe4ce00a184143190ddda9dd6a2)
			Operation on object of type java.security.MessageDigest object not completed. Expected call to digest, update
			at statement: $i0 = virtualinvoke $r4.<jcifs.smb.s: int a(byte[],int)>($r2, varReplacer162702)


Findings in Java Class: com.aerserv.sdk.adapter.AbstractCustomProvider

	 in Method: java.lang.String makeUpperCaseMD5AndroidId()
		ConstraintError violating CrySL rule for java.security.MessageDigest (on Object #e08b303c389feba6494e27622540acdd6e57b1e842d7e9a89471ab4cb9879713)
			First parameter (with value "MD5") should be any of {SHA-256, SHA-384, SHA-512}
			at statement: $r4 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer155744)


Findings in Java Class: jcifs.util.c

	 in Method: void <init>(byte[])
		ConstraintError violating CrySL rule for java.security.MessageDigest (on Object #667644a16f68bfbba3210abca239b4052da4bde8fc866261c7fa0b479f7a7586)
			First parameter (with value "MD5") should be any of {SHA-256, SHA-384, SHA-512}
			at statement: $r3 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer157460)


Findings in Java Class: jcifs.smb.r

	 in Method: byte[] a(java.lang.String,java.lang.String,java.lang.String)
		IncompleteOperationError violating CrySL rule for java.security.MessageDigest (on Object #667644a16f68bfbba3210abca239b4052da4bde8fc866261c7fa0b479f7a7586)
			Operation on object of type java.security.MessageDigest object not completed. Expected call to digest
			at statement: specialinvoke $r8.<jcifs.util.c: void <init>(byte[])>($r4)


	 in Method: byte[] a(byte[],byte[],byte[])
		ConstraintError violating CrySL rule for java.security.MessageDigest (on Object #179f1eccdd705d3618d64a4ba013f6f413a0116d0557448e6626d386c5415364)
			First parameter (with value "MD5") should be any of {SHA-256, SHA-384, SHA-512}
			at statement: $r4 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer162653)


Findings in Java Class: com.amazon.whisperlink.port.DeviceIds

	 in Method: java.lang.String getIdFromString(java.lang.String)
		ConstraintError violating CrySL rule for java.security.MessageDigest (on Object #c31e62ea9af727c6f0084fab0f7d477d07c5d6b96f5a32f85b6c5ee338ca3def)
			First parameter (with value "MD5") should be any of {SHA-256, SHA-384, SHA-512}
			at statement: $r3 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer158814)


Findings in Java Class: com.facebook.ads.internal.p.b.m

	 in Method: java.lang.String d(java.lang.String)
		ConstraintError violating CrySL rule for java.security.MessageDigest (on Object #37b32ecef2548a8e9d92986226b7d02203fdf5a935135a66b7b7c0c20edf46d4)
			First parameter (with value "MD5") should be any of {SHA-256, SHA-384, SHA-512}
			at statement: $r1 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer158908)


Findings in Java Class: com.loopj.android.http.MySSLSocketFactory

	 in Method: void <init>(java.security.KeyStore)
		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			Second parameter was not properly generated as generatedTrustManagers
			at statement: virtualinvoke $r1.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>(varReplacer159126, $r5, varReplacer159126)

		ConstraintError violating CrySL rule for javax.net.ssl.SSLContext (on Object #b3114f1a982f59c374a6358e70f82a4121a0b03c545246fce87ac921123d8639)
			First parameter (with value "TLS") should be any of {TLSv1.2}
			at statement: $r1 = staticinvoke <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String)>(varReplacer159128)

		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			Third parameter was not properly generated as randomized
			at statement: virtualinvoke $r1.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>(varReplacer159126, $r5, varReplacer159126)

		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			First parameter was not properly generated as generatedKeyManagers
			at statement: virtualinvoke $r1.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>(varReplacer159126, $r5, varReplacer159126)


Findings in Java Class: io.fabric.sdk.android.services.network.PinningTrustManager

	 in Method: boolean isValidPin(java.security.cert.X509Certificate)
		ConstraintError violating CrySL rule for java.security.MessageDigest (on Object #22cabc9358b1800bddf7fdc9e15dc309855a394517b8fe012d6a473069043393)
			First parameter (with value "SHA1") should be any of {SHA-256, SHA-384, SHA-512}
			at statement: $r2 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer159628)


	 in Method: javax.net.ssl.TrustManager[] initializeSystemTrustManagers(io.fabric.sdk.android.services.network.SystemKeyStore)
		ConstraintError violating CrySL rule for javax.net.ssl.TrustManagerFactory (on Object #763d684b57d63f1adf14df0a7974e204936451fb964a9d963c97cbe17bca308)
			First parameter (with value "X509") should be any of {PKIX, SunX509}
			at statement: $r2 = staticinvoke <javax.net.ssl.TrustManagerFactory: javax.net.ssl.TrustManagerFactory getInstance(java.lang.String)>(varReplacer173332)

		RequiredPredicateError violating CrySL rule for javax.net.ssl.TrustManagerFactory
			First parameter was not properly generated as generatedKeyStore
			at statement: virtualinvoke $r2.<javax.net.ssl.TrustManagerFactory: void init(java.security.KeyStore)>($r3)


Findings in Java Class: org.bouncycastle.x509.X509Util

	 in Method: java.security.Signature getSignatureInstance(java.lang.String)
		ConstraintError violating CrySL rule for java.security.Signature (on Object #6ed6d6cafdad6677f2cde5718fd419647ab4cbf23c64a3972859bdabf4ec1870)
			First parameter (with value "SHA256WithRSAEncryption") should be any of {SHA256withRSA, SHA256withECDSA, SHA256withDSA, SHA224withDSA, NONEwithDSA, SHA1withDSA}
			at statement: $r0 = staticinvoke <java.security.Signature: java.security.Signature getInstance(java.lang.String)>($r1)


	 in Method: byte[] calculateSignature(org.bouncycastle.asn1.DERObjectIdentifier,java.lang.String,java.security.PrivateKey,java.security.SecureRandom,org.bouncycastle.asn1.ASN1Encodable)
		RequiredPredicateError violating CrySL rule for java.security.Signature
			First parameter was not properly generated as generatedPrivkey
			at statement: virtualinvoke $r5.<java.security.Signature: void initSign(java.security.PrivateKey,java.security.SecureRandom)>($r4, $r0)


Findings in Java Class: com.google.android.gms.internal.ads.zzazd

	 in Method: java.lang.Object zzb(java.lang.String,java.security.Provider)
		ConstraintError violating CrySL rule for java.security.KeyPairGenerator (on Object #5c75dede8fb030ad7e32324e351ff44e5338f5ea80b96eaf10c24d7680022c9f)
			First parameter (with value "ECDH") should be any of {RSA, EC, DSA, DiffieHellman, DH}
			at statement: $r3 = staticinvoke <java.security.KeyPairGenerator: java.security.KeyPairGenerator getInstance(java.lang.String)>($r2)

		ConstraintError violating CrySL rule for java.security.KeyPairGenerator (on Object #5c75dede8fb030ad7e32324e351ff44e5338f5ea80b96eaf10c24d7680022c9f)
			First parameter (with value "AES/GCM/NoPadding") should be any of {RSA, EC, DSA, DiffieHellman, DH}
			at statement: $r3 = staticinvoke <java.security.KeyPairGenerator: java.security.KeyPairGenerator getInstance(java.lang.String)>($r2)

		ConstraintError violating CrySL rule for java.security.KeyPairGenerator (on Object #e558c8ffcabf883e50df2d4467b7ac999fb18b9a16ef448439f884413fa22814)
			First parameter (with value "AES/CTR/NoPadding") should be any of {RSA, EC, DSA, DiffieHellman, DH}
			at statement: $r3 = staticinvoke <java.security.KeyPairGenerator: java.security.KeyPairGenerator getInstance(java.lang.String,java.security.Provider)>($r2, $r1)

		ConstraintError violating CrySL rule for java.security.KeyPairGenerator (on Object #e558c8ffcabf883e50df2d4467b7ac999fb18b9a16ef448439f884413fa22814)
			First parameter (with value "ECDH") should be any of {RSA, EC, DSA, DiffieHellman, DH}
			at statement: $r3 = staticinvoke <java.security.KeyPairGenerator: java.security.KeyPairGenerator getInstance(java.lang.String,java.security.Provider)>($r2, $r1)

		ConstraintError violating CrySL rule for java.security.KeyPairGenerator (on Object #5c75dede8fb030ad7e32324e351ff44e5338f5ea80b96eaf10c24d7680022c9f)
			First parameter (with value "AES/CTR/NoPadding") should be any of {RSA, EC, DSA, DiffieHellman, DH}
			at statement: $r3 = staticinvoke <java.security.KeyPairGenerator: java.security.KeyPairGenerator getInstance(java.lang.String)>($r2)

		ConstraintError violating CrySL rule for java.security.KeyPairGenerator (on Object #e558c8ffcabf883e50df2d4467b7ac999fb18b9a16ef448439f884413fa22814)
			First parameter (with value "AES/GCM/NoPadding") should be any of {RSA, EC, DSA, DiffieHellman, DH}
			at statement: $r3 = staticinvoke <java.security.KeyPairGenerator: java.security.KeyPairGenerator getInstance(java.lang.String,java.security.Provider)>($r2, $r1)


Findings in Java Class: com.google.android.gms.internal.ads.zzazn

	 in Method: byte[] zzk(byte[])
		IncompleteOperationError violating CrySL rule for javax.crypto.Cipher (on Object #23a99988e288520b97935df6535a146cdae11ffc6fdcb1f0bef657f4409e64b1)
			Operation on object of type javax.crypto.Cipher object not completed. Expected call to init
			at statement: virtualinvoke r0.<com.google.android.gms.internal.ads.zzazn: int zzaao()>()

		IncompleteOperationError violating CrySL rule for javax.crypto.Cipher (on Object #b6025744d2df517f67fa27275b0feb7d01f6887e3c4f80b3d8741fdcc6179fc7)
			Operation on object of type javax.crypto.Cipher object not completed. Expected call to init
			at statement: virtualinvoke r0.<com.google.android.gms.internal.ads.zzazn: int zzaao()>()

		IncompleteOperationError violating CrySL rule for javax.crypto.KeyAgreement (on Object #3ddc26250b645654fb9398ea8bb33dcb6c1d34b08067f85bcbf88665e86800bf)
			Operation on object of type javax.crypto.KeyAgreement object not completed. Expected call to init
			at statement: virtualinvoke r0.<com.google.android.gms.internal.ads.zzazn: int zzaao()>()

		IncompleteOperationError violating CrySL rule for javax.crypto.KeyAgreement (on Object #99fc601a8a59da240a4401bba1989daa6d108a7bcf93c4060f5ae35be77f45e0)
			Operation on object of type javax.crypto.KeyAgreement object not completed. Expected call to init
			at statement: virtualinvoke r0.<com.google.android.gms.internal.ads.zzazn: int zzaao()>()

		IncompleteOperationError violating CrySL rule for java.security.KeyPairGenerator (on Object #e558c8ffcabf883e50df2d4467b7ac999fb18b9a16ef448439f884413fa22814)
			Operation on object of type java.security.KeyPairGenerator object not completed. Expected call to initialize
			at statement: virtualinvoke r0.<com.google.android.gms.internal.ads.zzazn: int zzaao()>()

		IncompleteOperationError violating CrySL rule for java.security.KeyPairGenerator (on Object #5c75dede8fb030ad7e32324e351ff44e5338f5ea80b96eaf10c24d7680022c9f)
			Operation on object of type java.security.KeyPairGenerator object not completed. Expected call to initialize
			at statement: virtualinvoke r0.<com.google.android.gms.internal.ads.zzazn: int zzaao()>()

		IncompleteOperationError violating CrySL rule for java.security.Signature (on Object #7bc55ce195d22524cf8f5530f431f27cd0272bcab7d07224298701969a18d100)
			Operation on object of type java.security.Signature object not completed. Expected call to initSign, initVerify
			at statement: virtualinvoke r0.<com.google.android.gms.internal.ads.zzazn: int zzaao()>()

		IncompleteOperationError violating CrySL rule for java.security.Signature (on Object #fda5abce0e7458ca5308ebaec734d819c3387e655a8e0fd1a2f588367e14322d)
			Operation on object of type java.security.Signature object not completed. Expected call to initSign, initVerify
			at statement: virtualinvoke r0.<com.google.android.gms.internal.ads.zzazn: int zzaao()>()

		IncompleteOperationError violating CrySL rule for javax.crypto.Mac (on Object #8c580049db94889e6dc1635ff7246767fd57d44d1889a43dd00115a8c2cabe4d)
			Operation on object of type javax.crypto.Mac object not completed. Expected call to update, doFinal
			at statement: virtualinvoke r0.<com.google.android.gms.internal.ads.zzazn: int zzaao()>()

		IncompleteOperationError violating CrySL rule for java.security.MessageDigest (on Object #aaa18cd8e00995ae23872a00997eacf36fbdc0809e7c9a12cb497bfe5d1ceab0)
			Operation on object of type java.security.MessageDigest object not completed. Expected call to digest, update
			at statement: virtualinvoke r0.<com.google.android.gms.internal.ads.zzazn: int zzaao()>()

		IncompleteOperationError violating CrySL rule for java.security.MessageDigest (on Object #b663e8e6604e3724038f47ecd9e3461bfc4d085e8f51475e35d0df0838320694)
			Operation on object of type java.security.MessageDigest object not completed. Expected call to digest, update
			at statement: virtualinvoke r0.<com.google.android.gms.internal.ads.zzazn: int zzaao()>()


	 in Method: void zza(java.nio.ByteBuffer,byte[])
		IncompleteOperationError violating CrySL rule for java.security.KeyPairGenerator (on Object #e558c8ffcabf883e50df2d4467b7ac999fb18b9a16ef448439f884413fa22814)
			Operation on object of type java.security.KeyPairGenerator object not completed. Expected call to initialize
			at statement: $i1 = virtualinvoke r0.<com.google.android.gms.internal.ads.zzazn: int zzaao()>()

		IncompleteOperationError violating CrySL rule for java.security.KeyPairGenerator (on Object #5c75dede8fb030ad7e32324e351ff44e5338f5ea80b96eaf10c24d7680022c9f)
			Operation on object of type java.security.KeyPairGenerator object not completed. Expected call to initialize
			at statement: $i1 = virtualinvoke r0.<com.google.android.gms.internal.ads.zzazn: int zzaao()>()

		IncompleteOperationError violating CrySL rule for javax.crypto.Mac (on Object #8c580049db94889e6dc1635ff7246767fd57d44d1889a43dd00115a8c2cabe4d)
			Operation on object of type javax.crypto.Mac object not completed. Expected call to update, doFinal
			at statement: $i1 = virtualinvoke r0.<com.google.android.gms.internal.ads.zzazn: int zzaao()>()

		IncompleteOperationError violating CrySL rule for javax.crypto.Cipher (on Object #23a99988e288520b97935df6535a146cdae11ffc6fdcb1f0bef657f4409e64b1)
			Operation on object of type javax.crypto.Cipher object not completed. Expected call to init
			at statement: $i1 = virtualinvoke r0.<com.google.android.gms.internal.ads.zzazn: int zzaao()>()

		IncompleteOperationError violating CrySL rule for javax.crypto.Cipher (on Object #b6025744d2df517f67fa27275b0feb7d01f6887e3c4f80b3d8741fdcc6179fc7)
			Operation on object of type javax.crypto.Cipher object not completed. Expected call to init
			at statement: $i1 = virtualinvoke r0.<com.google.android.gms.internal.ads.zzazn: int zzaao()>()

		IncompleteOperationError violating CrySL rule for java.security.Signature (on Object #7bc55ce195d22524cf8f5530f431f27cd0272bcab7d07224298701969a18d100)
			Operation on object of type java.security.Signature object not completed. Expected call to initSign, initVerify
			at statement: $i1 = virtualinvoke r0.<com.google.android.gms.internal.ads.zzazn: int zzaao()>()

		IncompleteOperationError violating CrySL rule for java.security.Signature (on Object #fda5abce0e7458ca5308ebaec734d819c3387e655a8e0fd1a2f588367e14322d)
			Operation on object of type java.security.Signature object not completed. Expected call to initSign, initVerify
			at statement: $i1 = virtualinvoke r0.<com.google.android.gms.internal.ads.zzazn: int zzaao()>()

		IncompleteOperationError violating CrySL rule for java.security.MessageDigest (on Object #aaa18cd8e00995ae23872a00997eacf36fbdc0809e7c9a12cb497bfe5d1ceab0)
			Operation on object of type java.security.MessageDigest object not completed. Expected call to digest, update
			at statement: $i1 = virtualinvoke r0.<com.google.android.gms.internal.ads.zzazn: int zzaao()>()

		IncompleteOperationError violating CrySL rule for java.security.MessageDigest (on Object #b663e8e6604e3724038f47ecd9e3461bfc4d085e8f51475e35d0df0838320694)
			Operation on object of type java.security.MessageDigest object not completed. Expected call to digest, update
			at statement: $i1 = virtualinvoke r0.<com.google.android.gms.internal.ads.zzazn: int zzaao()>()

		IncompleteOperationError violating CrySL rule for javax.crypto.KeyAgreement (on Object #3ddc26250b645654fb9398ea8bb33dcb6c1d34b08067f85bcbf88665e86800bf)
			Operation on object of type javax.crypto.KeyAgreement object not completed. Expected call to init
			at statement: $i1 = virtualinvoke r0.<com.google.android.gms.internal.ads.zzazn: int zzaao()>()

		IncompleteOperationError violating CrySL rule for javax.crypto.KeyAgreement (on Object #99fc601a8a59da240a4401bba1989daa6d108a7bcf93c4060f5ae35be77f45e0)
			Operation on object of type javax.crypto.KeyAgreement object not completed. Expected call to init
			at statement: $i1 = virtualinvoke r0.<com.google.android.gms.internal.ads.zzazn: int zzaao()>()


Findings in Java Class: com.google.android.gms.internal.ads.zzayh

	 in Method: void <init>(byte[],int)
		IncompleteOperationError violating CrySL rule for javax.crypto.Cipher (on Object #23a99988e288520b97935df6535a146cdae11ffc6fdcb1f0bef657f4409e64b1)
			Operation on object of type javax.crypto.Cipher object not completed. Expected call to init
			at statement: $i1 = virtualinvoke $r5.<javax.crypto.Cipher: int getBlockSize()>()

		IncompleteOperationError violating CrySL rule for javax.crypto.Cipher (on Object #b6025744d2df517f67fa27275b0feb7d01f6887e3c4f80b3d8741fdcc6179fc7)
			Operation on object of type javax.crypto.Cipher object not completed. Expected call to init
			at statement: $i1 = virtualinvoke $r5.<javax.crypto.Cipher: int getBlockSize()>()

		IncompleteOperationError violating CrySL rule for java.security.MessageDigest (on Object #aaa18cd8e00995ae23872a00997eacf36fbdc0809e7c9a12cb497bfe5d1ceab0)
			Operation on object of type java.security.MessageDigest object not completed. Expected call to digest, update
			at statement: $i1 = virtualinvoke $r5.<javax.crypto.Cipher: int getBlockSize()>()

		IncompleteOperationError violating CrySL rule for java.security.MessageDigest (on Object #b663e8e6604e3724038f47ecd9e3461bfc4d085e8f51475e35d0df0838320694)
			Operation on object of type java.security.MessageDigest object not completed. Expected call to digest, update
			at statement: $i1 = virtualinvoke $r5.<javax.crypto.Cipher: int getBlockSize()>()

		IncompleteOperationError violating CrySL rule for javax.crypto.KeyAgreement (on Object #3ddc26250b645654fb9398ea8bb33dcb6c1d34b08067f85bcbf88665e86800bf)
			Operation on object of type javax.crypto.KeyAgreement object not completed. Expected call to init
			at statement: $i1 = virtualinvoke $r5.<javax.crypto.Cipher: int getBlockSize()>()

		IncompleteOperationError violating CrySL rule for javax.crypto.KeyAgreement (on Object #99fc601a8a59da240a4401bba1989daa6d108a7bcf93c4060f5ae35be77f45e0)
			Operation on object of type javax.crypto.KeyAgreement object not completed. Expected call to init
			at statement: $i1 = virtualinvoke $r5.<javax.crypto.Cipher: int getBlockSize()>()

		IncompleteOperationError violating CrySL rule for java.security.KeyPairGenerator (on Object #e558c8ffcabf883e50df2d4467b7ac999fb18b9a16ef448439f884413fa22814)
			Operation on object of type java.security.KeyPairGenerator object not completed. Expected call to initialize
			at statement: $i1 = virtualinvoke $r5.<javax.crypto.Cipher: int getBlockSize()>()

		IncompleteOperationError violating CrySL rule for java.security.KeyPairGenerator (on Object #5c75dede8fb030ad7e32324e351ff44e5338f5ea80b96eaf10c24d7680022c9f)
			Operation on object of type java.security.KeyPairGenerator object not completed. Expected call to initialize
			at statement: $i1 = virtualinvoke $r5.<javax.crypto.Cipher: int getBlockSize()>()

		IncompleteOperationError violating CrySL rule for java.security.Signature (on Object #7bc55ce195d22524cf8f5530f431f27cd0272bcab7d07224298701969a18d100)
			Operation on object of type java.security.Signature object not completed. Expected call to initSign, initVerify
			at statement: $i1 = virtualinvoke $r5.<javax.crypto.Cipher: int getBlockSize()>()

		IncompleteOperationError violating CrySL rule for java.security.Signature (on Object #fda5abce0e7458ca5308ebaec734d819c3387e655a8e0fd1a2f588367e14322d)
			Operation on object of type java.security.Signature object not completed. Expected call to initSign, initVerify
			at statement: $i1 = virtualinvoke $r5.<javax.crypto.Cipher: int getBlockSize()>()

		IncompleteOperationError violating CrySL rule for javax.crypto.Mac (on Object #8c580049db94889e6dc1635ff7246767fd57d44d1889a43dd00115a8c2cabe4d)
			Operation on object of type javax.crypto.Mac object not completed. Expected call to init
			at statement: $i1 = virtualinvoke $r5.<javax.crypto.Cipher: int getBlockSize()>()

		RequiredPredicateError violating CrySL rule for javax.crypto.spec.SecretKeySpec
			First parameter was not properly generated as preparedKeyMaterial
			at statement: specialinvoke $r2.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r1, varReplacer158955)


	 in Method: byte[] zzk(byte[])
		IncompleteOperationError violating CrySL rule for javax.crypto.Mac (on Object #8c580049db94889e6dc1635ff7246767fd57d44d1889a43dd00115a8c2cabe4d)
			Operation on object of type javax.crypto.Mac object not completed. Expected call to init
			at statement: $i0 = virtualinvoke $r6.<javax.crypto.Cipher: int doFinal(byte[],int,int,byte[],int)>($r1, varReplacer149617, $i1, $r2, $i0)

		RequiredPredicateError violating CrySL rule for javax.crypto.Cipher
			Second parameter was not properly generated as generatedKey
			at statement: virtualinvoke $r6.<javax.crypto.Cipher: void init(int,java.security.Key,java.security.spec.AlgorithmParameterSpec)>(varReplacer149608, $r9, $r8)

		IncompleteOperationError violating CrySL rule for java.security.KeyPairGenerator (on Object #e558c8ffcabf883e50df2d4467b7ac999fb18b9a16ef448439f884413fa22814)
			Operation on object of type java.security.KeyPairGenerator object not completed. Expected call to initialize
			at statement: $i0 = virtualinvoke $r6.<javax.crypto.Cipher: int doFinal(byte[],int,int,byte[],int)>($r1, varReplacer149617, $i1, $r2, $i0)

		IncompleteOperationError violating CrySL rule for java.security.KeyPairGenerator (on Object #5c75dede8fb030ad7e32324e351ff44e5338f5ea80b96eaf10c24d7680022c9f)
			Operation on object of type java.security.KeyPairGenerator object not completed. Expected call to initialize
			at statement: $i0 = virtualinvoke $r6.<javax.crypto.Cipher: int doFinal(byte[],int,int,byte[],int)>($r1, varReplacer149617, $i1, $r2, $i0)

		IncompleteOperationError violating CrySL rule for java.security.Signature (on Object #7bc55ce195d22524cf8f5530f431f27cd0272bcab7d07224298701969a18d100)
			Operation on object of type java.security.Signature object not completed. Expected call to initSign, initVerify
			at statement: $i0 = virtualinvoke $r6.<javax.crypto.Cipher: int doFinal(byte[],int,int,byte[],int)>($r1, varReplacer149617, $i1, $r2, $i0)

		IncompleteOperationError violating CrySL rule for java.security.Signature (on Object #fda5abce0e7458ca5308ebaec734d819c3387e655a8e0fd1a2f588367e14322d)
			Operation on object of type java.security.Signature object not completed. Expected call to initSign, initVerify
			at statement: $i0 = virtualinvoke $r6.<javax.crypto.Cipher: int doFinal(byte[],int,int,byte[],int)>($r1, varReplacer149617, $i1, $r2, $i0)

		RequiredPredicateError violating CrySL rule for javax.crypto.spec.IvParameterSpec
			First parameter was not properly generated as randomized
			at statement: specialinvoke $r8.<javax.crypto.spec.IvParameterSpec: void <init>(byte[])>($r7)

		IncompleteOperationError violating CrySL rule for javax.crypto.KeyAgreement (on Object #3ddc26250b645654fb9398ea8bb33dcb6c1d34b08067f85bcbf88665e86800bf)
			Operation on object of type javax.crypto.KeyAgreement object not completed. Expected call to init
			at statement: $i0 = virtualinvoke $r6.<javax.crypto.Cipher: int doFinal(byte[],int,int,byte[],int)>($r1, varReplacer149617, $i1, $r2, $i0)

		IncompleteOperationError violating CrySL rule for javax.crypto.KeyAgreement (on Object #99fc601a8a59da240a4401bba1989daa6d108a7bcf93c4060f5ae35be77f45e0)
			Operation on object of type javax.crypto.KeyAgreement object not completed. Expected call to init
			at statement: $i0 = virtualinvoke $r6.<javax.crypto.Cipher: int doFinal(byte[],int,int,byte[],int)>($r1, varReplacer149617, $i1, $r2, $i0)

		IncompleteOperationError violating CrySL rule for java.security.MessageDigest (on Object #aaa18cd8e00995ae23872a00997eacf36fbdc0809e7c9a12cb497bfe5d1ceab0)
			Operation on object of type java.security.MessageDigest object not completed. Expected call to digest, update
			at statement: $i0 = virtualinvoke $r6.<javax.crypto.Cipher: int doFinal(byte[],int,int,byte[],int)>($r1, varReplacer149617, $i1, $r2, $i0)

		IncompleteOperationError violating CrySL rule for java.security.MessageDigest (on Object #b663e8e6604e3724038f47ecd9e3461bfc4d085e8f51475e35d0df0838320694)
			Operation on object of type java.security.MessageDigest object not completed. Expected call to digest, update
			at statement: $i0 = virtualinvoke $r6.<javax.crypto.Cipher: int doFinal(byte[],int,int,byte[],int)>($r1, varReplacer149617, $i1, $r2, $i0)


Findings in Java Class: com.google.android.gms.internal.ads.zzayt

	 in Method: java.security.KeyPair zza(java.security.spec.ECParameterSpec)
		IncompleteOperationError violating CrySL rule for java.security.KeyPairGenerator (on Object #e558c8ffcabf883e50df2d4467b7ac999fb18b9a16ef448439f884413fa22814)
			Operation on object of type java.security.KeyPairGenerator object not completed. Expected call to java.security.KeyPairGenerator: java.security.KeyPair generateKeyPair(), genKeyPair, java.security.KeyPairGeneratorSpi: java.security.KeyPair generateKeyPair()
			at statement: $r4 = virtualinvoke $r3.<java.security.KeyPairGenerator: java.security.KeyPair generateKeyPair()>()

		IncompleteOperationError violating CrySL rule for java.security.KeyPairGenerator (on Object #5c75dede8fb030ad7e32324e351ff44e5338f5ea80b96eaf10c24d7680022c9f)
			Operation on object of type java.security.KeyPairGenerator object not completed. Expected call to java.security.KeyPairGenerator: java.security.KeyPair generateKeyPair(), genKeyPair, java.security.KeyPairGeneratorSpi: java.security.KeyPair generateKeyPair()
			at statement: $r4 = virtualinvoke $r3.<java.security.KeyPairGenerator: java.security.KeyPair generateKeyPair()>()

		IncompleteOperationError violating CrySL rule for javax.crypto.KeyAgreement (on Object #3ddc26250b645654fb9398ea8bb33dcb6c1d34b08067f85bcbf88665e86800bf)
			Operation on object of type javax.crypto.KeyAgreement object not completed. Expected call to init
			at statement: $r4 = virtualinvoke $r3.<java.security.KeyPairGenerator: java.security.KeyPair generateKeyPair()>()

		IncompleteOperationError violating CrySL rule for javax.crypto.KeyAgreement (on Object #99fc601a8a59da240a4401bba1989daa6d108a7bcf93c4060f5ae35be77f45e0)
			Operation on object of type javax.crypto.KeyAgreement object not completed. Expected call to init
			at statement: $r4 = virtualinvoke $r3.<java.security.KeyPairGenerator: java.security.KeyPair generateKeyPair()>()

		IncompleteOperationError violating CrySL rule for java.security.Signature (on Object #7bc55ce195d22524cf8f5530f431f27cd0272bcab7d07224298701969a18d100)
			Operation on object of type java.security.Signature object not completed. Expected call to initSign, initVerify
			at statement: $r4 = virtualinvoke $r3.<java.security.KeyPairGenerator: java.security.KeyPair generateKeyPair()>()

		IncompleteOperationError violating CrySL rule for java.security.Signature (on Object #fda5abce0e7458ca5308ebaec734d819c3387e655a8e0fd1a2f588367e14322d)
			Operation on object of type java.security.Signature object not completed. Expected call to initSign, initVerify
			at statement: $r4 = virtualinvoke $r3.<java.security.KeyPairGenerator: java.security.KeyPair generateKeyPair()>()

		IncompleteOperationError violating CrySL rule for javax.crypto.Mac (on Object #8c580049db94889e6dc1635ff7246767fd57d44d1889a43dd00115a8c2cabe4d)
			Operation on object of type javax.crypto.Mac object not completed. Expected call to init
			at statement: $r4 = virtualinvoke $r3.<java.security.KeyPairGenerator: java.security.KeyPair generateKeyPair()>()

		IncompleteOperationError violating CrySL rule for javax.crypto.Cipher (on Object #23a99988e288520b97935df6535a146cdae11ffc6fdcb1f0bef657f4409e64b1)
			Operation on object of type javax.crypto.Cipher object not completed. Expected call to init
			at statement: $r4 = virtualinvoke $r3.<java.security.KeyPairGenerator: java.security.KeyPair generateKeyPair()>()

		IncompleteOperationError violating CrySL rule for javax.crypto.Cipher (on Object #b6025744d2df517f67fa27275b0feb7d01f6887e3c4f80b3d8741fdcc6179fc7)
			Operation on object of type javax.crypto.Cipher object not completed. Expected call to init
			at statement: $r4 = virtualinvoke $r3.<java.security.KeyPairGenerator: java.security.KeyPair generateKeyPair()>()

		IncompleteOperationError violating CrySL rule for java.security.MessageDigest (on Object #aaa18cd8e00995ae23872a00997eacf36fbdc0809e7c9a12cb497bfe5d1ceab0)
			Operation on object of type java.security.MessageDigest object not completed. Expected call to digest, update
			at statement: $r4 = virtualinvoke $r3.<java.security.KeyPairGenerator: java.security.KeyPair generateKeyPair()>()

		IncompleteOperationError violating CrySL rule for java.security.MessageDigest (on Object #b663e8e6604e3724038f47ecd9e3461bfc4d085e8f51475e35d0df0838320694)
			Operation on object of type java.security.MessageDigest object not completed. Expected call to digest, update
			at statement: $r4 = virtualinvoke $r3.<java.security.KeyPairGenerator: java.security.KeyPair generateKeyPair()>()


	 in Method: byte[] zza(java.security.interfaces.ECPrivateKey,java.security.spec.ECPoint)
		IncompleteOperationError violating CrySL rule for java.security.KeyPairGenerator (on Object #e558c8ffcabf883e50df2d4467b7ac999fb18b9a16ef448439f884413fa22814)
			Operation on object of type java.security.KeyPairGenerator object not completed. Expected call to initialize
			at statement: $r10 = virtualinvoke $r9.<javax.crypto.KeyAgreement: byte[] generateSecret()>()

		IncompleteOperationError violating CrySL rule for java.security.KeyPairGenerator (on Object #5c75dede8fb030ad7e32324e351ff44e5338f5ea80b96eaf10c24d7680022c9f)
			Operation on object of type java.security.KeyPairGenerator object not completed. Expected call to initialize
			at statement: $r10 = virtualinvoke $r9.<javax.crypto.KeyAgreement: byte[] generateSecret()>()

		IncompleteOperationError violating CrySL rule for java.security.Signature (on Object #7bc55ce195d22524cf8f5530f431f27cd0272bcab7d07224298701969a18d100)
			Operation on object of type java.security.Signature object not completed. Expected call to initSign, initVerify
			at statement: $r10 = virtualinvoke $r9.<javax.crypto.KeyAgreement: byte[] generateSecret()>()

		IncompleteOperationError violating CrySL rule for java.security.Signature (on Object #fda5abce0e7458ca5308ebaec734d819c3387e655a8e0fd1a2f588367e14322d)
			Operation on object of type java.security.Signature object not completed. Expected call to initSign, initVerify
			at statement: $r10 = virtualinvoke $r9.<javax.crypto.KeyAgreement: byte[] generateSecret()>()

		IncompleteOperationError violating CrySL rule for javax.crypto.Mac (on Object #8c580049db94889e6dc1635ff7246767fd57d44d1889a43dd00115a8c2cabe4d)
			Operation on object of type javax.crypto.Mac object not completed. Expected call to init
			at statement: $r10 = virtualinvoke $r9.<javax.crypto.KeyAgreement: byte[] generateSecret()>()

		IncompleteOperationError violating CrySL rule for java.security.MessageDigest (on Object #aaa18cd8e00995ae23872a00997eacf36fbdc0809e7c9a12cb497bfe5d1ceab0)
			Operation on object of type java.security.MessageDigest object not completed. Expected call to digest, update
			at statement: $r10 = virtualinvoke $r9.<javax.crypto.KeyAgreement: byte[] generateSecret()>()

		IncompleteOperationError violating CrySL rule for java.security.MessageDigest (on Object #b663e8e6604e3724038f47ecd9e3461bfc4d085e8f51475e35d0df0838320694)
			Operation on object of type java.security.MessageDigest object not completed. Expected call to digest, update
			at statement: $r10 = virtualinvoke $r9.<javax.crypto.KeyAgreement: byte[] generateSecret()>()

		RequiredPredicateError violating CrySL rule for java.security.KeyFactory
			First parameter was not properly generated as speccedKey
			at statement: $r6 = virtualinvoke $r5.<java.security.KeyFactory: java.security.PublicKey generatePublic(java.security.spec.KeySpec)>($r4)

		IncompleteOperationError violating CrySL rule for javax.crypto.Cipher (on Object #23a99988e288520b97935df6535a146cdae11ffc6fdcb1f0bef657f4409e64b1)
			Operation on object of type javax.crypto.Cipher object not completed. Expected call to init
			at statement: $r10 = virtualinvoke $r9.<javax.crypto.KeyAgreement: byte[] generateSecret()>()

		IncompleteOperationError violating CrySL rule for javax.crypto.Cipher (on Object #b6025744d2df517f67fa27275b0feb7d01f6887e3c4f80b3d8741fdcc6179fc7)
			Operation on object of type javax.crypto.Cipher object not completed. Expected call to init
			at statement: $r10 = virtualinvoke $r9.<javax.crypto.KeyAgreement: byte[] generateSecret()>()


	 in Method: java.security.interfaces.ECPublicKey zza(com.google.android.gms.internal.ads.zzayv,byte[],byte[])
		IncompleteOperationError violating CrySL rule for javax.crypto.Mac (on Object #8c580049db94889e6dc1635ff7246767fd57d44d1889a43dd00115a8c2cabe4d)
			Operation on object of type javax.crypto.Mac object not completed. Expected call to init
			at statement: $r12 = virtualinvoke $r11.<java.security.KeyFactory: java.security.PublicKey generatePublic(java.security.spec.KeySpec)>($r8)

		IncompleteOperationError violating CrySL rule for java.security.KeyPairGenerator (on Object #e558c8ffcabf883e50df2d4467b7ac999fb18b9a16ef448439f884413fa22814)
			Operation on object of type java.security.KeyPairGenerator object not completed. Expected call to initialize
			at statement: $r12 = virtualinvoke $r11.<java.security.KeyFactory: java.security.PublicKey generatePublic(java.security.spec.KeySpec)>($r8)

		IncompleteOperationError violating CrySL rule for java.security.KeyPairGenerator (on Object #5c75dede8fb030ad7e32324e351ff44e5338f5ea80b96eaf10c24d7680022c9f)
			Operation on object of type java.security.KeyPairGenerator object not completed. Expected call to initialize
			at statement: $r12 = virtualinvoke $r11.<java.security.KeyFactory: java.security.PublicKey generatePublic(java.security.spec.KeySpec)>($r8)

		IncompleteOperationError violating CrySL rule for java.security.Signature (on Object #7bc55ce195d22524cf8f5530f431f27cd0272bcab7d07224298701969a18d100)
			Operation on object of type java.security.Signature object not completed. Expected call to initSign, initVerify
			at statement: $r12 = virtualinvoke $r11.<java.security.KeyFactory: java.security.PublicKey generatePublic(java.security.spec.KeySpec)>($r8)

		IncompleteOperationError violating CrySL rule for java.security.Signature (on Object #fda5abce0e7458ca5308ebaec734d819c3387e655a8e0fd1a2f588367e14322d)
			Operation on object of type java.security.Signature object not completed. Expected call to initSign, initVerify
			at statement: $r12 = virtualinvoke $r11.<java.security.KeyFactory: java.security.PublicKey generatePublic(java.security.spec.KeySpec)>($r8)

		IncompleteOperationError violating CrySL rule for javax.crypto.KeyAgreement (on Object #3ddc26250b645654fb9398ea8bb33dcb6c1d34b08067f85bcbf88665e86800bf)
			Operation on object of type javax.crypto.KeyAgreement object not completed. Expected call to init
			at statement: $r12 = virtualinvoke $r11.<java.security.KeyFactory: java.security.PublicKey generatePublic(java.security.spec.KeySpec)>($r8)

		IncompleteOperationError violating CrySL rule for javax.crypto.KeyAgreement (on Object #99fc601a8a59da240a4401bba1989daa6d108a7bcf93c4060f5ae35be77f45e0)
			Operation on object of type javax.crypto.KeyAgreement object not completed. Expected call to init
			at statement: $r12 = virtualinvoke $r11.<java.security.KeyFactory: java.security.PublicKey generatePublic(java.security.spec.KeySpec)>($r8)

		IncompleteOperationError violating CrySL rule for java.security.MessageDigest (on Object #aaa18cd8e00995ae23872a00997eacf36fbdc0809e7c9a12cb497bfe5d1ceab0)
			Operation on object of type java.security.MessageDigest object not completed. Expected call to digest, update
			at statement: $r12 = virtualinvoke $r11.<java.security.KeyFactory: java.security.PublicKey generatePublic(java.security.spec.KeySpec)>($r8)

		IncompleteOperationError violating CrySL rule for java.security.MessageDigest (on Object #b663e8e6604e3724038f47ecd9e3461bfc4d085e8f51475e35d0df0838320694)
			Operation on object of type java.security.MessageDigest object not completed. Expected call to digest, update
			at statement: $r12 = virtualinvoke $r11.<java.security.KeyFactory: java.security.PublicKey generatePublic(java.security.spec.KeySpec)>($r8)

		IncompleteOperationError violating CrySL rule for javax.crypto.Cipher (on Object #23a99988e288520b97935df6535a146cdae11ffc6fdcb1f0bef657f4409e64b1)
			Operation on object of type javax.crypto.Cipher object not completed. Expected call to init
			at statement: $r12 = virtualinvoke $r11.<java.security.KeyFactory: java.security.PublicKey generatePublic(java.security.spec.KeySpec)>($r8)

		IncompleteOperationError violating CrySL rule for javax.crypto.Cipher (on Object #b6025744d2df517f67fa27275b0feb7d01f6887e3c4f80b3d8741fdcc6179fc7)
			Operation on object of type javax.crypto.Cipher object not completed. Expected call to init
			at statement: $r12 = virtualinvoke $r11.<java.security.KeyFactory: java.security.PublicKey generatePublic(java.security.spec.KeySpec)>($r8)


Findings in Java Class: com.google.android.gms.internal.ads.zzava

	 in Method: com.google.android.gms.internal.ads.zzaue zzf(com.google.android.gms.internal.ads.zzbah)
		IncompleteOperationError violating CrySL rule for javax.crypto.Mac (on Object #8c580049db94889e6dc1635ff7246767fd57d44d1889a43dd00115a8c2cabe4d)
			Operation on object of type javax.crypto.Mac object not completed. Expected call to init
			at statement: $r16 = virtualinvoke $r15.<java.security.KeyFactory: java.security.PrivateKey generatePrivate(java.security.spec.KeySpec)>($r12)

		IncompleteOperationError violating CrySL rule for java.security.KeyPairGenerator (on Object #e558c8ffcabf883e50df2d4467b7ac999fb18b9a16ef448439f884413fa22814)
			Operation on object of type java.security.KeyPairGenerator object not completed. Expected call to initialize
			at statement: $r16 = virtualinvoke $r15.<java.security.KeyFactory: java.security.PrivateKey generatePrivate(java.security.spec.KeySpec)>($r12)

		IncompleteOperationError violating CrySL rule for java.security.KeyPairGenerator (on Object #5c75dede8fb030ad7e32324e351ff44e5338f5ea80b96eaf10c24d7680022c9f)
			Operation on object of type java.security.KeyPairGenerator object not completed. Expected call to initialize
			at statement: $r16 = virtualinvoke $r15.<java.security.KeyFactory: java.security.PrivateKey generatePrivate(java.security.spec.KeySpec)>($r12)

		IncompleteOperationError violating CrySL rule for java.security.MessageDigest (on Object #aaa18cd8e00995ae23872a00997eacf36fbdc0809e7c9a12cb497bfe5d1ceab0)
			Operation on object of type java.security.MessageDigest object not completed. Expected call to digest, update
			at statement: $r16 = virtualinvoke $r15.<java.security.KeyFactory: java.security.PrivateKey generatePrivate(java.security.spec.KeySpec)>($r12)

		IncompleteOperationError violating CrySL rule for java.security.MessageDigest (on Object #b663e8e6604e3724038f47ecd9e3461bfc4d085e8f51475e35d0df0838320694)
			Operation on object of type java.security.MessageDigest object not completed. Expected call to digest, update
			at statement: $r16 = virtualinvoke $r15.<java.security.KeyFactory: java.security.PrivateKey generatePrivate(java.security.spec.KeySpec)>($r12)

		IncompleteOperationError violating CrySL rule for javax.crypto.Cipher (on Object #23a99988e288520b97935df6535a146cdae11ffc6fdcb1f0bef657f4409e64b1)
			Operation on object of type javax.crypto.Cipher object not completed. Expected call to init
			at statement: $r16 = virtualinvoke $r15.<java.security.KeyFactory: java.security.PrivateKey generatePrivate(java.security.spec.KeySpec)>($r12)

		IncompleteOperationError violating CrySL rule for javax.crypto.Cipher (on Object #b6025744d2df517f67fa27275b0feb7d01f6887e3c4f80b3d8741fdcc6179fc7)
			Operation on object of type javax.crypto.Cipher object not completed. Expected call to init
			at statement: $r16 = virtualinvoke $r15.<java.security.KeyFactory: java.security.PrivateKey generatePrivate(java.security.spec.KeySpec)>($r12)

		IncompleteOperationError violating CrySL rule for java.security.Signature (on Object #7bc55ce195d22524cf8f5530f431f27cd0272bcab7d07224298701969a18d100)
			Operation on object of type java.security.Signature object not completed. Expected call to initSign, initVerify
			at statement: $r16 = virtualinvoke $r15.<java.security.KeyFactory: java.security.PrivateKey generatePrivate(java.security.spec.KeySpec)>($r12)

		IncompleteOperationError violating CrySL rule for java.security.Signature (on Object #fda5abce0e7458ca5308ebaec734d819c3387e655a8e0fd1a2f588367e14322d)
			Operation on object of type java.security.Signature object not completed. Expected call to initSign, initVerify
			at statement: $r16 = virtualinvoke $r15.<java.security.KeyFactory: java.security.PrivateKey generatePrivate(java.security.spec.KeySpec)>($r12)

		IncompleteOperationError violating CrySL rule for javax.crypto.KeyAgreement (on Object #3ddc26250b645654fb9398ea8bb33dcb6c1d34b08067f85bcbf88665e86800bf)
			Operation on object of type javax.crypto.KeyAgreement object not completed. Expected call to init
			at statement: $r16 = virtualinvoke $r15.<java.security.KeyFactory: java.security.PrivateKey generatePrivate(java.security.spec.KeySpec)>($r12)

		IncompleteOperationError violating CrySL rule for javax.crypto.KeyAgreement (on Object #99fc601a8a59da240a4401bba1989daa6d108a7bcf93c4060f5ae35be77f45e0)
			Operation on object of type javax.crypto.KeyAgreement object not completed. Expected call to init
			at statement: $r16 = virtualinvoke $r15.<java.security.KeyFactory: java.security.PrivateKey generatePrivate(java.security.spec.KeySpec)>($r12)


	 in Method: java.lang.Object zza(com.google.android.gms.internal.ads.zzbcu)
		IncompleteOperationError violating CrySL rule for java.security.Signature (on Object #7bc55ce195d22524cf8f5530f431f27cd0272bcab7d07224298701969a18d100)
			Operation on object of type java.security.Signature object not completed. Expected call to initSign, initVerify
			at statement: $r17 = virtualinvoke $r16.<java.security.KeyFactory: java.security.PrivateKey generatePrivate(java.security.spec.KeySpec)>($r13)

		IncompleteOperationError violating CrySL rule for java.security.Signature (on Object #fda5abce0e7458ca5308ebaec734d819c3387e655a8e0fd1a2f588367e14322d)
			Operation on object of type java.security.Signature object not completed. Expected call to initSign, initVerify
			at statement: $r17 = virtualinvoke $r16.<java.security.KeyFactory: java.security.PrivateKey generatePrivate(java.security.spec.KeySpec)>($r13)

		IncompleteOperationError violating CrySL rule for java.security.MessageDigest (on Object #aaa18cd8e00995ae23872a00997eacf36fbdc0809e7c9a12cb497bfe5d1ceab0)
			Operation on object of type java.security.MessageDigest object not completed. Expected call to digest, update
			at statement: $r17 = virtualinvoke $r16.<java.security.KeyFactory: java.security.PrivateKey generatePrivate(java.security.spec.KeySpec)>($r13)

		IncompleteOperationError violating CrySL rule for java.security.MessageDigest (on Object #b663e8e6604e3724038f47ecd9e3461bfc4d085e8f51475e35d0df0838320694)
			Operation on object of type java.security.MessageDigest object not completed. Expected call to digest, update
			at statement: $r17 = virtualinvoke $r16.<java.security.KeyFactory: java.security.PrivateKey generatePrivate(java.security.spec.KeySpec)>($r13)

		IncompleteOperationError violating CrySL rule for javax.crypto.KeyAgreement (on Object #3ddc26250b645654fb9398ea8bb33dcb6c1d34b08067f85bcbf88665e86800bf)
			Operation on object of type javax.crypto.KeyAgreement object not completed. Expected call to init
			at statement: $r17 = virtualinvoke $r16.<java.security.KeyFactory: java.security.PrivateKey generatePrivate(java.security.spec.KeySpec)>($r13)

		IncompleteOperationError violating CrySL rule for javax.crypto.KeyAgreement (on Object #99fc601a8a59da240a4401bba1989daa6d108a7bcf93c4060f5ae35be77f45e0)
			Operation on object of type javax.crypto.KeyAgreement object not completed. Expected call to init
			at statement: $r17 = virtualinvoke $r16.<java.security.KeyFactory: java.security.PrivateKey generatePrivate(java.security.spec.KeySpec)>($r13)

		RequiredPredicateError violating CrySL rule for java.security.KeyFactory
			First parameter was not properly generated as speccedKey
			at statement: $r17 = virtualinvoke $r16.<java.security.KeyFactory: java.security.PrivateKey generatePrivate(java.security.spec.KeySpec)>($r13)

		IncompleteOperationError violating CrySL rule for java.security.KeyPairGenerator (on Object #e558c8ffcabf883e50df2d4467b7ac999fb18b9a16ef448439f884413fa22814)
			Operation on object of type java.security.KeyPairGenerator object not completed. Expected call to initialize
			at statement: $r17 = virtualinvoke $r16.<java.security.KeyFactory: java.security.PrivateKey generatePrivate(java.security.spec.KeySpec)>($r13)

		IncompleteOperationError violating CrySL rule for java.security.KeyPairGenerator (on Object #5c75dede8fb030ad7e32324e351ff44e5338f5ea80b96eaf10c24d7680022c9f)
			Operation on object of type java.security.KeyPairGenerator object not completed. Expected call to initialize
			at statement: $r17 = virtualinvoke $r16.<java.security.KeyFactory: java.security.PrivateKey generatePrivate(java.security.spec.KeySpec)>($r13)

		IncompleteOperationError violating CrySL rule for javax.crypto.Mac (on Object #8c580049db94889e6dc1635ff7246767fd57d44d1889a43dd00115a8c2cabe4d)
			Operation on object of type javax.crypto.Mac object not completed. Expected call to init
			at statement: $r17 = virtualinvoke $r16.<java.security.KeyFactory: java.security.PrivateKey generatePrivate(java.security.spec.KeySpec)>($r13)

		IncompleteOperationError violating CrySL rule for javax.crypto.Cipher (on Object #23a99988e288520b97935df6535a146cdae11ffc6fdcb1f0bef657f4409e64b1)
			Operation on object of type javax.crypto.Cipher object not completed. Expected call to init
			at statement: $r17 = virtualinvoke $r16.<java.security.KeyFactory: java.security.PrivateKey generatePrivate(java.security.spec.KeySpec)>($r13)

		IncompleteOperationError violating CrySL rule for javax.crypto.Cipher (on Object #b6025744d2df517f67fa27275b0feb7d01f6887e3c4f80b3d8741fdcc6179fc7)
			Operation on object of type javax.crypto.Cipher object not completed. Expected call to init
			at statement: $r17 = virtualinvoke $r16.<java.security.KeyFactory: java.security.PrivateKey generatePrivate(java.security.spec.KeySpec)>($r13)


Findings in Java Class: com.google.android.gms.internal.ads.zzayp

	 in Method: byte[] zzc(byte[],byte[])
		IncompleteOperationError violating CrySL rule for java.security.KeyPairGenerator (on Object #e558c8ffcabf883e50df2d4467b7ac999fb18b9a16ef448439f884413fa22814)
			Operation on object of type java.security.KeyPairGenerator object not completed. Expected call to initialize
			at statement: $r3 = interfaceinvoke $r9.<com.google.android.gms.internal.ads.zzatz: byte[] zzc(byte[],byte[])>($r3, $r4)

		IncompleteOperationError violating CrySL rule for java.security.KeyPairGenerator (on Object #5c75dede8fb030ad7e32324e351ff44e5338f5ea80b96eaf10c24d7680022c9f)
			Operation on object of type java.security.KeyPairGenerator object not completed. Expected call to initialize
			at statement: $r3 = interfaceinvoke $r9.<com.google.android.gms.internal.ads.zzatz: byte[] zzc(byte[],byte[])>($r3, $r4)

		IncompleteOperationError violating CrySL rule for java.security.Signature (on Object #7bc55ce195d22524cf8f5530f431f27cd0272bcab7d07224298701969a18d100)
			Operation on object of type java.security.Signature object not completed. Expected call to initSign, initVerify
			at statement: $r3 = interfaceinvoke $r9.<com.google.android.gms.internal.ads.zzatz: byte[] zzc(byte[],byte[])>($r3, $r4)

		IncompleteOperationError violating CrySL rule for java.security.Signature (on Object #fda5abce0e7458ca5308ebaec734d819c3387e655a8e0fd1a2f588367e14322d)
			Operation on object of type java.security.Signature object not completed. Expected call to initSign, initVerify
			at statement: $r3 = interfaceinvoke $r9.<com.google.android.gms.internal.ads.zzatz: byte[] zzc(byte[],byte[])>($r3, $r4)

		IncompleteOperationError violating CrySL rule for javax.crypto.KeyAgreement (on Object #3ddc26250b645654fb9398ea8bb33dcb6c1d34b08067f85bcbf88665e86800bf)
			Operation on object of type javax.crypto.KeyAgreement object not completed. Expected call to init
			at statement: $r3 = interfaceinvoke $r9.<com.google.android.gms.internal.ads.zzatz: byte[] zzc(byte[],byte[])>($r3, $r4)

		IncompleteOperationError violating CrySL rule for javax.crypto.KeyAgreement (on Object #99fc601a8a59da240a4401bba1989daa6d108a7bcf93c4060f5ae35be77f45e0)
			Operation on object of type javax.crypto.KeyAgreement object not completed. Expected call to init
			at statement: $r3 = interfaceinvoke $r9.<com.google.android.gms.internal.ads.zzatz: byte[] zzc(byte[],byte[])>($r3, $r4)

		IncompleteOperationError violating CrySL rule for javax.crypto.Cipher (on Object #23a99988e288520b97935df6535a146cdae11ffc6fdcb1f0bef657f4409e64b1)
			Operation on object of type javax.crypto.Cipher object not completed. Expected call to init
			at statement: $r3 = interfaceinvoke $r9.<com.google.android.gms.internal.ads.zzatz: byte[] zzc(byte[],byte[])>($r3, $r4)

		IncompleteOperationError violating CrySL rule for javax.crypto.Cipher (on Object #b6025744d2df517f67fa27275b0feb7d01f6887e3c4f80b3d8741fdcc6179fc7)
			Operation on object of type javax.crypto.Cipher object not completed. Expected call to init
			at statement: $r3 = interfaceinvoke $r9.<com.google.android.gms.internal.ads.zzatz: byte[] zzc(byte[],byte[])>($r3, $r4)

		IncompleteOperationError violating CrySL rule for javax.crypto.Mac (on Object #8c580049db94889e6dc1635ff7246767fd57d44d1889a43dd00115a8c2cabe4d)
			Operation on object of type javax.crypto.Mac object not completed. Expected call to init, update, doFinal
			at statement: $r3 = interfaceinvoke $r9.<com.google.android.gms.internal.ads.zzatz: byte[] zzc(byte[],byte[])>($r3, $r4)

		IncompleteOperationError violating CrySL rule for java.security.MessageDigest (on Object #aaa18cd8e00995ae23872a00997eacf36fbdc0809e7c9a12cb497bfe5d1ceab0)
			Operation on object of type java.security.MessageDigest object not completed. Expected call to digest, update
			at statement: $r3 = interfaceinvoke $r9.<com.google.android.gms.internal.ads.zzatz: byte[] zzc(byte[],byte[])>($r3, $r4)

		IncompleteOperationError violating CrySL rule for java.security.MessageDigest (on Object #b663e8e6604e3724038f47ecd9e3461bfc4d085e8f51475e35d0df0838320694)
			Operation on object of type java.security.MessageDigest object not completed. Expected call to digest, update
			at statement: $r3 = interfaceinvoke $r9.<com.google.android.gms.internal.ads.zzatz: byte[] zzc(byte[],byte[])>($r3, $r4)


Findings in Java Class: com.google.android.gms.internal.ads.zzayr

	 in Method: com.google.android.gms.internal.ads.zzays zza(java.lang.String,byte[],byte[],int,com.google.android.gms.internal.ads.zzayw)
		RequiredPredicateError violating CrySL rule for javax.crypto.Mac
			First parameter was not properly generated as generatedKey
			at statement: virtualinvoke $r30.<javax.crypto.Mac: void init(java.security.Key)>($r31)

		IncompleteOperationError violating CrySL rule for javax.crypto.KeyAgreement (on Object #3ddc26250b645654fb9398ea8bb33dcb6c1d34b08067f85bcbf88665e86800bf)
			Operation on object of type javax.crypto.KeyAgreement object not completed. Expected call to init
			at statement: $r25 = virtualinvoke $r30.<javax.crypto.Mac: byte[] doFinal()>()

		IncompleteOperationError violating CrySL rule for javax.crypto.KeyAgreement (on Object #99fc601a8a59da240a4401bba1989daa6d108a7bcf93c4060f5ae35be77f45e0)
			Operation on object of type javax.crypto.KeyAgreement object not completed. Expected call to init
			at statement: $r25 = virtualinvoke $r30.<javax.crypto.Mac: byte[] doFinal()>()

		IncompleteOperationError violating CrySL rule for javax.crypto.Cipher (on Object #23a99988e288520b97935df6535a146cdae11ffc6fdcb1f0bef657f4409e64b1)
			Operation on object of type javax.crypto.Cipher object not completed. Expected call to init
			at statement: $i2 = virtualinvoke $r30.<javax.crypto.Mac: int getMacLength()>()

		IncompleteOperationError violating CrySL rule for javax.crypto.Cipher (on Object #b6025744d2df517f67fa27275b0feb7d01f6887e3c4f80b3d8741fdcc6179fc7)
			Operation on object of type javax.crypto.Cipher object not completed. Expected call to init
			at statement: $i2 = virtualinvoke $r30.<javax.crypto.Mac: int getMacLength()>()

		IncompleteOperationError violating CrySL rule for java.security.KeyPairGenerator (on Object #e558c8ffcabf883e50df2d4467b7ac999fb18b9a16ef448439f884413fa22814)
			Operation on object of type java.security.KeyPairGenerator object not completed. Expected call to initialize
			at statement: $i2 = virtualinvoke $r30.<javax.crypto.Mac: int getMacLength()>()

		IncompleteOperationError violating CrySL rule for java.security.KeyPairGenerator (on Object #5c75dede8fb030ad7e32324e351ff44e5338f5ea80b96eaf10c24d7680022c9f)
			Operation on object of type java.security.KeyPairGenerator object not completed. Expected call to initialize
			at statement: $i2 = virtualinvoke $r30.<javax.crypto.Mac: int getMacLength()>()

		IncompleteOperationError violating CrySL rule for java.security.Signature (on Object #7bc55ce195d22524cf8f5530f431f27cd0272bcab7d07224298701969a18d100)
			Operation on object of type java.security.Signature object not completed. Expected call to initSign, initVerify
			at statement: $i2 = virtualinvoke $r30.<javax.crypto.Mac: int getMacLength()>()

		IncompleteOperationError violating CrySL rule for java.security.Signature (on Object #fda5abce0e7458ca5308ebaec734d819c3387e655a8e0fd1a2f588367e14322d)
			Operation on object of type java.security.Signature object not completed. Expected call to initSign, initVerify
			at statement: $i2 = virtualinvoke $r30.<javax.crypto.Mac: int getMacLength()>()

		IncompleteOperationError violating CrySL rule for javax.crypto.Mac (on Object #8c580049db94889e6dc1635ff7246767fd57d44d1889a43dd00115a8c2cabe4d)
			Operation on object of type javax.crypto.Mac object not completed. Expected call to init
			at statement: $i2 = virtualinvoke $r30.<javax.crypto.Mac: int getMacLength()>()

		IncompleteOperationError violating CrySL rule for java.security.MessageDigest (on Object #aaa18cd8e00995ae23872a00997eacf36fbdc0809e7c9a12cb497bfe5d1ceab0)
			Operation on object of type java.security.MessageDigest object not completed. Expected call to digest, update
			at statement: $i2 = virtualinvoke $r30.<javax.crypto.Mac: int getMacLength()>()

		IncompleteOperationError violating CrySL rule for java.security.MessageDigest (on Object #b663e8e6604e3724038f47ecd9e3461bfc4d085e8f51475e35d0df0838320694)
			Operation on object of type java.security.MessageDigest object not completed. Expected call to digest, update
			at statement: $i2 = virtualinvoke $r30.<javax.crypto.Mac: int getMacLength()>()

		TypestateError violating CrySL rule for javax.crypto.Mac (on Object #8c580049db94889e6dc1635ff7246767fd57d44d1889a43dd00115a8c2cabe4d)
			Unexpected call to method <javax.crypto.Mac: byte[] doFinal(byte[])> on object of type javax.crypto.Mac. Expect a call to one of the following methods javax.crypto.Mac: void update(byte[]),javax.crypto.Mac: void doFinal(byte[],int),javax.crypto.Mac: byte[] doFinal(),javax.crypto.Mac: void update(byte),javax.crypto.Mac: void update(byte[],int,int)
			at statement: $r19 = virtualinvoke $r30.<javax.crypto.Mac: byte[] doFinal(byte[])>($r19)

		IncompleteOperationError violating CrySL rule for java.security.MessageDigest (on Object #aaa18cd8e00995ae23872a00997eacf36fbdc0809e7c9a12cb497bfe5d1ceab0)
			Operation on object of type java.security.MessageDigest object not completed. Expected call to digest, update
			at statement: $r25 = virtualinvoke $r30.<javax.crypto.Mac: byte[] doFinal()>()

		IncompleteOperationError violating CrySL rule for java.security.MessageDigest (on Object #b663e8e6604e3724038f47ecd9e3461bfc4d085e8f51475e35d0df0838320694)
			Operation on object of type java.security.MessageDigest object not completed. Expected call to digest, update
			at statement: $r25 = virtualinvoke $r30.<javax.crypto.Mac: byte[] doFinal()>()

		IncompleteOperationError violating CrySL rule for javax.crypto.Cipher (on Object #23a99988e288520b97935df6535a146cdae11ffc6fdcb1f0bef657f4409e64b1)
			Operation on object of type javax.crypto.Cipher object not completed. Expected call to init
			at statement: $r25 = virtualinvoke $r30.<javax.crypto.Mac: byte[] doFinal()>()

		IncompleteOperationError violating CrySL rule for javax.crypto.Cipher (on Object #b6025744d2df517f67fa27275b0feb7d01f6887e3c4f80b3d8741fdcc6179fc7)
			Operation on object of type javax.crypto.Cipher object not completed. Expected call to init
			at statement: $r25 = virtualinvoke $r30.<javax.crypto.Mac: byte[] doFinal()>()

		RequiredPredicateError violating CrySL rule for javax.crypto.spec.SecretKeySpec
			First parameter was not properly generated as preparedKeyMaterial
			at statement: specialinvoke $r31.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r19, $r1)

		IncompleteOperationError violating CrySL rule for javax.crypto.KeyAgreement (on Object #3ddc26250b645654fb9398ea8bb33dcb6c1d34b08067f85bcbf88665e86800bf)
			Operation on object of type javax.crypto.KeyAgreement object not completed. Expected call to init
			at statement: $i2 = virtualinvoke $r30.<javax.crypto.Mac: int getMacLength()>()

		IncompleteOperationError violating CrySL rule for javax.crypto.KeyAgreement (on Object #99fc601a8a59da240a4401bba1989daa6d108a7bcf93c4060f5ae35be77f45e0)
			Operation on object of type javax.crypto.KeyAgreement object not completed. Expected call to init
			at statement: $i2 = virtualinvoke $r30.<javax.crypto.Mac: int getMacLength()>()

		IncompleteOperationError violating CrySL rule for java.security.KeyPairGenerator (on Object #e558c8ffcabf883e50df2d4467b7ac999fb18b9a16ef448439f884413fa22814)
			Operation on object of type java.security.KeyPairGenerator object not completed. Expected call to initialize
			at statement: $r25 = virtualinvoke $r30.<javax.crypto.Mac: byte[] doFinal()>()

		IncompleteOperationError violating CrySL rule for java.security.KeyPairGenerator (on Object #5c75dede8fb030ad7e32324e351ff44e5338f5ea80b96eaf10c24d7680022c9f)
			Operation on object of type java.security.KeyPairGenerator object not completed. Expected call to initialize
			at statement: $r25 = virtualinvoke $r30.<javax.crypto.Mac: byte[] doFinal()>()

		IncompleteOperationError violating CrySL rule for java.security.Signature (on Object #7bc55ce195d22524cf8f5530f431f27cd0272bcab7d07224298701969a18d100)
			Operation on object of type java.security.Signature object not completed. Expected call to initSign, initVerify
			at statement: $r25 = virtualinvoke $r30.<javax.crypto.Mac: byte[] doFinal()>()

		IncompleteOperationError violating CrySL rule for java.security.Signature (on Object #fda5abce0e7458ca5308ebaec734d819c3387e655a8e0fd1a2f588367e14322d)
			Operation on object of type java.security.Signature object not completed. Expected call to initSign, initVerify
			at statement: $r25 = virtualinvoke $r30.<javax.crypto.Mac: byte[] doFinal()>()


Findings in Java Class: com.google.android.gms.internal.ads.zzavf

	 in Method: com.google.android.gms.internal.ads.zzauf zza(com.google.android.gms.internal.ads.zzauh)
		IncompleteOperationError violating CrySL rule for javax.crypto.Cipher (on Object #23a99988e288520b97935df6535a146cdae11ffc6fdcb1f0bef657f4409e64b1)
			Operation on object of type javax.crypto.Cipher object not completed. Expected call to init
			at statement: specialinvoke $r2.<com.google.android.gms.internal.ads.zzavg: void <init>(com.google.android.gms.internal.ads.zzaum)>($r0)

		IncompleteOperationError violating CrySL rule for javax.crypto.Cipher (on Object #b6025744d2df517f67fa27275b0feb7d01f6887e3c4f80b3d8741fdcc6179fc7)
			Operation on object of type javax.crypto.Cipher object not completed. Expected call to init
			at statement: specialinvoke $r2.<com.google.android.gms.internal.ads.zzavg: void <init>(com.google.android.gms.internal.ads.zzaum)>($r0)

		IncompleteOperationError violating CrySL rule for javax.crypto.KeyAgreement (on Object #3ddc26250b645654fb9398ea8bb33dcb6c1d34b08067f85bcbf88665e86800bf)
			Operation on object of type javax.crypto.KeyAgreement object not completed. Expected call to init
			at statement: specialinvoke $r2.<com.google.android.gms.internal.ads.zzavg: void <init>(com.google.android.gms.internal.ads.zzaum)>($r0)

		IncompleteOperationError violating CrySL rule for javax.crypto.KeyAgreement (on Object #99fc601a8a59da240a4401bba1989daa6d108a7bcf93c4060f5ae35be77f45e0)
			Operation on object of type javax.crypto.KeyAgreement object not completed. Expected call to init
			at statement: specialinvoke $r2.<com.google.android.gms.internal.ads.zzavg: void <init>(com.google.android.gms.internal.ads.zzaum)>($r0)

		IncompleteOperationError violating CrySL rule for java.security.MessageDigest (on Object #aaa18cd8e00995ae23872a00997eacf36fbdc0809e7c9a12cb497bfe5d1ceab0)
			Operation on object of type java.security.MessageDigest object not completed. Expected call to digest, update
			at statement: specialinvoke $r2.<com.google.android.gms.internal.ads.zzavg: void <init>(com.google.android.gms.internal.ads.zzaum)>($r0)

		IncompleteOperationError violating CrySL rule for java.security.MessageDigest (on Object #b663e8e6604e3724038f47ecd9e3461bfc4d085e8f51475e35d0df0838320694)
			Operation on object of type java.security.MessageDigest object not completed. Expected call to digest, update
			at statement: specialinvoke $r2.<com.google.android.gms.internal.ads.zzavg: void <init>(com.google.android.gms.internal.ads.zzaum)>($r0)

		IncompleteOperationError violating CrySL rule for java.security.KeyPairGenerator (on Object #e558c8ffcabf883e50df2d4467b7ac999fb18b9a16ef448439f884413fa22814)
			Operation on object of type java.security.KeyPairGenerator object not completed. Expected call to initialize
			at statement: specialinvoke $r2.<com.google.android.gms.internal.ads.zzavg: void <init>(com.google.android.gms.internal.ads.zzaum)>($r0)

		IncompleteOperationError violating CrySL rule for java.security.KeyPairGenerator (on Object #5c75dede8fb030ad7e32324e351ff44e5338f5ea80b96eaf10c24d7680022c9f)
			Operation on object of type java.security.KeyPairGenerator object not completed. Expected call to initialize
			at statement: specialinvoke $r2.<com.google.android.gms.internal.ads.zzavg: void <init>(com.google.android.gms.internal.ads.zzaum)>($r0)

		IncompleteOperationError violating CrySL rule for java.security.Signature (on Object #7bc55ce195d22524cf8f5530f431f27cd0272bcab7d07224298701969a18d100)
			Operation on object of type java.security.Signature object not completed. Expected call to initSign, initVerify
			at statement: specialinvoke $r2.<com.google.android.gms.internal.ads.zzavg: void <init>(com.google.android.gms.internal.ads.zzaum)>($r0)

		IncompleteOperationError violating CrySL rule for java.security.Signature (on Object #fda5abce0e7458ca5308ebaec734d819c3387e655a8e0fd1a2f588367e14322d)
			Operation on object of type java.security.Signature object not completed. Expected call to initSign, initVerify
			at statement: specialinvoke $r2.<com.google.android.gms.internal.ads.zzavg: void <init>(com.google.android.gms.internal.ads.zzaum)>($r0)

		IncompleteOperationError violating CrySL rule for javax.crypto.Mac (on Object #8c580049db94889e6dc1635ff7246767fd57d44d1889a43dd00115a8c2cabe4d)
			Operation on object of type javax.crypto.Mac object not completed. Expected call to update, doFinal
			at statement: specialinvoke $r2.<com.google.android.gms.internal.ads.zzavg: void <init>(com.google.android.gms.internal.ads.zzaum)>($r0)


Findings in Java Class: com.google.android.gms.internal.ads.zzazb

	 in Method: java.lang.Object zzb(java.lang.String,java.security.Provider)
		ConstraintError violating CrySL rule for javax.crypto.KeyAgreement (on Object #99fc601a8a59da240a4401bba1989daa6d108a7bcf93c4060f5ae35be77f45e0)
			First parameter (with value "AES/GCM/NoPadding") should be any of {DH, DiffieHellman, NH}
			at statement: $r3 = staticinvoke <javax.crypto.KeyAgreement: javax.crypto.KeyAgreement getInstance(java.lang.String,java.security.Provider)>($r2, $r1)

		ConstraintError violating CrySL rule for javax.crypto.KeyAgreement (on Object #3ddc26250b645654fb9398ea8bb33dcb6c1d34b08067f85bcbf88665e86800bf)
			First parameter (with value "AES/GCM/NoPadding") should be any of {DH, DiffieHellman, NH}
			at statement: $r3 = staticinvoke <javax.crypto.KeyAgreement: javax.crypto.KeyAgreement getInstance(java.lang.String)>($r2)

		ConstraintError violating CrySL rule for javax.crypto.KeyAgreement (on Object #3ddc26250b645654fb9398ea8bb33dcb6c1d34b08067f85bcbf88665e86800bf)
			First parameter (with value "ECDH") should be any of {DH, DiffieHellman, NH}
			at statement: $r3 = staticinvoke <javax.crypto.KeyAgreement: javax.crypto.KeyAgreement getInstance(java.lang.String)>($r2)

		ConstraintError violating CrySL rule for javax.crypto.KeyAgreement (on Object #99fc601a8a59da240a4401bba1989daa6d108a7bcf93c4060f5ae35be77f45e0)
			First parameter (with value "ECDH") should be any of {DH, DiffieHellman, NH}
			at statement: $r3 = staticinvoke <javax.crypto.KeyAgreement: javax.crypto.KeyAgreement getInstance(java.lang.String,java.security.Provider)>($r2, $r1)

		ConstraintError violating CrySL rule for javax.crypto.KeyAgreement (on Object #3ddc26250b645654fb9398ea8bb33dcb6c1d34b08067f85bcbf88665e86800bf)
			First parameter (with value "AES/CTR/NoPadding") should be any of {DH, DiffieHellman, NH}
			at statement: $r3 = staticinvoke <javax.crypto.KeyAgreement: javax.crypto.KeyAgreement getInstance(java.lang.String)>($r2)

		ConstraintError violating CrySL rule for javax.crypto.KeyAgreement (on Object #99fc601a8a59da240a4401bba1989daa6d108a7bcf93c4060f5ae35be77f45e0)
			First parameter (with value "AES/CTR/NoPadding") should be any of {DH, DiffieHellman, NH}
			at statement: $r3 = staticinvoke <javax.crypto.KeyAgreement: javax.crypto.KeyAgreement getInstance(java.lang.String,java.security.Provider)>($r2, $r1)

		ConstraintError violating CrySL rule for javax.crypto.KeyAgreement (on Object #3ddc26250b645654fb9398ea8bb33dcb6c1d34b08067f85bcbf88665e86800bf)
			First parameter (with value "EC") should be any of {DH, DiffieHellman, NH}
			at statement: $r3 = staticinvoke <javax.crypto.KeyAgreement: javax.crypto.KeyAgreement getInstance(java.lang.String)>($r2)

		ConstraintError violating CrySL rule for javax.crypto.KeyAgreement (on Object #99fc601a8a59da240a4401bba1989daa6d108a7bcf93c4060f5ae35be77f45e0)
			First parameter (with value "EC") should be any of {DH, DiffieHellman, NH}
			at statement: $r3 = staticinvoke <javax.crypto.KeyAgreement: javax.crypto.KeyAgreement getInstance(java.lang.String,java.security.Provider)>($r2, $r1)


Findings in Java Class: com.google.android.gms.internal.ads.zzazg

	 in Method: java.lang.Object zzb(java.lang.String,java.security.Provider)
		ConstraintError violating CrySL rule for java.security.Signature (on Object #fda5abce0e7458ca5308ebaec734d819c3387e655a8e0fd1a2f588367e14322d)
			First parameter (with value "EC") should be any of {SHA256withRSA, SHA256withECDSA, SHA256withDSA, SHA224withDSA, NONEwithDSA, SHA1withDSA}
			at statement: $r3 = staticinvoke <java.security.Signature: java.security.Signature getInstance(java.lang.String,java.security.Provider)>($r2, $r1)

		ConstraintError violating CrySL rule for java.security.Signature (on Object #fda5abce0e7458ca5308ebaec734d819c3387e655a8e0fd1a2f588367e14322d)
			First parameter (with value "AES/CTR/NoPadding") should be any of {SHA256withRSA, SHA256withECDSA, SHA256withDSA, SHA224withDSA, NONEwithDSA, SHA1withDSA}
			at statement: $r3 = staticinvoke <java.security.Signature: java.security.Signature getInstance(java.lang.String,java.security.Provider)>($r2, $r1)

		ConstraintError violating CrySL rule for java.security.Signature (on Object #7bc55ce195d22524cf8f5530f431f27cd0272bcab7d07224298701969a18d100)
			First parameter (with value "AES/GCM/NoPadding") should be any of {SHA256withRSA, SHA256withECDSA, SHA256withDSA, SHA224withDSA, NONEwithDSA, SHA1withDSA}
			at statement: $r3 = staticinvoke <java.security.Signature: java.security.Signature getInstance(java.lang.String)>($r2)

		ConstraintError violating CrySL rule for java.security.Signature (on Object #7bc55ce195d22524cf8f5530f431f27cd0272bcab7d07224298701969a18d100)
			First parameter (with value "EC") should be any of {SHA256withRSA, SHA256withECDSA, SHA256withDSA, SHA224withDSA, NONEwithDSA, SHA1withDSA}
			at statement: $r3 = staticinvoke <java.security.Signature: java.security.Signature getInstance(java.lang.String)>($r2)

		ConstraintError violating CrySL rule for java.security.Signature (on Object #fda5abce0e7458ca5308ebaec734d819c3387e655a8e0fd1a2f588367e14322d)
			First parameter (with value "AES/GCM/NoPadding") should be any of {SHA256withRSA, SHA256withECDSA, SHA256withDSA, SHA224withDSA, NONEwithDSA, SHA1withDSA}
			at statement: $r3 = staticinvoke <java.security.Signature: java.security.Signature getInstance(java.lang.String,java.security.Provider)>($r2, $r1)

		ConstraintError violating CrySL rule for java.security.Signature (on Object #7bc55ce195d22524cf8f5530f431f27cd0272bcab7d07224298701969a18d100)
			First parameter (with value "ECDH") should be any of {SHA256withRSA, SHA256withECDSA, SHA256withDSA, SHA224withDSA, NONEwithDSA, SHA1withDSA}
			at statement: $r3 = staticinvoke <java.security.Signature: java.security.Signature getInstance(java.lang.String)>($r2)

		ConstraintError violating CrySL rule for java.security.Signature (on Object #7bc55ce195d22524cf8f5530f431f27cd0272bcab7d07224298701969a18d100)
			First parameter (with value "AES/CTR/NoPadding") should be any of {SHA256withRSA, SHA256withECDSA, SHA256withDSA, SHA224withDSA, NONEwithDSA, SHA1withDSA}
			at statement: $r3 = staticinvoke <java.security.Signature: java.security.Signature getInstance(java.lang.String)>($r2)

		ConstraintError violating CrySL rule for java.security.Signature (on Object #fda5abce0e7458ca5308ebaec734d819c3387e655a8e0fd1a2f588367e14322d)
			First parameter (with value "ECDH") should be any of {SHA256withRSA, SHA256withECDSA, SHA256withDSA, SHA224withDSA, NONEwithDSA, SHA1withDSA}
			at statement: $r3 = staticinvoke <java.security.Signature: java.security.Signature getInstance(java.lang.String,java.security.Provider)>($r2, $r1)


Findings in Java Class: com.google.android.gms.internal.ads.zzaze

	 in Method: java.lang.Object zzb(java.lang.String,java.security.Provider)
		ConstraintError violating CrySL rule for javax.crypto.Mac (on Object #8c580049db94889e6dc1635ff7246767fd57d44d1889a43dd00115a8c2cabe4d)
			First parameter (with value "EC") should be any of {HmacMD5, HmacSHA1, HmacSHA224, HmacSHA256, HmacSHA384, HmacSHA512, HmacPBESHA1, PBEWithHmacSHA1, PBEWithHmacSHA224, PBEWithHmacSHA256, PBEWithHmacSHA384, PBEWithHmacSHA512}
			at statement: $r3 = staticinvoke <javax.crypto.Mac: javax.crypto.Mac getInstance(java.lang.String)>($r2)

		ConstraintError violating CrySL rule for javax.crypto.Mac (on Object #8c580049db94889e6dc1635ff7246767fd57d44d1889a43dd00115a8c2cabe4d)
			First parameter (with value "ECDH") should be any of {HmacMD5, HmacSHA1, HmacSHA224, HmacSHA256, HmacSHA384, HmacSHA512, HmacPBESHA1, PBEWithHmacSHA1, PBEWithHmacSHA224, PBEWithHmacSHA256, PBEWithHmacSHA384, PBEWithHmacSHA512}
			at statement: $r3 = staticinvoke <javax.crypto.Mac: javax.crypto.Mac getInstance(java.lang.String)>($r2)

		ConstraintError violating CrySL rule for javax.crypto.Mac (on Object #8c580049db94889e6dc1635ff7246767fd57d44d1889a43dd00115a8c2cabe4d)
			First parameter (with value "AES/GCM/NoPadding") should be any of {HmacMD5, HmacSHA1, HmacSHA224, HmacSHA256, HmacSHA384, HmacSHA512, HmacPBESHA1, PBEWithHmacSHA1, PBEWithHmacSHA224, PBEWithHmacSHA256, PBEWithHmacSHA384, PBEWithHmacSHA512}
			at statement: $r3 = staticinvoke <javax.crypto.Mac: javax.crypto.Mac getInstance(java.lang.String)>($r2)

		ConstraintError violating CrySL rule for javax.crypto.Mac (on Object #8c580049db94889e6dc1635ff7246767fd57d44d1889a43dd00115a8c2cabe4d)
			First parameter (with value "AES/CTR/NoPadding") should be any of {HmacMD5, HmacSHA1, HmacSHA224, HmacSHA256, HmacSHA384, HmacSHA512, HmacPBESHA1, PBEWithHmacSHA1, PBEWithHmacSHA224, PBEWithHmacSHA256, PBEWithHmacSHA384, PBEWithHmacSHA512}
			at statement: $r3 = staticinvoke <javax.crypto.Mac: javax.crypto.Mac getInstance(java.lang.String)>($r2)


Findings in Java Class: com.google.android.gms.internal.ads.zzazf

	 in Method: java.lang.Object zzb(java.lang.String,java.security.Provider)
		ConstraintError violating CrySL rule for java.security.MessageDigest (on Object #aaa18cd8e00995ae23872a00997eacf36fbdc0809e7c9a12cb497bfe5d1ceab0)
			First parameter (with value "AES/GCM/NoPadding") should be any of {SHA-256, SHA-384, SHA-512}
			at statement: $r3 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>($r2)

		ConstraintError violating CrySL rule for java.security.MessageDigest (on Object #b663e8e6604e3724038f47ecd9e3461bfc4d085e8f51475e35d0df0838320694)
			First parameter (with value "EC") should be any of {SHA-256, SHA-384, SHA-512}
			at statement: $r3 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String,java.security.Provider)>($r2, $r1)

		ConstraintError violating CrySL rule for java.security.MessageDigest (on Object #aaa18cd8e00995ae23872a00997eacf36fbdc0809e7c9a12cb497bfe5d1ceab0)
			First parameter (with value "EC") should be any of {SHA-256, SHA-384, SHA-512}
			at statement: $r3 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>($r2)

		ConstraintError violating CrySL rule for java.security.MessageDigest (on Object #b663e8e6604e3724038f47ecd9e3461bfc4d085e8f51475e35d0df0838320694)
			First parameter (with value "AES/GCM/NoPadding") should be any of {SHA-256, SHA-384, SHA-512}
			at statement: $r3 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String,java.security.Provider)>($r2, $r1)

		ConstraintError violating CrySL rule for java.security.MessageDigest (on Object #aaa18cd8e00995ae23872a00997eacf36fbdc0809e7c9a12cb497bfe5d1ceab0)
			First parameter (with value "ECDH") should be any of {SHA-256, SHA-384, SHA-512}
			at statement: $r3 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>($r2)

		ConstraintError violating CrySL rule for java.security.MessageDigest (on Object #b663e8e6604e3724038f47ecd9e3461bfc4d085e8f51475e35d0df0838320694)
			First parameter (with value "ECDH") should be any of {SHA-256, SHA-384, SHA-512}
			at statement: $r3 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String,java.security.Provider)>($r2, $r1)

		ConstraintError violating CrySL rule for java.security.MessageDigest (on Object #aaa18cd8e00995ae23872a00997eacf36fbdc0809e7c9a12cb497bfe5d1ceab0)
			First parameter (with value "AES/CTR/NoPadding") should be any of {SHA-256, SHA-384, SHA-512}
			at statement: $r3 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>($r2)

		ConstraintError violating CrySL rule for java.security.MessageDigest (on Object #b663e8e6604e3724038f47ecd9e3461bfc4d085e8f51475e35d0df0838320694)
			First parameter (with value "AES/CTR/NoPadding") should be any of {SHA-256, SHA-384, SHA-512}
			at statement: $r3 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String,java.security.Provider)>($r2, $r1)


Findings in Java Class: com.google.android.gms.internal.ads.zzaza

	 in Method: java.lang.Object zzb(java.lang.String,java.security.Provider)
		ConstraintError violating CrySL rule for javax.crypto.Cipher (on Object #b6025744d2df517f67fa27275b0feb7d01f6887e3c4f80b3d8741fdcc6179fc7)
			First parameter (with value "ECDH") should be any of {AES, PBEWithHmacSHA224AndAES_128, PBEWithHmacSHA256AndAES_128, PBEWithHmacSHA384AndAES_128, PBEWithHmacSHA512AndAES_128, PBEWithHmacSHA224AndAES_256, PBEWithHmacSHA256AndAES_256, PBEWithHmacSHA384AndAES_256, PBEWithHmacSHA512AndAES_256}
			at statement: $r3 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String,java.security.Provider)>($r2, $r1)

		ConstraintError violating CrySL rule for javax.crypto.Cipher (on Object #23a99988e288520b97935df6535a146cdae11ffc6fdcb1f0bef657f4409e64b1)
			First parameter (with value "ECDH") should be any of {AES, PBEWithHmacSHA224AndAES_128, PBEWithHmacSHA256AndAES_128, PBEWithHmacSHA384AndAES_128, PBEWithHmacSHA512AndAES_128, PBEWithHmacSHA224AndAES_256, PBEWithHmacSHA256AndAES_256, PBEWithHmacSHA384AndAES_256, PBEWithHmacSHA512AndAES_256}
			at statement: $r3 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>($r2)

		ConstraintError violating CrySL rule for javax.crypto.Cipher (on Object #b6025744d2df517f67fa27275b0feb7d01f6887e3c4f80b3d8741fdcc6179fc7)
			First parameter (with value "EC") should be any of {AES, PBEWithHmacSHA224AndAES_128, PBEWithHmacSHA256AndAES_128, PBEWithHmacSHA384AndAES_128, PBEWithHmacSHA512AndAES_128, PBEWithHmacSHA224AndAES_256, PBEWithHmacSHA256AndAES_256, PBEWithHmacSHA384AndAES_256, PBEWithHmacSHA512AndAES_256}
			at statement: $r3 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String,java.security.Provider)>($r2, $r1)

		ConstraintError violating CrySL rule for javax.crypto.Cipher (on Object #23a99988e288520b97935df6535a146cdae11ffc6fdcb1f0bef657f4409e64b1)
			First parameter (with value "EC") should be any of {AES, PBEWithHmacSHA224AndAES_128, PBEWithHmacSHA256AndAES_128, PBEWithHmacSHA384AndAES_128, PBEWithHmacSHA512AndAES_128, PBEWithHmacSHA224AndAES_256, PBEWithHmacSHA256AndAES_256, PBEWithHmacSHA384AndAES_256, PBEWithHmacSHA512AndAES_256}
			at statement: $r3 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>($r2)


Findings in Java Class: com.google.android.gms.internal.ads.zzazc

	 in Method: java.lang.Object zzb(java.lang.String,java.security.Provider)
		ConstraintError violating CrySL rule for java.security.KeyFactory (on Object #dd78c7bb163a4a7b78acc745e6bf87d7e4a92ffa6be2d92ded99308d6dcb77f)
			First parameter (with value "AES/CTR/NoPadding") should be any of {RSA, DiffieHellman, DH, DSA, EC}
			at statement: $r3 = staticinvoke <java.security.KeyFactory: java.security.KeyFactory getInstance(java.lang.String,java.security.Provider)>($r2, $r1)

		ConstraintError violating CrySL rule for java.security.KeyFactory (on Object #60db98dd7508d1d4bf64885ed32d70d73b92dba8c77d3cee9b8c0ff5549ac8b8)
			First parameter (with value "AES/CTR/NoPadding") should be any of {RSA, DiffieHellman, DH, DSA, EC}
			at statement: $r3 = staticinvoke <java.security.KeyFactory: java.security.KeyFactory getInstance(java.lang.String)>($r2)

		ConstraintError violating CrySL rule for java.security.KeyFactory (on Object #dd78c7bb163a4a7b78acc745e6bf87d7e4a92ffa6be2d92ded99308d6dcb77f)
			First parameter (with value "AES/GCM/NoPadding") should be any of {RSA, DiffieHellman, DH, DSA, EC}
			at statement: $r3 = staticinvoke <java.security.KeyFactory: java.security.KeyFactory getInstance(java.lang.String,java.security.Provider)>($r2, $r1)

		ConstraintError violating CrySL rule for java.security.KeyFactory (on Object #60db98dd7508d1d4bf64885ed32d70d73b92dba8c77d3cee9b8c0ff5549ac8b8)
			First parameter (with value "ECDH") should be any of {RSA, DiffieHellman, DH, DSA, EC}
			at statement: $r3 = staticinvoke <java.security.KeyFactory: java.security.KeyFactory getInstance(java.lang.String)>($r2)

		ConstraintError violating CrySL rule for java.security.KeyFactory (on Object #dd78c7bb163a4a7b78acc745e6bf87d7e4a92ffa6be2d92ded99308d6dcb77f)
			First parameter (with value "ECDH") should be any of {RSA, DiffieHellman, DH, DSA, EC}
			at statement: $r3 = staticinvoke <java.security.KeyFactory: java.security.KeyFactory getInstance(java.lang.String,java.security.Provider)>($r2, $r1)

		ConstraintError violating CrySL rule for java.security.KeyFactory (on Object #60db98dd7508d1d4bf64885ed32d70d73b92dba8c77d3cee9b8c0ff5549ac8b8)
			First parameter (with value "AES/GCM/NoPadding") should be any of {RSA, DiffieHellman, DH, DSA, EC}
			at statement: $r3 = staticinvoke <java.security.KeyFactory: java.security.KeyFactory getInstance(java.lang.String)>($r2)


Findings in Java Class: io.fabric.sdk.android.services.network.NetworkUtils

	 in Method: javax.net.ssl.SSLSocketFactory getSSLSocketFactory(io.fabric.sdk.android.services.network.PinningInfoProvider)
		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			Second parameter was not properly generated as generatedTrustManagers
			at statement: virtualinvoke $r1.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>(varReplacer163177, $r8, varReplacer163177)

		ConstraintError violating CrySL rule for javax.net.ssl.SSLContext (on Object #76cb3a912723b9ebc22991b22611762ba6e8795cfc36eb000eac9906bfad4180)
			First parameter (with value "TLS") should be any of {TLSv1.2}
			at statement: $r1 = staticinvoke <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String)>(varReplacer163179)

		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			Third parameter was not properly generated as randomized
			at statement: virtualinvoke $r1.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>(varReplacer163177, $r8, varReplacer163177)

		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			First parameter was not properly generated as generatedKeyManagers
			at statement: virtualinvoke $r1.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>(varReplacer163177, $r8, varReplacer163177)


Findings in Java Class: com.facebook.FacebookSdk

	 in Method: java.lang.String getApplicationSignature(android.content.Context)
		ConstraintError violating CrySL rule for java.security.MessageDigest (on Object #b5b4a2e44d80d14aedc309b0185e6b4e364588d5b818122172634d296f86c4e1)
			First parameter (with value "SHA-1") should be any of {SHA-256, SHA-384, SHA-512}
			at statement: $r7 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer163705)


Findings in Java Class: okhttp3.internal.Util

	 in Method: java.lang.String md5Hex(java.lang.String)
		ConstraintError violating CrySL rule for java.security.MessageDigest (on Object #54982bbc50a449d9c29c653ae5a341ed0927de7336e9a20065dfd1b945c8147a)
			First parameter (with value "MD5") should be any of {SHA-256, SHA-384, SHA-512}
			at statement: $r1 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer164450)


	 in Method: okio.ByteString sha1(okio.ByteString)
		ConstraintError violating CrySL rule for java.security.MessageDigest (on Object #c5681ed9527a85c8e0319cf3bf16c4523895b11e2e1eb8804aee5269b81a92f7)
			First parameter (with value "SHA-1") should be any of {SHA-256, SHA-384, SHA-512}
			at statement: $r1 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer179247)


Findings in Java Class: com.amazon.whisperlink.port.android.SecurityManagerFactory$SecureX509TrustManager

	 in Method: java.security.KeyStore loadTrustStore(android.content.Context)
		ConstraintError violating CrySL rule for java.security.KeyStore (on Object #3195afa87ce1386fac28743d3ba54653618e334e243a19573184a1bea0de2d9d)
			First parameter (with value "BKS") should be any of {JCEKS, JKS, DKS, PKCS11, PKCS12}
			at statement: $r2 = staticinvoke <java.security.KeyStore: java.security.KeyStore getInstance(java.lang.String)>(varReplacer165301)

		NeverTypeOfError violating CrySL rule for java.security.KeyStore (on Object #3195afa87ce1386fac28743d3ba54653618e334e243a19573184a1bea0de2d9d)
			Second parameter should never be of type java.lang.String.
			at statement: virtualinvoke $r2.<java.security.KeyStore: void load(java.io.InputStream,char[])>($r3, $r6)

		HardCodedError violating CrySL rule for java.security.KeyStore (on Object #3195afa87ce1386fac28743d3ba54653618e334e243a19573184a1bea0de2d9d)
			Second parameter should never be hardcoded.
			at statement: virtualinvoke $r2.<java.security.KeyStore: void load(java.io.InputStream,char[])>($r3, $r6)


	 in Method: void init(android.content.Context)
		RequiredPredicateError violating CrySL rule for javax.net.ssl.TrustManagerFactory
			First parameter was not properly generated as generatedKeyStore
			at statement: virtualinvoke $r3.<javax.net.ssl.TrustManagerFactory: void init(java.security.KeyStore)>($r5)


Findings in Java Class: io.fabric.sdk.android.services.network.SystemKeyStore

	 in Method: java.security.KeyStore getTrustStore(java.io.InputStream,java.lang.String)
		NeverTypeOfError violating CrySL rule for java.security.KeyStore (on Object #1fbd3259f5cc4165f01a1beadc5daaab6ea768d0fc78697d81a3095f1f179bf7)
			Second parameter should never be of type java.lang.String.
			at statement: virtualinvoke $r4.<java.security.KeyStore: void load(java.io.InputStream,char[])>($r1, $r5)

		HardCodedError violating CrySL rule for java.security.KeyStore (on Object #1fbd3259f5cc4165f01a1beadc5daaab6ea768d0fc78697d81a3095f1f179bf7)
			Second parameter should never be hardcoded.
			at statement: virtualinvoke $r4.<java.security.KeyStore: void load(java.io.InputStream,char[])>($r1, $r5)

		ConstraintError violating CrySL rule for java.security.KeyStore (on Object #1fbd3259f5cc4165f01a1beadc5daaab6ea768d0fc78697d81a3095f1f179bf7)
			First parameter (with value "BKS") should be any of {JCEKS, JKS, DKS, PKCS11, PKCS12}
			at statement: $r4 = staticinvoke <java.security.KeyStore: java.security.KeyStore getInstance(java.lang.String)>(varReplacer173331)


Findings in Java Class: org.eclipse.jetty.security.authentication.DigestAuthenticator$Digest

	 in Method: boolean check(java.lang.Object)
		ConstraintError violating CrySL rule for java.security.MessageDigest (on Object #f81e1187dba68bf4ed75710e1e027c20e18210885cfe893cb99ab29071fce10d)
			First parameter (with value "MD5") should be any of {SHA-256, SHA-384, SHA-512}
			at statement: $r4 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer175591)


Findings in Java Class: org.eclipse.jetty.util.security.Credential$MD5

	 in Method: boolean check(java.lang.Object)
		ConstraintError violating CrySL rule for java.security.MessageDigest (on Object #1e56cb6e2d56e03ca717a3e7c388c9854393667d7d6859a3d32642470f4a38b4)
			First parameter (with value "MD5") should be any of {SHA-256, SHA-384, SHA-512}
			at statement: $r12 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer175618)


Findings in Java Class: com.amazon.whisperlink.util.EncryptionUtil

	 in Method: java.lang.String hmacEncrypt(java.lang.String[],long,byte[],java.lang.String)
		RequiredPredicateError violating CrySL rule for javax.crypto.Mac
			First parameter was not properly generated as generatedKey
			at statement: virtualinvoke $r5.<javax.crypto.Mac: void init(java.security.Key)>($r4)

		RequiredPredicateError violating CrySL rule for javax.crypto.spec.SecretKeySpec
			First parameter was not properly generated as preparedKeyMaterial
			at statement: specialinvoke $r4.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r2, $r3)


Findings in Java Class: com.google.firebase.iid.zzy

	 in Method: java.security.KeyPair zzc(java.lang.String,java.lang.String)
		RequiredPredicateError violating CrySL rule for java.security.KeyFactory
			First parameter was not properly generated as speccedKey
			at statement: $r6 = virtualinvoke $r4.<java.security.KeyFactory: java.security.PublicKey generatePublic(java.security.spec.KeySpec)>($r5)

		RequiredPredicateError violating CrySL rule for java.security.KeyPair
			First parameter was not properly generated as generatedPubkey
			at statement: specialinvoke $r14.<java.security.KeyPair: void <init>(java.security.PublicKey,java.security.PrivateKey)>($r6, $r8)

		RequiredPredicateError violating CrySL rule for java.security.spec.X509EncodedKeySpec
			First parameter was not properly generated as preparedKeyMaterial
			at statement: specialinvoke $r12.<java.security.spec.X509EncodedKeySpec: void <init>(byte[])>($r2)

		RequiredPredicateError violating CrySL rule for java.security.KeyPair
			Second parameter was not properly generated as generatedPrivkey
			at statement: specialinvoke $r14.<java.security.KeyPair: void <init>(java.security.PublicKey,java.security.PrivateKey)>($r6, $r8)


Findings in Java Class: com.google.android.tv.remote.pairing.KeyStoreManager$DynamicTrustManager

	 in Method: void reloadTrustManager(java.security.KeyStore)
		RequiredPredicateError violating CrySL rule for javax.net.ssl.TrustManagerFactory
			First parameter was not properly generated as generatedKeyStore
			at statement: virtualinvoke $r5.<javax.net.ssl.TrustManagerFactory: void init(java.security.KeyStore)>($r3)


Findings in Java Class: com.google.android.exoplayer2.upstream.crypto.AesFlushingCipher

	 in Method: void <init>(int,byte[],long,long)
		RequiredPredicateError violating CrySL rule for javax.crypto.spec.SecretKeySpec
			First parameter was not properly generated as preparedKeyMaterial
			at statement: specialinvoke $r4.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r2, $r6)

		RequiredPredicateError violating CrySL rule for javax.crypto.Cipher
			Second parameter was not properly generated as generatedKey
			at statement: virtualinvoke $r1.<javax.crypto.Cipher: void init(int,java.security.Key,java.security.spec.AlgorithmParameterSpec)>($i0, $r4, $r8)

		RequiredPredicateError violating CrySL rule for javax.crypto.spec.IvParameterSpec
			First parameter was not properly generated as randomized
			at statement: specialinvoke $r8.<javax.crypto.spec.IvParameterSpec: void <init>(byte[])>($r2)


Findings in Java Class: org.bouncycastle.jce.provider.X509SignatureUtil

	 in Method: void setSignatureParameters(java.security.Signature,org.bouncycastle.asn1.ASN1Encodable)
		RequiredPredicateError violating CrySL rule for java.security.AlgorithmParameters
			First parameter was not properly generated as preparedAlg
			at statement: virtualinvoke $r5.<java.security.AlgorithmParameters: void init(byte[])>($r7)


Findings in Java Class: com.willblaschko.android.alexa.connection.ClientUtil

	 in Method: okhttp3.OkHttpClient getTLS12OkHttpClient()
		RequiredPredicateError violating CrySL rule for javax.net.ssl.TrustManagerFactory
			First parameter was not properly generated as generatedKeyStore
			at statement: virtualinvoke $r3.<javax.net.ssl.TrustManagerFactory: void init(java.security.KeyStore)>(varReplacer47677)

		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			Second parameter was not properly generated as generatedTrustManagers
			at statement: virtualinvoke $r7.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>(varReplacer47672, varReplacer47672, varReplacer47672)

		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			Third parameter was not properly generated as randomized
			at statement: virtualinvoke $r7.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>(varReplacer47672, varReplacer47672, varReplacer47672)

		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			First parameter was not properly generated as generatedKeyManagers
			at statement: virtualinvoke $r7.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>(varReplacer47672, varReplacer47672, varReplacer47672)


Findings in Java Class: com.google.android.gms.internal.ads.zzayj

	 in Method: void <init>(byte[])
		RequiredPredicateError violating CrySL rule for javax.crypto.spec.SecretKeySpec
			First parameter was not properly generated as preparedKeyMaterial
			at statement: specialinvoke $r2.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r1, varReplacer158948)


	 in Method: byte[] zzc(byte[],byte[])
		RequiredPredicateError violating CrySL rule for javax.crypto.spec.GCMParameterSpec
			Second parameter was not properly generated as randomized
			at statement: specialinvoke $r8.<javax.crypto.spec.GCMParameterSpec: void <init>(int,byte[])>(varReplacer135593, $r4)


Findings in Java Class: org.bouncycastle.jcajce.provider.asymmetric.ec.KeyPairGeneratorSpi$EC

	 in Method: java.security.KeyPair generateKeyPair()
		RequiredPredicateError violating CrySL rule for java.security.KeyPair
			Second parameter was not properly generated as generatedPrivkey
			at statement: specialinvoke $r12.<java.security.KeyPair: void <init>(java.security.PublicKey,java.security.PrivateKey)>($r9, $r13)

		RequiredPredicateError violating CrySL rule for java.security.KeyPair
			First parameter was not properly generated as generatedPubkey
			at statement: specialinvoke $r12.<java.security.KeyPair: void <init>(java.security.PublicKey,java.security.PrivateKey)>($r9, $r13)


Findings in Java Class: tekoiacore.core.h.a

	 in Method: byte[] a(java.lang.String,java.lang.String,tekoiacore.core.h.a$a,java.lang.String)
		RequiredPredicateError violating CrySL rule for javax.crypto.Cipher
			Second parameter was not properly generated as generatedKey
			at statement: virtualinvoke $r10.<javax.crypto.Cipher: void init(int,java.security.Key,java.security.spec.AlgorithmParameterSpec)>(varReplacer169526, $r7, $r8)

		RequiredPredicateError violating CrySL rule for javax.crypto.spec.SecretKeySpec
			First parameter was not properly generated as preparedKeyMaterial
			at statement: specialinvoke $r7.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r5, varReplacer169533)

		RequiredPredicateError violating CrySL rule for javax.crypto.spec.IvParameterSpec
			First parameter was not properly generated as randomized
			at statement: specialinvoke $r8.<javax.crypto.spec.IvParameterSpec: void <init>(byte[])>($r5)


Findings in Java Class: org.bouncycastle.jce.provider.X509CertificateObject

	 in Method: void checkSignature(java.security.PublicKey,java.security.Signature)
		RequiredPredicateError violating CrySL rule for java.security.Signature
			First parameter was not properly generated as generatedPubkey
			at statement: virtualinvoke $r2.<java.security.Signature: void initVerify(java.security.PublicKey)>($r1)


Findings in Java Class: org.bouncycastle.jcajce.provider.asymmetric.rsa.KeyPairGeneratorSpi

	 in Method: java.security.KeyPair generateKeyPair()
		RequiredPredicateError violating CrySL rule for java.security.KeyPair
			First parameter was not properly generated as generatedPubkey
			at statement: specialinvoke $r1.<java.security.KeyPair: void <init>(java.security.PublicKey,java.security.PrivateKey)>($r2, $r8)

		RequiredPredicateError violating CrySL rule for java.security.KeyPair
			Second parameter was not properly generated as generatedPrivkey
			at statement: specialinvoke $r1.<java.security.KeyPair: void <init>(java.security.PublicKey,java.security.PrivateKey)>($r2, $r8)


Findings in Java Class: org.bouncycastle.jcajce.provider.asymmetric.dh.KeyPairGeneratorSpi

	 in Method: java.security.KeyPair generateKeyPair()
		RequiredPredicateError violating CrySL rule for java.security.KeyPair
			First parameter was not properly generated as generatedPubkey
			at statement: specialinvoke $r19.<java.security.KeyPair: void <init>(java.security.PublicKey,java.security.PrivateKey)>($r20, $r21)

		RequiredPredicateError violating CrySL rule for java.security.KeyPair
			Second parameter was not properly generated as generatedPrivkey
			at statement: specialinvoke $r19.<java.security.KeyPair: void <init>(java.security.PublicKey,java.security.PrivateKey)>($r20, $r21)


Findings in Java Class: org.bouncycastle.jcajce.provider.asymmetric.x509.X509CertificateObject

	 in Method: void checkSignature(java.security.PublicKey,java.security.Signature)
		RequiredPredicateError violating CrySL rule for java.security.Signature
			First parameter was not properly generated as generatedPubkey
			at statement: virtualinvoke $r2.<java.security.Signature: void initVerify(java.security.PublicKey)>($r1)


Findings in Java Class: org.bouncycastle.jcajce.provider.asymmetric.x509.X509SignatureUtil

	 in Method: void setSignatureParameters(java.security.Signature,org.bouncycastle.asn1.ASN1Encodable)
		RequiredPredicateError violating CrySL rule for java.security.AlgorithmParameters
			First parameter was not properly generated as preparedAlg
			at statement: virtualinvoke $r5.<java.security.AlgorithmParameters: void init(byte[])>($r7)


Findings in Java Class: com.tekoia.sure.utils.Enigma

	 in Method: void <init>()
		RequiredPredicateError violating CrySL rule for javax.crypto.spec.SecretKeySpec
			First parameter was not properly generated as preparedKeyMaterial
			at statement: specialinvoke $r3.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r1, varReplacer76782)

		RequiredPredicateError violating CrySL rule for javax.crypto.spec.IvParameterSpec
			First parameter was not properly generated as randomized
			at statement: specialinvoke $r2.<javax.crypto.spec.IvParameterSpec: void <init>(byte[])>($r1)


Findings in Java Class: org.bouncycastle.jcajce.provider.asymmetric.dsa.KeyPairGeneratorSpi

	 in Method: java.security.KeyPair generateKeyPair()
		RequiredPredicateError violating CrySL rule for java.security.KeyPair
			Second parameter was not properly generated as generatedPrivkey
			at statement: specialinvoke $r10.<java.security.KeyPair: void <init>(java.security.PublicKey,java.security.PrivateKey)>($r11, $r12)

		RequiredPredicateError violating CrySL rule for java.security.KeyPair
			First parameter was not properly generated as generatedPubkey
			at statement: specialinvoke $r10.<java.security.KeyPair: void <init>(java.security.PublicKey,java.security.PrivateKey)>($r11, $r12)


Findings in Java Class: com.a.a.c

	 in Method: byte[] a(byte[])
		RequiredPredicateError violating CrySL rule for javax.crypto.Cipher
			Second parameter was not properly generated as generatedKey
			at statement: virtualinvoke $r2.<javax.crypto.Cipher: void init(int,java.security.Key)>(varReplacer43068, $r4)


Findings in Java Class: org.eclipse.jetty.util.security.CertificateValidator

	 in Method: void validate(java.security.cert.Certificate[])
		RequiredPredicateError violating CrySL rule for java.security.cert.PKIXBuilderParameters
			First parameter was not properly generated as generatedKeyStore
			at statement: specialinvoke $r23.<java.security.cert.PKIXBuilderParameters: void <init>(java.security.KeyStore,java.security.cert.CertSelector)>($r8, $r5)


Findings in Java Class: com.amazon.whisperlink.port.android.transport.TExternalSocketFactory

	 in Method: byte[] makePad(java.security.PublicKey)
		RequiredPredicateError violating CrySL rule for javax.crypto.Cipher
			Second parameter was not properly generated as generatedKey
			at statement: virtualinvoke $r5.<javax.crypto.Cipher: void init(int,java.security.Key)>(varReplacer123612, $r1)


======================= CryptoAnalysis Summary ==========================
	Number of CrySL rules: 47
	Number of Objects Analyzed: 369

	CryptoAnalysis found the following violations. For details see description above.
	ForbiddenMethodError: 1
	NeverTypeOfError: 9
	RequiredPredicateError: 100
	ConstraintError: 112
	IncompleteOperationError: 183
	HardCodedError: 7
	TypestateError: 13
=====================================================================
