SLF4J: Failed to load class "org.slf4j.impl.StaticLoggerBinder".
SLF4J: Defaulting to no-operation (NOP) logger implementation
SLF4J: See http://www.slf4j.org/codes.html#StaticLoggerBinder for further details.
0    [main] WARN  pes.access.impl.DeclaredTypeFactory  - --- xtext.common.types ---------------------------------------------------
6    [main] WARN  pes.access.impl.DeclaredTypeFactory  - ASM library is too old. Falling back to java.lang.reflect API.
18   [main] WARN  pes.access.impl.DeclaredTypeFactory  - Please note that no information about compile time constants is available.
19   [main] WARN  pes.access.impl.DeclaredTypeFactory  - It's recommended to use org.objectweb.asm 9.3.0 or better (Maven group id: org.ow2.asm).
19   [main] WARN  pes.access.impl.DeclaredTypeFactory  - --------------------------------------------------------------------------
Alive 28056  5000
Alive 21342  5000
Alive 34426  5000
Ruleset: 
	javax.net.ssl.KeyStoreBuilderParameters
	javax.crypto.spec.PBEKeySpec
	java.security.spec.MGF1ParameterSpec
	java.security.MessageDigest
	javax.crypto.Cipher
	java.security.KeyPair
	javax.crypto.SecretKeyFactory
	java.security.cert.PKIXBuilderParameters
	javax.crypto.SecretKey
	javax.crypto.spec.IvParameterSpec
	javax.crypto.spec.PBEParameterSpec
	javax.net.ssl.TrustManagerFactory
	javax.crypto.spec.GCMParameterSpec
	javax.crypto.spec.SecretKeySpec
	javax.net.ssl.CertPathTrustManagerParameters
	java.security.spec.DSAParameterSpec
	javax.crypto.KeyAgreement
	java.security.cert.TrustAnchor
	javax.crypto.spec.DHParameterSpec
	javax.net.ssl.SSLParameters
	javax.net.ssl.SSLContext
	java.security.Key
	java.security.KeyFactory
	void
	java.security.DigestOutputStream
	java.security.SecureRandom
	java.security.cert.PKIXParameters
	java.security.spec.X509EncodedKeySpec
	javax.crypto.spec.DHGenParameterSpec
	javax.net.ssl.SSLEngine
	java.security.spec.RSAKeyGenParameterSpec
	java.security.Signature
	javax.crypto.CipherOutputStream
	javax.xml.crypto.dsig.spec.HMACParameterSpec
	java.security.AlgorithmParameterGenerator
	javax.crypto.Mac
	javax.crypto.spec.OAEPParameterSpec
	java.security.AlgorithmParameters
	javax.crypto.CipherInputStream
	java.security.DigestInputStream
	java.security.spec.ECParameterSpec
	javax.crypto.KeyGenerator
	java.security.KeyStore
	java.security.spec.ECGenParameterSpec
	java.security.KeyPairGenerator
	javax.net.ssl.KeyManagerFactory
	java.security.spec.DSAGenParameterSpec

Analyzed Objects: 
	Object:
		Variable: $r4
		Type: java.lang.String
		Statement: specialinvoke $r8.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r1, $r4)
		Method: <com.google.android.gms.internal.ads.zzgab: byte[] zze(byte[],byte[],int)>
		SHA-256: 43a0b6bb23e863711891b80da0349e50c7fb0d872b584b8640cb8788bd2624e4
		Secure: false
	Object:
		Variable: $r4
		Type: byte[]
		Statement: $r3 = virtualinvoke $r7.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r4)
		Method: <org.apache.http.impl.auth.NTLMEngineImpl: byte[] lmHash(java.lang.String)>
		SHA-256: e434e791d68a60f06fe542583434387632f0abfeba5cc9c6359369622feae037
		Secure: false
	Object:
		Variable: $r2
		Type: byte[]
		Statement: $r1 = virtualinvoke $r5.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r2)
		Method: <org.apache.http.impl.auth.NTLMEngineImpl$CipherGen: byte[] getLanManagerSessionKey()>
		SHA-256: e7d83409a445bee7d822d6526d85135fa6290a20313d944d0afa314bc32464a
		Secure: false
	Object:
		Variable: $r2
		Type: java.security.MessageDigest
		Statement: $r2 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer4053)
		Method: <com.google.android.gms.internal.ads.zzamq: void run()>
		SHA-256: e3f2f55f6e4723f775f262ed3530884891680c0fd86b9b3e3bfb1e4fe5f96e86
		Secure: false
	Object:
		Variable: $r2
		Type: javax.crypto.spec.SecretKeySpec
		Statement: specialinvoke $r2.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r1, varReplacer112806)
		Method: <com.google.android.gms.internal.ads.zzfzd: void <init>(byte[])>
		SHA-256: f8fff9d4913af2c962b2e5cf205a8510b7d32b8f0c00e03f5353999c5d4707b9
		Secure: false
	Object:
		Variable: $r24
		Type: byte[]
		Statement: $r24 = virtualinvoke $r25.<java.security.MessageDigest: byte[] digest(byte[])>($r24)
		Method: <org.apache.http.impl.auth.DigestScheme: org.apache.http.Header createDigestHeader(org.apache.http.auth.Credentials,org.apache.http.HttpRequest)>
		SHA-256: d6819f5a090592a9c309f7dee8c1d3060c928c197153632cc3c4595ac59ae53a
		Secure: false
	Object:
		Variable: $r5
		Type: java.security.AlgorithmParameters
		Statement: $r5 = staticinvoke <java.security.AlgorithmParameters: java.security.AlgorithmParameters getInstance(java.lang.String,java.security.Provider)>($r3, $r4)
		Method: <org.bouncycastle.jce.provider.X509SignatureUtil: void setSignatureParameters(java.security.Signature,org.bouncycastle.asn1.DEREncodable)>
		SHA-256: 5542b69dc5336cc3d00547288fa7f3d8d3237d121f2ce57576e26391c36e1a8d
		Secure: false
	Object:
		Variable: $r6
		Type: javax.crypto.Cipher
		Statement: $r6 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer113665)
		Method: <org.apache.http.impl.auth.NTLMEngineImpl: byte[] lmResponse(byte[],byte[])>
		SHA-256: 5cf7332c227f4ef9c63a86d12a124781bbc1aeace820183aa3f8b74774a03c64
		Secure: false
	Object:
		Variable: $r3
		Type: javax.crypto.spec.SecretKeySpec
		Statement: specialinvoke $r3.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r1, varReplacer54706)
		Method: <com.google.android.gms.internal.ads.zzaoi: java.lang.String zza(byte[],byte[])>
		SHA-256: 1aba7cb49b60c3adf3aa4f2d46d0e0b10e50b6f3cad83456dbed25b50a0e63c8
		Secure: false
	Object:
		Variable: $r10
		Type: byte[]
		Statement: $i1 = virtualinvoke $r7.<java.security.MessageDigest: int digest(byte[],int,int)>($r10, $i1, $i11)
		Method: <com.google.android.gms.internal.ads.zzaih: byte[][] zzk(int[],com.google.android.gms.internal.ads.zzaib[])>
		SHA-256: a9ce78f17c28b97dc8c31aaf71e13c2e7847a13c49c13137e58178f0f2d8d179
		Secure: true
	Object:
		Variable: $r10
		Type: java.security.spec.ECParameterSpec
		Statement: specialinvoke $r10.<java.security.spec.ECParameterSpec: void <init>(java.security.spec.EllipticCurve,java.security.spec.ECPoint,java.math.BigInteger,int)>($r0, $r1, $r8, $i0)
		Method: <org.bouncycastle.jce.provider.asymmetric.ec.EC5Util: java.security.spec.ECParameterSpec convertSpec(java.security.spec.EllipticCurve,org.bouncycastle.jce.spec.ECParameterSpec)>
		SHA-256: 2dbb4bedacfd822a104521782e3bf91eb66ffda2a8dd5998231726cc0e791ed5
		Secure: true
	Object:
		Variable: $r3
		Type: java.security.KeyFactory
		Statement: $r3 = staticinvoke <java.security.KeyFactory: java.security.KeyFactory getInstance(java.lang.String)>(varReplacer106320)
		Method: <com.google.firebase.installations.local.IidStore: java.security.PublicKey parseKey(java.lang.String)>
		SHA-256: 15f2b789ab0aed3d9c47907d5bf4edac997a5293409919d592c2917dab2e0ae8
		Secure: false
	Object:
		Variable: $r5
		Type: java.security.KeyPairGenerator
		Statement: $r5 = staticinvoke <java.security.KeyPairGenerator: java.security.KeyPairGenerator getInstance(java.lang.String)>(varReplacer110089)
		Method: <com.remotefairy.wifi.androidtv.KeyStoreManager: void createIdentity(java.security.KeyStore,java.lang.String,java.lang.String)>
		SHA-256: 236fbb245c0586c17caefe24fce4d88b7ddd720a7529c55c0585bf4d5570b2f1
		Secure: false
	Object:
		Variable: $r2
		Type: javax.crypto.spec.GCMParameterSpec
		Statement: specialinvoke $r2.<javax.crypto.spec.GCMParameterSpec: void <init>(int,byte[],int,int)>(varReplacer103434, $r0, varReplacer103435, varReplacer103436)
		Method: <com.google.android.gms.internal.ads.zzfyu: java.security.spec.AlgorithmParameterSpec zzc(byte[],int,int)>
		SHA-256: 49675757cd9911694aa6a2024851116f40bcc66645ab4764146e04f4a1581b1e
		Secure: false
	Object:
		Variable: $r23
		Type: java.security.SecureRandom
		Statement: specialinvoke $r23.<java.security.SecureRandom: void <init>()>()
		Method: <com.remotefairy.wifi.androidtv.NetClient: void connectImpl()>
		SHA-256: dbbae10c4e0a71d3a778c48afdfda5c954b0e398f4aff5f79f4d81c890b6ebdf
		Secure: true
	Object:
		Variable: $r2
		Type: byte[]
		Statement: $r2 = virtualinvoke $r9.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r6)
		Method: <com.google.android.gms.internal.ads.zzaoi: byte[] zzb(byte[],java.lang.String)>
		SHA-256: 3830ec86db236084344dc4272257e32e7f2a1c814e8d21c67381d8f169ccb026
		Secure: false
	Object:
		Variable: $r5
		Type: java.security.PublicKey
		Statement: $r5 = virtualinvoke $r3.<java.security.KeyFactory: java.security.PublicKey generatePublic(java.security.spec.KeySpec)>($r4)
		Method: <com.google.firebase.installations.local.IidStore: java.security.PublicKey parseKey(java.lang.String)>
		SHA-256: 28692ce99d5c8ca35ce46bda2fa73a18f9a164f9dc67aed298a1311d42163d12
		Secure: false
	Object:
		Variable: $r3
		Type: java.security.MessageDigest
		Statement: $r3 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer100377)
		Method: <com.google.firebase.installations.local.IidStore: java.lang.String getIdFromPublicKey(java.security.PublicKey)>
		SHA-256: bed6739a9ba06ff3b2dc7be62b20715ec81fdee95e9f4f944100d1996df54485
		Secure: false
	Object:
		Variable: $r7
		Type: javax.crypto.spec.SecretKeySpec
		Statement: specialinvoke $r7.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r2, $r4)
		Method: <com.google.android.gms.internal.ads.zzgab: byte[] zzf(byte[],byte[])>
		SHA-256: 6f8e07140dfe14cb8ec36c9a4fe1c4622d27b1f3637aea14522586432fd0ce3f
		Secure: false
	Object:
		Variable: $r1
		Type: javax.net.ssl.SSLContext
		Statement: $r1 = staticinvoke <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String)>(varReplacer83538)
		Method: <com.remotefairy.wifi.util.BitmapCache$BitpmapSSLSocketFactory: void <init>(com.remotefairy.wifi.util.BitmapCache,java.security.KeyStore)>
		SHA-256: 82873e6fa0a86afd98fad525cbe876144654433bbfb382217f873efe7d0f7e5f
		Secure: false
	Object:
		Variable: $r8
		Type: byte[]
		Statement: $r8 = virtualinvoke $r7.<java.security.MessageDigest: byte[] digest()>()
		Method: <com.google.android.gms.internal.ads.zzcfb: java.lang.String zzd()>
		SHA-256: 8f86f6440616a81935d4c5dc0f12e0a1fccef894f6780f844b788d757e17fdc6
		Secure: false
	Object:
		Variable: $r1
		Type: byte[]
		Statement: $r1 = virtualinvoke $r4.<java.security.MessageDigest: byte[] digest(byte[])>($r1)
		Method: <org.apache.http.impl.auth.NTLMEngineImpl$Type3Message: byte[] addGssMicAvsToTargetInfo(byte[],java.security.cert.Certificate)>
		SHA-256: 680c47ea8368fb5330a6512f392b4c24181a0f8e9f968ac96396d96fdc643e03
		Secure: true
	Object:
		Variable: $r15
		Type: java.security.PrivateKey
		Statement: $r15 = virtualinvoke $r14.<java.security.KeyFactory: java.security.PrivateKey generatePrivate(java.security.spec.KeySpec)>($r11)
		Method: <com.google.android.gms.internal.ads.zzfzm: java.lang.Object zza(com.google.android.gms.internal.ads.zzgma)>
		SHA-256: 5d907e6fb4b1a72220f8401ecbf16afc85c7c66a40c815ca5c0ca334feddc1a
		Secure: false
	Object:
		Variable: $r1
		Type: javax.crypto.Cipher
		Statement: $r1 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer38162)
		Method: <com.google.android.gms.internal.ads.zzaoi: javax.crypto.Cipher zzc()>
		SHA-256: 8d82b58e5dcfd3478be5400d8c4cd3903aff8a6f28b80cff475c55ba0a6d8364
		Secure: false
	Object:
		Variable: $r1
		Type: javax.crypto.spec.IvParameterSpec
		Statement: specialinvoke $r1.<javax.crypto.spec.IvParameterSpec: void <init>(byte[],int,int)>($r0, varReplacer103432, varReplacer103433)
		Method: <com.google.android.gms.internal.ads.zzfyu: java.security.spec.AlgorithmParameterSpec zzc(byte[],int,int)>
		SHA-256: a982dcdfd51e11282c0865dd80642918aa2d9fa4705550fefa06552ab58e2372
		Secure: false
	Object:
		Variable: $r5
		Type: javax.net.ssl.KeyManager[]
		Statement: $r5 = virtualinvoke $r3.<javax.net.ssl.KeyManagerFactory: javax.net.ssl.KeyManager[] getKeyManagers()>()
		Method: <com.colortiger.atvp.KeyStoreManager: javax.net.ssl.KeyManager[] getKeyManagers()>
		SHA-256: d617a14b49662629f0b204812884e372269ad388bdab979b923401d164e8f2eb
		Secure: false
	Object:
		Variable: $r24
		Type: byte[]
		Statement: $r24 = virtualinvoke $r25.<java.security.MessageDigest: byte[] digest(byte[])>($r24)
		Method: <org.apache.http.impl.auth.DigestScheme: org.apache.http.Header createDigestHeader(org.apache.http.auth.Credentials,org.apache.http.HttpRequest)>
		SHA-256: d6819f5a090592a9c309f7dee8c1d3060c928c197153632cc3c4595ac59ae53a
		Secure: false
	Object:
		Variable: $r1
		Type: byte[]
		Statement: virtualinvoke $r0.<java.security.SecureRandom: void nextBytes(byte[])>($r1)
		Method: <com.google.android.gms.internal.ads.zzgav: int zza()>
		SHA-256: 1816202f682f09f344957cb4ddebcb3b84fb92fcab6092460e019f996eb36303
		Secure: true
	Object:
		Variable: $r3
		Type: java.security.KeyFactory
		Statement: $r3 = staticinvoke <java.security.KeyFactory: java.security.KeyFactory getInstance(java.lang.String)>($r2)
		Method: <com.google.android.gms.internal.ads.zzghv: java.lang.Object zza(java.lang.String,java.security.Provider)>
		SHA-256: c6a33797526f211cef9d9c4ce6d1253c8407fcd101f6620c5b3e0846ee90f9e3
		Secure: false
	Object:
		Variable: $r2
		Type: java.security.Signature
		Statement: $r2 = staticinvoke <java.security.Signature: java.security.Signature getInstance(java.lang.String,java.lang.String)>($r1, $r0)
		Method: <org.bouncycastle.x509.X509Util: java.security.Signature getSignatureInstance(java.lang.String,java.lang.String)>
		SHA-256: 3b30b0fde419d036179f221fab0c1cb9b3a1335e21241c8626c0401b1773651e
		Secure: false
	Object:
		Variable: $r1
		Type: byte[]
		Statement: $r1 = virtualinvoke $r2.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r1)
		Method: <com.google.android.gms.internal.ads.zzgif: byte[] zza(byte[],int)>
		SHA-256: c5aa9854809e063c696cf45da4c94d4c25d63825543007d8fb052d324b7e47bb
		Secure: false
	Object:
		Variable: $r7
		Type: byte[]
		Statement: $r7 = virtualinvoke $r6.<java.security.Signature: byte[] sign()>()
		Method: <org.bouncycastle.x509.X509Util: byte[] calculateSignature(org.bouncycastle.asn1.DERObjectIdentifier,java.lang.String,java.lang.String,java.security.PrivateKey,java.security.SecureRandom,org.bouncycastle.asn1.ASN1Encodable)>
		SHA-256: 8f9e970e545d7c1fd3f47237528ebb83d728c243c477833c13330695fb8754ec
		Secure: false
	Object:
		Variable: $r2
		Type: java.security.SecureRandom
		Statement: specialinvoke $r2.<java.security.SecureRandom: void <init>()>()
		Method: <org.bouncycastle.crypto.encodings.OAEPEncoding: void init(boolean,org.bouncycastle.crypto.CipherParameters)>
		SHA-256: 2927d56a192959dc3453ff63fb3830152d4c89781cce727cc1398f859f78edbf
		Secure: true
	Object:
		Variable: $r2
		Type: byte[]
		Statement: $r2 = virtualinvoke $r3.<java.security.MessageDigest: byte[] digest(byte[])>($r2)
		Method: <com.google.firebase.installations.local.IidStore: java.lang.String getIdFromPublicKey(java.security.PublicKey)>
		SHA-256: ad220c352da86335809a3322a312a9e0b628e3ee4c76f8896e52fc09c31946dd
		Secure: false
	Object:
		Variable: $r9
		Type: java.security.MessageDigest
		Statement: $r9 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer93496)
		Method: <com.neovisionaries.ws.client.HandshakeReader: void validateAccept(com.neovisionaries.ws.client.StatusLine,java.util.Map,java.lang.String)>
		SHA-256: 76910cff0b601f739c0a63e1c5cc42e6406fd2bf22abfeddbbee2ea5da60bf7e
		Secure: false
	Object:
		Variable: $r2
		Type: javax.net.ssl.SSLContext
		Statement: $r2 = staticinvoke <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String)>(varReplacer94977)
		Method: <okhttp3.OkHttpClient: javax.net.ssl.SSLSocketFactory systemDefaultSslSocketFactory(javax.net.ssl.X509TrustManager)>
		SHA-256: d73ac08191f9e0fa68382e8a5ec7cce8c6d9bfc03ebe39f3578558fe20f7ff40
		Secure: false
	Object:
		Variable: $r16
		Type: java.security.MessageDigest
		Statement: $r16 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer5572)
		Method: <com.remotefairy.wifi.apple.itunes.service.ITunesService$1: void run()>
		SHA-256: cda4baffccb69f820929254f82908aa8c8094d74cd1ea98ed7bfacf28a512b3b
		Secure: false
	Object:
		Variable: varReplacer112680
		Type: java.lang.String
		Statement: specialinvoke $r0.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r2, varReplacer112680)
		Method: <org.apache.http.impl.auth.NTLMEngineImpl: byte[] RC4(byte[],byte[])>
		SHA-256: 3662051d1a95d5ae89b6539673f5b8bda3773d17496448abfb9bb3f3a4dbf39e
		Secure: false
	Object:
		Variable: $r7
		Type: byte[]
		Statement: $r7 = virtualinvoke $r5.<java.security.MessageDigest: byte[] digest(byte[])>($r7)
		Method: <com.google.android.gms.common.util.AndroidUtilsLight: byte[] getPackageCertificateHashBytes(android.content.Context,java.lang.String)>
		SHA-256: b1b700d3bac9a15845b2a1446581968f445f05df9861b6e2918912b25ad1a23d
		Secure: false
	Object:
		Variable: $r1
		Type: java.lang.String
		Statement: specialinvoke $r39.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r23, $r1)
		Method: <com.google.android.gms.internal.ads.zzghp: com.google.android.gms.internal.ads.zzgho zza(java.lang.String,byte[],byte[],int,int)>
		SHA-256: 9896961845073283c2a41ec4500499affd546d5fc8d166fcea91c1f6abac7105
		Secure: false
	Object:
		Variable: $r8
		Type: java.security.KeyPair
		Statement: specialinvoke $r8.<java.security.KeyPair: void <init>(java.security.PublicKey,java.security.PrivateKey)>($r9, $r11)
		Method: <org.bouncycastle.jce.provider.asymmetric.ec.KeyPairGenerator$EC: java.security.KeyPair generateKeyPair()>
		SHA-256: d9e2f39572bafdef352b6e52cc94072cbad377c21f375b517ddaa93bc433d091
		Secure: false
	Object:
		Variable: $r2
		Type: java.security.spec.ECParameterSpec
		Statement: specialinvoke $r2.<java.security.spec.ECParameterSpec: void <init>(java.security.spec.EllipticCurve,java.security.spec.ECPoint,java.math.BigInteger,int)>($r1, $r3, $r7, $i0)
		Method: <org.bouncycastle.jce.provider.JCEECPublicKey: java.security.spec.ECParameterSpec createSpec(java.security.spec.EllipticCurve,org.bouncycastle.crypto.params.ECDomainParameters)>
		SHA-256: e4230e33eea8a474eb596ccb8bfea5eb71a12682a534b8ccd5e3e457e03d4934
		Secure: true
	Object:
		Variable: $r3
		Type: java.security.SecureRandom
		Statement: specialinvoke $r3.<java.security.SecureRandom: void <init>()>()
		Method: <org.bouncycastle.crypto.signers.GOST3410Signer: void init(boolean,org.bouncycastle.crypto.CipherParameters)>
		SHA-256: 61b7887e2cfe6269c9dc5ed1565a2d9c81d2ae6237d2a5bf20c73d26a54cd85c
		Secure: true
	Object:
		Variable: $r3
		Type: java.security.KeyFactory
		Statement: $r3 = staticinvoke <java.security.KeyFactory: java.security.KeyFactory getInstance(java.lang.String,java.security.Provider)>($r2, $r1)
		Method: <com.google.android.gms.internal.ads.zzghv: java.lang.Object zza(java.lang.String,java.security.Provider)>
		SHA-256: 7d44549b1d84338e868fab5034a2ea8c0a6fe15dc6af2fd51dfc63331b331a47
		Secure: false
	Object:
		Variable: $r10
		Type: javax.crypto.spec.IvParameterSpec
		Statement: specialinvoke $r10.<javax.crypto.spec.IvParameterSpec: void <init>(byte[])>($r4)
		Method: <com.google.android.gms.internal.ads.zzghd: byte[] zzb(byte[],byte[])>
		SHA-256: 42d09f97d03c3b31ea8fb33b14e64d4f863adcbf8b48a4f73453805d1b27e9fb
		Secure: false
	Object:
		Variable: $r6
		Type: byte[]
		Statement: $r6 = virtualinvoke $r5.<java.security.MessageDigest: byte[] digest(byte[])>($r6)
		Method: <com.google.android.gms.common.zzm: java.lang.String zzc(boolean,java.lang.String,com.google.android.gms.common.zzi)>
		SHA-256: 32545d2a6e3a346329f62774c4cf40147b4b80d26df06d430d2ebe09bf733d90
		Secure: false
	Object:
		Variable: $r0
		Type: java.security.MessageDigest
		Statement: $r0 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>($r2)
		Method: <com.google.android.gms.common.util.AndroidUtilsLight: java.security.MessageDigest zza(java.lang.String)>
		SHA-256: c613dcbe025721f48d3fcab4e003017d7cb704971fc9d0296bae42be0b7eb30a
		Secure: false
	Object:
		Variable: $r5
		Type: java.security.MessageDigest
		Statement: $r5 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer15297)
		Method: <com.google.android.gms.internal.ads.zzcfb: java.lang.String zze(java.lang.String)>
		SHA-256: acd17450e94feb78725a8e46884005d0de2707578c2c101df0a83f45c052250d
		Secure: false
	Object:
		Variable: $r10
		Type: javax.crypto.spec.DHParameterSpec
		Statement: specialinvoke $r10.<javax.crypto.spec.DHParameterSpec: void <init>(java.math.BigInteger,java.math.BigInteger,int)>($r9, $r11, $i0)
		Method: <org.bouncycastle.jce.provider.JCEDHPublicKey: void <init>(org.bouncycastle.asn1.x509.SubjectPublicKeyInfo)>
		SHA-256: 316438c0106940a389f9c804774e753a14b8dfab25a5c6803d234dfb7fa3f08c
		Secure: true
	Object:
		Variable: $r2
		Type: javax.crypto.spec.SecretKeySpec
		Statement: specialinvoke $r2.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r1, varReplacer113657)
		Method: <org.apache.http.impl.auth.NTLMEngineImpl: java.security.Key createDESKey(byte[],int)>
		SHA-256: 62ddb2662572fc8c623a26c69377be8bef7c90f97b6071a57460bddd4da4f29
		Secure: false
	Object:
		Variable: varReplacer111473
		Type: java.lang.String
		Statement: specialinvoke $r1.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r6, varReplacer111473)
		Method: <com.google.android.gms.internal.ads.zzgaz: java.lang.Object zza(com.google.android.gms.internal.ads.zzgma)>
		SHA-256: 36ce30e64bf9877ffdfa847bcfb0958b966a8840b9aa8451b7116754a3feed66
		Secure: false
	Object:
		Variable: $r3
		Type: java.security.Signature
		Statement: $r3 = staticinvoke <java.security.Signature: java.security.Signature getInstance(java.lang.String,java.security.Provider)>($r2, $r1)
		Method: <com.google.android.gms.internal.ads.zzghz: java.lang.Object zza(java.lang.String,java.security.Provider)>
		SHA-256: 9cb5e418a36b4dae80761063e180239737d8bcf1227d67b7df57ef6f67531fb6
		Secure: false
	Object:
		Variable: $r6
		Type: java.security.MessageDigest
		Statement: $r6 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer62541)
		Method: <org.java_websocket.drafts.Draft_76: byte[] createChallenge(java.lang.String,java.lang.String,byte[])>
		SHA-256: 7caf05e1b340a62dd23e02f7c1f40971b31238441329ee2d4469e8e8402b08b7
		Secure: false
	Object:
		Variable: $r2
		Type: javax.crypto.spec.GCMParameterSpec
		Statement: specialinvoke $r2.<javax.crypto.spec.GCMParameterSpec: void <init>(int,byte[],int,int)>(varReplacer94844, $r1, varReplacer94845, $i0)
		Method: <com.google.android.gms.internal.ads.zzfzd: java.security.spec.AlgorithmParameterSpec zzc(byte[],int,int)>
		SHA-256: bc8f08b366e72bc0e3406d20cc790e407d2f20e2d8e77a59b42550183645d0b3
		Secure: false
	Object:
		Variable: $r2
		Type: java.security.Signature
		Statement: $r2 = staticinvoke <java.security.Signature: java.security.Signature getInstance(java.lang.String)>($r1)
		Method: <org.bouncycastle.x509.X509Util: java.security.Signature getSignatureInstance(java.lang.String,java.lang.String)>
		SHA-256: f2111809ecb4309ae2437e31fabdc1229e5a2ea016a54ebef99506eaa0a13e3
		Secure: false
	Object:
		Variable: $r1
		Type: javax.crypto.spec.IvParameterSpec
		Statement: specialinvoke $r1.<javax.crypto.spec.IvParameterSpec: void <init>(byte[])>($r4)
		Method: <com.google.android.gms.internal.ads.zzaoi: byte[] zzb(byte[],java.lang.String)>
		SHA-256: f4b8aa5f9d06e1da5dca35b52f5a9a9b088e4598ce2d593d0411cb5098106e14
		Secure: false
	Object:
		Variable: $r1
		Type: byte[]
		Statement: $r1 = virtualinvoke $r3.<java.security.MessageDigest: byte[] digest()>()
		Method: <com.google.firebase.crashlytics.internal.common.CommonUtils: java.lang.String hash(byte[],java.lang.String)>
		SHA-256: 847e78157c93691b2ae119253de6302419d14276894c4ea2f7fe9fb898fdae56
		Secure: false
	Object:
		Variable: $r5
		Type: byte[]
		Statement: virtualinvoke $r2.<javax.crypto.Cipher: byte[] update(byte[])>($r5)
		Method: <com.remotefairy.wifi.adb.AdbCrypto: byte[] signAdbTokenPayload(byte[])>
		SHA-256: d5b4d63d53bde21e6219b3f8d33f2632c40432fbdb82fd01f63755164911d159
		Secure: false
	Object:
		Variable: varReplacer112804
		Type: java.lang.String
		Statement: specialinvoke $r2.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r1, varReplacer112804)
		Method: <com.google.android.gms.internal.ads.zzgif: void <init>(byte[])>
		SHA-256: 8efa9e4c3870b7ff5d44c54df268262f591962190c298ac14c1d05a3f5dd87a8
		Secure: false
	Object:
		Variable: $r0
		Type: byte[]
		Statement: $r0 = virtualinvoke $r6.<java.security.MessageDigest: byte[] digest(byte[])>($r5)
		Method: <org.java_websocket.drafts.Draft_76: byte[] createChallenge(java.lang.String,java.lang.String,byte[])>
		SHA-256: 16e619ea7c854d11cc270eb86e829bea4bc898fa31dd1105d925d1d093de6373
		Secure: false
	Object:
		Variable: $r5
		Type: byte[]
		Statement: $r1 = virtualinvoke $r4.<java.security.MessageDigest: byte[] digest(byte[])>($r5)
		Method: <org.apache.http.impl.auth.NTLMEngineImpl$Type3Message: byte[] addGssMicAvsToTargetInfo(byte[],java.security.cert.Certificate)>
		SHA-256: 7f633aab27c580a5c0fc6c5d05050debe1a3f35a224ea39fdf4f1240ed29d56
		Secure: false
	Object:
		Variable: $r4
		Type: java.security.MessageDigest
		Statement: $r4 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer113612)
		Method: <org.apache.http.impl.auth.NTLMEngineImpl$Type3Message: byte[] addGssMicAvsToTargetInfo(byte[],java.security.cert.Certificate)>
		SHA-256: a767dab680e562c3480f5970818fec3e52045ff6f339c06b5513b730ed921d5f
		Secure: true
	Object:
		Variable: varReplacer38146
		Type: java.lang.String
		Statement: specialinvoke $r7.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r2, varReplacer38146)
		Method: <com.google.android.gms.internal.ads.zzaoi: byte[] zzb(byte[],java.lang.String)>
		SHA-256: 413d4d33d7cc5282d5002af51ae6d728c10071eaf8de2734a1f7f5b3c333b00a
		Secure: false
	Object:
		Variable: $r1
		Type: javax.net.ssl.SSLContext
		Statement: $r1 = staticinvoke <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String)>(varReplacer75263)
		Method: <com.connectsdk16.service.webos.WebOSTVServiceSocketClient: void setupSSL()>
		SHA-256: 5c9f893662b0044f3e03de790b9cb2f7a7eb5c08d70d63f6cad7b5c5280c71c9
		Secure: false
	Object:
		Variable: $r4
		Type: javax.net.ssl.TrustManagerFactory
		Statement: $r4 = staticinvoke <javax.net.ssl.TrustManagerFactory: javax.net.ssl.TrustManagerFactory getInstance(java.lang.String)>($r3)
		Method: <org.apache.http.conn.ssl.SSLContextBuilder: org.apache.http.conn.ssl.SSLContextBuilder loadTrustMaterial(java.security.KeyStore,org.apache.http.conn.ssl.TrustStrategy)>
		SHA-256: b77e133780e27b7a4719f62065fe00ca2e6ad2d6c10325dee63b7da3f72090e
		Secure: false
	Object:
		Variable: $r3
		Type: java.security.SecureRandom
		Statement: specialinvoke $r3.<java.security.SecureRandom: void <init>()>()
		Method: <org.bouncycastle.crypto.signers.ECDSASigner: void init(boolean,org.bouncycastle.crypto.CipherParameters)>
		SHA-256: 15a17ef588bd5dd9ee400977479f85c58fcdc22fa11ae1e18eff26c65ec63bf1
		Secure: true
	Object:
		Variable: $r4
		Type: javax.net.ssl.SSLContext
		Statement: $r4 = staticinvoke <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String)>(varReplacer47333)
		Method: <com.google.polo.ssl.SSLSocketFactoryWrapper: void <init>(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[])>
		SHA-256: e399b5264947ba8e8e93fd61f9c40fb4e747eb2c694147c740f894a38e1a3278
		Secure: false
	Object:
		Variable: $r12
		Type: javax.crypto.spec.IvParameterSpec
		Statement: specialinvoke $r12.<javax.crypto.spec.IvParameterSpec: void <init>(byte[])>($r8)
		Method: <com.google.android.gms.internal.ads.zzghf: byte[] zza(byte[],byte[])>
		SHA-256: ad5a0d97f793b2ec123dfa9d2eae7a886507e083c8f6f958428d9beb8a1d1d3d
		Secure: false
	Object:
		Variable: $r8
		Type: javax.crypto.spec.IvParameterSpec
		Statement: specialinvoke $r8.<javax.crypto.spec.IvParameterSpec: void <init>(byte[])>($r7)
		Method: <com.google.android.gms.internal.ads.zzgha: void zzc(byte[],int,int,byte[],int,byte[],boolean)>
		SHA-256: ad2ba5d578498fa048769dfbcc9456283ae9fdaa43038820d7c77e47380602ab
		Secure: false
	Object:
		Variable: $r1
		Type: byte[]
		Statement: $r1 = virtualinvoke $r3.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r1)
		Method: <com.google.android.gms.internal.ads.zzgif: void <init>(byte[])>
		SHA-256: c8e2b79f91ea18967f608c76eaa3fb9ecbe3e179756612200ebc86fddbe15bfb
		Secure: false
	Object:
		Variable: $r1
		Type: java.security.KeyPair
		Statement: specialinvoke $r1.<java.security.KeyPair: void <init>(java.security.PublicKey,java.security.PrivateKey)>($r2, $r8)
		Method: <org.bouncycastle.jce.provider.JDKKeyPairGenerator$RSA: java.security.KeyPair generateKeyPair()>
		SHA-256: 136d4b76ab6dd9daa97d750a4e3f339d9893a4a816260659097c28c15016535e
		Secure: false
	Object:
		Variable: $r4
		Type: java.security.SecureRandom
		Statement: specialinvoke $r4.<java.security.SecureRandom: void <init>()>()
		Method: <org.bouncycastle.crypto.signers.ISO9796d2PSSSigner: void init(boolean,org.bouncycastle.crypto.CipherParameters)>
		SHA-256: 6dae500fa4127477f702f7c8db5b65ac00e8420fed109375c053548083b8d090
		Secure: true
	Object:
		Variable: $r0
		Type: javax.net.ssl.SSLContext
		Statement: $r0 = staticinvoke <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String)>(varReplacer8441)
		Method: <org.apache.http.conn.ssl.SSLContexts: javax.net.ssl.SSLContext createDefault()>
		SHA-256: 57a1ff35656df8a7f946fe592b72ffa87913d3370ededf0a44aa76cdaac54c19
		Secure: false
	Object:
		Variable: $r0
		Type: javax.crypto.spec.SecretKeySpec
		Statement: specialinvoke $r0.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r2, varReplacer112680)
		Method: <org.apache.http.impl.auth.NTLMEngineImpl: byte[] RC4(byte[],byte[])>
		SHA-256: 802dc075aeb760b8c9ab76083033b39a1febb1afb868c4d659f65e8f2185740f
		Secure: false
	Object:
		Variable: $r12
		Type: java.security.PublicKey
		Statement: $r12 = virtualinvoke $r8.<java.security.KeyFactory: java.security.PublicKey generatePublic(java.security.spec.KeySpec)>($r10)
		Method: <com.remotefairy.wifi.adb.AdbCrypto: com.remotefairy.wifi.adb.AdbCrypto loadAdbKeyPair(com.remotefairy.wifi.adb.AdbBase64,java.io.File,java.io.File)>
		SHA-256: 30023c42fb346fd6ed968b5781192a5e12a880f419c295ed8bd53ba9280c8982
		Secure: false
	Object:
		Variable: $r5
		Type: byte[]
		Statement: $r5 = virtualinvoke $r2.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r5)
		Method: <com.google.android.gms.internal.ads.zzgif: byte[] zza(byte[],int)>
		SHA-256: 2b5943a4b98f79eed8cf453a9db816befc24871c5c0318b420d59069f8c14014
		Secure: false
	Object:
		Variable: $r3
		Type: java.security.MessageDigest
		Statement: $r3 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>($r2)
		Method: <com.google.firebase.crashlytics.internal.common.CommonUtils: java.lang.String hash(byte[],java.lang.String)>
		SHA-256: 7fb5e1ca4e0ccb41306f524bfa8fe0a452898cd3171e10ddd8d49eb5eb47dc5a
		Secure: false
	Object:
		Variable: $r8
		Type: java.security.PublicKey
		Statement: $r8 = virtualinvoke $r5.<java.security.KeyPair: java.security.PublicKey getPublic()>()
		Method: <com.remotefairy.wifi.adb.AdbCrypto: void saveAdbKeyPair(java.io.File,java.io.File)>
		SHA-256: 33fba0b135dc6745d2fb4e27420b9d4d00215f6f9baec471274e587129422c63
		Secure: true
	Object:
		Variable: $r10
		Type: java.security.KeyPair
		Statement: specialinvoke $r10.<java.security.KeyPair: void <init>(java.security.PublicKey,java.security.PrivateKey)>($r11, $r12)
		Method: <org.bouncycastle.jce.provider.JDKKeyPairGenerator$DSA: java.security.KeyPair generateKeyPair()>
		SHA-256: cd2cffaab84acda3dbc4b3a5b4e8c8e233e60e25e1f2ef93df59bc1776e8954c
		Secure: false
	Object:
		Variable: $r5
		Type: javax.net.ssl.TrustManagerFactory
		Statement: $r5 = staticinvoke <javax.net.ssl.TrustManagerFactory: javax.net.ssl.TrustManagerFactory getInstance(java.lang.String)>($r4)
		Method: <com.remotefairy.wifi.androidtv.KeyStoreManager$DynamicTrustManager: void reloadTrustManager(java.security.KeyStore)>
		SHA-256: 5ffa9bb7b54b7457bcc504a769663154dcccf02bcde83833e410717201fe83da
		Secure: false
	Object:
		Variable: $r6
		Type: javax.net.ssl.TrustManager[]
		Statement: $r6 = virtualinvoke $r5.<javax.net.ssl.TrustManagerFactory: javax.net.ssl.TrustManager[] getTrustManagers()>()
		Method: <com.colortiger.atvp.KeyStoreManager$DynamicTrustManager: void reloadTrustManager(java.security.KeyStore)>
		SHA-256: c414fd988bf532fb1371c33e11cc4773b834f24b198aea3c5dd0d20121ff0cb0
		Secure: true
	Object:
		Variable: $r10
		Type: javax.crypto.spec.DHParameterSpec
		Statement: specialinvoke $r10.<javax.crypto.spec.DHParameterSpec: void <init>(java.math.BigInteger,java.math.BigInteger)>($r9, $r11)
		Method: <org.bouncycastle.jce.provider.JCEDHPublicKey: void <init>(org.bouncycastle.asn1.x509.SubjectPublicKeyInfo)>
		SHA-256: 77e3b0227b3d79fdb34af5f9263da31e872ac95e500d3d6f0800abd0212318b1
		Secure: true
	Object:
		Variable: $r7
		Type: java.security.MessageDigest
		Statement: $r7 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer10507)
		Method: <com.google.android.gms.internal.ads.zzcfb: java.lang.String zzd()>
		SHA-256: 8358a93c1f324fcf4740ef850e20f98398d9e94c58372ba67535da75cfbc6ee0
		Secure: false
	Object:
		Variable: $r2
		Type: java.security.KeyStore
		Statement: $r2 = staticinvoke <java.security.KeyStore: java.security.KeyStore getInstance(java.lang.String)>($r6)
		Method: <com.colortiger.atvp.KeyStoreManager: java.security.KeyStore createIdentityKeyStore()>
		SHA-256: fce107a500776573c2391170099b0f5113437f61e71d293eab86e835185375c8
		Secure: true
	Object:
		Variable: $r1
		Type: byte[]
		Statement: $r1 = virtualinvoke $r2.<java.security.MessageDigest: byte[] digest()>()
		Method: <org.apache.http.impl.auth.HttpEntityDigester: void close()>
		SHA-256: 6e2f49082bf8a753b36c08d597efa7282d12c9a9b9a86cb704dfeec77e918e7c
		Secure: false
	Object:
		Variable: $r17
		Type: byte[]
		Statement: $r17 = virtualinvoke $r16.<java.security.MessageDigest: byte[] digest()>()
		Method: <com.remotefairy.wifi.apple.itunes.service.ITunesService$1: void run()>
		SHA-256: 5db72ce76a52702180e0acb24e18f44d19bb20b3951f6c3235bd8d489da85ab3
		Secure: false
	Object:
		Variable: varReplacer106320
		Type: java.lang.String
		Statement: $r3 = staticinvoke <java.security.KeyFactory: java.security.KeyFactory getInstance(java.lang.String)>(varReplacer106320)
		Method: <com.google.firebase.installations.local.IidStore: java.security.PublicKey parseKey(java.lang.String)>
		SHA-256: 52bf275e0e374a761e6a4f85bf1d0899f42c544a95fa83521a70c01f9cc2098c
		Secure: false
	Object:
		Variable: $r6
		Type: javax.net.ssl.TrustManager[]
		Statement: $r6 = virtualinvoke $r5.<javax.net.ssl.TrustManagerFactory: javax.net.ssl.TrustManager[] getTrustManagers()>()
		Method: <com.remotefairy.wifi.androidtv.KeyStoreManager$DynamicTrustManager: void reloadTrustManager(java.security.KeyStore)>
		SHA-256: 42c58dae4de7a8c60dccf9a180dd752b63e160c3e11fb292182a0b02f04ae147
		Secure: false
	Object:
		Variable: $r5
		Type: java.lang.Object[]
		Statement: $r5 = virtualinvoke $r4.<javax.net.ssl.TrustManagerFactory: javax.net.ssl.TrustManager[] getTrustManagers()>()
		Method: <org.apache.http.conn.ssl.SSLContextBuilder: org.apache.http.conn.ssl.SSLContextBuilder loadTrustMaterial(java.security.KeyStore,org.apache.http.conn.ssl.TrustStrategy)>
		SHA-256: 9f9708fb937d216a28e8f92ce8f3db487c928cf585b13baaf28dbb6408b6c053
		Secure: false
	Object:
		Variable: $r3
		Type: javax.net.ssl.KeyManagerFactory
		Statement: $r3 = staticinvoke <javax.net.ssl.KeyManagerFactory: javax.net.ssl.KeyManagerFactory getInstance(java.lang.String)>($r2)
		Method: <com.colortiger.atvp.KeyStoreManager: javax.net.ssl.KeyManager[] getKeyManagers()>
		SHA-256: 142b80b0eb3c6099520f9c1be31bea3a59f6bf3f0a6e62a7d8eb3d47737f06c5
		Secure: false
	Object:
		Variable: $r2
		Type: java.security.KeyStore
		Statement: $r2 = staticinvoke <java.security.KeyStore: java.security.KeyStore getInstance(java.lang.String)>(varReplacer110082)
		Method: <com.remotefairy.wifi.androidtv.KeyStoreManager: java.security.KeyStore createIdentityKeyStore()>
		SHA-256: d2ddbde5cbe2090d507f3ad3ebd5d4a169be523fee1fb4eda9924e3ca54bb430
		Secure: false
	Object:
		Variable: $r1
		Type: byte[]
		Statement: $r0 = virtualinvoke $r6.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r1)
		Method: <org.apache.http.impl.auth.NTLMEngineImpl: byte[] lmResponse(byte[],byte[])>
		SHA-256: f3032edeac7c36138c9692e3752032f05ac7c2bf8405b2ac66a1a7396af18c32
		Secure: false
	Object:
		Variable: $r10
		Type: java.security.spec.ECParameterSpec
		Statement: specialinvoke $r10.<java.security.spec.ECParameterSpec: void <init>(java.security.spec.EllipticCurve,java.security.spec.ECPoint,java.math.BigInteger,int)>($r9, $r11, $r6, $i0)
		Method: <org.bouncycastle.jce.provider.JCEECPrivateKey: void <init>(java.lang.String,org.bouncycastle.crypto.params.ECPrivateKeyParameters,org.bouncycastle.jce.spec.ECParameterSpec)>
		SHA-256: 848fb8ebcf5e9a377734daa259f629e3bae537a67e5014eb0ce8d3e881617554
		Secure: true
	Object:
		Variable: $r13
		Type: java.security.PrivateKey
		Statement: $r13 = virtualinvoke $r8.<java.security.KeyFactory: java.security.PrivateKey generatePrivate(java.security.spec.KeySpec)>($r9)
		Method: <com.remotefairy.wifi.adb.AdbCrypto: com.remotefairy.wifi.adb.AdbCrypto loadAdbKeyPair(com.remotefairy.wifi.adb.AdbBase64,java.io.File,java.io.File)>
		SHA-256: a6c857293cde3d45d02040af50dfca6b345c9cfefebbc58fe2e9a0be7328ecec
		Secure: false
	Object:
		Variable: $r7
		Type: javax.crypto.spec.SecretKeySpec
		Statement: specialinvoke $r7.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r2, $r4)
		Method: <com.google.android.gms.internal.ads.zzgab: byte[] zzf(byte[],byte[])>
		SHA-256: 6f8e07140dfe14cb8ec36c9a4fe1c4622d27b1f3637aea14522586432fd0ce3f
		Secure: false
	Object:
		Variable: $r38
		Type: java.security.spec.ECParameterSpec
		Statement: specialinvoke $r38.<java.security.spec.ECParameterSpec: void <init>(java.security.spec.EllipticCurve,java.security.spec.ECPoint,java.math.BigInteger,int)>($r19, $r33, $r20, $i0)
		Method: <org.bouncycastle.jce.provider.JCEECPublicKey: void <init>(org.bouncycastle.asn1.x509.SubjectPublicKeyInfo)>
		SHA-256: fec3637f8547aed6b67f39df6e7460ced174a2b6307b3a1f077a796dcd3c252a
		Secure: true
	Object:
		Variable: $r7
		Type: java.security.MessageDigest
		Statement: $r7 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>($r6)
		Method: <com.google.android.gms.internal.ads.zzaih: byte[][] zzk(int[],com.google.android.gms.internal.ads.zzaib[])>
		SHA-256: 580bdd0daa91294292f086408ff8e81e6996471e749a97fb2cad1a8b855bfa14
		Secure: true
	Object:
		Variable: $r2
		Type: java.security.KeyStore
		Statement: $r2 = staticinvoke <java.security.KeyStore: java.security.KeyStore getInstance(java.lang.String)>(varReplacer80193)
		Method: <com.colortiger.atvp.KeyStoreManager: java.security.KeyStore createIdentityKeyStore()>
		SHA-256: 9b4f3551f8aefe100ee5fb4f9bf140886b4e423f06c5fe6d34f0df292e3c633b
		Secure: false
	Object:
		Variable: $r16
		Type: java.security.MessageDigest
		Statement: $r16 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer5532)
		Method: <com.remotefairy.wifi.itunes.service.ITunesService$1: void run()>
		SHA-256: 29a5210f2e771d4faab6d03af7571b70f6db4ba5a3b8bd379bf9b30b158b287e
		Secure: false
	Object:
		Variable: $r6
		Type: java.security.MessageDigest
		Statement: $r6 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer64224)
		Method: <com.google.android.gms.internal.ads.zzfkp: boolean zza(java.io.File)>
		SHA-256: 1c82b881bf599a942b2e3513e5e9f99961ca363f0f2fe5f0cbcdf19885c7bbc9
		Secure: true
	Object:
		Variable: $z0
		Type: boolean
		Statement: $z0 = virtualinvoke $r2.<java.security.Signature: boolean verify(byte[])>($r8)
		Method: <org.bouncycastle.jce.provider.X509CertificateObject: void checkSignature(java.security.PublicKey,java.security.Signature)>
		SHA-256: 55c0ef59d2e8f2d9e7c3b9d886f8a0561a8e9e82e242551a90594b801b63073c
		Secure: false
	Object:
		Variable: $r1
		Type: java.lang.String
		Statement: specialinvoke $r39.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r2, $r1)
		Method: <com.google.android.gms.internal.ads.zzghp: com.google.android.gms.internal.ads.zzgho zza(java.lang.String,byte[],byte[],int,int)>
		SHA-256: d7e24bde5e1c3deb73676518b727388db0ee7582326cef21facb92188e0747d9
		Secure: false
	Object:
		Variable: $r3
		Type: java.security.spec.DSAParameterSpec
		Statement: specialinvoke $r3.<java.security.spec.DSAParameterSpec: void <init>(java.math.BigInteger,java.math.BigInteger,java.math.BigInteger)>($r2, $r5, $r6)
		Method: <org.bouncycastle.jce.provider.JDKDSAPublicKey: void <init>(org.bouncycastle.crypto.params.DSAPublicKeyParameters)>
		SHA-256: f640e605cc708f6d53b76eecdee061e68e1311293e5da2ec50d51d7f930aeaa1
		Secure: true
	Object:
		Variable: $r0
		Type: java.security.SecureRandom
		Statement: specialinvoke $r0.<java.security.SecureRandom: void <init>()>()
		Method: <com.neovisionaries.ws.client.Misc: void <clinit>()>
		SHA-256: cbf1c51aff3d7501a2f983434f0792421d5eaf933d45bcfb5bfb11bb30cc6712
		Secure: true
	Object:
		Variable: $r3
		Type: byte[]
		Statement: $r1 = virtualinvoke $r2.<java.security.MessageDigest: byte[] digest(byte[])>($r3)
		Method: <org.apache.http.impl.auth.NTLMEngineImpl$HMACMD5: byte[] getOutput()>
		SHA-256: f6730166425cdde60c0ca0f7f01862a2b9705ad5b213be5cd1a19bc89976254d
		Secure: false
	Object:
		Variable: varReplacer112806
		Type: java.lang.String
		Statement: specialinvoke $r2.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r1, varReplacer112806)
		Method: <com.google.android.gms.internal.ads.zzfzd: void <init>(byte[])>
		SHA-256: 90dea3e98541eb5765338e3d24dd277e8d3efd3be79936412ef9140c89bf6faa
		Secure: false
	Object:
		Variable: $r22
		Type: java.security.spec.X509EncodedKeySpec
		Statement: specialinvoke $r22.<java.security.spec.X509EncodedKeySpec: void <init>(byte[])>($r5)
		Method: <com.google.android.gms.internal.ads.zzaih: java.security.cert.X509Certificate[] zzj(java.nio.ByteBuffer,java.util.Map,java.security.cert.CertificateFactory)>
		SHA-256: e4fe4c7d97da796cbaffe06971eea794970a1872e5c47f7ecd33a7b7eac461a9
		Secure: false
	Object:
		Variable: $r1
		Type: java.security.KeyPair
		Statement: specialinvoke $r1.<java.security.KeyPair: void <init>(java.security.PublicKey,java.security.PrivateKey)>($r2, $r12)
		Method: <org.bouncycastle.jce.provider.JDKKeyPairGenerator$GOST3410: java.security.KeyPair generateKeyPair()>
		SHA-256: 6044ef541656de5e7b4ec0c84d4dd2f785e1840bb593360b011684516d01c96e
		Secure: false
	Object:
		Variable: $r3
		Type: java.security.KeyPairGenerator
		Statement: $r3 = staticinvoke <java.security.KeyPairGenerator: java.security.KeyPairGenerator getInstance(java.lang.String,java.security.Provider)>($r2, $r1)
		Method: <com.google.android.gms.internal.ads.zzghw: java.lang.Object zza(java.lang.String,java.security.Provider)>
		SHA-256: 38a91b0da4c56dece8dab976bdd8a0150fdbf3fdc39be9a0ffce1a682a14d8c5
		Secure: false
	Object:
		Variable: $r3
		Type: java.security.SecureRandom
		Statement: specialinvoke $r3.<java.security.SecureRandom: void <init>()>()
		Method: <org.bouncycastle.crypto.signers.DSASigner: void init(boolean,org.bouncycastle.crypto.CipherParameters)>
		SHA-256: 71587c8001c9c4cfb5eb3b36cf1bb7c68e59a9748c653f87dfd071a1ed0537e
		Secure: true
	Object:
		Variable: $r2
		Type: javax.net.ssl.SSLContext
		Statement: $r2 = staticinvoke <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String)>($r1)
		Method: <org.apache.http.conn.ssl.SSLContextBuilder: javax.net.ssl.SSLContext build()>
		SHA-256: 1f15fdcda9b923b07ad2fb0fff591155d212c798860f8dee84a8c357e9a78696
		Secure: false
	Object:
		Variable: $r39
		Type: javax.crypto.spec.SecretKeySpec
		Statement: specialinvoke $r39.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r23, $r1)
		Method: <com.google.android.gms.internal.ads.zzghp: com.google.android.gms.internal.ads.zzgho zza(java.lang.String,byte[],byte[],int,int)>
		SHA-256: f572e455ec4b9e66051a16597e82a0bd583d231629ebc4c9bb72231e70ba6ba6
		Secure: false
	Object:
		Variable: $r7
		Type: java.security.PublicKey
		Statement: $r7 = virtualinvoke $r6.<java.security.KeyPair: java.security.PublicKey getPublic()>()
		Method: <com.google.android.gms.internal.ads.zzghp: com.google.android.gms.internal.ads.zzgho zza(java.lang.String,byte[],byte[],int,int)>
		SHA-256: c2a40270c505091551bca5b05891fbee6e2d17ac3c7a43d530fc0a639be0ca47
		Secure: false
	Object:
		Variable: $r8
		Type: java.security.KeyPair
		Statement: specialinvoke $r8.<java.security.KeyPair: void <init>(java.security.PublicKey,java.security.PrivateKey)>($r9, $r11)
		Method: <org.bouncycastle.jce.provider.asymmetric.ec.KeyPairGenerator$EC: java.security.KeyPair generateKeyPair()>
		SHA-256: d9e2f39572bafdef352b6e52cc94072cbad377c21f375b517ddaa93bc433d091
		Secure: false
	Object:
		Variable: $r3
		Type: java.security.SecureRandom
		Statement: specialinvoke $r3.<java.security.SecureRandom: void <init>()>()
		Method: <org.bouncycastle.crypto.signers.ECNRSigner: void init(boolean,org.bouncycastle.crypto.CipherParameters)>
		SHA-256: 9280f6752b6e6221628d06f9d60b4341d2a16061cd2ae2c26b66d065728b8af7
		Secure: true
	Object:
		Variable: $r5
		Type: javax.crypto.Cipher
		Statement: $r5 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer113623)
		Method: <org.apache.http.impl.auth.NTLMEngineImpl$CipherGen: byte[] getLanManagerSessionKey()>
		SHA-256: 4e60e3b3a609d7f48b28ecc174749643ee61099b7a20fb97f49428bb4b63b9e3
		Secure: false
	Object:
		Variable: $r2
		Type: java.security.Key
		Statement: $r4 = interfaceinvoke $r2.<java.security.Key: byte[] getEncoded()>()
		Method: <com.google.android.gms.internal.ads.zzgih: void <init>(java.lang.String,java.security.Key)>
		SHA-256: c2d4ee3f90af59b8c552e0cf5fd511d8e7bf7ceb57e3cb7c841aaded3c872215
		Secure: true
	Object:
		Variable: $r8
		Type: java.security.PrivateKey
		Statement: $r8 = virtualinvoke $r6.<java.security.KeyPair: java.security.PrivateKey getPrivate()>()
		Method: <com.remotefairy.wifi.androidtv.KeyStoreManager: void createIdentity(java.security.KeyStore,java.lang.String,java.lang.String)>
		SHA-256: 4239b209b2b627431f98bbe1eb1df514c3156fcf2101c7fdc48ffa03d7712be1
		Secure: false
	Object:
		Variable: $r23
		Type: java.security.PublicKey
		Statement: $r23 = virtualinvoke $r21.<java.security.KeyFactory: java.security.PublicKey generatePublic(java.security.spec.KeySpec)>($r22)
		Method: <com.google.android.gms.internal.ads.zzaih: java.security.cert.X509Certificate[] zzj(java.nio.ByteBuffer,java.util.Map,java.security.cert.CertificateFactory)>
		SHA-256: afc708b3f0874996f797392e1adbd1cc5d454b2decd660c233282c813d75cef4
		Secure: false
	Object:
		Variable: $r8
		Type: javax.crypto.spec.SecretKeySpec
		Statement: specialinvoke $r8.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r1, $r4)
		Method: <com.google.android.gms.internal.ads.zzgab: byte[] zze(byte[],byte[],int)>
		SHA-256: 1c5379703e208b48cc1dae48d05dfc99ef45884ddc685317ba5f66cbba3067fd
		Secure: false
	Object:
		Variable: $r0
		Type: java.security.MessageDigest
		Statement: $r0 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer40158)
		Method: <com.google.android.gms.measurement.internal.zzln: java.security.MessageDigest zzF()>
		SHA-256: f09fc864e72dfa3b1a40767f53267519a1f33942f989c90e6c97f83511d2870a
		Secure: false
	Object:
		Variable: $r10
		Type: java.security.spec.DSAParameterSpec
		Statement: specialinvoke $r10.<java.security.spec.DSAParameterSpec: void <init>(java.math.BigInteger,java.math.BigInteger,java.math.BigInteger)>($r5, $r11, $r12)
		Method: <org.bouncycastle.jce.provider.JDKDSAPublicKey: void <init>(org.bouncycastle.asn1.x509.SubjectPublicKeyInfo)>
		SHA-256: 50c5039b3ac585458f24ede9c97f717c4ec360a50e787ee48eae60b298de95d
		Secure: true
	Object:
		Variable: $r3
		Type: javax.crypto.spec.IvParameterSpec
		Statement: specialinvoke $r3.<javax.crypto.spec.IvParameterSpec: void <init>(byte[],int,int)>($r1, varReplacer94843, $i0)
		Method: <com.google.android.gms.internal.ads.zzfzd: java.security.spec.AlgorithmParameterSpec zzc(byte[],int,int)>
		SHA-256: 2441d60ecceddef4ab6568e6caf25aba43f0518a2f1a363a3666df1ebe9258bb
		Secure: false
	Object:
		Variable: $r3
		Type: java.security.SecureRandom
		Statement: specialinvoke $r3.<java.security.SecureRandom: void <init>()>()
		Method: <org.bouncycastle.crypto.encodings.PKCS1Encoding: void init(boolean,org.bouncycastle.crypto.CipherParameters)>
		SHA-256: d60d93481dd6262546132fe8ec2f6f2c42eb3a0a1bfa20b033056f89fc2c0c59
		Secure: true
	Object:
		Variable: $r5
		Type: java.security.KeyStore
		Statement: $r5 = staticinvoke <java.security.KeyStore: java.security.KeyStore getInstance(java.lang.String)>($r4)
		Method: <com.colortiger.atvp.KeyStoreManager: java.security.KeyStore load()>
		SHA-256: a695dcf2cab1d39ed979da588f11598c020649e34d773f0177a22f2ae88884dc
		Secure: true
	Object:
		Variable: $r2
		Type: java.security.KeyPairGenerator
		Statement: $r2 = staticinvoke <java.security.KeyPairGenerator: java.security.KeyPairGenerator getInstance(java.lang.String)>(varReplacer63126)
		Method: <com.remotefairy.wifi.adb.AdbCrypto: com.remotefairy.wifi.adb.AdbCrypto generateAdbKeyPair(com.remotefairy.wifi.adb.AdbBase64)>
		SHA-256: 48768c2b8fb1c6aff9163ac7ea93750cd311a69dd4c127619c3a50663ab2d8d
		Secure: true
	Object:
		Variable: varReplacer97584
		Type: java.lang.String
		Statement: specialinvoke $r11.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r9, varReplacer97584)
		Method: <com.google.android.gms.internal.ads.zzghf: byte[] zza(byte[],byte[])>
		SHA-256: 1bbc3b064d8c91a1d39bc496e04a864055b85e0de399b4703e06ba2cb4e33cf3
		Secure: false
	Object:
		Variable: $r5
		Type: java.security.KeyStore
		Statement: $r5 = staticinvoke <java.security.KeyStore: java.security.KeyStore getInstance(java.lang.String)>($r4)
		Method: <com.remotefairy.wifi.androidtv.KeyStoreManager: java.security.KeyStore load()>
		SHA-256: a695dcf2cab1d39ed979da588f11598c020649e34d773f0177a22f2ae88884dc
		Secure: true
	Object:
		Variable: $r3
		Type: byte[]
		Statement: $r3 = virtualinvoke $r2.<java.security.MessageDigest: byte[] digest(byte[])>($r3)
		Method: <com.connectsdk16.service.AirPlayService: java.lang.String digestAuthentication(java.lang.String)>
		SHA-256: 8812e5fdd561470f8103c41584e4363ce281091b11bb2643914b572acb552343
		Secure: false
	Object:
		Variable: $r0
		Type: java.security.SecureRandom
		Statement: specialinvoke $r0.<java.security.SecureRandom: void <init>()>()
		Method: <com.google.android.gms.internal.ads.zzamr: byte[] zzg(byte[],java.lang.String,boolean)>
		SHA-256: c83ee2e4dc5d04a98bf7ab8394c4b58aa2afccc1ed0b5be3fdf994963c04cbe3
		Secure: true
	Object:
		Variable: $r9
		Type: java.security.PrivateKey
		Statement: $r9 = virtualinvoke $r6.<java.security.KeyPair: java.security.PrivateKey getPrivate()>()
		Method: <com.google.android.gms.internal.ads.zzfzn: com.google.android.gms.internal.ads.zzgma zza(com.google.android.gms.internal.ads.zzgma)>
		SHA-256: b3c4943c71f91ff0438fd8ec9359ed0f311555f24d0ba6b072b998cfd2294ee6
		Secure: false
	Object:
		Variable: $r3
		Type: byte[]
		Statement: $r3 = virtualinvoke $r2.<java.security.MessageDigest: byte[] digest()>()
		Method: <org.apache.http.impl.auth.NTLMEngineImpl$HMACMD5: void <init>(byte[])>
		SHA-256: d5cf1f8de9a5f17cad5006e43f64e63b02f8f56706a9e139ea0baeb6f7532b60
		Secure: false
	Object:
		Variable: $r8
		Type: java.security.KeyFactory
		Statement: $r8 = staticinvoke <java.security.KeyFactory: java.security.KeyFactory getInstance(java.lang.String)>(varReplacer63128)
		Method: <com.remotefairy.wifi.adb.AdbCrypto: com.remotefairy.wifi.adb.AdbCrypto loadAdbKeyPair(com.remotefairy.wifi.adb.AdbBase64,java.io.File,java.io.File)>
		SHA-256: acfb9ada1db6b40e13a6de27508b0e842073da118f9f663b13404ded6a0f4520
		Secure: false
	Object:
		Variable: $r6
		Type: java.security.PrivateKey
		Statement: $r6 = virtualinvoke $r5.<java.security.KeyPair: java.security.PrivateKey getPrivate()>()
		Method: <com.remotefairy.wifi.adb.AdbCrypto: void saveAdbKeyPair(java.io.File,java.io.File)>
		SHA-256: 9d9c0b6919024a71822d107bf55dbbf09cecd507b1929ebfee9f48a3ee1d8ed7
		Secure: true
	Object:
		Variable: $r11
		Type: java.security.KeyPair
		Statement: specialinvoke $r11.<java.security.KeyPair: void <init>(java.security.PublicKey,java.security.PrivateKey)>($r12, $r13)
		Method: <com.remotefairy.wifi.adb.AdbCrypto: com.remotefairy.wifi.adb.AdbCrypto loadAdbKeyPair(com.remotefairy.wifi.adb.AdbBase64,java.io.File,java.io.File)>
		SHA-256: 39c6fa00a36f0d76155e220b399bf8d441e1891ca259bd79011e6b1cdb905530
		Secure: false
	Object:
		Variable: $r3
		Type: java.security.SecureRandom
		Statement: specialinvoke $r3.<java.security.SecureRandom: void <init>()>()
		Method: <org.bouncycastle.crypto.signers.ECGOST3410Signer: void init(boolean,org.bouncycastle.crypto.CipherParameters)>
		SHA-256: caabe0390e3d2386e10c04d6d72b0b44e335e1623efc6992e7ef060aaafe4388
		Secure: true
	Object:
		Variable: $r3
		Type: java.security.KeyPair
		Statement: $r3 = virtualinvoke $r2.<java.security.KeyPairGenerator: java.security.KeyPair genKeyPair()>()
		Method: <com.remotefairy.wifi.adb.AdbCrypto: com.remotefairy.wifi.adb.AdbCrypto generateAdbKeyPair(com.remotefairy.wifi.adb.AdbBase64)>
		SHA-256: 5b1b0da1750dcf08d127422f94b31a5380507777432af4ff31b9716cbd1b43b9
		Secure: true
	Object:
		Variable: $r21
		Type: java.security.KeyFactory
		Statement: $r21 = staticinvoke <java.security.KeyFactory: java.security.KeyFactory getInstance(java.lang.String)>($r15)
		Method: <com.google.android.gms.internal.ads.zzaih: java.security.cert.X509Certificate[] zzj(java.nio.ByteBuffer,java.util.Map,java.security.cert.CertificateFactory)>
		SHA-256: e67800e41f4dd3bf35d92cf0889bad1a8dc1eb6fb49002471d7eb2f4762ea29d
		Secure: false
	Object:
		Variable: $r2
		Type: java.security.MessageDigest
		Statement: $r2 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer73091)
		Method: <com.nostra13.universalimageloader.cache.disc.naming.Md5FileNameGenerator: byte[] getMD5(byte[])>
		SHA-256: 9b250a002c1e20275cf7eb6c7f7abe6ebc40a6b6b35c833f8379f535388a1d98
		Secure: false
	Object:
		Variable: varReplacer112798
		Type: java.lang.String
		Statement: specialinvoke $r3.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r1, varReplacer112798)
		Method: <com.google.android.gms.internal.ads.zzghd: void <init>(byte[],int)>
		SHA-256: 738ede37dd6aeb013ac357c6fa2b3372e8be6dd11953a58c9f94e987c70a77de
		Secure: false
	Object:
		Variable: varReplacer54706
		Type: java.lang.String
		Statement: specialinvoke $r3.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r1, varReplacer54706)
		Method: <com.google.android.gms.internal.ads.zzaoi: java.lang.String zza(byte[],byte[])>
		SHA-256: 4230f1bbc3db54069a9ef8a0ef29458e1229072771e008f4d5feb06d5dcbd058
		Secure: false
	Object:
		Variable: $r2
		Type: javax.crypto.Cipher
		Statement: $r2 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer15448)
		Method: <com.remotefairy.wifi.adb.AdbCrypto: byte[] signAdbTokenPayload(byte[])>
		SHA-256: d2ffd7a0baf707e4195201b70096b5b1dc63105b7e25d5375ef234ce575dd130
		Secure: false
	Object:
		Variable: $r4
		Type: byte[]
		Statement: $r4 = virtualinvoke $r3.<java.security.MessageDigest: byte[] digest(byte[])>($r4)
		Method: <org.java_websocket.drafts.Draft_10: java.lang.String generateFinalKey(java.lang.String)>
		SHA-256: 6f7e0d009fe843781c6583c4c2d94575a8e4890331abe5d479f088ab2467a31e
		Secure: false
	Object:
		Variable: $r4
		Type: java.security.spec.X509EncodedKeySpec
		Statement: specialinvoke $r4.<java.security.spec.X509EncodedKeySpec: void <init>(byte[])>($r2)
		Method: <com.google.firebase.installations.local.IidStore: java.security.PublicKey parseKey(java.lang.String)>
		SHA-256: aea7fce58cc2c3232d1730517ff25b7e58e8210bf5f593374b5621a96b219086
		Secure: false
	Object:
		Variable: $r8
		Type: byte[]
		Statement: $z0 = virtualinvoke $r2.<java.security.Signature: boolean verify(byte[])>($r8)
		Method: <org.bouncycastle.jce.provider.X509CertificateObject: void checkSignature(java.security.PublicKey,java.security.Signature)>
		SHA-256: cebe45f59ca6821eb5e75723e2592c61a7970e6687e96537a7fa5d2712864b7
		Secure: false
	Object:
		Variable: $r6
		Type: byte[]
		Statement: $r6 = virtualinvoke $r5.<java.security.MessageDigest: byte[] digest()>()
		Method: <com.google.android.gms.internal.consent_sdk.zzbx: java.lang.String zzc(java.lang.String)>
		SHA-256: 646ebb1c0491091260618345bd5ee34fb45009287a4b7c15e029d1461e953b44
		Secure: false
	Object:
		Variable: $r6
		Type: byte[]
		Statement: $r2 = virtualinvoke $r9.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r6)
		Method: <com.google.android.gms.internal.ads.zzaoi: byte[] zzb(byte[],java.lang.String)>
		SHA-256: fbfa736bf1d2e786eeeecba3d576f00f6c368cea8558d3d69b58faea8f577097
		Secure: false
	Object:
		Variable: $r4
		Type: java.lang.String
		Statement: specialinvoke $r7.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r2, $r4)
		Method: <com.google.android.gms.internal.ads.zzgab: byte[] zzf(byte[],byte[])>
		SHA-256: e21603d58720cc59393dca6163c74ae529d090138b691a7a3088ad1f5ab0b2d7
		Secure: false
	Object:
		Variable: $r11
		Type: byte[]
		Statement: $r11 = virtualinvoke $r8.<java.security.MessageDigest: byte[] digest(byte[])>($r11)
		Method: <com.google.android.gms.measurement.internal.zzka: java.lang.String zzf(java.lang.String,boolean)>
		SHA-256: d2d82902c12d76ef2c1f9021ba8fa7d019f8a963a84804a976b4982ea91fc604
		Secure: false
	Object:
		Variable: $r2
		Type: java.lang.String
		Statement: $r3 = staticinvoke <java.security.KeyFactory: java.security.KeyFactory getInstance(java.lang.String)>($r2)
		Method: <com.google.android.gms.internal.ads.zzghv: java.lang.Object zza(java.lang.String,java.security.Provider)>
		SHA-256: 6f9b8131353cb709d2c4a6026dd5c9eec02307c05f052256739445ebf479d9a6
		Secure: false
	Object:
		Variable: $r3
		Type: java.security.MessageDigest
		Statement: $r3 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer80067)
		Method: <org.java_websocket.drafts.Draft_10: java.lang.String generateFinalKey(java.lang.String)>
		SHA-256: 38a25752e4931e2481842a0999bd64dbe35b79bd0ba8a9da51c5d7ad86a926b7
		Secure: false
	Object:
		Variable: $r1
		Type: byte[]
		Statement: $r1 = virtualinvoke $r2.<java.security.MessageDigest: byte[] digest()>()
		Method: <com.nostra13.universalimageloader.cache.disc.naming.Md5FileNameGenerator: byte[] getMD5(byte[])>
		SHA-256: c1be9d0b01edb148a5a898d4a6573aa27b3652d619c42f0bac0506e26dd1e5b2
		Secure: false
	Object:
		Variable: $r1
		Type: byte[]
		Statement: virtualinvoke $r4.<java.security.SecureRandom: void nextBytes(byte[])>($r1)
		Method: <org.bouncycastle.crypto.encodings.PKCS1Encoding: byte[] encodeBlock(byte[],int,int)>
		SHA-256: eacef851ce54f73496b5b532959f537500639a3690f0ee1369bef27820eadfb
		Secure: true
	Object:
		Variable: $r3
		Type: java.security.MessageDigest
		Statement: $r3 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String,java.security.Provider)>($r2, $r1)
		Method: <com.google.android.gms.internal.ads.zzghy: java.lang.Object zza(java.lang.String,java.security.Provider)>
		SHA-256: 63c2da53922c886e0e92855b3b91588f3ce220108037ac237eea858a7349f807
		Secure: false
	Object:
		Variable: $r2
		Type: byte[]
		Statement: $r1 = virtualinvoke $r5.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r2)
		Method: <com.google.android.gms.internal.ads.zzaoi: java.lang.String zza(byte[],byte[])>
		SHA-256: 9fa0c04db20afefa29474786061ed2bef0bd09ee08283f78645ffd9fb34a8936
		Secure: false
	Object:
		Variable: $r3
		Type: java.security.Signature
		Statement: $r3 = staticinvoke <java.security.Signature: java.security.Signature getInstance(java.lang.String)>($r2)
		Method: <com.google.android.gms.internal.ads.zzghz: java.lang.Object zza(java.lang.String,java.security.Provider)>
		SHA-256: 46b0b2afb62162ccc63b669e91195920c5b299e1c85d7c17ababa379dffe0119
		Secure: false
	Object:
		Variable: $r13
		Type: java.security.KeyPair
		Statement: specialinvoke $r13.<java.security.KeyPair: void <init>(java.security.PublicKey,java.security.PrivateKey)>($r14, $r15)
		Method: <org.bouncycastle.jce.provider.JDKKeyPairGenerator$DH: java.security.KeyPair generateKeyPair()>
		SHA-256: 19a3f013b0f037b09fdb70ec5021b64c12a835f748641ca6c29d91bec7eb747b
		Secure: false
	Object:
		Variable: $r2
		Type: java.security.MessageDigest
		Statement: $r2 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer105189)
		Method: <com.remotefairy.wifi.boxee.network.http.discovery.BoxeeScanner: java.lang.String getSignature(java.lang.String)>
		SHA-256: d0b9824be9a29ae611efb857910488b95afd443df2913191b2d1fa11359607b7
		Secure: false
	Object:
		Variable: $r5
		Type: java.security.MessageDigest
		Statement: $r5 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer23434)
		Method: <com.google.android.gms.internal.consent_sdk.zzbx: java.lang.String zzc(java.lang.String)>
		SHA-256: 3bf5421fecae7db0a86b0b4c463ecb67864e80f898271fbcd0781506ea408e8d
		Secure: false
	Object:
		Variable: $r4
		Type: java.security.SecureRandom
		Statement: specialinvoke $r4.<java.security.SecureRandom: void <init>()>()
		Method: <org.bouncycastle.crypto.engines.ElGamalEngine: void init(boolean,org.bouncycastle.crypto.CipherParameters)>
		SHA-256: cc0b332bb2ddc847ca308294e1c87841df1bdcc2359c6b4559abe498d8131c20
		Secure: true
	Object:
		Variable: $r1
		Type: byte[]
		Statement: $r1 = virtualinvoke $r5.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r2)
		Method: <com.google.android.gms.internal.ads.zzaoi: java.lang.String zza(byte[],byte[])>
		SHA-256: 2b6953da3979ed49362a6051126285e20da9edec89d331d1c2b1c35ecd62b834
		Secure: false
	Object:
		Variable: $r4
		Type: java.security.KeyPairGenerator
		Statement: $r4 = staticinvoke <java.security.KeyPairGenerator: java.security.KeyPairGenerator getInstance(java.lang.String)>(varReplacer80203)
		Method: <com.colortiger.atvp.KeyStoreManager: void createIdentity(java.security.KeyStore,java.lang.String,java.lang.String)>
		SHA-256: cc669b76e22aab474313e76693f2286911d3ce02ebda331c1ccebdc6dda1493a
		Secure: false
	Object:
		Variable: $r8
		Type: java.security.KeyPair
		Statement: specialinvoke $r8.<java.security.KeyPair: void <init>(java.security.PublicKey,java.security.PrivateKey)>($r9, $r11)
		Method: <org.bouncycastle.jce.provider.asymmetric.ec.KeyPairGenerator$EC: java.security.KeyPair generateKeyPair()>
		SHA-256: d9e2f39572bafdef352b6e52cc94072cbad377c21f375b517ddaa93bc433d091
		Secure: false
	Object:
		Variable: $r7
		Type: java.security.MessageDigest
		Statement: $r7 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>($r6)
		Method: <com.google.android.gms.internal.ads.zzaih: byte[][] zzk(int[],com.google.android.gms.internal.ads.zzaib[])>
		SHA-256: 580bdd0daa91294292f086408ff8e81e6996471e749a97fb2cad1a8b855bfa14
		Secure: true
	Object:
		Variable: $r3
		Type: byte[]
		Statement: $r3 = virtualinvoke $r2.<java.security.MessageDigest: byte[] digest()>()
		Method: <org.apache.http.impl.auth.NTLMEngineImpl$HMACMD5: byte[] getOutput()>
		SHA-256: 8dda2f10cd4911a51ea6f84d756034bbd2b170b00e8eb73d84894dc35d4275e0
		Secure: false
	Object:
		Variable: $r2
		Type: java.security.MessageDigest
		Statement: $r2 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer92618)
		Method: <com.google.android.gms.internal.ads.zzbbo: java.security.MessageDigest zza()>
		SHA-256: bf706848762b12905170e26bc1ff3c1e6ce44afd41fadc1b78b1d6375953683c
		Secure: false
	Object:
		Variable: $r4
		Type: byte[]
		Statement: $r4 = virtualinvoke $r7.<java.security.MessageDigest: byte[] digest(byte[])>($r4)
		Method: <com.google.android.gms.internal.ads.zzaih: byte[][] zzk(int[],com.google.android.gms.internal.ads.zzaib[])>
		SHA-256: 46ae146db4bad05e4b308a1ee60d4f5a9097a324c7db5793e5ca161de13461fa
		Secure: true
	Object:
		Variable: $r39
		Type: javax.crypto.spec.SecretKeySpec
		Statement: specialinvoke $r39.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r2, $r1)
		Method: <com.google.android.gms.internal.ads.zzghp: com.google.android.gms.internal.ads.zzgho zza(java.lang.String,byte[],byte[],int,int)>
		SHA-256: b574f344cb0d89345cd21a4b45fecdfde3c2f30959b03bfdf1b2b430f353c2ad
		Secure: false
	Object:
		Variable: $r2
		Type: java.security.MessageDigest
		Statement: $r2 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>($r1)
		Method: <okio.ByteString: okio.ByteString digest(java.lang.String)>
		SHA-256: b336d574501b28a5bd90db22472c23a68acb0c1b99c4f14746fdc2a23c69a24e
		Secure: false
	Object:
		Variable: $r6
		Type: java.security.SecureRandom
		Statement: specialinvoke $r6.<java.security.SecureRandom: void <init>()>()
		Method: <org.bouncycastle.jce.provider.JDKKeyPairGenerator$GOST3410: java.security.KeyPair generateKeyPair()>
		SHA-256: 6e53b193b1b48d3e806f61923f7dcfcfe85c6be9929668efa6e6c628a3f0ea
		Secure: true
	Object:
		Variable: $r24
		Type: byte[]
		Statement: $r24 = virtualinvoke $r17.<java.security.MessageDigest: byte[] digest(byte[])>($r24)
		Method: <com.google.android.gms.measurement.internal.zzel: com.google.android.gms.measurement.internal.zzq zzj(java.lang.String)>
		SHA-256: cef71857301669a1bb97f38bf0f6f61fa5f5e2b2d02883c1be941f5973679ebd
		Secure: false
	Object:
		Variable: r0
		Type: org.bouncycastle.x509.ExtendedPKIXParameters
		Statement: specialinvoke r0.<java.security.cert.PKIXParameters: void <init>(java.util.Set)>($r1)
		Method: <org.bouncycastle.x509.ExtendedPKIXParameters: void <init>(java.util.Set)>
		SHA-256: bc4db4edf85d5095c872f763083d4cdd57eaf413157a98ff957c0439448eaca6
		Secure: true
	Object:
		Variable: $r3
		Type: javax.crypto.Mac
		Statement: $r3 = staticinvoke <javax.crypto.Mac: javax.crypto.Mac getInstance(java.lang.String)>($r2)
		Method: <com.google.android.gms.internal.ads.zzghx: java.lang.Object zza(java.lang.String,java.security.Provider)>
		SHA-256: 58456c1ad930ab1f55271061816bd349fe02aa5595bfccb967e7562c9a3f415f
		Secure: false
	Object:
		Variable: $r3
		Type: java.security.spec.ECParameterSpec
		Statement: specialinvoke $r3.<java.security.spec.ECParameterSpec: void <init>(java.security.spec.EllipticCurve,java.security.spec.ECPoint,java.math.BigInteger,int)>($r9, $r10, $r6, $i0)
		Method: <org.bouncycastle.jce.provider.JCEECPrivateKey: void <init>(java.lang.String,org.bouncycastle.crypto.params.ECPrivateKeyParameters,java.security.spec.ECParameterSpec)>
		SHA-256: 4b8d5fd8e7e40c7e0a8a761c9afa5c0ae0f20d05dad01157e8d4a5cd357c48a4
		Secure: true
	Object:
		Variable: $r4
		Type: byte[]
		Statement: virtualinvoke $r0.<java.security.SecureRandom: void nextBytes(byte[])>($r4)
		Method: <com.google.android.gms.internal.ads.zzamr: byte[] zzg(byte[],java.lang.String,boolean)>
		SHA-256: fb18241b4471d0ad21e499a94b25ee54f845ce0f5e8e938776b9ba1e95cc5056
		Secure: true
	Object:
		Variable: $r7
		Type: byte[]
		Statement: $r7 = virtualinvoke $r6.<java.security.MessageDigest: byte[] digest(byte[])>($r7)
		Method: <com.google.android.gms.internal.ads.zzfkp: boolean zza(java.io.File)>
		SHA-256: 6c49d8e42cc04efb77536c70bf17d5b55367beaf3264da951420289cab5b18ac
		Secure: true
	Object:
		Variable: $r7
		Type: java.security.PublicKey
		Statement: $r7 = virtualinvoke $r21.<java.security.KeyFactory: java.security.PublicKey generatePublic(java.security.spec.KeySpec)>($r18)
		Method: <com.google.android.gms.internal.ads.zzghp: com.google.android.gms.internal.ads.zzgho zza(java.lang.String,byte[],byte[],int,int)>
		SHA-256: 48dbee92c47c496841a2c8f989b0bf26bdb0abaaf263acb0756ebd1531e480cc
		Secure: false
	Object:
		Variable: $r10
		Type: byte[]
		Statement: $r10 = virtualinvoke $r9.<java.security.MessageDigest: byte[] digest(byte[])>($r10)
		Method: <com.neovisionaries.ws.client.HandshakeReader: void validateAccept(com.neovisionaries.ws.client.StatusLine,java.util.Map,java.lang.String)>
		SHA-256: e97e20bc8eda05bf2696386b03ba899e944eac66d4c337660f15c6bb3e77feb5
		Secure: false
	Object:
		Variable: $r1
		Type: java.security.SecureRandom
		Statement: specialinvoke $r1.<java.security.SecureRandom: void <init>()>()
		Method: <com.google.android.gms.measurement.internal.zzln: void zzaA()>
		SHA-256: 25b9a1b993285592ccace8f5a25ea604229fa50d049d0ee340c9323b6515d1c2
		Secure: true
	Object:
		Variable: $r3
		Type: java.security.KeyPairGenerator
		Statement: $r3 = staticinvoke <java.security.KeyPairGenerator: java.security.KeyPairGenerator getInstance(java.lang.String)>($r2)
		Method: <com.google.android.gms.internal.ads.zzghw: java.lang.Object zza(java.lang.String,java.security.Provider)>
		SHA-256: 82e1e1e0cc31e3c73cdf79070df661c083dbee54b806e6be9eaf7ae9c875868c
		Secure: false
	Object:
		Variable: $r2
		Type: javax.net.ssl.TrustManagerFactory
		Statement: $r2 = staticinvoke <javax.net.ssl.TrustManagerFactory: javax.net.ssl.TrustManagerFactory getInstance(java.lang.String)>($r1)
		Method: <okhttp3.OkHttpClient: javax.net.ssl.X509TrustManager systemDefaultTrustManager()>
		SHA-256: 61965954da2703450175e336d331a8bc311810e943eebaeca9d739b64a0fdc1
		Secure: false
	Object:
		Variable: $r5
		Type: javax.crypto.Cipher
		Statement: $r5 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer113618)
		Method: <org.apache.http.impl.auth.NTLMEngineImpl$CipherGen: byte[] getLanManagerSessionKey()>
		SHA-256: 8f84bcd0356b108d0cf887912868579baae439dc06072c7a57cbf83353b4ef6c
		Secure: false
	Object:
		Variable: $r24
		Type: java.security.Signature
		Statement: $r24 = staticinvoke <java.security.Signature: java.security.Signature getInstance(java.lang.String)>($r13)
		Method: <com.google.android.gms.internal.ads.zzaih: java.security.cert.X509Certificate[] zzj(java.nio.ByteBuffer,java.util.Map,java.security.cert.CertificateFactory)>
		SHA-256: 978cfe1adf791dd6d25d6f7dcc7fbd32a08213d198c2ed2da20d44c5b31fb642
		Secure: false
	Object:
		Variable: $r1
		Type: byte[]
		Statement: $r1 = virtualinvoke $r4.<java.security.MessageDigest: byte[] digest(byte[])>($r5)
		Method: <org.apache.http.impl.auth.NTLMEngineImpl$Type3Message: byte[] addGssMicAvsToTargetInfo(byte[],java.security.cert.Certificate)>
		SHA-256: a96b5c4940720f614ff024bce557b32cb3bf119f3666a750be2184fd24f8a784
		Secure: false
	Object:
		Variable: $r8
		Type: byte[]
		Statement: $z0 = virtualinvoke $r24.<java.security.Signature: boolean verify(byte[])>($r8)
		Method: <com.google.android.gms.internal.ads.zzaih: java.security.cert.X509Certificate[] zzj(java.nio.ByteBuffer,java.util.Map,java.security.cert.CertificateFactory)>
		SHA-256: cf3deaa69558beb3ce7931608934942ca5ab2cee855d3af301fca9d7f951d30f
		Secure: false
	Object:
		Variable: $r0
		Type: java.security.MessageDigest
		Statement: $r0 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer113597)
		Method: <org.apache.http.impl.auth.NTLMEngineImpl: java.security.MessageDigest getMD5()>
		SHA-256: c34fcb7fcd813dea9b45c2c5cfd386a82e8210390e0493bef84bc022d894ce9f
		Secure: false
	Object:
		Variable: $r3
		Type: javax.crypto.KeyAgreement
		Statement: $r3 = staticinvoke <javax.crypto.KeyAgreement: javax.crypto.KeyAgreement getInstance(java.lang.String)>($r2)
		Method: <com.google.android.gms.internal.ads.zzghu: java.lang.Object zza(java.lang.String,java.security.Provider)>
		SHA-256: 9cd5897108227e0db758ed11d1e4030d206f6d08e2c9768e683d1fa0dc28795c
		Secure: false
	Object:
		Variable: $r18
		Type: java.security.SecureRandom
		Statement: $r18 = staticinvoke <java.security.SecureRandom: java.security.SecureRandom getInstance(java.lang.String)>(varReplacer44869)
		Method: <com.google.polo.pairing.PairingSession: void doPairingPhase()>
		SHA-256: 7b8980060b371c4534b81c0853b835d487297ada5c4c4ad9274103b5f31030dd
		Secure: true
	Object:
		Variable: $r3
		Type: byte[]
		Statement: $r3 = virtualinvoke $r2.<java.security.MessageDigest: byte[] digest()>()
		Method: <com.remotefairy.wifi.boxee.network.http.discovery.BoxeeScanner: java.lang.String getSignature(java.lang.String)>
		SHA-256: 1544a9d2eb34c27fd1430b887661b8a6fe65e96d9d76df9dbed8dcd5cafd64b0
		Secure: false
	Object:
		Variable: $r3
		Type: javax.net.ssl.KeyManagerFactory
		Statement: $r3 = staticinvoke <javax.net.ssl.KeyManagerFactory: javax.net.ssl.KeyManagerFactory getInstance(java.lang.String)>($r2)
		Method: <com.remotefairy.wifi.androidtv.KeyStoreManager: javax.net.ssl.KeyManager[] getKeyManagers()>
		SHA-256: 142b80b0eb3c6099520f9c1be31bea3a59f6bf3f0a6e62a7d8eb3d47737f06c5
		Secure: false
	Object:
		Variable: $r2
		Type: javax.crypto.spec.SecretKeySpec
		Statement: specialinvoke $r2.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r1, varReplacer112804)
		Method: <com.google.android.gms.internal.ads.zzgif: void <init>(byte[])>
		SHA-256: 6087045310cce4443b7cadd36a230571a7e0d39c373cd3ddea153288b3e70658
		Secure: false
	Object:
		Variable: $r3
		Type: byte[]
		Statement: $r3 = virtualinvoke $r2.<java.security.MessageDigest: byte[] digest()>()
		Method: <com.firebase.client.utilities.Utilities: java.lang.String sha1HexDigest(java.lang.String)>
		SHA-256: f7021ab4af59b61522b62f1371cb094cd3eef297dc6a11d1445c0735263604a3
		Secure: false
	Object:
		Variable: $r8
		Type: java.security.PrivateKey
		Statement: $r8 = virtualinvoke $r5.<java.security.KeyPair: java.security.PrivateKey getPrivate()>()
		Method: <com.colortiger.atvp.KeyStoreManager: void createIdentity(java.security.KeyStore,java.lang.String,java.lang.String)>
		SHA-256: ecbf3697e1859d59f6c7edea3766ba4a825cf150dd667b172fb39cb113c8ec2e
		Secure: false
	Object:
		Variable: $r2
		Type: javax.crypto.Mac
		Statement: $r2 = staticinvoke <javax.crypto.Mac: javax.crypto.Mac getInstance(java.lang.String)>($r1)
		Method: <com.google.android.gms.internal.ads.zzgab: int zza()>
		SHA-256: 8d8786f514e883431e236d7e721f3f5e33d037e2cf49ac7f1efe6174057ceb8d
		Secure: false
	Object:
		Variable: $r0
		Type: java.security.SecureRandom
		Statement: specialinvoke $r0.<java.security.SecureRandom: void <init>()>()
		Method: <com.google.android.gms.internal.ads.zzgav: int zza()>
		SHA-256: 835b78a01234c321544f86df4aa25311faf20320c4991e2f2bb290de264744c3
		Secure: true
	Object:
		Variable: $r10
		Type: java.security.spec.X509EncodedKeySpec
		Statement: specialinvoke $r10.<java.security.spec.X509EncodedKeySpec: void <init>(byte[])>($r5)
		Method: <com.remotefairy.wifi.adb.AdbCrypto: com.remotefairy.wifi.adb.AdbCrypto loadAdbKeyPair(com.remotefairy.wifi.adb.AdbBase64,java.io.File,java.io.File)>
		SHA-256: f048d2c038038dc7998fbc488c8d2b65ac37a88f1cf9d66d98486e3df0d344
		Secure: false
	Object:
		Variable: $r14
		Type: java.security.spec.ECParameterSpec
		Statement: specialinvoke $r14.<java.security.spec.ECParameterSpec: void <init>(java.security.spec.EllipticCurve,java.security.spec.ECPoint,java.math.BigInteger,int)>($r12, $r13, $r7, varReplacer109108)
		Method: <com.google.android.gms.internal.ads.zzghq: java.security.spec.ECParameterSpec zzf(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)>
		SHA-256: 3e61ec2505248e88fc25af6b693b1462a2ad70b43316c4a2320af05a807af72
		Secure: true
	Object:
		Variable: $r2
		Type: java.security.MessageDigest
		Statement: $r2 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer90354)
		Method: <com.firebase.client.utilities.Utilities: java.lang.String sha1HexDigest(java.lang.String)>
		SHA-256: 180a946c767833639d1cd765c885b688f755bb3b7f46c463abd745143124b232
		Secure: false
	Object:
		Variable: $r8
		Type: java.security.PrivateKey
		Statement: $r8 = virtualinvoke $r6.<java.security.KeyPair: java.security.PrivateKey getPrivate()>()
		Method: <com.google.android.gms.internal.ads.zzghp: com.google.android.gms.internal.ads.zzgho zza(java.lang.String,byte[],byte[],int,int)>
		SHA-256: cb4ce3c57a230579869b5b7c676ad838b9ba6a81c6606326e27a0ca3f79cc54c
		Secure: false
	Object:
		Variable: $r1
		Type: java.security.SecureRandom
		Statement: specialinvoke $r1.<java.security.SecureRandom: void <init>()>()
		Method: <org.apache.http.impl.auth.DigestScheme: java.lang.String createCnonce()>
		SHA-256: 51809b40f955da1fb4b3dcfeefebf59f1dd607b449e09656926351c68b1d5de6
		Secure: true
	Object:
		Variable: $r6
		Type: java.security.Signature
		Statement: $r6 = staticinvoke <java.security.Signature: java.security.Signature getInstance(java.lang.String)>($r5)
		Method: <org.bouncycastle.jce.provider.X509CertificateObject: void verify(java.security.PublicKey)>
		SHA-256: 112e0b98b9789074d4ec3ee999f422c7c115607a7d5cddcfc5fefe2723a7aec7
		Secure: false
	Object:
		Variable: $r4
		Type: java.security.KeyPair
		Statement: $r4 = virtualinvoke $r3.<java.security.KeyPairGenerator: java.security.KeyPair generateKeyPair()>()
		Method: <com.google.android.gms.internal.ads.zzghq: java.security.KeyPair zzb(java.security.spec.ECParameterSpec)>
		SHA-256: 8108ae5a216b25cd7de23b0477a7782549ba714cdc466a1269806fc3f4c8b105
		Secure: false
	Object:
		Variable: $r10
		Type: java.security.spec.ECParameterSpec
		Statement: specialinvoke $r10.<java.security.spec.ECParameterSpec: void <init>(java.security.spec.EllipticCurve,java.security.spec.ECPoint,java.math.BigInteger,int)>($r9, $r11, $r6, $i0)
		Method: <org.bouncycastle.jce.provider.JCEECPrivateKey: void <init>(java.lang.String,org.bouncycastle.crypto.params.ECPrivateKeyParameters,org.bouncycastle.jce.spec.ECParameterSpec)>
		SHA-256: 848fb8ebcf5e9a377734daa259f629e3bae537a67e5014eb0ce8d3e881617554
		Secure: true
	Object:
		Variable: $r3
		Type: java.security.MessageDigest
		Statement: $r3 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>($r2)
		Method: <com.google.android.gms.internal.ads.zzghy: java.lang.Object zza(java.lang.String,java.security.Provider)>
		SHA-256: fff68524f6c67b59c75e747b076d1c1daa9bd81dc677e83f3706b8a154cc5773
		Secure: false
	Object:
		Variable: $r3
		Type: javax.crypto.KeyAgreement
		Statement: $r3 = staticinvoke <javax.crypto.KeyAgreement: javax.crypto.KeyAgreement getInstance(java.lang.String,java.security.Provider)>($r2, $r1)
		Method: <com.google.android.gms.internal.ads.zzghu: java.lang.Object zza(java.lang.String,java.security.Provider)>
		SHA-256: 1cc21cb6ee988ee39bd31926a0f03b9af6770c641af9badacf6f6b8683d98c7a
		Secure: false
	Object:
		Variable: $r5
		Type: byte[]
		Statement: $r0 = virtualinvoke $r6.<java.security.MessageDigest: byte[] digest(byte[])>($r5)
		Method: <org.java_websocket.drafts.Draft_76: byte[] createChallenge(java.lang.String,java.lang.String,byte[])>
		SHA-256: 80c037d133dfae34ddb8b3ebdc23c7e665cf0a31b614905c01e06ab69198cacc
		Secure: false
	Object:
		Variable: $r3
		Type: javax.crypto.Cipher
		Statement: $r3 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String,java.security.Provider)>($r2, $r1)
		Method: <com.google.android.gms.internal.ads.zzght: java.lang.Object zza(java.lang.String,java.security.Provider)>
		SHA-256: 72c10bc184bb65d3a49450dbfa9439ff61ee0aa8859cd0d87dfdcd7f32fc3283
		Secure: false
	Object:
		Variable: $r1
		Type: byte[]
		Statement: $r1 = virtualinvoke $r9.<java.security.MessageDigest: byte[] digest()>()
		Method: <com.google.polo.pairing.PoloChallengeResponse: byte[] getAlpha(byte[])>
		SHA-256: c5181d3b75d1c9ad50af8de0058a5e82b04d66914366fe3f047c98ff9a98b262
		Secure: true
	Object:
		Variable: $r3
		Type: java.security.SecureRandom
		Statement: $r3 = staticinvoke <java.security.SecureRandom: java.security.SecureRandom getInstance(java.lang.String)>(varReplacer104662)
		Method: <org.apache.http.impl.auth.NTLMEngineImpl: void <clinit>()>
		SHA-256: 6e83b8f04e87ee58520b11e3f091fea32106b1a9976cf2845559d1ee51f72a9c
		Secure: true
	Object:
		Variable: varReplacer113657
		Type: java.lang.String
		Statement: specialinvoke $r2.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r1, varReplacer113657)
		Method: <org.apache.http.impl.auth.NTLMEngineImpl: java.security.Key createDESKey(byte[],int)>
		SHA-256: d1096933fcc86e0a62b11e1428e742284ba3b9bd3138bc4b7f2c7c255a92e2ac
		Secure: false
	Object:
		Variable: $r15
		Type: java.lang.String
		Statement: $r21 = staticinvoke <java.security.KeyFactory: java.security.KeyFactory getInstance(java.lang.String)>($r15)
		Method: <com.google.android.gms.internal.ads.zzaih: java.security.cert.X509Certificate[] zzj(java.nio.ByteBuffer,java.util.Map,java.security.cert.CertificateFactory)>
		SHA-256: 241d8134539f0c8941dfd882f7f8c160c5fdec05378661483a1204de6ceaa47e
		Secure: false
	Object:
		Variable: $r1
		Type: byte[]
		Statement: $r1 = virtualinvoke $r5.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r1)
		Method: <com.google.android.gms.internal.ads.zzghf: byte[] zza(byte[],byte[])>
		SHA-256: 29f2544c5359bf42703c94f49cad6b607b6e8cc3489efd94e4fd9067ab8094af
		Secure: false
	Object:
		Variable: $r1
		Type: byte[]
		Statement: $r1 = virtualinvoke $r3.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r1)
		Method: <org.apache.http.impl.auth.NTLMEngineImpl: byte[] RC4(byte[],byte[])>
		SHA-256: ea5cf3d45880768851153806f1be65c24f77d411cab6ce954960ab1ca31e861e
		Secure: false
	Object:
		Variable: varReplacer112785
		Type: java.lang.String
		Statement: specialinvoke $r2.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r1, varReplacer112785)
		Method: <com.google.android.gms.internal.ads.zzgha: void <init>(byte[],int)>
		SHA-256: 30dec0b37138553450386b22c9629a544681804e1f662ebd5ffb4d6050d39f22
		Secure: false
	Object:
		Variable: $r11
		Type: javax.crypto.spec.SecretKeySpec
		Statement: specialinvoke $r11.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r9, varReplacer97584)
		Method: <com.google.android.gms.internal.ads.zzghf: byte[] zza(byte[],byte[])>
		SHA-256: e63cb0badf25795c49f91f29af57898b455b013654241a605f404ce439517fed
		Secure: false
	Object:
		Variable: $r8
		Type: java.security.PublicKey
		Statement: $r8 = virtualinvoke $r0.<java.security.KeyPair: java.security.PublicKey getPublic()>()
		Method: <com.google.polo.ssl.SslUtil: java.security.cert.X509Certificate generateX509V3Certificate(java.security.KeyPair,java.lang.String,java.util.Date,java.util.Date,java.math.BigInteger)>
		SHA-256: b487384cdc1dabc49427cd1e3550a120aac3543c50a2f02172b46bdd91e5b554
		Secure: false
	Object:
		Variable: $r3
		Type: byte[]
		Statement: $r3 = virtualinvoke $r2.<java.security.MessageDigest: byte[] digest(byte[])>($r3)
		Method: <okio.ByteString: okio.ByteString digest(java.lang.String)>
		SHA-256: a79a1700ae9d8d44f13ea218f751e7024f8f1222b1b2ae17cdbab7b56d352181
		Secure: false
	Object:
		Variable: $r6
		Type: byte[]
		Statement: $r6 = virtualinvoke $r5.<java.security.MessageDigest: byte[] digest()>()
		Method: <com.google.android.gms.internal.ads.zzcfb: java.lang.String zze(java.lang.String)>
		SHA-256: a7d163ef5b788f946af7f0ece3ac4c7e8201418d86f95b1f0d2c22c40c827adb
		Secure: false
	Object:
		Variable: $r9
		Type: byte[]
		Statement: $r9 = virtualinvoke $r6.<javax.crypto.Mac: byte[] doFinal()>()
		Method: <com.google.android.gms.internal.ads.zzgab: byte[] zze(byte[],byte[],int)>
		SHA-256: 779071069fc67fd0e016e77e93915c8d33f79bcd22d1560c74e42838b3fa3e2d
		Secure: false
	Object:
		Variable: $r10
		Type: java.security.KeyPair
		Statement: specialinvoke $r10.<java.security.KeyPair: void <init>(java.security.PublicKey,java.security.PrivateKey)>($r11, $r12)
		Method: <org.bouncycastle.jce.provider.JDKKeyPairGenerator$ElGamal: java.security.KeyPair generateKeyPair()>
		SHA-256: 776455d06a6c767f634abe8b55fbe92ce6c34cbeebf947bc38092f0c46b09298
		Secure: false
	Object:
		Variable: $r9
		Type: java.security.MessageDigest
		Statement: $r9 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer62586)
		Method: <com.google.polo.pairing.PoloChallengeResponse: byte[] getAlpha(byte[])>
		SHA-256: 18043a44bafdca23d4c2274037b39e61456cd1a62068570246b82bc85b5c09cf
		Secure: true
	Object:
		Variable: $r9
		Type: javax.crypto.spec.IvParameterSpec
		Statement: specialinvoke $r9.<javax.crypto.spec.IvParameterSpec: void <init>(byte[])>($r7)
		Method: <com.google.android.gms.internal.ads.zzghd: byte[] zza(byte[],byte[])>
		SHA-256: 95f13cd625ae01435d9f3a72392684735281117ae4e5f0a1e43dadb0fe2a8f44
		Secure: false
	Object:
		Variable: $r4
		Type: java.security.spec.DSAParameterSpec
		Statement: specialinvoke $r4.<java.security.spec.DSAParameterSpec: void <init>(java.math.BigInteger,java.math.BigInteger,java.math.BigInteger)>($r3, $r6, $r7)
		Method: <org.bouncycastle.jce.provider.JDKDSAPrivateKey: void <init>(org.bouncycastle.crypto.params.DSAPrivateKeyParameters)>
		SHA-256: 8e06b4162ee1f314ee096b489ef8960e22bbf3eb4f42f766257aa23b657d43d2
		Secure: true
	Object:
		Variable: $r5
		Type: java.security.KeyStore
		Statement: $r5 = staticinvoke <java.security.KeyStore: java.security.KeyStore getInstance(java.lang.String)>($r4)
		Method: <com.remotefairy.wifi.androidtv.KeyStoreManager: java.security.KeyStore load()>
		SHA-256: a695dcf2cab1d39ed979da588f11598c020649e34d773f0177a22f2ae88884dc
		Secure: false
	Object:
		Variable: $r3
		Type: javax.crypto.Cipher
		Statement: $r3 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer112678)
		Method: <org.apache.http.impl.auth.NTLMEngineImpl: byte[] RC4(byte[],byte[])>
		SHA-256: 27fac94e9ea9620d81ef352f6f5f628782ffc90bc3615b3bffe307ea028d76ef
		Secure: false
	Object:
		Variable: $r4
		Type: javax.crypto.spec.DHParameterSpec
		Statement: specialinvoke $r4.<javax.crypto.spec.DHParameterSpec: void <init>(java.math.BigInteger,java.math.BigInteger,int)>($r3, $r6, $i0)
		Method: <org.bouncycastle.jce.provider.JCEDHPrivateKey: void <init>(org.bouncycastle.crypto.params.DHPrivateKeyParameters)>
		SHA-256: 123998bd5a684e3c1b8a3b347bebb004c9623e80080066623596df586ba1c93a
		Secure: true
	Object:
		Variable: r0
		Type: org.bouncycastle.jce.spec.ECNamedCurveSpec
		Statement: specialinvoke r0.<java.security.spec.ECParameterSpec: void <init>(java.security.spec.EllipticCurve,java.security.spec.ECPoint,java.math.BigInteger,int)>($r2, $r3, $r4, $i0)
		Method: <org.bouncycastle.jce.spec.ECNamedCurveSpec: void <init>(java.lang.String,java.security.spec.EllipticCurve,java.security.spec.ECPoint,java.math.BigInteger,java.math.BigInteger)>
		SHA-256: b36d50207c12d926e435b859cb9848007d52f50b2e62c847e597de1f84f657c6
		Secure: true
	Object:
		Variable: $r39
		Type: javax.crypto.spec.SecretKeySpec
		Statement: specialinvoke $r39.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r2, $r1)
		Method: <com.google.android.gms.internal.ads.zzghp: com.google.android.gms.internal.ads.zzgho zza(java.lang.String,byte[],byte[],int,int)>
		SHA-256: b574f344cb0d89345cd21a4b45fecdfde3c2f30959b03bfdf1b2b430f353c2ad
		Secure: false
	Object:
		Variable: $r2
		Type: java.security.KeyStore
		Statement: $r2 = staticinvoke <java.security.KeyStore: java.security.KeyStore getInstance(java.lang.String)>($r5)
		Method: <com.remotefairy.wifi.androidtv.KeyStoreManager: java.security.KeyStore createIdentityKeyStore()>
		SHA-256: b87e050c95d702a2325fb4fbb0f6a4caa3d9520a553087e74e59abcbd5b6b3de
		Secure: true
	Object:
		Variable: $r2
		Type: byte[]
		Statement: $r2 = virtualinvoke $r5.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r2)
		Method: <org.apache.http.impl.auth.NTLMEngineImpl$CipherGen: byte[] getLanManagerSessionKey()>
		SHA-256: 34f4034a9ba7438d9a162f4a6da444ce7c0b70944c78925580489bf13522ac02
		Secure: false
	Object:
		Variable: $r7
		Type: javax.crypto.Cipher
		Statement: $r7 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer114598)
		Method: <org.apache.http.impl.auth.NTLMEngineImpl: byte[] lmHash(java.lang.String)>
		SHA-256: a521a7a12ae939c44a0358818f0b3b465ea7435553e0c3610e5be6e9ba9bf222
		Secure: false
	Object:
		Variable: $r5
		Type: javax.net.ssl.TrustManagerFactory
		Statement: $r5 = staticinvoke <javax.net.ssl.TrustManagerFactory: javax.net.ssl.TrustManagerFactory getInstance(java.lang.String)>($r4)
		Method: <com.colortiger.atvp.KeyStoreManager$DynamicTrustManager: void reloadTrustManager(java.security.KeyStore)>
		SHA-256: 5ffa9bb7b54b7457bcc504a769663154dcccf02bcde83833e410717201fe83da
		Secure: true
	Object:
		Variable: $r4
		Type: java.security.MessageDigest
		Statement: $r4 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>($r3)
		Method: <org.apache.http.impl.auth.DigestScheme: java.security.MessageDigest createMessageDigest(java.lang.String)>
		SHA-256: bafd683999767fa653a59f6561b5fb73a4ec80f20b87a366e3f277c0d9c77bd
		Secure: false
	Object:
		Variable: $r16
		Type: java.security.PrivateKey
		Statement: $r16 = virtualinvoke $r0.<java.security.KeyPair: java.security.PrivateKey getPrivate()>()
		Method: <com.google.polo.ssl.SslUtil: java.security.cert.X509Certificate generateX509V3Certificate(java.security.KeyPair,java.lang.String,java.util.Date,java.util.Date,java.math.BigInteger)>
		SHA-256: 562380baa02d8bdca3dea7157eae2027d9895e385f481b386e682e305668ecd7
		Secure: false
	Object:
		Variable: $r11
		Type: java.security.PublicKey
		Statement: $r11 = virtualinvoke $r10.<java.security.KeyFactory: java.security.PublicKey generatePublic(java.security.spec.KeySpec)>($r7)
		Method: <com.google.android.gms.internal.ads.zzghq: java.security.interfaces.ECPublicKey zzd(int,byte[],byte[])>
		SHA-256: f3eaab38e1859ca8959acb741bce75dcbf3135211328ac055d8b5c27fddf605c
		Secure: false
	Object:
		Variable: $r0
		Type: byte[]
		Statement: $r0 = virtualinvoke $r6.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r1)
		Method: <org.apache.http.impl.auth.NTLMEngineImpl: byte[] lmResponse(byte[],byte[])>
		SHA-256: cdf1555884c268f883b6f786392d353b2786b4804be8408b66194b7c76399250
		Secure: false
	Object:
		Variable: $r4
		Type: byte[]
		Statement: virtualinvoke $r18.<java.security.SecureRandom: void nextBytes(byte[])>($r4)
		Method: <com.google.polo.pairing.PairingSession: void doPairingPhase()>
		SHA-256: b31e856b511df161268e4ecac77cb22f04ef8f34fb8f8828b0c59526dcfe2563
		Secure: true
	Object:
		Variable: $r2
		Type: java.security.MessageDigest
		Statement: $r2 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer42329)
		Method: <com.connectsdk16.service.AirPlayService: java.lang.String digestAuthentication(java.lang.String)>
		SHA-256: e87411120efa7438eff28be5a91f6a504eb92689de5ab1ec89d49bc39226591b
		Secure: false
	Object:
		Variable: $r3
		Type: javax.crypto.spec.SecretKeySpec
		Statement: specialinvoke $r3.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r1, varReplacer112798)
		Method: <com.google.android.gms.internal.ads.zzghd: void <init>(byte[],int)>
		SHA-256: 8409f596e648b50c1c02ad0e41e83afe9daa41aa984b3aa7f205d5e349ed8953
		Secure: false
	Object:
		Variable: $r5
		Type: javax.net.ssl.KeyManager[]
		Statement: $r5 = virtualinvoke $r3.<javax.net.ssl.KeyManagerFactory: javax.net.ssl.KeyManager[] getKeyManagers()>()
		Method: <com.remotefairy.wifi.androidtv.KeyStoreManager: javax.net.ssl.KeyManager[] getKeyManagers()>
		SHA-256: d617a14b49662629f0b204812884e372269ad388bdab979b923401d164e8f2eb
		Secure: false
	Object:
		Variable: $z0
		Type: boolean
		Statement: $z0 = virtualinvoke $r24.<java.security.Signature: boolean verify(byte[])>($r8)
		Method: <com.google.android.gms.internal.ads.zzaih: java.security.cert.X509Certificate[] zzj(java.nio.ByteBuffer,java.util.Map,java.security.cert.CertificateFactory)>
		SHA-256: 5c77c8f7afcd7bf9161ea442400312e37be644228dbe2e45308e81181f3d6d12
		Secure: false
	Object:
		Variable: $r1
		Type: java.security.SecureRandom
		Statement: specialinvoke $r1.<java.security.SecureRandom: void <init>()>()
		Method: <com.google.android.gms.measurement.internal.zzln: java.security.SecureRandom zzG()>
		SHA-256: d07449412fe71334f5d9546b208580191650f1f71ce89754e4a689206efc981c
		Secure: true
	Object:
		Variable: $r3
		Type: javax.crypto.spec.DHParameterSpec
		Statement: specialinvoke $r3.<javax.crypto.spec.DHParameterSpec: void <init>(java.math.BigInteger,java.math.BigInteger,int)>($r2, $r5, $i0)
		Method: <org.bouncycastle.jce.provider.JCEDHPublicKey: void <init>(org.bouncycastle.crypto.params.DHPublicKeyParameters)>
		SHA-256: b65d25e868a4b1152a682a0e9a19c29fd99293e829c1e27569557b79b7ed7b34
		Secure: true
	Object:
		Variable: $r5
		Type: java.security.SecureRandom
		Statement: specialinvoke $r5.<java.security.SecureRandom: void <init>()>()
		Method: <org.bouncycastle.crypto.engines.RSABlindedEngine: void init(boolean,org.bouncycastle.crypto.CipherParameters)>
		SHA-256: 94642bb44c85c75f78f22ec3372247e7bdbb1cf02676b4bfb5838a813a31c51a
		Secure: true
	Object:
		Variable: $r5
		Type: java.security.KeyPairGenerator
		Statement: $r5 = staticinvoke <java.security.KeyPairGenerator: java.security.KeyPairGenerator getInstance(java.lang.String)>(varReplacer110087)
		Method: <com.remotefairy.wifi.androidtv.KeyStoreManager: void createIdentity(java.security.KeyStore,java.lang.String,java.lang.String)>
		SHA-256: fe91f25d8f5fa548a62f6e19412dbdd6c8bfd80a4a84d272ac7bec4773d97e76
		Secure: false
	Object:
		Variable: $r2
		Type: javax.crypto.spec.SecretKeySpec
		Statement: specialinvoke $r2.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r1, varReplacer105148)
		Method: <com.google.android.gms.internal.ads.zzfyu: void <init>(byte[],boolean)>
		SHA-256: 83e5c8abb358a9d644f4b3b30072f0589764dcecba66f0b400bdecd4168f594a
		Secure: false
	Object:
		Variable: varReplacer63128
		Type: java.lang.String
		Statement: $r8 = staticinvoke <java.security.KeyFactory: java.security.KeyFactory getInstance(java.lang.String)>(varReplacer63128)
		Method: <com.remotefairy.wifi.adb.AdbCrypto: com.remotefairy.wifi.adb.AdbCrypto loadAdbKeyPair(com.remotefairy.wifi.adb.AdbBase64,java.io.File,java.io.File)>
		SHA-256: d1d3dc3f0957c862e7e987ef5950f2fdaa2885992601cf65a77aacb68015c59e
		Secure: false
	Object:
		Variable: $r24
		Type: byte[]
		Statement: $r24 = virtualinvoke $r16.<java.security.MessageDigest: byte[] digest(byte[])>($r24)
		Method: <org.apache.http.impl.auth.DigestScheme: org.apache.http.Header createDigestHeader(org.apache.http.auth.Credentials,org.apache.http.HttpRequest)>
		SHA-256: d36648b94075615d212b0236bc5cdfc92309766fe7b341b21d50caf50b71db90
		Secure: false
	Object:
		Variable: $r1
		Type: byte[]
		Statement: $r1 = virtualinvoke $r4.<java.security.MessageDigest: byte[] digest(byte[])>($r1)
		Method: <com.google.android.gms.measurement.internal.zzlh: long zzd(byte[])>
		SHA-256: 9fadd863f994fe2d06d3fb869a91f579dad44be642b75aab823107aa437ffcb1
		Secure: false
	Object:
		Variable: $r3
		Type: java.security.SecureRandom
		Statement: specialinvoke $r3.<java.security.SecureRandom: void <init>()>()
		Method: <org.bouncycastle.crypto.signers.PSSSigner: void init(boolean,org.bouncycastle.crypto.CipherParameters)>
		SHA-256: c5c5cb9bec6c89f6dc02736158ef1a0d54025fad80cfb6f3cb224c7ec7320f20
		Secure: true
	Object:
		Variable: $r7
		Type: java.security.PublicKey
		Statement: $r7 = virtualinvoke $r6.<java.security.KeyPair: java.security.PublicKey getPublic()>()
		Method: <com.google.android.gms.internal.ads.zzfzn: com.google.android.gms.internal.ads.zzgma zza(com.google.android.gms.internal.ads.zzgma)>
		SHA-256: 3e0b55a3307fcc3cfb85380460cda8ac748bcccec6bf33f0109423f1035275aa
		Secure: false
	Object:
		Variable: $r7
		Type: javax.crypto.spec.SecretKeySpec
		Statement: specialinvoke $r7.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r2, varReplacer38146)
		Method: <com.google.android.gms.internal.ads.zzaoi: byte[] zzb(byte[],java.lang.String)>
		SHA-256: f7b607fce35cab7ce7c766af995606dab519e310cd3cca6942f9b5deb1cd7899
		Secure: false
	Object:
		Variable: varReplacer105148
		Type: java.lang.String
		Statement: specialinvoke $r2.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r1, varReplacer105148)
		Method: <com.google.android.gms.internal.ads.zzfyu: void <init>(byte[],boolean)>
		SHA-256: 284381911a371c93a09c90f3579a8674581d6c7a9823e33df7736cd7c0cf0ce9
		Secure: false
	Object:
		Variable: $r1
		Type: byte[]
		Statement: $r1 = virtualinvoke $r3.<java.security.MessageDigest: byte[] digest()>()
		Method: <org.apache.http.impl.auth.NTLMEngineImpl: byte[] ntlm2SessionResponse(byte[],byte[],byte[])>
		SHA-256: 87142a8c4369ab14d23fa8690b807f0d900b1807831c8c0f8e6b4de4b8735e3b
		Secure: false
	Object:
		Variable: $r3
		Type: javax.crypto.Cipher
		Statement: $r3 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>($r2)
		Method: <com.google.android.gms.internal.ads.zzght: java.lang.Object zza(java.lang.String,java.security.Provider)>
		SHA-256: 914e68ec03e0be78d4a185de2d801eccd57fcd41a987fd9d4133c7c2eb21e95d
		Secure: false
	Object:
		Variable: $r2
		Type: java.lang.String
		Statement: $r3 = staticinvoke <java.security.KeyFactory: java.security.KeyFactory getInstance(java.lang.String,java.security.Provider)>($r2, $r1)
		Method: <com.google.android.gms.internal.ads.zzghv: java.lang.Object zza(java.lang.String,java.security.Provider)>
		SHA-256: 2ec781ddd344900cf18438f24a8c61a06da6b94a366ac9983c8cdef0f1db0281
		Secure: false
	Object:
		Variable: $r2
		Type: javax.crypto.spec.SecretKeySpec
		Statement: specialinvoke $r2.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r1, varReplacer112785)
		Method: <com.google.android.gms.internal.ads.zzgha: void <init>(byte[],int)>
		SHA-256: 3420b57fa655f39f8ecc25fc8bb0fdec6cc777bcb7893bac82503acab0410535
		Secure: false
	Object:
		Variable: $r1
		Type: byte[]
		Statement: $r1 = virtualinvoke $r5.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r2)
		Method: <org.apache.http.impl.auth.NTLMEngineImpl$CipherGen: byte[] getLanManagerSessionKey()>
		SHA-256: 29e4a5e001a05d29c16861fe1530ed3ef232835c26fc0e2181c1f3dff02f44b2
		Secure: false
	Object:
		Variable: $r2
		Type: byte[]
		Statement: virtualinvoke $r1.<java.security.SecureRandom: void nextBytes(byte[])>($r2)
		Method: <org.apache.http.impl.auth.DigestScheme: java.lang.String createCnonce()>
		SHA-256: bbd35c0b9cc04d0eef73b2ad76dd3b0c8a90eec8bc1cf0e85b5f6d07c31b38bf
		Secure: true
	Object:
		Variable: $r3
		Type: javax.net.ssl.TrustManager[]
		Statement: $r3 = virtualinvoke $r2.<javax.net.ssl.TrustManagerFactory: javax.net.ssl.TrustManager[] getTrustManagers()>()
		Method: <okhttp3.OkHttpClient: javax.net.ssl.X509TrustManager systemDefaultTrustManager()>
		SHA-256: 4704c3ea9d50e304ebaa64f80abc0358b23fd9e2c75b25360e6595ec058a5c98
		Secure: false
	Object:
		Variable: $r5
		Type: java.security.KeyStore
		Statement: $r5 = staticinvoke <java.security.KeyStore: java.security.KeyStore getInstance(java.lang.String)>($r4)
		Method: <com.colortiger.atvp.KeyStoreManager: java.security.KeyStore load()>
		SHA-256: a695dcf2cab1d39ed979da588f11598c020649e34d773f0177a22f2ae88884dc
		Secure: true
	Object:
		Variable: $r17
		Type: byte[]
		Statement: $r17 = virtualinvoke $r16.<java.security.MessageDigest: byte[] digest()>()
		Method: <com.remotefairy.wifi.itunes.service.ITunesService$1: void run()>
		SHA-256: 5db72ce76a52702180e0acb24e18f44d19bb20b3951f6c3235bd8d489da85ab3
		Secure: false
	Object:
		Variable: $r4
		Type: java.lang.String
		Statement: specialinvoke $r7.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r2, $r4)
		Method: <com.google.android.gms.internal.ads.zzgab: byte[] zzf(byte[],byte[])>
		SHA-256: e21603d58720cc59393dca6163c74ae529d090138b691a7a3088ad1f5ab0b2d7
		Secure: false
	Object:
		Variable: $r1
		Type: javax.crypto.spec.SecretKeySpec
		Statement: specialinvoke $r1.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r6, varReplacer111473)
		Method: <com.google.android.gms.internal.ads.zzgaz: java.lang.Object zza(com.google.android.gms.internal.ads.zzgma)>
		SHA-256: 8b270c64e39d5849cebb88aca7943aeb71dbce7de4f57b00936fb6e7f4be25b4
		Secure: false
	Object:
		Variable: $r1
		Type: byte[]
		Statement: $r1 = virtualinvoke $r2.<java.security.MessageDigest: byte[] digest(byte[])>($r3)
		Method: <org.apache.http.impl.auth.NTLMEngineImpl$HMACMD5: byte[] getOutput()>
		SHA-256: 3bcbf4d912455255294e9bee4d91f33f3fa55dd4a67dc970c48252366cf97c1f
		Secure: false
	Object:
		Variable: $r4
		Type: byte[]
		Statement: $r4 = interfaceinvoke $r2.<java.security.Key: byte[] getEncoded()>()
		Method: <com.google.android.gms.internal.ads.zzgih: void <init>(java.lang.String,java.security.Key)>
		SHA-256: 1f5608be4fd89d8104d18d63a22bec494b79d8060916b3220a41fe3748d7c0a7
		Secure: true
	Object:
		Variable: $r5
		Type: javax.net.ssl.SSLContext
		Statement: $r5 = staticinvoke <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String)>(varReplacer39802)
		Method: <com.remotefairy.wifi.androidtv.NetClient: void connectImpl()>
		SHA-256: 24dd34dc7eb535383a686b5e0d32820dad7d4391e1e7baf83573680a00fac289
		Secure: false
	Object:
		Variable: $r24
		Type: byte[]
		Statement: $r24 = virtualinvoke $r25.<java.security.MessageDigest: byte[] digest(byte[])>($r24)
		Method: <org.apache.http.impl.auth.DigestScheme: org.apache.http.Header createDigestHeader(org.apache.http.auth.Credentials,org.apache.http.HttpRequest)>
		SHA-256: d6819f5a090592a9c309f7dee8c1d3060c928c197153632cc3c4595ac59ae53a
		Secure: false
	Object:
		Variable: $r6
		Type: java.security.Signature
		Statement: $r6 = staticinvoke <java.security.Signature: java.security.Signature getInstance(java.lang.String,java.lang.String)>($r5, varReplacer116078)
		Method: <org.bouncycastle.jce.provider.X509CertificateObject: void verify(java.security.PublicKey)>
		SHA-256: b098930539c2e219c3db3731bad0c9256f09d4c42452aed34fbc04539eb87428
		Secure: false
	Object:
		Variable: $r3
		Type: byte[]
		Statement: $r3 = virtualinvoke $r7.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r4)
		Method: <org.apache.http.impl.auth.NTLMEngineImpl: byte[] lmHash(java.lang.String)>
		SHA-256: 114f7a181352f73a83d865675a446c10de9048098c597c0124727cafa34fdebf
		Secure: false
	Object:
		Variable: $r1
		Type: java.lang.String
		Statement: specialinvoke $r39.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r2, $r1)
		Method: <com.google.android.gms.internal.ads.zzghp: com.google.android.gms.internal.ads.zzgho zza(java.lang.String,byte[],byte[],int,int)>
		SHA-256: d7e24bde5e1c3deb73676518b727388db0ee7582326cef21facb92188e0747d9
		Secure: false
	Object:
		Variable: $r1
		Type: byte[]
		Statement: $r1 = virtualinvoke $r2.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r1)
		Method: <com.remotefairy.wifi.adb.AdbCrypto: byte[] signAdbTokenPayload(byte[])>
		SHA-256: 48e302e564410e094dd428bb97333fc9cf7e1bf125184fd101b5cec38c0a95d9
		Secure: false

Findings in Java Class: com.google.android.gms.internal.ads.zzamq

	 in Method: void run()
		ConstraintError violating CrySL rule for java.security.MessageDigest (on Object #e3f2f55f6e4723f775f262ed3530884891680c0fd86b9b3e3bfb1e4fe5f96e86)
			First parameter (with value "MD5") should be any of {SHA-256, SHA-384, SHA-512}
			at statement: $r2 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer4053)


Findings in Java Class: com.remotefairy.wifi.itunes.service.ITunesService$1

	 in Method: void run()
		ConstraintError violating CrySL rule for java.security.MessageDigest (on Object #29a5210f2e771d4faab6d03af7571b70f6db4ba5a3b8bd379bf9b30b158b287e)
			First parameter (with value "MD5") should be any of {SHA-256, SHA-384, SHA-512}
			at statement: $r16 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer5532)


Findings in Java Class: com.remotefairy.wifi.apple.itunes.service.ITunesService$1

	 in Method: void run()
		ConstraintError violating CrySL rule for java.security.MessageDigest (on Object #cda4baffccb69f820929254f82908aa8c8094d74cd1ea98ed7bfacf28a512b3b)
			First parameter (with value "MD5") should be any of {SHA-256, SHA-384, SHA-512}
			at statement: $r16 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer5572)


Findings in Java Class: org.apache.http.conn.ssl.SSLContexts

	 in Method: javax.net.ssl.SSLContext createDefault()
		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			Second parameter was not properly generated as generatedTrustManagers
			at statement: virtualinvoke $r0.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>(varReplacer8442, varReplacer8442, varReplacer8442)

		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			First parameter was not properly generated as generatedKeyManagers
			at statement: virtualinvoke $r0.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>(varReplacer8442, varReplacer8442, varReplacer8442)

		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			Third parameter was not properly generated as randomized
			at statement: virtualinvoke $r0.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>(varReplacer8442, varReplacer8442, varReplacer8442)

		ConstraintError violating CrySL rule for javax.net.ssl.SSLContext (on Object #57a1ff35656df8a7f946fe592b72ffa87913d3370ededf0a44aa76cdaac54c19)
			First parameter (with value "TLS") should be any of {TLSv1.2}
			at statement: $r0 = staticinvoke <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String)>(varReplacer8441)


Findings in Java Class: com.google.android.gms.internal.ads.zzcfb

	 in Method: java.lang.String zzd()
		ConstraintError violating CrySL rule for java.security.MessageDigest (on Object #8358a93c1f324fcf4740ef850e20f98398d9e94c58372ba67535da75cfbc6ee0)
			First parameter (with value "MD5") should be any of {SHA-256, SHA-384, SHA-512}
			at statement: $r7 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer10507)


	 in Method: java.lang.String zze(java.lang.String)
		ConstraintError violating CrySL rule for java.security.MessageDigest (on Object #acd17450e94feb78725a8e46884005d0de2707578c2c101df0a83f45c052250d)
			First parameter (with value "MD5") should be any of {SHA-256, SHA-384, SHA-512}
			at statement: $r5 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer15297)


Findings in Java Class: com.google.android.gms.common.util.AndroidUtilsLight

	 in Method: java.security.MessageDigest zza(java.lang.String)
		ConstraintError violating CrySL rule for java.security.MessageDigest (on Object #c613dcbe025721f48d3fcab4e003017d7cb704971fc9d0296bae42be0b7eb30a)
			First parameter (with value "SHA-1") should be any of {SHA-256, SHA-384, SHA-512}
			at statement: $r0 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>($r2)

		ConstraintError violating CrySL rule for java.security.MessageDigest (on Object #c613dcbe025721f48d3fcab4e003017d7cb704971fc9d0296bae42be0b7eb30a)
			First parameter (with value "SHA1") should be any of {SHA-256, SHA-384, SHA-512}
			at statement: $r0 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>($r2)

		IncompleteOperationError violating CrySL rule for java.security.MessageDigest (on Object #c613dcbe025721f48d3fcab4e003017d7cb704971fc9d0296bae42be0b7eb30a)
			Operation on object of type java.security.MessageDigest object not completed. Expected call to digest, update
			at statement: $r0 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>($r2)


	 in Method: byte[] getPackageCertificateHashBytes(android.content.Context,java.lang.String)
		IncompleteOperationError violating CrySL rule for java.security.MessageDigest (on Object #c613dcbe025721f48d3fcab4e003017d7cb704971fc9d0296bae42be0b7eb30a)
			Operation on object of type java.security.MessageDigest object not completed. Expected call to digest, update
			at statement: $r5 = staticinvoke <com.google.android.gms.common.util.AndroidUtilsLight: java.security.MessageDigest zza(java.lang.String)>(varReplacer88452)


Findings in Java Class: com.google.android.gms.internal.consent_sdk.zzbx

	 in Method: java.lang.String zzc(java.lang.String)
		ConstraintError violating CrySL rule for java.security.MessageDigest (on Object #3bf5421fecae7db0a86b0b4c463ecb67864e80f898271fbcd0781506ea408e8d)
			First parameter (with value "MD5") should be any of {SHA-256, SHA-384, SHA-512}
			at statement: $r5 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer23434)


Findings in Java Class: com.remotefairy.wifi.androidtv.KeyStoreManager

	 in Method: javax.net.ssl.KeyManager[] getKeyManagers()
		NeverTypeOfError violating CrySL rule for javax.net.ssl.KeyManagerFactory (on Object #142b80b0eb3c6099520f9c1be31bea3a59f6bf3f0a6e62a7d8eb3d47737f06c5)
			Second parameter should never be of type java.lang.String.
			at statement: virtualinvoke $r3.<javax.net.ssl.KeyManagerFactory: void init(java.security.KeyStore,char[])>($r1, $r4)

		HardCodedError violating CrySL rule for javax.net.ssl.KeyManagerFactory (on Object #142b80b0eb3c6099520f9c1be31bea3a59f6bf3f0a6e62a7d8eb3d47737f06c5)
			Second parameter should never be hardcoded.
			at statement: virtualinvoke $r3.<javax.net.ssl.KeyManagerFactory: void init(java.security.KeyStore,char[])>($r1, $r4)

		RequiredPredicateError violating CrySL rule for javax.net.ssl.KeyManagerFactory
			First parameter was not properly generated as generatedKeyStore
			at statement: virtualinvoke $r3.<javax.net.ssl.KeyManagerFactory: void init(java.security.KeyStore,char[])>($r1, $r4)


	 in Method: void store(java.security.KeyStore)
		TypestateError violating CrySL rule for java.security.KeyStore (on Object #b87e050c95d702a2325fb4fbb0f6a4caa3d9520a553087e74e59abcbd5b6b3de)
			Unexpected call to method store on object of type java.security.KeyStore. Expect a call to one of the following methods getKey,getEntry,setEntry
			at statement: virtualinvoke $r1.<java.security.KeyStore: void store(java.io.OutputStream,char[])>($r3, $r4)


	 in Method: java.security.KeyStore createIdentityKeyStore()
		ConstraintError violating CrySL rule for java.security.KeyStore (on Object #d2ddbde5cbe2090d507f3ad3ebd5d4a169be523fee1fb4eda9924e3ca54bb430)
			First parameter (with value "AndroidKeyStore") should be any of {JCEKS, JKS, DKS, PKCS11, PKCS12}
			at statement: $r2 = staticinvoke <java.security.KeyStore: java.security.KeyStore getInstance(java.lang.String)>(varReplacer110082)


	 in Method: void createIdentity(java.security.KeyStore,java.lang.String,java.lang.String)
		TypestateError violating CrySL rule for java.security.KeyPairGenerator (on Object #fe91f25d8f5fa548a62f6e19412dbdd6c8bfd80a4a84d272ac7bec4773d97e76)
			Unexpected call to method generateKeyPair on object of type java.security.KeyPairGenerator. Expect a call to one of the following methods initialize
			at statement: $r6 = virtualinvoke $r5.<java.security.KeyPairGenerator: java.security.KeyPair generateKeyPair()>()

		TypestateError violating CrySL rule for java.security.KeyPairGenerator (on Object #236fbb245c0586c17caefe24fce4d88b7ddd720a7529c55c0585bf4d5570b2f1)
			Unexpected call to method generateKeyPair on object of type java.security.KeyPairGenerator. Expect a call to one of the following methods initialize
			at statement: $r6 = virtualinvoke $r5.<java.security.KeyPairGenerator: java.security.KeyPair generateKeyPair()>()

		IncompleteOperationError violating CrySL rule for java.security.KeyPairGenerator (on Object #236fbb245c0586c17caefe24fce4d88b7ddd720a7529c55c0585bf4d5570b2f1)
			Operation on object of type java.security.KeyPairGenerator object not completed. Expected call to initialize
			at statement: $r6 = virtualinvoke $r5.<java.security.KeyPairGenerator: java.security.KeyPair generateKeyPair()>()


Findings in Java Class: com.google.android.gms.internal.ads.zzaoi

	 in Method: javax.crypto.Cipher zzc()
		TypestateError violating CrySL rule for javax.crypto.Cipher (on Object #8d82b58e5dcfd3478be5400d8c4cd3903aff8a6f28b80cff475c55ba0a6d8364)
			Unexpected call to method getInstance on object of type javax.crypto.Cipher. Expect a call to one of the following methods init
			at statement: $r1 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer38162)


	 in Method: java.lang.String zza(byte[],byte[])
		RequiredPredicateError violating CrySL rule for javax.crypto.spec.SecretKeySpec
			First parameter was not properly generated as preparedKeyMaterial
			at statement: specialinvoke $r3.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r1, varReplacer54706)

		RequiredPredicateError violating CrySL rule for javax.crypto.Cipher
			Third parameter was not properly generated as randomized
			at statement: virtualinvoke $r5.<javax.crypto.Cipher: void init(int,java.security.Key,java.security.SecureRandom)>(varReplacer54708, $r3, varReplacer54709)


	 in Method: byte[] zzb(byte[],java.lang.String)
		RequiredPredicateError violating CrySL rule for javax.crypto.spec.SecretKeySpec
			First parameter was not properly generated as preparedKeyMaterial
			at statement: specialinvoke $r7.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r2, varReplacer38146)

		RequiredPredicateError violating CrySL rule for javax.crypto.Cipher
			Second parameter was not properly generated as generatedKey
			at statement: virtualinvoke $r9.<javax.crypto.Cipher: void init(int,java.security.Key,java.security.spec.AlgorithmParameterSpec)>(varReplacer38147, $r7, $r1)

		RequiredPredicateError violating CrySL rule for javax.crypto.spec.IvParameterSpec
			First parameter was not properly generated as randomized
			at statement: specialinvoke $r1.<javax.crypto.spec.IvParameterSpec: void <init>(byte[])>($r4)


Findings in Java Class: com.remotefairy.wifi.androidtv.NetClient

	 in Method: void connectImpl()
		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			Second parameter was not properly generated as generatedTrustManagers
			at statement: virtualinvoke $r5.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>($r3, $r4, $r1)

		ConstraintError violating CrySL rule for javax.net.ssl.SSLContext (on Object #24dd34dc7eb535383a686b5e0d32820dad7d4391e1e7baf83573680a00fac289)
			First parameter (with value "TLS") should be any of {TLSv1.2}
			at statement: $r5 = staticinvoke <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String)>(varReplacer39802)

		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			Third parameter was not properly generated as randomized
			at statement: virtualinvoke $r5.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>($r3, $r4, $r1)

		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			First parameter was not properly generated as generatedKeyManagers
			at statement: virtualinvoke $r5.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>($r3, $r4, $r1)


Findings in Java Class: com.google.android.gms.measurement.internal.zzln

	 in Method: java.security.MessageDigest zzF()
		IncompleteOperationError violating CrySL rule for java.security.MessageDigest (on Object #f09fc864e72dfa3b1a40767f53267519a1f33942f989c90e6c97f83511d2870a)
			Operation on object of type java.security.MessageDigest object not completed. Expected call to digest, update
			at statement: $r0 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer40158)

		ConstraintError violating CrySL rule for java.security.MessageDigest (on Object #f09fc864e72dfa3b1a40767f53267519a1f33942f989c90e6c97f83511d2870a)
			First parameter (with value "MD5") should be any of {SHA-256, SHA-384, SHA-512}
			at statement: $r0 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer40158)


Findings in Java Class: com.google.android.gms.measurement.internal.zzlh

	 in Method: long zzd(byte[])
		IncompleteOperationError violating CrySL rule for java.security.MessageDigest (on Object #f09fc864e72dfa3b1a40767f53267519a1f33942f989c90e6c97f83511d2870a)
			Operation on object of type java.security.MessageDigest object not completed. Expected call to digest, update
			at statement: $r4 = staticinvoke <com.google.android.gms.measurement.internal.zzln: java.security.MessageDigest zzF()>()


Findings in Java Class: com.google.android.gms.measurement.internal.zzka

	 in Method: java.lang.String zzf(java.lang.String,boolean)
		IncompleteOperationError violating CrySL rule for java.security.MessageDigest (on Object #f09fc864e72dfa3b1a40767f53267519a1f33942f989c90e6c97f83511d2870a)
			Operation on object of type java.security.MessageDigest object not completed. Expected call to digest, update
			at statement: $r8 = staticinvoke <com.google.android.gms.measurement.internal.zzln: java.security.MessageDigest zzF()>()


Findings in Java Class: com.google.android.gms.measurement.internal.zzel

	 in Method: com.google.android.gms.measurement.internal.zzq zzj(java.lang.String)
		IncompleteOperationError violating CrySL rule for java.security.MessageDigest (on Object #f09fc864e72dfa3b1a40767f53267519a1f33942f989c90e6c97f83511d2870a)
			Operation on object of type java.security.MessageDigest object not completed. Expected call to update, java.security.MessageDigest: byte[] digest(byte[])
			at statement: $r24 = virtualinvoke $r17.<java.security.MessageDigest: byte[] digest(byte[])>($r24)

		IncompleteOperationError violating CrySL rule for java.security.MessageDigest (on Object #f09fc864e72dfa3b1a40767f53267519a1f33942f989c90e6c97f83511d2870a)
			Operation on object of type java.security.MessageDigest object not completed. Expected call to digest, update
			at statement: $r17 = staticinvoke <com.google.android.gms.measurement.internal.zzln: java.security.MessageDigest zzF()>()


Findings in Java Class: com.connectsdk16.service.AirPlayService

	 in Method: java.lang.String digestAuthentication(java.lang.String)
		ConstraintError violating CrySL rule for java.security.MessageDigest (on Object #e87411120efa7438eff28be5a91f6a504eb92689de5ab1ec89d49bc39226591b)
			First parameter (with value "MD5") should be any of {SHA-256, SHA-384, SHA-512}
			at statement: $r2 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer42329)


Findings in Java Class: com.colortiger.atvp.KeyStoreManager

	 in Method: javax.net.ssl.KeyManager[] getKeyManagers()
		NeverTypeOfError violating CrySL rule for javax.net.ssl.KeyManagerFactory (on Object #142b80b0eb3c6099520f9c1be31bea3a59f6bf3f0a6e62a7d8eb3d47737f06c5)
			Second parameter should never be of type java.lang.String.
			at statement: virtualinvoke $r3.<javax.net.ssl.KeyManagerFactory: void init(java.security.KeyStore,char[])>($r1, $r4)

		HardCodedError violating CrySL rule for javax.net.ssl.KeyManagerFactory (on Object #142b80b0eb3c6099520f9c1be31bea3a59f6bf3f0a6e62a7d8eb3d47737f06c5)
			Second parameter should never be hardcoded.
			at statement: virtualinvoke $r3.<javax.net.ssl.KeyManagerFactory: void init(java.security.KeyStore,char[])>($r1, $r4)


	 in Method: void store(java.security.KeyStore)
		TypestateError violating CrySL rule for java.security.KeyStore (on Object #a695dcf2cab1d39ed979da588f11598c020649e34d773f0177a22f2ae88884dc)
			Unexpected call to method store on object of type java.security.KeyStore. Expect a call to one of the following methods getKey,getEntry,setEntry
			at statement: virtualinvoke $r1.<java.security.KeyStore: void store(java.io.OutputStream,char[])>($r3, $r4)

		TypestateError violating CrySL rule for java.security.KeyStore (on Object #a695dcf2cab1d39ed979da588f11598c020649e34d773f0177a22f2ae88884dc)
			Unexpected call to method store on object of type java.security.KeyStore. Expect a call to one of the following methods getKey,getEntry,setEntry
			at statement: virtualinvoke $r1.<java.security.KeyStore: void store(java.io.OutputStream,char[])>($r3, $r4)

		TypestateError violating CrySL rule for java.security.KeyStore (on Object #fce107a500776573c2391170099b0f5113437f61e71d293eab86e835185375c8)
			Unexpected call to method store on object of type java.security.KeyStore. Expect a call to one of the following methods getKey,getEntry,setEntry
			at statement: virtualinvoke $r1.<java.security.KeyStore: void store(java.io.OutputStream,char[])>($r3, $r4)

		TypestateError violating CrySL rule for java.security.KeyStore (on Object #9b4f3551f8aefe100ee5fb4f9bf140886b4e423f06c5fe6d34f0df292e3c633b)
			Unexpected call to method store on object of type java.security.KeyStore. Expect a call to one of the following methods getKey,getEntry,setEntry
			at statement: virtualinvoke $r1.<java.security.KeyStore: void store(java.io.OutputStream,char[])>($r3, $r4)


	 in Method: java.security.KeyStore createIdentityKeyStore()
		ConstraintError violating CrySL rule for java.security.KeyStore (on Object #9b4f3551f8aefe100ee5fb4f9bf140886b4e423f06c5fe6d34f0df292e3c633b)
			First parameter (with value "AndroidKeyStore") should be any of {JCEKS, JKS, DKS, PKCS11, PKCS12}
			at statement: $r2 = staticinvoke <java.security.KeyStore: java.security.KeyStore getInstance(java.lang.String)>(varReplacer80193)


	 in Method: void createIdentity(java.security.KeyStore,java.lang.String,java.lang.String)
		TypestateError violating CrySL rule for java.security.KeyPairGenerator (on Object #cc669b76e22aab474313e76693f2286911d3ce02ebda331c1ccebdc6dda1493a)
			Unexpected call to method generateKeyPair on object of type java.security.KeyPairGenerator. Expect a call to one of the following methods initialize
			at statement: $r5 = virtualinvoke $r4.<java.security.KeyPairGenerator: java.security.KeyPair generateKeyPair()>()

		IncompleteOperationError violating CrySL rule for java.security.KeyPairGenerator (on Object #cc669b76e22aab474313e76693f2286911d3ce02ebda331c1ccebdc6dda1493a)
			Operation on object of type java.security.KeyPairGenerator object not completed. Expected call to initialize
			at statement: $r5 = virtualinvoke $r4.<java.security.KeyPairGenerator: java.security.KeyPair generateKeyPair()>()


Findings in Java Class: com.google.polo.ssl.SSLSocketFactoryWrapper

	 in Method: void <init>(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[])
		ConstraintError violating CrySL rule for javax.net.ssl.SSLContext (on Object #e399b5264947ba8e8e93fd61f9c40fb4e747eb2c694147c740f894a38e1a3278)
			First parameter (with value "TLS") should be any of {TLSv1.2}
			at statement: $r4 = staticinvoke <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String)>(varReplacer47333)

		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			First parameter was not properly generated as generatedKeyManagers
			at statement: virtualinvoke $r4.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>($r2, $r1, varReplacer47334)

		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			Third parameter was not properly generated as randomized
			at statement: virtualinvoke $r4.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>($r2, $r1, varReplacer47334)

		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			Second parameter was not properly generated as generatedTrustManagers
			at statement: virtualinvoke $r4.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>($r2, $r1, varReplacer47334)


Findings in Java Class: com.google.firebase.crashlytics.internal.common.CommonUtils

	 in Method: java.lang.String hash(byte[],java.lang.String)
		ConstraintError violating CrySL rule for java.security.MessageDigest (on Object #7fb5e1ca4e0ccb41306f524bfa8fe0a452898cd3171e10ddd8d49eb5eb47dc5a)
			First parameter (with value "SHA-1") should be any of {SHA-256, SHA-384, SHA-512}
			at statement: $r3 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>($r2)


Findings in Java Class: org.java_websocket.drafts.Draft_76

	 in Method: byte[] createChallenge(java.lang.String,java.lang.String,byte[])
		ConstraintError violating CrySL rule for java.security.MessageDigest (on Object #7caf05e1b340a62dd23e02f7c1f40971b31238441329ee2d4469e8e8402b08b7)
			First parameter (with value "MD5") should be any of {SHA-256, SHA-384, SHA-512}
			at statement: $r6 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer62541)


Findings in Java Class: com.google.android.gms.internal.ads.zzaih

	 in Method: byte[][] zzk(int[],com.google.android.gms.internal.ads.zzaib[])
		IncompleteOperationError violating CrySL rule for java.security.MessageDigest (on Object #580bdd0daa91294292f086408ff8e81e6996471e749a97fb2cad1a8b855bfa14)
			Operation on object of type java.security.MessageDigest object not completed. Expected call to digest, update
			at statement: $r5 = newarray (java.security.MessageDigest)[$i4]

		IncompleteOperationError violating CrySL rule for java.security.MessageDigest (on Object #580bdd0daa91294292f086408ff8e81e6996471e749a97fb2cad1a8b855bfa14)
			Operation on object of type java.security.MessageDigest object not completed. Expected call to digest, update
			at statement: $r7 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>($r6)

		TypestateError violating CrySL rule for java.security.MessageDigest (on Object #580bdd0daa91294292f086408ff8e81e6996471e749a97fb2cad1a8b855bfa14)
			Unexpected call to method <java.security.MessageDigest: int digest(byte[],int,int)> on object of type java.security.MessageDigest. Expect a call to one of the following methods java.security.MessageDigest: void update(byte[],int,int),java.security.MessageDigest: void update(java.nio.ByteBuffer),java.security.MessageDigest: byte[] digest(byte[]),java.security.MessageDigest: void update(byte[]),java.security.MessageDigest: void update(byte)
			at statement: $i1 = virtualinvoke $r7.<java.security.MessageDigest: int digest(byte[],int,int)>($r10, $i1, $i11)

		IncompleteOperationError violating CrySL rule for java.security.MessageDigest (on Object #580bdd0daa91294292f086408ff8e81e6996471e749a97fb2cad1a8b855bfa14)
			Operation on object of type java.security.MessageDigest object not completed. Expected call to java.security.MessageDigest: int digest(byte[],int,int), update, java.security.MessageDigest: byte[] digest(), java.security.MessageDigest: byte[] digest(byte[])
			at statement: $i1 = virtualinvoke $r7.<java.security.MessageDigest: int digest(byte[],int,int)>($r10, $i1, $i11)

		IncompleteOperationError violating CrySL rule for java.security.MessageDigest (on Object #580bdd0daa91294292f086408ff8e81e6996471e749a97fb2cad1a8b855bfa14)
			Operation on object of type java.security.MessageDigest object not completed. Expected call to java.security.MessageDigest: int digest(byte[],int,int), update, java.security.MessageDigest: byte[] digest(), java.security.MessageDigest: byte[] digest(byte[])
			at statement: $r4 = virtualinvoke $r7.<java.security.MessageDigest: byte[] digest(byte[])>($r4)

		IncompleteOperationError violating CrySL rule for java.security.MessageDigest (on Object #580bdd0daa91294292f086408ff8e81e6996471e749a97fb2cad1a8b855bfa14)
			Operation on object of type java.security.MessageDigest object not completed. Expected call to digest, update
			at statement: interfaceinvoke $r2.<com.google.android.gms.internal.ads.zzaib: void zzb(java.security.MessageDigest[],long,int)>($r5, $l5, $i9)


	 in Method: java.security.cert.X509Certificate[] zzj(java.nio.ByteBuffer,java.util.Map,java.security.cert.CertificateFactory)
		RequiredPredicateError violating CrySL rule for java.security.spec.X509EncodedKeySpec
			First parameter was not properly generated as preparedKeyMaterial
			at statement: specialinvoke $r22.<java.security.spec.X509EncodedKeySpec: void <init>(byte[])>($r5)

		RequiredPredicateError violating CrySL rule for java.security.Signature
			First parameter was not properly generated as generatedPubkey
			at statement: virtualinvoke $r24.<java.security.Signature: void initVerify(java.security.PublicKey)>($r23)

		RequiredPredicateError violating CrySL rule for java.security.KeyFactory
			First parameter was not properly generated as speccedKey
			at statement: $r23 = virtualinvoke $r21.<java.security.KeyFactory: java.security.PublicKey generatePublic(java.security.spec.KeySpec)>($r22)


Findings in Java Class: com.nostra13.universalimageloader.cache.disc.naming.Md5FileNameGenerator

	 in Method: byte[] getMD5(byte[])
		ConstraintError violating CrySL rule for java.security.MessageDigest (on Object #9b250a002c1e20275cf7eb6c7f7abe6ebc40a6b6b35c833f8379f535388a1d98)
			First parameter (with value "MD5") should be any of {SHA-256, SHA-384, SHA-512}
			at statement: $r2 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer73091)


Findings in Java Class: com.connectsdk16.service.webos.WebOSTVServiceSocketClient

	 in Method: void setupSSL()
		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			Third parameter was not properly generated as randomized
			at statement: virtualinvoke $r1.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>(varReplacer75264, $r3, varReplacer75264)

		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			Second parameter was not properly generated as generatedTrustManagers
			at statement: virtualinvoke $r1.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>(varReplacer75264, $r3, varReplacer75264)

		ConstraintError violating CrySL rule for javax.net.ssl.SSLContext (on Object #5c9f893662b0044f3e03de790b9cb2f7a7eb5c08d70d63f6cad7b5c5280c71c9)
			First parameter (with value "TLS") should be any of {TLSv1.2}
			at statement: $r1 = staticinvoke <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String)>(varReplacer75263)

		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			First parameter was not properly generated as generatedKeyManagers
			at statement: virtualinvoke $r1.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>(varReplacer75264, $r3, varReplacer75264)


Findings in Java Class: org.java_websocket.drafts.Draft_10

	 in Method: java.lang.String generateFinalKey(java.lang.String)
		ConstraintError violating CrySL rule for java.security.MessageDigest (on Object #38a25752e4931e2481842a0999bd64dbe35b79bd0ba8a9da51c5d7ad86a926b7)
			First parameter (with value "SHA1") should be any of {SHA-256, SHA-384, SHA-512}
			at statement: $r3 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer80067)


Findings in Java Class: com.remotefairy.wifi.util.BitmapCache$BitpmapSSLSocketFactory

	 in Method: void <init>(com.remotefairy.wifi.util.BitmapCache,java.security.KeyStore)
		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			Second parameter was not properly generated as generatedTrustManagers
			at statement: virtualinvoke $r1.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>(varReplacer83536, $r6, varReplacer83536)

		ConstraintError violating CrySL rule for javax.net.ssl.SSLContext (on Object #82873e6fa0a86afd98fad525cbe876144654433bbfb382217f873efe7d0f7e5f)
			First parameter (with value "TLS") should be any of {TLSv1.2}
			at statement: $r1 = staticinvoke <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String)>(varReplacer83538)

		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			First parameter was not properly generated as generatedKeyManagers
			at statement: virtualinvoke $r1.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>(varReplacer83536, $r6, varReplacer83536)

		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			Third parameter was not properly generated as randomized
			at statement: virtualinvoke $r1.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>(varReplacer83536, $r6, varReplacer83536)


Findings in Java Class: com.firebase.client.utilities.Utilities

	 in Method: java.lang.String sha1HexDigest(java.lang.String)
		ConstraintError violating CrySL rule for java.security.MessageDigest (on Object #180a946c767833639d1cd765c885b688f755bb3b7f46c463abd745143124b232)
			First parameter (with value "SHA-1") should be any of {SHA-256, SHA-384, SHA-512}
			at statement: $r2 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer90354)


Findings in Java Class: com.google.android.gms.internal.ads.zzbbo

	 in Method: java.security.MessageDigest zza()
		ConstraintError violating CrySL rule for java.security.MessageDigest (on Object #bf706848762b12905170e26bc1ff3c1e6ce44afd41fadc1b78b1d6375953683c)
			First parameter (with value "MD5") should be any of {SHA-256, SHA-384, SHA-512}
			at statement: $r2 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer92618)


Findings in Java Class: com.google.android.gms.internal.ads.zzbbx

	 in Method: byte[] zzb(java.lang.String)
		TypestateError violating CrySL rule for java.security.MessageDigest (on Object #bf706848762b12905170e26bc1ff3c1e6ce44afd41fadc1b78b1d6375953683c)
			Unexpected call to method <java.security.MessageDigest: byte[] digest()> on object of type java.security.MessageDigest. Expect a call to one of the following methods java.security.MessageDigest: void update(byte[],int,int),java.security.MessageDigest: void update(java.nio.ByteBuffer),java.security.MessageDigest: byte[] digest(byte[]),java.security.MessageDigest: void update(byte[]),java.security.MessageDigest: void update(byte)
			at statement: $r4 = virtualinvoke $r3.<java.security.MessageDigest: byte[] digest()>()


Findings in Java Class: com.google.android.gms.internal.ads.zzbbt

	 in Method: byte[] zzb(java.lang.String)
		TypestateError violating CrySL rule for java.security.MessageDigest (on Object #bf706848762b12905170e26bc1ff3c1e6ce44afd41fadc1b78b1d6375953683c)
			Unexpected call to method <java.security.MessageDigest: byte[] digest()> on object of type java.security.MessageDigest. Expect a call to one of the following methods java.security.MessageDigest: void update(byte[],int,int),java.security.MessageDigest: void update(java.nio.ByteBuffer),java.security.MessageDigest: byte[] digest(byte[]),java.security.MessageDigest: void update(byte[]),java.security.MessageDigest: void update(byte)
			at statement: $r5 = virtualinvoke $r7.<java.security.MessageDigest: byte[] digest()>()


Findings in Java Class: com.google.android.gms.internal.ads.zzbbz

	 in Method: java.lang.String zza(java.util.ArrayList,java.util.ArrayList)
		IncompleteOperationError violating CrySL rule for java.security.MessageDigest (on Object #bf706848762b12905170e26bc1ff3c1e6ce44afd41fadc1b78b1d6375953683c)
			Operation on object of type java.security.MessageDigest object not completed. Expected call to digest, update
			at statement: $r18 = virtualinvoke $r17.<com.google.android.gms.internal.ads.zzbbo: byte[] zzb(java.lang.String)>($r9)


Findings in Java Class: com.google.android.gms.internal.ads.zzbbr

	 in Method: java.lang.String zza(java.util.ArrayList)
		IncompleteOperationError violating CrySL rule for java.security.MessageDigest (on Object #bf706848762b12905170e26bc1ff3c1e6ce44afd41fadc1b78b1d6375953683c)
			Operation on object of type java.security.MessageDigest object not completed. Expected call to digest, update
			at statement: $r14 = virtualinvoke $r13.<com.google.android.gms.internal.ads.zzbbo: byte[] zzb(java.lang.String)>($r4)


Findings in Java Class: okio.ByteString

	 in Method: okio.ByteString digest(java.lang.String)
		ConstraintError violating CrySL rule for java.security.MessageDigest (on Object #b336d574501b28a5bd90db22472c23a68acb0c1b99c4f14746fdc2a23c69a24e)
			First parameter (with value "SHA-1") should be any of {SHA-256, SHA-384, SHA-512}
			at statement: $r2 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>($r1)

		ConstraintError violating CrySL rule for java.security.MessageDigest (on Object #b336d574501b28a5bd90db22472c23a68acb0c1b99c4f14746fdc2a23c69a24e)
			First parameter (with value "MD5") should be any of {SHA-256, SHA-384, SHA-512}
			at statement: $r2 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>($r1)


Findings in Java Class: com.neovisionaries.ws.client.HandshakeReader

	 in Method: void validateAccept(com.neovisionaries.ws.client.StatusLine,java.util.Map,java.lang.String)
		ConstraintError violating CrySL rule for java.security.MessageDigest (on Object #76910cff0b601f739c0a63e1c5cc42e6406fd2bf22abfeddbbee2ea5da60bf7e)
			First parameter (with value "SHA-1") should be any of {SHA-256, SHA-384, SHA-512}
			at statement: $r9 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer93496)


Findings in Java Class: okhttp3.OkHttpClient

	 in Method: javax.net.ssl.SSLSocketFactory systemDefaultSslSocketFactory(javax.net.ssl.X509TrustManager)
		ConstraintError violating CrySL rule for javax.net.ssl.SSLContext (on Object #d73ac08191f9e0fa68382e8a5ec7cce8c6d9bfc03ebe39f3578558fe20f7ff40)
			First parameter (with value "TLS") should be any of {TLSv1.2}
			at statement: $r2 = staticinvoke <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String)>(varReplacer94977)

		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			Second parameter was not properly generated as generatedTrustManagers
			at statement: virtualinvoke $r2.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>(varReplacer94975, $r7, varReplacer94975)

		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			First parameter was not properly generated as generatedKeyManagers
			at statement: virtualinvoke $r2.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>(varReplacer94975, $r7, varReplacer94975)

		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			Third parameter was not properly generated as randomized
			at statement: virtualinvoke $r2.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>(varReplacer94975, $r7, varReplacer94975)


	 in Method: javax.net.ssl.X509TrustManager systemDefaultTrustManager()
		RequiredPredicateError violating CrySL rule for javax.net.ssl.TrustManagerFactory
			First parameter was not properly generated as generatedKeyStore
			at statement: virtualinvoke $r2.<javax.net.ssl.TrustManagerFactory: void init(java.security.KeyStore)>(varReplacer94973)


Findings in Java Class: com.google.android.gms.internal.ads.zzghf

	 in Method: byte[] zza(byte[],byte[])
		IncompleteOperationError violating CrySL rule for javax.crypto.KeyAgreement (on Object #1cc21cb6ee988ee39bd31926a0f03b9af6770c641af9badacf6f6b8683d98c7a)
			Operation on object of type javax.crypto.KeyAgreement object not completed. Expected call to init
			at statement: $r1 = virtualinvoke $r5.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r1)

		IncompleteOperationError violating CrySL rule for javax.crypto.KeyAgreement (on Object #9cd5897108227e0db758ed11d1e4030d206f6d08e2c9768e683d1fa0dc28795c)
			Operation on object of type javax.crypto.KeyAgreement object not completed. Expected call to init
			at statement: $r1 = virtualinvoke $r5.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r1)

		RequiredPredicateError violating CrySL rule for javax.crypto.Cipher
			Second parameter was not properly generated as generatedKey
			at statement: virtualinvoke $r5.<javax.crypto.Cipher: void init(int,java.security.Key,java.security.spec.AlgorithmParameterSpec)>(varReplacer97588, $r11, $r12)

		RequiredPredicateError violating CrySL rule for javax.crypto.spec.SecretKeySpec
			First parameter was not properly generated as preparedKeyMaterial
			at statement: specialinvoke $r11.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r9, varReplacer97584)

		IncompleteOperationError violating CrySL rule for javax.crypto.KeyAgreement (on Object #1cc21cb6ee988ee39bd31926a0f03b9af6770c641af9badacf6f6b8683d98c7a)
			Operation on object of type javax.crypto.KeyAgreement object not completed. Expected call to init
			at statement: $r5 = (javax.crypto.Cipher) $r4

		IncompleteOperationError violating CrySL rule for javax.crypto.KeyAgreement (on Object #9cd5897108227e0db758ed11d1e4030d206f6d08e2c9768e683d1fa0dc28795c)
			Operation on object of type javax.crypto.KeyAgreement object not completed. Expected call to init
			at statement: $r5 = (javax.crypto.Cipher) $r4

		NeverTypeOfError violating CrySL rule for javax.crypto.spec.SecretKeySpec (on Object #e63cb0badf25795c49f91f29af57898b455b013654241a605f404ce439517fed)
			First parameter should never be of type java.lang.String.
			at statement: specialinvoke $r11.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r9, varReplacer97584)

		IncompleteOperationError violating CrySL rule for javax.crypto.Cipher (on Object #914e68ec03e0be78d4a185de2d801eccd57fcd41a987fd9d4133c7c2eb21e95d)
			Operation on object of type javax.crypto.Cipher object not completed. Expected call to init
			at statement: $r5 = (javax.crypto.Cipher) $r4

		IncompleteOperationError violating CrySL rule for javax.crypto.Cipher (on Object #72c10bc184bb65d3a49450dbfa9439ff61ee0aa8859cd0d87dfdcd7f32fc3283)
			Operation on object of type javax.crypto.Cipher object not completed. Expected call to init
			at statement: $r5 = (javax.crypto.Cipher) $r4

		RequiredPredicateError violating CrySL rule for javax.crypto.spec.IvParameterSpec
			First parameter was not properly generated as randomized
			at statement: specialinvoke $r12.<javax.crypto.spec.IvParameterSpec: void <init>(byte[])>($r8)

		IncompleteOperationError violating CrySL rule for java.security.Signature (on Object #46b0b2afb62162ccc63b669e91195920c5b299e1c85d7c17ababa379dffe0119)
			Operation on object of type java.security.Signature object not completed. Expected call to initSign, initVerify
			at statement: $r5 = (javax.crypto.Cipher) $r4

		IncompleteOperationError violating CrySL rule for java.security.Signature (on Object #9cb5e418a36b4dae80761063e180239737d8bcf1227d67b7df57ef6f67531fb6)
			Operation on object of type java.security.Signature object not completed. Expected call to initSign, initVerify
			at statement: $r5 = (javax.crypto.Cipher) $r4

		IncompleteOperationError violating CrySL rule for java.security.MessageDigest (on Object #63c2da53922c886e0e92855b3b91588f3ce220108037ac237eea858a7349f807)
			Operation on object of type java.security.MessageDigest object not completed. Expected call to digest, update
			at statement: $r5 = (javax.crypto.Cipher) $r4

		IncompleteOperationError violating CrySL rule for java.security.MessageDigest (on Object #63c2da53922c886e0e92855b3b91588f3ce220108037ac237eea858a7349f807)
			Operation on object of type java.security.MessageDigest object not completed. Expected call to digest, update
			at statement: $r1 = virtualinvoke $r5.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r1)

		IncompleteOperationError violating CrySL rule for java.security.MessageDigest (on Object #fff68524f6c67b59c75e747b076d1c1daa9bd81dc677e83f3706b8a154cc5773)
			Operation on object of type java.security.MessageDigest object not completed. Expected call to digest, update
			at statement: $r5 = (javax.crypto.Cipher) $r4

		IncompleteOperationError violating CrySL rule for java.security.MessageDigest (on Object #fff68524f6c67b59c75e747b076d1c1daa9bd81dc677e83f3706b8a154cc5773)
			Operation on object of type java.security.MessageDigest object not completed. Expected call to digest, update
			at statement: $r1 = virtualinvoke $r5.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r1)

		IncompleteOperationError violating CrySL rule for java.security.KeyPairGenerator (on Object #38a91b0da4c56dece8dab976bdd8a0150fdbf3fdc39be9a0ffce1a682a14d8c5)
			Operation on object of type java.security.KeyPairGenerator object not completed. Expected call to initialize
			at statement: $r5 = (javax.crypto.Cipher) $r4

		IncompleteOperationError violating CrySL rule for java.security.KeyPairGenerator (on Object #82e1e1e0cc31e3c73cdf79070df661c083dbee54b806e6be9eaf7ae9c875868c)
			Operation on object of type java.security.KeyPairGenerator object not completed. Expected call to initialize
			at statement: $r5 = (javax.crypto.Cipher) $r4

		IncompleteOperationError violating CrySL rule for javax.crypto.Mac (on Object #58456c1ad930ab1f55271061816bd349fe02aa5595bfccb967e7562c9a3f415f)
			Operation on object of type javax.crypto.Mac object not completed. Expected call to init
			at statement: $r1 = virtualinvoke $r5.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r1)

		IncompleteOperationError violating CrySL rule for javax.crypto.Mac (on Object #58456c1ad930ab1f55271061816bd349fe02aa5595bfccb967e7562c9a3f415f)
			Operation on object of type javax.crypto.Mac object not completed. Expected call to init
			at statement: $r5 = (javax.crypto.Cipher) $r4

		IncompleteOperationError violating CrySL rule for java.security.Signature (on Object #46b0b2afb62162ccc63b669e91195920c5b299e1c85d7c17ababa379dffe0119)
			Operation on object of type java.security.Signature object not completed. Expected call to initSign, initVerify
			at statement: $r1 = virtualinvoke $r5.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r1)

		IncompleteOperationError violating CrySL rule for java.security.Signature (on Object #9cb5e418a36b4dae80761063e180239737d8bcf1227d67b7df57ef6f67531fb6)
			Operation on object of type java.security.Signature object not completed. Expected call to initSign, initVerify
			at statement: $r1 = virtualinvoke $r5.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r1)

		IncompleteOperationError violating CrySL rule for java.security.KeyPairGenerator (on Object #38a91b0da4c56dece8dab976bdd8a0150fdbf3fdc39be9a0ffce1a682a14d8c5)
			Operation on object of type java.security.KeyPairGenerator object not completed. Expected call to initialize
			at statement: $r1 = virtualinvoke $r5.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r1)

		IncompleteOperationError violating CrySL rule for java.security.KeyPairGenerator (on Object #82e1e1e0cc31e3c73cdf79070df661c083dbee54b806e6be9eaf7ae9c875868c)
			Operation on object of type java.security.KeyPairGenerator object not completed. Expected call to initialize
			at statement: $r1 = virtualinvoke $r5.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r1)


Findings in Java Class: com.google.android.gms.internal.ads.zzgab

	 in Method: int zza()
		IncompleteOperationError violating CrySL rule for javax.crypto.Mac (on Object #8d8786f514e883431e236d7e721f3f5e33d037e2cf49ac7f1efe6174057ceb8d)
			Operation on object of type javax.crypto.Mac object not completed. Expected call to init
			at statement: $i0 = virtualinvoke $r2.<javax.crypto.Mac: int getMacLength()>()


	 in Method: byte[] zze(byte[],byte[],int)
		IncompleteOperationError violating CrySL rule for javax.crypto.Cipher (on Object #914e68ec03e0be78d4a185de2d801eccd57fcd41a987fd9d4133c7c2eb21e95d)
			Operation on object of type javax.crypto.Cipher object not completed. Expected call to init
			at statement: $i3 = virtualinvoke $r6.<javax.crypto.Mac: int getMacLength()>()

		IncompleteOperationError violating CrySL rule for javax.crypto.Cipher (on Object #72c10bc184bb65d3a49450dbfa9439ff61ee0aa8859cd0d87dfdcd7f32fc3283)
			Operation on object of type javax.crypto.Cipher object not completed. Expected call to init
			at statement: $i3 = virtualinvoke $r6.<javax.crypto.Mac: int getMacLength()>()

		IncompleteOperationError violating CrySL rule for javax.crypto.KeyAgreement (on Object #1cc21cb6ee988ee39bd31926a0f03b9af6770c641af9badacf6f6b8683d98c7a)
			Operation on object of type javax.crypto.KeyAgreement object not completed. Expected call to init
			at statement: $r9 = virtualinvoke $r6.<javax.crypto.Mac: byte[] doFinal()>()

		IncompleteOperationError violating CrySL rule for javax.crypto.KeyAgreement (on Object #9cd5897108227e0db758ed11d1e4030d206f6d08e2c9768e683d1fa0dc28795c)
			Operation on object of type javax.crypto.KeyAgreement object not completed. Expected call to init
			at statement: $r9 = virtualinvoke $r6.<javax.crypto.Mac: byte[] doFinal()>()

		IncompleteOperationError violating CrySL rule for javax.crypto.Cipher (on Object #914e68ec03e0be78d4a185de2d801eccd57fcd41a987fd9d4133c7c2eb21e95d)
			Operation on object of type javax.crypto.Cipher object not completed. Expected call to init
			at statement: $r9 = virtualinvoke $r6.<javax.crypto.Mac: byte[] doFinal()>()

		IncompleteOperationError violating CrySL rule for javax.crypto.Cipher (on Object #72c10bc184bb65d3a49450dbfa9439ff61ee0aa8859cd0d87dfdcd7f32fc3283)
			Operation on object of type javax.crypto.Cipher object not completed. Expected call to init
			at statement: $r9 = virtualinvoke $r6.<javax.crypto.Mac: byte[] doFinal()>()

		IncompleteOperationError violating CrySL rule for javax.crypto.KeyAgreement (on Object #1cc21cb6ee988ee39bd31926a0f03b9af6770c641af9badacf6f6b8683d98c7a)
			Operation on object of type javax.crypto.KeyAgreement object not completed. Expected call to init
			at statement: $i3 = virtualinvoke $r6.<javax.crypto.Mac: int getMacLength()>()

		IncompleteOperationError violating CrySL rule for javax.crypto.KeyAgreement (on Object #9cd5897108227e0db758ed11d1e4030d206f6d08e2c9768e683d1fa0dc28795c)
			Operation on object of type javax.crypto.KeyAgreement object not completed. Expected call to init
			at statement: $i3 = virtualinvoke $r6.<javax.crypto.Mac: int getMacLength()>()

		RequiredPredicateError violating CrySL rule for javax.crypto.spec.SecretKeySpec
			First parameter was not properly generated as preparedKeyMaterial
			at statement: specialinvoke $r8.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r1, $r4)

		IncompleteOperationError violating CrySL rule for java.security.KeyPairGenerator (on Object #38a91b0da4c56dece8dab976bdd8a0150fdbf3fdc39be9a0ffce1a682a14d8c5)
			Operation on object of type java.security.KeyPairGenerator object not completed. Expected call to initialize
			at statement: $r9 = virtualinvoke $r6.<javax.crypto.Mac: byte[] doFinal()>()

		IncompleteOperationError violating CrySL rule for java.security.KeyPairGenerator (on Object #82e1e1e0cc31e3c73cdf79070df661c083dbee54b806e6be9eaf7ae9c875868c)
			Operation on object of type java.security.KeyPairGenerator object not completed. Expected call to initialize
			at statement: $r9 = virtualinvoke $r6.<javax.crypto.Mac: byte[] doFinal()>()

		IncompleteOperationError violating CrySL rule for java.security.Signature (on Object #46b0b2afb62162ccc63b669e91195920c5b299e1c85d7c17ababa379dffe0119)
			Operation on object of type java.security.Signature object not completed. Expected call to initSign, initVerify
			at statement: $r9 = virtualinvoke $r6.<javax.crypto.Mac: byte[] doFinal()>()

		IncompleteOperationError violating CrySL rule for java.security.Signature (on Object #9cb5e418a36b4dae80761063e180239737d8bcf1227d67b7df57ef6f67531fb6)
			Operation on object of type java.security.Signature object not completed. Expected call to initSign, initVerify
			at statement: $r9 = virtualinvoke $r6.<javax.crypto.Mac: byte[] doFinal()>()

		IncompleteOperationError violating CrySL rule for java.security.MessageDigest (on Object #63c2da53922c886e0e92855b3b91588f3ce220108037ac237eea858a7349f807)
			Operation on object of type java.security.MessageDigest object not completed. Expected call to digest, update
			at statement: $r9 = virtualinvoke $r6.<javax.crypto.Mac: byte[] doFinal()>()

		IncompleteOperationError violating CrySL rule for java.security.MessageDigest (on Object #fff68524f6c67b59c75e747b076d1c1daa9bd81dc677e83f3706b8a154cc5773)
			Operation on object of type java.security.MessageDigest object not completed. Expected call to digest, update
			at statement: $r9 = virtualinvoke $r6.<javax.crypto.Mac: byte[] doFinal()>()

		IncompleteOperationError violating CrySL rule for java.security.Signature (on Object #46b0b2afb62162ccc63b669e91195920c5b299e1c85d7c17ababa379dffe0119)
			Operation on object of type java.security.Signature object not completed. Expected call to initSign, initVerify
			at statement: $i3 = virtualinvoke $r6.<javax.crypto.Mac: int getMacLength()>()

		IncompleteOperationError violating CrySL rule for java.security.Signature (on Object #9cb5e418a36b4dae80761063e180239737d8bcf1227d67b7df57ef6f67531fb6)
			Operation on object of type java.security.Signature object not completed. Expected call to initSign, initVerify
			at statement: $i3 = virtualinvoke $r6.<javax.crypto.Mac: int getMacLength()>()

		IncompleteOperationError violating CrySL rule for java.security.MessageDigest (on Object #63c2da53922c886e0e92855b3b91588f3ce220108037ac237eea858a7349f807)
			Operation on object of type java.security.MessageDigest object not completed. Expected call to digest, update
			at statement: $i3 = virtualinvoke $r6.<javax.crypto.Mac: int getMacLength()>()

		IncompleteOperationError violating CrySL rule for java.security.MessageDigest (on Object #fff68524f6c67b59c75e747b076d1c1daa9bd81dc677e83f3706b8a154cc5773)
			Operation on object of type java.security.MessageDigest object not completed. Expected call to digest, update
			at statement: $i3 = virtualinvoke $r6.<javax.crypto.Mac: int getMacLength()>()

		TypestateError violating CrySL rule for javax.crypto.Mac (on Object #58456c1ad930ab1f55271061816bd349fe02aa5595bfccb967e7562c9a3f415f)
			Unexpected call to method update on object of type javax.crypto.Mac.
			at statement: virtualinvoke $r6.<javax.crypto.Mac: void update(byte[])>($r1)

		IncompleteOperationError violating CrySL rule for java.security.KeyPairGenerator (on Object #38a91b0da4c56dece8dab976bdd8a0150fdbf3fdc39be9a0ffce1a682a14d8c5)
			Operation on object of type java.security.KeyPairGenerator object not completed. Expected call to initialize
			at statement: $i3 = virtualinvoke $r6.<javax.crypto.Mac: int getMacLength()>()

		IncompleteOperationError violating CrySL rule for java.security.KeyPairGenerator (on Object #82e1e1e0cc31e3c73cdf79070df661c083dbee54b806e6be9eaf7ae9c875868c)
			Operation on object of type java.security.KeyPairGenerator object not completed. Expected call to initialize
			at statement: $i3 = virtualinvoke $r6.<javax.crypto.Mac: int getMacLength()>()

		IncompleteOperationError violating CrySL rule for javax.crypto.Mac (on Object #58456c1ad930ab1f55271061816bd349fe02aa5595bfccb967e7562c9a3f415f)
			Operation on object of type javax.crypto.Mac object not completed. Expected call to init
			at statement: $i3 = virtualinvoke $r6.<javax.crypto.Mac: int getMacLength()>()


	 in Method: byte[] zzf(byte[],byte[])
		IncompleteOperationError violating CrySL rule for javax.crypto.Cipher (on Object #914e68ec03e0be78d4a185de2d801eccd57fcd41a987fd9d4133c7c2eb21e95d)
			Operation on object of type javax.crypto.Cipher object not completed. Expected call to init
			at statement: $r1 = virtualinvoke $r6.<javax.crypto.Mac: byte[] doFinal(byte[])>($r1)

		IncompleteOperationError violating CrySL rule for javax.crypto.Cipher (on Object #72c10bc184bb65d3a49450dbfa9439ff61ee0aa8859cd0d87dfdcd7f32fc3283)
			Operation on object of type javax.crypto.Cipher object not completed. Expected call to init
			at statement: $r1 = virtualinvoke $r6.<javax.crypto.Mac: byte[] doFinal(byte[])>($r1)

		TypestateError violating CrySL rule for javax.crypto.Mac (on Object #58456c1ad930ab1f55271061816bd349fe02aa5595bfccb967e7562c9a3f415f)
			Unexpected call to method <javax.crypto.Mac: byte[] doFinal(byte[])> on object of type javax.crypto.Mac. Expect a call to one of the following methods javax.crypto.Mac: void update(byte[]),javax.crypto.Mac: void doFinal(byte[],int),javax.crypto.Mac: void update(byte),javax.crypto.Mac: byte[] doFinal(),javax.crypto.Mac: void update(byte[],int,int)
			at statement: $r1 = virtualinvoke $r6.<javax.crypto.Mac: byte[] doFinal(byte[])>($r1)

		RequiredPredicateError violating CrySL rule for javax.crypto.Mac
			First parameter was not properly generated as generatedKey
			at statement: virtualinvoke $r6.<javax.crypto.Mac: void init(java.security.Key)>($r7)

		IncompleteOperationError violating CrySL rule for java.security.Signature (on Object #46b0b2afb62162ccc63b669e91195920c5b299e1c85d7c17ababa379dffe0119)
			Operation on object of type java.security.Signature object not completed. Expected call to initSign, initVerify
			at statement: $r1 = virtualinvoke $r6.<javax.crypto.Mac: byte[] doFinal(byte[])>($r1)

		IncompleteOperationError violating CrySL rule for java.security.Signature (on Object #9cb5e418a36b4dae80761063e180239737d8bcf1227d67b7df57ef6f67531fb6)
			Operation on object of type java.security.Signature object not completed. Expected call to initSign, initVerify
			at statement: $r1 = virtualinvoke $r6.<javax.crypto.Mac: byte[] doFinal(byte[])>($r1)

		IncompleteOperationError violating CrySL rule for java.security.KeyPairGenerator (on Object #38a91b0da4c56dece8dab976bdd8a0150fdbf3fdc39be9a0ffce1a682a14d8c5)
			Operation on object of type java.security.KeyPairGenerator object not completed. Expected call to initialize
			at statement: $r1 = virtualinvoke $r6.<javax.crypto.Mac: byte[] doFinal(byte[])>($r1)

		IncompleteOperationError violating CrySL rule for java.security.KeyPairGenerator (on Object #82e1e1e0cc31e3c73cdf79070df661c083dbee54b806e6be9eaf7ae9c875868c)
			Operation on object of type java.security.KeyPairGenerator object not completed. Expected call to initialize
			at statement: $r1 = virtualinvoke $r6.<javax.crypto.Mac: byte[] doFinal(byte[])>($r1)

		IncompleteOperationError violating CrySL rule for java.security.MessageDigest (on Object #63c2da53922c886e0e92855b3b91588f3ce220108037ac237eea858a7349f807)
			Operation on object of type java.security.MessageDigest object not completed. Expected call to digest, update
			at statement: $r1 = virtualinvoke $r6.<javax.crypto.Mac: byte[] doFinal(byte[])>($r1)

		IncompleteOperationError violating CrySL rule for java.security.MessageDigest (on Object #fff68524f6c67b59c75e747b076d1c1daa9bd81dc677e83f3706b8a154cc5773)
			Operation on object of type java.security.MessageDigest object not completed. Expected call to digest, update
			at statement: $r1 = virtualinvoke $r6.<javax.crypto.Mac: byte[] doFinal(byte[])>($r1)

		RequiredPredicateError violating CrySL rule for javax.crypto.spec.SecretKeySpec
			First parameter was not properly generated as preparedKeyMaterial
			at statement: specialinvoke $r7.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r2, $r4)

		IncompleteOperationError violating CrySL rule for javax.crypto.KeyAgreement (on Object #1cc21cb6ee988ee39bd31926a0f03b9af6770c641af9badacf6f6b8683d98c7a)
			Operation on object of type javax.crypto.KeyAgreement object not completed. Expected call to init
			at statement: $r1 = virtualinvoke $r6.<javax.crypto.Mac: byte[] doFinal(byte[])>($r1)

		IncompleteOperationError violating CrySL rule for javax.crypto.KeyAgreement (on Object #9cd5897108227e0db758ed11d1e4030d206f6d08e2c9768e683d1fa0dc28795c)
			Operation on object of type javax.crypto.KeyAgreement object not completed. Expected call to init
			at statement: $r1 = virtualinvoke $r6.<javax.crypto.Mac: byte[] doFinal(byte[])>($r1)


Findings in Java Class: com.google.firebase.installations.local.IidStore

	 in Method: java.lang.String getIdFromPublicKey(java.security.PublicKey)
		ConstraintError violating CrySL rule for java.security.MessageDigest (on Object #bed6739a9ba06ff3b2dc7be62b20715ec81fdee95e9f4f944100d1996df54485)
			First parameter (with value "SHA1") should be any of {SHA-256, SHA-384, SHA-512}
			at statement: $r3 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer100377)


	 in Method: java.security.PublicKey parseKey(java.lang.String)
		RequiredPredicateError violating CrySL rule for java.security.KeyFactory
			First parameter was not properly generated as speccedKey
			at statement: $r5 = virtualinvoke $r3.<java.security.KeyFactory: java.security.PublicKey generatePublic(java.security.spec.KeySpec)>($r4)

		RequiredPredicateError violating CrySL rule for java.security.spec.X509EncodedKeySpec
			First parameter was not properly generated as preparedKeyMaterial
			at statement: specialinvoke $r4.<java.security.spec.X509EncodedKeySpec: void <init>(byte[])>($r2)


Findings in Java Class: org.apache.http.conn.ssl.SSLContextBuilder

	 in Method: javax.net.ssl.SSLContext build()
		ConstraintError violating CrySL rule for javax.net.ssl.SSLContext (on Object #1f15fdcda9b923b07ad2fb0fff591155d212c798860f8dee84a8c357e9a78696)
			First parameter (with value "TLS") should be any of {TLSv1.2}
			at statement: $r2 = staticinvoke <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String)>($r1)

		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			Second parameter was not properly generated as generatedTrustManagers
			at statement: virtualinvoke $r2.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>($r5, $r4, $r7)

		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			First parameter was not properly generated as generatedKeyManagers
			at statement: virtualinvoke $r2.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>($r5, $r4, $r7)

		RequiredPredicateError violating CrySL rule for javax.net.ssl.SSLContext
			Third parameter was not properly generated as randomized
			at statement: virtualinvoke $r2.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>($r5, $r4, $r7)


	 in Method: org.apache.http.conn.ssl.SSLContextBuilder loadTrustMaterial(java.security.KeyStore,org.apache.http.conn.ssl.TrustStrategy)
		RequiredPredicateError violating CrySL rule for javax.net.ssl.TrustManagerFactory
			First parameter was not properly generated as generatedKeyStore
			at statement: virtualinvoke $r4.<javax.net.ssl.TrustManagerFactory: void init(java.security.KeyStore)>($r1)


Findings in Java Class: org.apache.http.impl.auth.DigestScheme

	 in Method: java.security.MessageDigest createMessageDigest(java.lang.String)
		ConstraintError violating CrySL rule for java.security.MessageDigest (on Object #bafd683999767fa653a59f6561b5fb73a4ec80f20b87a366e3f277c0d9c77bd)
			First parameter (with value "MD5") should be any of {SHA-256, SHA-384, SHA-512}
			at statement: $r4 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>($r3)


Findings in Java Class: org.apache.http.impl.auth.HttpEntityDigester

	 in Method: void close()
		TypestateError violating CrySL rule for java.security.MessageDigest (on Object #bafd683999767fa653a59f6561b5fb73a4ec80f20b87a366e3f277c0d9c77bd)
			Unexpected call to method <java.security.MessageDigest: byte[] digest()> on object of type java.security.MessageDigest. Expect a call to one of the following methods java.security.MessageDigest: void update(byte[],int,int),java.security.MessageDigest: void update(java.nio.ByteBuffer),java.security.MessageDigest: byte[] digest(byte[]),java.security.MessageDigest: void update(byte[]),java.security.MessageDigest: void update(byte)
			at statement: $r1 = virtualinvoke $r2.<java.security.MessageDigest: byte[] digest()>()


Findings in Java Class: com.google.android.gms.internal.ads.zzghv

	 in Method: java.lang.Object zza(java.lang.String,java.security.Provider)
		ConstraintError violating CrySL rule for java.security.KeyFactory (on Object #7d44549b1d84338e868fab5034a2ea8c0a6fe15dc6af2fd51dfc63331b331a47)
			First parameter (with value "AES/CTR/NoPadding") should be any of {RSA, DiffieHellman, DH, DSA, EC}
			at statement: $r3 = staticinvoke <java.security.KeyFactory: java.security.KeyFactory getInstance(java.lang.String,java.security.Provider)>($r2, $r1)

		ConstraintError violating CrySL rule for java.security.KeyFactory (on Object #7d44549b1d84338e868fab5034a2ea8c0a6fe15dc6af2fd51dfc63331b331a47)
			First parameter (with value "AES/ECB/NoPadding") should be any of {RSA, DiffieHellman, DH, DSA, EC}
			at statement: $r3 = staticinvoke <java.security.KeyFactory: java.security.KeyFactory getInstance(java.lang.String,java.security.Provider)>($r2, $r1)

		ConstraintError violating CrySL rule for java.security.KeyFactory (on Object #c6a33797526f211cef9d9c4ce6d1253c8407fcd101f6620c5b3e0846ee90f9e3)
			First parameter (with value "ECDH") should be any of {RSA, DiffieHellman, DH, DSA, EC}
			at statement: $r3 = staticinvoke <java.security.KeyFactory: java.security.KeyFactory getInstance(java.lang.String)>($r2)

		ConstraintError violating CrySL rule for java.security.KeyFactory (on Object #c6a33797526f211cef9d9c4ce6d1253c8407fcd101f6620c5b3e0846ee90f9e3)
			First parameter (with value "AES/ECB/NoPadding") should be any of {RSA, DiffieHellman, DH, DSA, EC}
			at statement: $r3 = staticinvoke <java.security.KeyFactory: java.security.KeyFactory getInstance(java.lang.String)>($r2)

		ConstraintError violating CrySL rule for java.security.KeyFactory (on Object #c6a33797526f211cef9d9c4ce6d1253c8407fcd101f6620c5b3e0846ee90f9e3)
			First parameter (with value "AES/CTR/NoPadding") should be any of {RSA, DiffieHellman, DH, DSA, EC}
			at statement: $r3 = staticinvoke <java.security.KeyFactory: java.security.KeyFactory getInstance(java.lang.String)>($r2)

		ConstraintError violating CrySL rule for java.security.KeyFactory (on Object #7d44549b1d84338e868fab5034a2ea8c0a6fe15dc6af2fd51dfc63331b331a47)
			First parameter (with value "ECDH") should be any of {RSA, DiffieHellman, DH, DSA, EC}
			at statement: $r3 = staticinvoke <java.security.KeyFactory: java.security.KeyFactory getInstance(java.lang.String,java.security.Provider)>($r2, $r1)


Findings in Java Class: com.google.android.gms.internal.ads.zzghz

	 in Method: java.lang.Object zza(java.lang.String,java.security.Provider)
		ConstraintError violating CrySL rule for java.security.Signature (on Object #9cb5e418a36b4dae80761063e180239737d8bcf1227d67b7df57ef6f67531fb6)
			First parameter (with value "AES/CTR/NoPadding") should be any of {SHA256withRSA, SHA256withECDSA, SHA256withDSA, SHA224withDSA, NONEwithDSA, SHA1withDSA}
			at statement: $r3 = staticinvoke <java.security.Signature: java.security.Signature getInstance(java.lang.String,java.security.Provider)>($r2, $r1)

		ConstraintError violating CrySL rule for java.security.Signature (on Object #9cb5e418a36b4dae80761063e180239737d8bcf1227d67b7df57ef6f67531fb6)
			First parameter (with value "EC") should be any of {SHA256withRSA, SHA256withECDSA, SHA256withDSA, SHA224withDSA, NONEwithDSA, SHA1withDSA}
			at statement: $r3 = staticinvoke <java.security.Signature: java.security.Signature getInstance(java.lang.String,java.security.Provider)>($r2, $r1)

		ConstraintError violating CrySL rule for java.security.Signature (on Object #9cb5e418a36b4dae80761063e180239737d8bcf1227d67b7df57ef6f67531fb6)
			First parameter (with value "AES/ECB/NoPadding") should be any of {SHA256withRSA, SHA256withECDSA, SHA256withDSA, SHA224withDSA, NONEwithDSA, SHA1withDSA}
			at statement: $r3 = staticinvoke <java.security.Signature: java.security.Signature getInstance(java.lang.String,java.security.Provider)>($r2, $r1)

		ConstraintError violating CrySL rule for java.security.Signature (on Object #46b0b2afb62162ccc63b669e91195920c5b299e1c85d7c17ababa379dffe0119)
			First parameter (with value "AES/CTR/NoPadding") should be any of {SHA256withRSA, SHA256withECDSA, SHA256withDSA, SHA224withDSA, NONEwithDSA, SHA1withDSA}
			at statement: $r3 = staticinvoke <java.security.Signature: java.security.Signature getInstance(java.lang.String)>($r2)

		ConstraintError violating CrySL rule for java.security.Signature (on Object #9cb5e418a36b4dae80761063e180239737d8bcf1227d67b7df57ef6f67531fb6)
			First parameter (with value "ECDH") should be any of {SHA256withRSA, SHA256withECDSA, SHA256withDSA, SHA224withDSA, NONEwithDSA, SHA1withDSA}
			at statement: $r3 = staticinvoke <java.security.Signature: java.security.Signature getInstance(java.lang.String,java.security.Provider)>($r2, $r1)

		ConstraintError violating CrySL rule for java.security.Signature (on Object #46b0b2afb62162ccc63b669e91195920c5b299e1c85d7c17ababa379dffe0119)
			First parameter (with value "AES/ECB/NoPadding") should be any of {SHA256withRSA, SHA256withECDSA, SHA256withDSA, SHA224withDSA, NONEwithDSA, SHA1withDSA}
			at statement: $r3 = staticinvoke <java.security.Signature: java.security.Signature getInstance(java.lang.String)>($r2)

		ConstraintError violating CrySL rule for java.security.Signature (on Object #46b0b2afb62162ccc63b669e91195920c5b299e1c85d7c17ababa379dffe0119)
			First parameter (with value "ECDH") should be any of {SHA256withRSA, SHA256withECDSA, SHA256withDSA, SHA224withDSA, NONEwithDSA, SHA1withDSA}
			at statement: $r3 = staticinvoke <java.security.Signature: java.security.Signature getInstance(java.lang.String)>($r2)

		ConstraintError violating CrySL rule for java.security.Signature (on Object #46b0b2afb62162ccc63b669e91195920c5b299e1c85d7c17ababa379dffe0119)
			First parameter (with value "EC") should be any of {SHA256withRSA, SHA256withECDSA, SHA256withDSA, SHA224withDSA, NONEwithDSA, SHA1withDSA}
			at statement: $r3 = staticinvoke <java.security.Signature: java.security.Signature getInstance(java.lang.String)>($r2)


Findings in Java Class: com.google.android.gms.internal.ads.zzfzm

	 in Method: java.lang.Object zza(com.google.android.gms.internal.ads.zzgma)
		RequiredPredicateError violating CrySL rule for java.security.KeyFactory
			First parameter was not properly generated as speccedKey
			at statement: $r15 = virtualinvoke $r14.<java.security.KeyFactory: java.security.PrivateKey generatePrivate(java.security.spec.KeySpec)>($r11)

		IncompleteOperationError violating CrySL rule for javax.crypto.KeyAgreement (on Object #1cc21cb6ee988ee39bd31926a0f03b9af6770c641af9badacf6f6b8683d98c7a)
			Operation on object of type javax.crypto.KeyAgreement object not completed. Expected call to init
			at statement: $r15 = virtualinvoke $r14.<java.security.KeyFactory: java.security.PrivateKey generatePrivate(java.security.spec.KeySpec)>($r11)

		IncompleteOperationError violating CrySL rule for javax.crypto.KeyAgreement (on Object #9cd5897108227e0db758ed11d1e4030d206f6d08e2c9768e683d1fa0dc28795c)
			Operation on object of type javax.crypto.KeyAgreement object not completed. Expected call to init
			at statement: $r15 = virtualinvoke $r14.<java.security.KeyFactory: java.security.PrivateKey generatePrivate(java.security.spec.KeySpec)>($r11)

		IncompleteOperationError violating CrySL rule for java.security.Signature (on Object #46b0b2afb62162ccc63b669e91195920c5b299e1c85d7c17ababa379dffe0119)
			Operation on object of type java.security.Signature object not completed. Expected call to initSign, initVerify
			at statement: $r15 = virtualinvoke $r14.<java.security.KeyFactory: java.security.PrivateKey generatePrivate(java.security.spec.KeySpec)>($r11)

		IncompleteOperationError violating CrySL rule for java.security.Signature (on Object #9cb5e418a36b4dae80761063e180239737d8bcf1227d67b7df57ef6f67531fb6)
			Operation on object of type java.security.Signature object not completed. Expected call to initSign, initVerify
			at statement: $r15 = virtualinvoke $r14.<java.security.KeyFactory: java.security.PrivateKey generatePrivate(java.security.spec.KeySpec)>($r11)

		IncompleteOperationError violating CrySL rule for javax.crypto.Mac (on Object #58456c1ad930ab1f55271061816bd349fe02aa5595bfccb967e7562c9a3f415f)
			Operation on object of type javax.crypto.Mac object not completed. Expected call to init
			at statement: $r15 = virtualinvoke $r14.<java.security.KeyFactory: java.security.PrivateKey generatePrivate(java.security.spec.KeySpec)>($r11)

		IncompleteOperationError violating CrySL rule for java.security.KeyPairGenerator (on Object #38a91b0da4c56dece8dab976bdd8a0150fdbf3fdc39be9a0ffce1a682a14d8c5)
			Operation on object of type java.security.KeyPairGenerator object not completed. Expected call to initialize
			at statement: $r15 = virtualinvoke $r14.<java.security.KeyFactory: java.security.PrivateKey generatePrivate(java.security.spec.KeySpec)>($r11)

		IncompleteOperationError violating CrySL rule for java.security.KeyPairGenerator (on Object #82e1e1e0cc31e3c73cdf79070df661c083dbee54b806e6be9eaf7ae9c875868c)
			Operation on object of type java.security.KeyPairGenerator object not completed. Expected call to initialize
			at statement: $r15 = virtualinvoke $r14.<java.security.KeyFactory: java.security.PrivateKey generatePrivate(java.security.spec.KeySpec)>($r11)

		IncompleteOperationError violating CrySL rule for javax.crypto.Cipher (on Object #914e68ec03e0be78d4a185de2d801eccd57fcd41a987fd9d4133c7c2eb21e95d)
			Operation on object of type javax.crypto.Cipher object not completed. Expected call to init
			at statement: $r15 = virtualinvoke $r14.<java.security.KeyFactory: java.security.PrivateKey generatePrivate(java.security.spec.KeySpec)>($r11)

		IncompleteOperationError violating CrySL rule for javax.crypto.Cipher (on Object #72c10bc184bb65d3a49450dbfa9439ff61ee0aa8859cd0d87dfdcd7f32fc3283)
			Operation on object of type javax.crypto.Cipher object not completed. Expected call to init
			at statement: $r15 = virtualinvoke $r14.<java.security.KeyFactory: java.security.PrivateKey generatePrivate(java.security.spec.KeySpec)>($r11)

		IncompleteOperationError violating CrySL rule for java.security.MessageDigest (on Object #63c2da53922c886e0e92855b3b91588f3ce220108037ac237eea858a7349f807)
			Operation on object of type java.security.MessageDigest object not completed. Expected call to digest, update
			at statement: $r15 = virtualinvoke $r14.<java.security.KeyFactory: java.security.PrivateKey generatePrivate(java.security.spec.KeySpec)>($r11)

		IncompleteOperationError violating CrySL rule for java.security.MessageDigest (on Object #fff68524f6c67b59c75e747b076d1c1daa9bd81dc677e83f3706b8a154cc5773)
			Operation on object of type java.security.MessageDigest object not completed. Expected call to digest, update
			at statement: $r15 = virtualinvoke $r14.<java.security.KeyFactory: java.security.PrivateKey generatePrivate(java.security.spec.KeySpec)>($r11)


Findings in Java Class: com.google.android.gms.internal.ads.zzghq

	 in Method: java.security.interfaces.ECPublicKey zzd(int,byte[],byte[])
		IncompleteOperationError violating CrySL rule for java.security.KeyPairGenerator (on Object #38a91b0da4c56dece8dab976bdd8a0150fdbf3fdc39be9a0ffce1a682a14d8c5)
			Operation on object of type java.security.KeyPairGenerator object not completed. Expected call to initialize
			at statement: $r11 = virtualinvoke $r10.<java.security.KeyFactory: java.security.PublicKey generatePublic(java.security.spec.KeySpec)>($r7)

		IncompleteOperationError violating CrySL rule for java.security.KeyPairGenerator (on Object #82e1e1e0cc31e3c73cdf79070df661c083dbee54b806e6be9eaf7ae9c875868c)
			Operation on object of type java.security.KeyPairGenerator object not completed. Expected call to initialize
			at statement: $r11 = virtualinvoke $r10.<java.security.KeyFactory: java.security.PublicKey generatePublic(java.security.spec.KeySpec)>($r7)

		IncompleteOperationError violating CrySL rule for javax.crypto.KeyAgreement (on Object #1cc21cb6ee988ee39bd31926a0f03b9af6770c641af9badacf6f6b8683d98c7a)
			Operation on object of type javax.crypto.KeyAgreement object not completed. Expected call to init
			at statement: $r11 = virtualinvoke $r10.<java.security.KeyFactory: java.security.PublicKey generatePublic(java.security.spec.KeySpec)>($r7)

		IncompleteOperationError violating CrySL rule for javax.crypto.KeyAgreement (on Object #9cd5897108227e0db758ed11d1e4030d206f6d08e2c9768e683d1fa0dc28795c)
			Operation on object of type javax.crypto.KeyAgreement object not completed. Expected call to init
			at statement: $r11 = virtualinvoke $r10.<java.security.KeyFactory: java.security.PublicKey generatePublic(java.security.spec.KeySpec)>($r7)

		IncompleteOperationError violating CrySL rule for javax.crypto.Mac (on Object #58456c1ad930ab1f55271061816bd349fe02aa5595bfccb967e7562c9a3f415f)
			Operation on object of type javax.crypto.Mac object not completed. Expected call to init
			at statement: $r11 = virtualinvoke $r10.<java.security.KeyFactory: java.security.PublicKey generatePublic(java.security.spec.KeySpec)>($r7)

		IncompleteOperationError violating CrySL rule for java.security.Signature (on Object #46b0b2afb62162ccc63b669e91195920c5b299e1c85d7c17ababa379dffe0119)
			Operation on object of type java.security.Signature object not completed. Expected call to initSign, initVerify
			at statement: $r11 = virtualinvoke $r10.<java.security.KeyFactory: java.security.PublicKey generatePublic(java.security.spec.KeySpec)>($r7)

		IncompleteOperationError violating CrySL rule for java.security.Signature (on Object #9cb5e418a36b4dae80761063e180239737d8bcf1227d67b7df57ef6f67531fb6)
			Operation on object of type java.security.Signature object not completed. Expected call to initSign, initVerify
			at statement: $r11 = virtualinvoke $r10.<java.security.KeyFactory: java.security.PublicKey generatePublic(java.security.spec.KeySpec)>($r7)

		IncompleteOperationError violating CrySL rule for javax.crypto.Cipher (on Object #914e68ec03e0be78d4a185de2d801eccd57fcd41a987fd9d4133c7c2eb21e95d)
			Operation on object of type javax.crypto.Cipher object not completed. Expected call to init
			at statement: $r11 = virtualinvoke $r10.<java.security.KeyFactory: java.security.PublicKey generatePublic(java.security.spec.KeySpec)>($r7)

		IncompleteOperationError violating CrySL rule for javax.crypto.Cipher (on Object #72c10bc184bb65d3a49450dbfa9439ff61ee0aa8859cd0d87dfdcd7f32fc3283)
			Operation on object of type javax.crypto.Cipher object not completed. Expected call to init
			at statement: $r11 = virtualinvoke $r10.<java.security.KeyFactory: java.security.PublicKey generatePublic(java.security.spec.KeySpec)>($r7)

		IncompleteOperationError violating CrySL rule for java.security.MessageDigest (on Object #63c2da53922c886e0e92855b3b91588f3ce220108037ac237eea858a7349f807)
			Operation on object of type java.security.MessageDigest object not completed. Expected call to digest, update
			at statement: $r11 = virtualinvoke $r10.<java.security.KeyFactory: java.security.PublicKey generatePublic(java.security.spec.KeySpec)>($r7)

		IncompleteOperationError violating CrySL rule for java.security.MessageDigest (on Object #fff68524f6c67b59c75e747b076d1c1daa9bd81dc677e83f3706b8a154cc5773)
			Operation on object of type java.security.MessageDigest object not completed. Expected call to digest, update
			at statement: $r11 = virtualinvoke $r10.<java.security.KeyFactory: java.security.PublicKey generatePublic(java.security.spec.KeySpec)>($r7)


	 in Method: java.security.KeyPair zzb(java.security.spec.ECParameterSpec)
		IncompleteOperationError violating CrySL rule for javax.crypto.Mac (on Object #58456c1ad930ab1f55271061816bd349fe02aa5595bfccb967e7562c9a3f415f)
			Operation on object of type javax.crypto.Mac object not completed. Expected call to init
			at statement: $r4 = virtualinvoke $r3.<java.security.KeyPairGenerator: java.security.KeyPair generateKeyPair()>()

		IncompleteOperationError violating CrySL rule for javax.crypto.Cipher (on Object #914e68ec03e0be78d4a185de2d801eccd57fcd41a987fd9d4133c7c2eb21e95d)
			Operation on object of type javax.crypto.Cipher object not completed. Expected call to init
			at statement: $r4 = virtualinvoke $r3.<java.security.KeyPairGenerator: java.security.KeyPair generateKeyPair()>()

		IncompleteOperationError violating CrySL rule for javax.crypto.Cipher (on Object #72c10bc184bb65d3a49450dbfa9439ff61ee0aa8859cd0d87dfdcd7f32fc3283)
			Operation on object of type javax.crypto.Cipher object not completed. Expected call to init
			at statement: $r4 = virtualinvoke $r3.<java.security.KeyPairGenerator: java.security.KeyPair generateKeyPair()>()

		IncompleteOperationError violating CrySL rule for java.security.KeyPairGenerator (on Object #38a91b0da4c56dece8dab976bdd8a0150fdbf3fdc39be9a0ffce1a682a14d8c5)
			Operation on object of type java.security.KeyPairGenerator object not completed. Expected call to genKeyPair, java.security.KeyPairGenerator: java.security.KeyPair generateKeyPair(), java.security.KeyPairGeneratorSpi: java.security.KeyPair generateKeyPair()
			at statement: $r4 = virtualinvoke $r3.<java.security.KeyPairGenerator: java.security.KeyPair generateKeyPair()>()

		IncompleteOperationError violating CrySL rule for java.security.KeyPairGenerator (on Object #82e1e1e0cc31e3c73cdf79070df661c083dbee54b806e6be9eaf7ae9c875868c)
			Operation on object of type java.security.KeyPairGenerator object not completed. Expected call to genKeyPair, java.security.KeyPairGenerator: java.security.KeyPair generateKeyPair(), java.security.KeyPairGeneratorSpi: java.security.KeyPair generateKeyPair()
			at statement: $r4 = virtualinvoke $r3.<java.security.KeyPairGenerator: java.security.KeyPair generateKeyPair()>()

		IncompleteOperationError violating CrySL rule for javax.crypto.KeyAgreement (on Object #1cc21cb6ee988ee39bd31926a0f03b9af6770c641af9badacf6f6b8683d98c7a)
			Operation on object of type javax.crypto.KeyAgreement object not completed. Expected call to init
			at statement: $r4 = virtualinvoke $r3.<java.security.KeyPairGenerator: java.security.KeyPair generateKeyPair()>()

		IncompleteOperationError violating CrySL rule for javax.crypto.KeyAgreement (on Object #9cd5897108227e0db758ed11d1e4030d206f6d08e2c9768e683d1fa0dc28795c)
			Operation on object of type javax.crypto.KeyAgreement object not completed. Expected call to init
			at statement: $r4 = virtualinvoke $r3.<java.security.KeyPairGenerator: java.security.KeyPair generateKeyPair()>()

		IncompleteOperationError violating CrySL rule for java.security.MessageDigest (on Object #63c2da53922c886e0e92855b3b91588f3ce220108037ac237eea858a7349f807)
			Operation on object of type java.security.MessageDigest object not completed. Expected call to digest, update
			at statement: $r4 = virtualinvoke $r3.<java.security.KeyPairGenerator: java.security.KeyPair generateKeyPair()>()

		IncompleteOperationError violating CrySL rule for java.security.MessageDigest (on Object #fff68524f6c67b59c75e747b076d1c1daa9bd81dc677e83f3706b8a154cc5773)
			Operation on object of type java.security.MessageDigest object not completed. Expected call to digest, update
			at statement: $r4 = virtualinvoke $r3.<java.security.KeyPairGenerator: java.security.KeyPair generateKeyPair()>()

		IncompleteOperationError violating CrySL rule for java.security.Signature (on Object #46b0b2afb62162ccc63b669e91195920c5b299e1c85d7c17ababa379dffe0119)
			Operation on object of type java.security.Signature object not completed. Expected call to initSign, initVerify
			at statement: $r4 = virtualinvoke $r3.<java.security.KeyPairGenerator: java.security.KeyPair generateKeyPair()>()

		IncompleteOperationError violating CrySL rule for java.security.Signature (on Object #9cb5e418a36b4dae80761063e180239737d8bcf1227d67b7df57ef6f67531fb6)
			Operation on object of type java.security.Signature object not completed. Expected call to initSign, initVerify
			at statement: $r4 = virtualinvoke $r3.<java.security.KeyPairGenerator: java.security.KeyPair generateKeyPair()>()


Findings in Java Class: com.google.android.gms.internal.ads.zzgif

	 in Method: void <init>(byte[])
		RequiredPredicateError violating CrySL rule for javax.crypto.spec.SecretKeySpec
			First parameter was not properly generated as preparedKeyMaterial
			at statement: specialinvoke $r2.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r1, varReplacer112804)

		IncompleteOperationError violating CrySL rule for javax.crypto.KeyAgreement (on Object #1cc21cb6ee988ee39bd31926a0f03b9af6770c641af9badacf6f6b8683d98c7a)
			Operation on object of type javax.crypto.KeyAgreement object not completed. Expected call to init
			at statement: $r1 = virtualinvoke $r3.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r1)

		IncompleteOperationError violating CrySL rule for javax.crypto.KeyAgreement (on Object #9cd5897108227e0db758ed11d1e4030d206f6d08e2c9768e683d1fa0dc28795c)
			Operation on object of type javax.crypto.KeyAgreement object not completed. Expected call to init
			at statement: $r1 = virtualinvoke $r3.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r1)

		IncompleteOperationError violating CrySL rule for javax.crypto.Mac (on Object #58456c1ad930ab1f55271061816bd349fe02aa5595bfccb967e7562c9a3f415f)
			Operation on object of type javax.crypto.Mac object not completed. Expected call to init
			at statement: $r1 = virtualinvoke $r3.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r1)

		IncompleteOperationError violating CrySL rule for java.security.Signature (on Object #46b0b2afb62162ccc63b669e91195920c5b299e1c85d7c17ababa379dffe0119)
			Operation on object of type java.security.Signature object not completed. Expected call to initSign, initVerify
			at statement: $r1 = virtualinvoke $r3.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r1)

		IncompleteOperationError violating CrySL rule for java.security.Signature (on Object #9cb5e418a36b4dae80761063e180239737d8bcf1227d67b7df57ef6f67531fb6)
			Operation on object of type java.security.Signature object not completed. Expected call to initSign, initVerify
			at statement: $r1 = virtualinvoke $r3.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r1)

		IncompleteOperationError violating CrySL rule for java.security.KeyPairGenerator (on Object #38a91b0da4c56dece8dab976bdd8a0150fdbf3fdc39be9a0ffce1a682a14d8c5)
			Operation on object of type java.security.KeyPairGenerator object not completed. Expected call to initialize
			at statement: $r1 = virtualinvoke $r3.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r1)

		IncompleteOperationError violating CrySL rule for java.security.KeyPairGenerator (on Object #82e1e1e0cc31e3c73cdf79070df661c083dbee54b806e6be9eaf7ae9c875868c)
			Operation on object of type java.security.KeyPairGenerator object not completed. Expected call to initialize
			at statement: $r1 = virtualinvoke $r3.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r1)

		IncompleteOperationError violating CrySL rule for java.security.MessageDigest (on Object #63c2da53922c886e0e92855b3b91588f3ce220108037ac237eea858a7349f807)
			Operation on object of type java.security.MessageDigest object not completed. Expected call to digest, update
			at statement: $r1 = virtualinvoke $r3.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r1)

		IncompleteOperationError violating CrySL rule for java.security.MessageDigest (on Object #fff68524f6c67b59c75e747b076d1c1daa9bd81dc677e83f3706b8a154cc5773)
			Operation on object of type java.security.MessageDigest object not completed. Expected call to digest, update
			at statement: $r1 = virtualinvoke $r3.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r1)


	 in Method: byte[] zza(byte[],int)
		IncompleteOperationError violating CrySL rule for java.security.MessageDigest (on Object #63c2da53922c886e0e92855b3b91588f3ce220108037ac237eea858a7349f807)
			Operation on object of type java.security.MessageDigest object not completed. Expected call to digest, update
			at statement: $r1 = virtualinvoke $r2.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r1)

		IncompleteOperationError violating CrySL rule for java.security.MessageDigest (on Object #fff68524f6c67b59c75e747b076d1c1daa9bd81dc677e83f3706b8a154cc5773)
			Operation on object of type java.security.MessageDigest object not completed. Expected call to digest, update
			at statement: $r1 = virtualinvoke $r2.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r1)

		IncompleteOperationError violating CrySL rule for javax.crypto.KeyAgreement (on Object #1cc21cb6ee988ee39bd31926a0f03b9af6770c641af9badacf6f6b8683d98c7a)
			Operation on object of type javax.crypto.KeyAgreement object not completed. Expected call to init
			at statement: $r1 = virtualinvoke $r2.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r1)

		IncompleteOperationError violating CrySL rule for javax.crypto.KeyAgreement (on Object #9cd5897108227e0db758ed11d1e4030d206f6d08e2c9768e683d1fa0dc28795c)
			Operation on object of type javax.crypto.KeyAgreement object not completed. Expected call to init
			at statement: $r1 = virtualinvoke $r2.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r1)

		IncompleteOperationError violating CrySL rule for java.security.Signature (on Object #46b0b2afb62162ccc63b669e91195920c5b299e1c85d7c17ababa379dffe0119)
			Operation on object of type java.security.Signature object not completed. Expected call to initSign, initVerify
			at statement: $r1 = virtualinvoke $r2.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r1)

		IncompleteOperationError violating CrySL rule for java.security.Signature (on Object #9cb5e418a36b4dae80761063e180239737d8bcf1227d67b7df57ef6f67531fb6)
			Operation on object of type java.security.Signature object not completed. Expected call to initSign, initVerify
			at statement: $r1 = virtualinvoke $r2.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r1)

		IncompleteOperationError violating CrySL rule for javax.crypto.Mac (on Object #58456c1ad930ab1f55271061816bd349fe02aa5595bfccb967e7562c9a3f415f)
			Operation on object of type javax.crypto.Mac object not completed. Expected call to init
			at statement: $r1 = virtualinvoke $r2.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r1)

		IncompleteOperationError violating CrySL rule for java.security.KeyPairGenerator (on Object #38a91b0da4c56dece8dab976bdd8a0150fdbf3fdc39be9a0ffce1a682a14d8c5)
			Operation on object of type java.security.KeyPairGenerator object not completed. Expected call to initialize
			at statement: $r1 = virtualinvoke $r2.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r1)

		IncompleteOperationError violating CrySL rule for java.security.KeyPairGenerator (on Object #82e1e1e0cc31e3c73cdf79070df661c083dbee54b806e6be9eaf7ae9c875868c)
			Operation on object of type java.security.KeyPairGenerator object not completed. Expected call to initialize
			at statement: $r1 = virtualinvoke $r2.<javax.crypto.Cipher: byte[] doFinal(byte[])>($r1)


Findings in Java Class: com.google.android.gms.internal.ads.zzghp

	 in Method: com.google.android.gms.internal.ads.zzgho zza(java.lang.String,byte[],byte[],int,int)
		IncompleteOperationError violating CrySL rule for java.security.KeyPairGenerator (on Object #38a91b0da4c56dece8dab976bdd8a0150fdbf3fdc39be9a0ffce1a682a14d8c5)
			Operation on object of type java.security.KeyPairGenerator object not completed. Expected call to initialize
			at statement: $r23 = virtualinvoke $r38.<javax.crypto.Mac: byte[] doFinal()>()

		IncompleteOperationError violating CrySL rule for java.security.KeyPairGenerator (on Object #82e1e1e0cc31e3c73cdf79070df661c083dbee54b806e6be9eaf7ae9c875868c)
			Operation on object of type java.security.KeyPairGenerator object not completed. Expected call to initialize
			at statement: $r23 = virtualinvoke $r38.<javax.crypto.Mac: byte[] doFinal()>()

		IncompleteOperationError violating CrySL rule for java.security.Signature (on Object #46b0b2afb62162ccc63b669e91195920c5b299e1c85d7c17ababa379dffe0119)
			Operation on object of type java.security.Signature object not completed. Expected call to initSign, initVerify
			at statement: $r23 = virtualinvoke $r22.<javax.crypto.KeyAgreement: byte[] generateSecret()>()

		IncompleteOperationError violating CrySL rule for java.security.Signature (on Object #9cb5e418a36b4dae80761063e180239737d8bcf1227d67b7df57ef6f67531fb6)
			Operation on object of type java.security.Signature object not completed. Expected call to initSign, initVerify
			at statement: $r23 = virtualinvoke $r22.<javax.crypto.KeyAgreement: byte[] generateSecret()>()

		IncompleteOperationError violating CrySL rule for java.security.MessageDigest (on Object #63c2da53922c886e0e92855b3b91588f3ce220108037ac237eea858a7349f807)
			Operation on object of type java.security.MessageDigest object not completed. Expected call to digest, update
			at statement: $r23 = virtualinvoke $r22.<javax.crypto.KeyAgreement: byte[] generateSecret()>()

		IncompleteOperationError violating CrySL rule for java.security.MessageDigest (on Object #fff68524f6c67b59c75e747b076d1c1daa9bd81dc677e83f3706b8a154cc5773)
			Operation on object of type java.security.MessageDigest object not completed. Expected call to digest, update
			at statement: $r23 = virtualinvoke $r22.<javax.crypto.KeyAgreement: byte[] generateSecret()>()

		IncompleteOperationError violating CrySL rule for javax.crypto.Mac (on Object #58456c1ad930ab1f55271061816bd349fe02aa5595bfccb967e7562c9a3f415f)
			Operation on object of type javax.crypto.Mac object not completed. Expected call to init
			at statement: $i2 = virtualinvoke $r38.<javax.crypto.Mac: int getMacLength()>()

		IncompleteOperationError violating CrySL rule for java.security.Signature (on Object #46b0b2afb62162ccc63b669e91195920c5b299e1c85d7c17ababa379dffe0119)
			Operation on object of type java.security.Signature object not completed. Expected call to initSign, initVerify
			at statement: $i2 = virtualinvoke $r38.<javax.crypto.Mac: int getMacLength()>()

		IncompleteOperationError violating CrySL rule for java.security.Signature (on Object #9cb5e418a36b4dae80761063e180239737d8bcf1227d67b7df57ef6f67531fb6)
			Operation on object of type java.security.Signature object not completed. Expected call to initSign, initVerify
			at statement: $i2 = virtualinvoke $r38.<javax.crypto.Mac: int getMacLength()>()

		IncompleteOperationError violating CrySL rule for java.security.KeyPairGenerator (on Object #38a91b0da4c56dece8dab976bdd8a0150fdbf3fdc39be9a0ffce1a682a14d8c5)
			Operation on object of type java.security.KeyPairGenerator object not completed. Expected call to initialize
			at statement: $i2 = virtualinvoke $r38.<javax.crypto.Mac: int getMacLength()>()

		IncompleteOperationError violating CrySL rule for java.security.KeyPairGenerator (on Object #82e1e1e0cc31e3c73cdf79070df661c083dbee54b806e6be9eaf7ae9c875868c)
			Operation on object of type java.security.KeyPairGenerator object not completed. Expected call to initialize
			at statement: $i2 = virtualinvoke $r38.<javax.crypto.Mac: int getMacLength()>()

		IncompleteOperationError violating CrySL rule for javax.crypto.Cipher (on Object #914e68ec03e0be78d4a185de2d801eccd57fcd41a987fd9d4133c7c2eb21e95d)
			Operation on object of type javax.crypto.Cipher object not completed. Expected call to init
			at statement: $r23 = virtualinvoke $r22.<javax.crypto.KeyAgreement: byte[] generateSecret()>()

		IncompleteOperationError violating CrySL rule for javax.crypto.Cipher (on Object #72c10bc184bb65d3a49450dbfa9439ff61ee0aa8859cd0d87dfdcd7f32fc3283)
			Operation on object of type javax.crypto.Cipher object not completed. Expected call to init
			at statement: $r23 = virtualinvoke $r22.<javax.crypto.KeyAgreement: byte[] generateSecret()>()

		TypestateError violating CrySL rule for javax.crypto.Mac (on Object #58456c1ad930ab1f55271061816bd349fe02aa5595bfccb967e7562c9a3f415f)
			Unexpected call to method <javax.crypto.Mac: byte[] doFinal(byte[])> on object of type javax.crypto.Mac. Expect a call to one of the following methods javax.crypto.Mac: void update(byte[]),javax.crypto.Mac: void doFinal(byte[],int),javax.crypto.Mac: void update(byte),javax.crypto.Mac: byte[] doFinal(),javax.crypto.Mac: void update(byte[],int,int)
			at statement: $r23 = virtualinvoke $r38.<javax.crypto.Mac: byte[] doFinal(byte[])>($r23)

		IncompleteOperationError violating CrySL rule for javax.crypto.KeyAgreement (on Object #1cc21cb6ee988ee39bd31926a0f03b9af6770c641af9badacf6f6b8683d98c7a)
			Operation on object of type javax.crypto.KeyAgreement object not completed. Expected call to init
			at statement: $i2 = virtualinvoke $r38.<javax.crypto.Mac: int getMacLength()>()

		IncompleteOperationError violating CrySL rule for javax.crypto.KeyAgreement (on Object #9cd5897108227e0db758ed11d1e4030d206f6d08e2c9768e683d1fa0dc28795c)
			Operation on object of type javax.crypto.KeyAgreement object not completed. Expected call to init
			at statement: $i2 = virtualinvoke $r38.<javax.crypto.Mac: int getMacLength()>()

		IncompleteOperationError violating CrySL rule for javax.crypto.KeyAgreement (on Object #1cc21cb6ee988ee39bd31926a0f03b9af6770c641af9badacf6f6b8683d98c7a)
			Operation on object of type javax.crypto.KeyAgreement object not completed. Expected call to init
			at statement: $r23 = virtualinvoke $r38.<javax.crypto.Mac: byte[] doFinal()>()

		IncompleteOperationError violating CrySL rule for javax.crypto.KeyAgreement (on Object #9cd5897108227e0db758ed11d1e4030d206f6d08e2c9768e683d1fa0dc28795c)
			Operation on object of type javax.crypto.KeyAgreement object not completed. Expected call to init
			at statement: $r23 = virtualinvoke $r38.<javax.crypto.Mac: byte[] doFinal()>()

		IncompleteOperationError violating CrySL rule for javax.crypto.Cipher (on Object #914e68ec03e0be78d4a185de2d801eccd57fcd41a987fd9d4133c7c2eb21e95d)
			Operation on object of type javax.crypto.Cipher object not completed. Expected call to init
			at statement: $i2 = virtualinvoke $r38.<javax.crypto.Mac: int getMacLength()>()

		IncompleteOperationError violating CrySL rule for javax.crypto.Cipher (on Object #72c10bc184bb65d3a49450dbfa9439ff61ee0aa8859cd0d87dfdcd7f32fc3283)
			Operation on object of type javax.crypto.Cipher object not completed. Expected call to init
			at statement: $i2 = virtualinvoke $r38.<javax.crypto.Mac: int getMacLength()>()

		IncompleteOperationError violating CrySL rule for javax.crypto.Mac (on Object #58456c1ad930ab1f55271061816bd349fe02aa5595bfccb967e7562c9a3f415f)
			Operation on object of type javax.crypto.Mac object not completed. Expected call to init
			at statement: $r23 = virtualinvoke $r22.<javax.crypto.KeyAgreement: byte[] generateSecret()>()

		IncompleteOperationError violating CrySL rule for javax.crypto.Cipher (on Object #914e68ec03e0be78d4a185de2d801eccd57fcd41a987fd9d4133c7c2eb21e95d)
			Operation on object of type javax.crypto.Cipher object not completed. Expected call to init
			at statement: $r23 = virtualinvoke $r38.<javax.crypto.Mac: byte[] doFinal()>()

		IncompleteOperationError violating CrySL rule for javax.crypto.Cipher (on Object #72c10bc184bb65d3a49450dbfa9439ff61ee0aa8859cd0d87dfdcd7f32fc3283)
			Operation on object of type javax.crypto.Cipher object not completed. Expected call to init
			at statement: $r23 = virtualinvoke $r38.<javax.crypto.Mac: byte[] doFinal()>()

		IncompleteOperationError violating CrySL rule for java.security.KeyPairGenerator (on Object #38a91b0da4c56dece8dab976bdd8a0150fdbf3fdc39be9a0ffce1a682a14d8c5)
			Operation on object of type java.security.KeyPairGenerator object not completed. Expected call to initialize
			at statement: $r23 = virtualinvoke $r22.<javax.crypto.KeyAgreement: byte[] generateSecret()>()

		IncompleteOperationError violating CrySL rule for java.security.KeyPairGenerator (on Object #82e1e1e0cc31e3c73cdf79070df661c083dbee54b806e6be9eaf7ae9c875868c)
			Operation on object of type java.security.KeyPairGenerator object not completed. Expected call to initialize
			at statement: $r23 = virtualinvoke $r22.<javax.crypto.KeyAgreement: byte[] generateSecret()>()

		IncompleteOperationError violating CrySL rule for java.security.MessageDigest (on Object #63c2da53922c886e0e92855b3b91588f3ce220108037ac237eea858a7349f807)
			Operation on object of type java.security.MessageDigest object not completed. Expected call to digest, update
			at statement: $i2 = virtualinvoke $r38.<javax.crypto.Mac: int getMacLength()>()

		IncompleteOperationError violating CrySL rule for java.security.MessageDigest (on Object #fff68524f6c67b59c75e747b076d1c1daa9bd81dc677e83f3706b8a154cc5773)
			Operation on object of type java.security.MessageDigest object not completed. Expected call to digest, update
			at statement: $i2 = virtualinvoke $r38.<javax.crypto.Mac: int getMacLength()>()

		IncompleteOperationError violating CrySL rule for java.security.Signature (on Object #46b0b2afb62162ccc63b669e91195920c5b299e1c85d7c17ababa379dffe0119)
			Operation on object of type java.security.Signature object not completed. Expected call to initSign, initVerify
			at statement: $r23 = virtualinvoke $r38.<javax.crypto.Mac: byte[] doFinal()>()

		IncompleteOperationError violating CrySL rule for java.security.Signature (on Object #9cb5e418a36b4dae80761063e180239737d8bcf1227d67b7df57ef6f67531fb6)
			Operation on object of type java.security.Signature object not completed. Expected call to initSign, initVerify
			at statement: $r23 = virtualinvoke $r38.<javax.crypto.Mac: byte[] doFinal()>()

		RequiredPredicateError violating CrySL rule for javax.crypto.spec.SecretKeySpec
			First parameter was not properly generated as preparedKeyMaterial
			at statement: specialinvoke $r39.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r2, $r1)

		IncompleteOperationError violating CrySL rule for java.security.MessageDigest (on Object #63c2da53922c886e0e92855b3b91588f3ce220108037ac237eea858a7349f807)
			Operation on object of type java.security.MessageDigest object not completed. Expected call to digest, update
			at statement: $r23 = virtualinvoke $r38.<javax.crypto.Mac: byte[] doFinal()>()

		IncompleteOperationError violating CrySL rule for java.security.MessageDigest (on Object #fff68524f6c67b59c75e747b076d1c1daa9bd81dc677e83f3706b8a154cc5773)
			Operation on object of type java.security.MessageDigest object not completed. Expected call to digest, update
			at statement: $r23 = virtualinvoke $r38.<javax.crypto.Mac: byte[] doFinal()>()


Findings in Java Class: com.google.android.gms.internal.ads.zzghx

	 in Method: java.lang.Object zza(java.lang.String,java.security.Provider)
		ConstraintError violating CrySL rule for javax.crypto.Mac (on Object #58456c1ad930ab1f55271061816bd349fe02aa5595bfccb967e7562c9a3f415f)
			First parameter (with value "AES/CTR/NoPadding") should be any of {HmacMD5, HmacSHA1, HmacSHA224, HmacSHA256, HmacSHA384, HmacSHA512, HmacPBESHA1, PBEWithHmacSHA1, PBEWithHmacSHA224, PBEWithHmacSHA256, PBEWithHmacSHA384, PBEWithHmacSHA512}
			at statement: $r3 = staticinvoke <javax.crypto.Mac: javax.crypto.Mac getInstance(java.lang.String)>($r2)

		ConstraintError violating CrySL rule for javax.crypto.Mac (on Object #58456c1ad930ab1f55271061816bd349fe02aa5595bfccb967e7562c9a3f415f)
			First parameter (with value "AES/ECB/NoPadding") should be any of {HmacMD5, HmacSHA1, HmacSHA224, HmacSHA256, HmacSHA384, HmacSHA512, HmacPBESHA1, PBEWithHmacSHA1, PBEWithHmacSHA224, PBEWithHmacSHA256, PBEWithHmacSHA384, PBEWithHmacSHA512}
			at statement: $r3 = staticinvoke <javax.crypto.Mac: javax.crypto.Mac getInstance(java.lang.String)>($r2)

		ConstraintError violating CrySL rule for javax.crypto.Mac (on Object #58456c1ad930ab1f55271061816bd349fe02aa5595bfccb967e7562c9a3f415f)
			First parameter (with value "ECDH") should be any of {HmacMD5, HmacSHA1, HmacSHA224, HmacSHA256, HmacSHA384, HmacSHA512, HmacPBESHA1, PBEWithHmacSHA1, PBEWithHmacSHA224, PBEWithHmacSHA256, PBEWithHmacSHA384, PBEWithHmacSHA512}
			at statement: $r3 = staticinvoke <javax.crypto.Mac: javax.crypto.Mac getInstance(java.lang.String)>($r2)

		ConstraintError violating CrySL rule for javax.crypto.Mac (on Object #58456c1ad930ab1f55271061816bd349fe02aa5595bfccb967e7562c9a3f415f)
			First parameter (with value "EC") should be any of {HmacMD5, HmacSHA1, HmacSHA224, HmacSHA256, HmacSHA384, HmacSHA512, HmacPBESHA1, PBEWithHmacSHA1, PBEWithHmacSHA224, PBEWithHmacSHA256, PBEWithHmacSHA384, PBEWithHmacSHA512}
			at statement: $r3 = staticinvoke <javax.crypto.Mac: javax.crypto.Mac getInstance(java.lang.String)>($r2)


Findings in Java Class: com.google.android.gms.internal.ads.zzght

	 in Method: java.lang.Object zza(java.lang.String,java.security.Provider)
		ConstraintError violating CrySL rule for javax.crypto.Cipher (on Object #914e68ec03e0be78d4a185de2d801eccd57fcd41a987fd9d4133c7c2eb21e95d)
			First parameter (with value "EC") should be any of {AES, PBEWithHmacSHA224AndAES_128, PBEWithHmacSHA256AndAES_128, PBEWithHmacSHA384AndAES_128, PBEWithHmacSHA512AndAES_128, PBEWithHmacSHA224AndAES_256, PBEWithHmacSHA256AndAES_256, PBEWithHmacSHA384AndAES_256, PBEWithHmacSHA512AndAES_256}
			at statement: $r3 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>($r2)

		ConstraintError violating CrySL rule for javax.crypto.Cipher (on Object #914e68ec03e0be78d4a185de2d801eccd57fcd41a987fd9d4133c7c2eb21e95d)
			First parameter (with value "ECDH") should be any of {AES, PBEWithHmacSHA224AndAES_128, PBEWithHmacSHA256AndAES_128, PBEWithHmacSHA384AndAES_128, PBEWithHmacSHA512AndAES_128, PBEWithHmacSHA224AndAES_256, PBEWithHmacSHA256AndAES_256, PBEWithHmacSHA384AndAES_256, PBEWithHmacSHA512AndAES_256}
			at statement: $r3 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>($r2)

		ConstraintError violating CrySL rule for javax.crypto.Cipher (on Object #72c10bc184bb65d3a49450dbfa9439ff61ee0aa8859cd0d87dfdcd7f32fc3283)
			First parameter (with value "EC") should be any of {AES, PBEWithHmacSHA224AndAES_128, PBEWithHmacSHA256AndAES_128, PBEWithHmacSHA384AndAES_128, PBEWithHmacSHA512AndAES_128, PBEWithHmacSHA224AndAES_256, PBEWithHmacSHA256AndAES_256, PBEWithHmacSHA384AndAES_256, PBEWithHmacSHA512AndAES_256}
			at statement: $r3 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String,java.security.Provider)>($r2, $r1)

		ConstraintError violating CrySL rule for javax.crypto.Cipher (on Object #72c10bc184bb65d3a49450dbfa9439ff61ee0aa8859cd0d87dfdcd7f32fc3283)
			First parameter (with value "ECDH") should be any of {AES, PBEWithHmacSHA224AndAES_128, PBEWithHmacSHA256AndAES_128, PBEWithHmacSHA384AndAES_128, PBEWithHmacSHA512AndAES_128, PBEWithHmacSHA224AndAES_256, PBEWithHmacSHA256AndAES_256, PBEWithHmacSHA384AndAES_256, PBEWithHmacSHA512AndAES_256}
			at statement: $r3 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String,java.security.Provider)>($r2, $r1)


Findings in Java Class: com.google.android.gms.internal.ads.zzghw

	 in Method: java.lang.Object zza(java.lang.String,java.security.Provider)
		ConstraintError violating CrySL rule for java.security.KeyPairGenerator (on Object #82e1e1e0cc31e3c73cdf79070df661c083dbee54b806e6be9eaf7ae9c875868c)
			First parameter (with value "AES/CTR/NoPadding") should be any of {RSA, EC, DSA, DiffieHellman, DH}
			at statement: $r3 = staticinvoke <java.security.KeyPairGenerator: java.security.KeyPairGenerator getInstance(java.lang.String)>($r2)

		ConstraintError violating CrySL rule for java.security.KeyPairGenerator (on Object #82e1e1e0cc31e3c73cdf79070df661c083dbee54b806e6be9eaf7ae9c875868c)
			First parameter (with value "AES/ECB/NoPadding") should be any of {RSA, EC, DSA, DiffieHellman, DH}
			at statement: $r3 = staticinvoke <java.security.KeyPairGenerator: java.security.KeyPairGenerator getInstance(java.lang.String)>($r2)

		ConstraintError violating CrySL rule for java.security.KeyPairGenerator (on Object #38a91b0da4c56dece8dab976bdd8a0150fdbf3fdc39be9a0ffce1a682a14d8c5)
			First parameter (with value "ECDH") should be any of {RSA, EC, DSA, DiffieHellman, DH}
			at statement: $r3 = staticinvoke <java.security.KeyPairGenerator: java.security.KeyPairGenerator getInstance(java.lang.String,java.security.Provider)>($r2, $r1)

		ConstraintError violating CrySL rule for java.security.KeyPairGenerator (on Object #38a91b0da4c56dece8dab976bdd8a0150fdbf3fdc39be9a0ffce1a682a14d8c5)
			First parameter (with value "AES/CTR/NoPadding") should be any of {RSA, EC, DSA, DiffieHellman, DH}
			at statement: $r3 = staticinvoke <java.security.KeyPairGenerator: java.security.KeyPairGenerator getInstance(java.lang.String,java.security.Provider)>($r2, $r1)

		ConstraintError violating CrySL rule for java.security.KeyPairGenerator (on Object #82e1e1e0cc31e3c73cdf79070df661c083dbee54b806e6be9eaf7ae9c875868c)
			First parameter (with value "ECDH") should be any of {RSA, EC, DSA, DiffieHellman, DH}
			at statement: $r3 = staticinvoke <java.security.KeyPairGenerator: java.security.KeyPairGenerator getInstance(java.lang.String)>($r2)

		ConstraintError violating CrySL rule for java.security.KeyPairGenerator (on Object #38a91b0da4c56dece8dab976bdd8a0150fdbf3fdc39be9a0ffce1a682a14d8c5)
			First parameter (with value "AES/ECB/NoPadding") should be any of {RSA, EC, DSA, DiffieHellman, DH}
			at statement: $r3 = staticinvoke <java.security.KeyPairGenerator: java.security.KeyPairGenerator getInstance(java.lang.String,java.security.Provider)>($r2, $r1)


Findings in Java Class: com.google.android.gms.internal.ads.zzghy

	 in Method: java.lang.Object zza(java.lang.String,java.security.Provider)
		ConstraintError violating CrySL rule for java.security.MessageDigest (on Object #63c2da53922c886e0e92855b3b91588f3ce220108037ac237eea858a7349f807)
			First parameter (with value "AES/CTR/NoPadding") should be any of {SHA-256, SHA-384, SHA-512}
			at statement: $r3 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String,java.security.Provider)>($r2, $r1)

		ConstraintError violating CrySL rule for java.security.MessageDigest (on Object #63c2da53922c886e0e92855b3b91588f3ce220108037ac237eea858a7349f807)
			First parameter (with value "EC") should be any of {SHA-256, SHA-384, SHA-512}
			at statement: $r3 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String,java.security.Provider)>($r2, $r1)

		ConstraintError violating CrySL rule for java.security.MessageDigest (on Object #fff68524f6c67b59c75e747b076d1c1daa9bd81dc677e83f3706b8a154cc5773)
			First parameter (with value "AES/CTR/NoPadding") should be any of {SHA-256, SHA-384, SHA-512}
			at statement: $r3 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>($r2)

		ConstraintError violating CrySL rule for java.security.MessageDigest (on Object #63c2da53922c886e0e92855b3b91588f3ce220108037ac237eea858a7349f807)
			First parameter (with value "AES/ECB/NoPadding") should be any of {SHA-256, SHA-384, SHA-512}
			at statement: $r3 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String,java.security.Provider)>($r2, $r1)

		ConstraintError violating CrySL rule for java.security.MessageDigest (on Object #fff68524f6c67b59c75e747b076d1c1daa9bd81dc677e83f3706b8a154cc5773)
			First parameter (with value "AES/ECB/NoPadding") should be any of {SHA-256, SHA-384, SHA-512}
			at statement: $r3 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>($r2)

		ConstraintError violating CrySL rule for java.security.MessageDigest (on Object #fff68524f6c67b59c75e747b076d1c1daa9bd81dc677e83f3706b8a154cc5773)
			First parameter (with value "EC") should be any of {SHA-256, SHA-384, SHA-512}
			at statement: $r3 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>($r2)

		ConstraintError violating CrySL rule for java.security.MessageDigest (on Object #63c2da53922c886e0e92855b3b91588f3ce220108037ac237eea858a7349f807)
			First parameter (with value "ECDH") should be any of {SHA-256, SHA-384, SHA-512}
			at statement: $r3 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String,java.security.Provider)>($r2, $r1)

		ConstraintError violating CrySL rule for java.security.MessageDigest (on Object #fff68524f6c67b59c75e747b076d1c1daa9bd81dc677e83f3706b8a154cc5773)
			First parameter (with value "ECDH") should be any of {SHA-256, SHA-384, SHA-512}
			at statement: $r3 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>($r2)


Findings in Java Class: com.google.android.gms.internal.ads.zzghu

	 in Method: java.lang.Object zza(java.lang.String,java.security.Provider)
		ConstraintError violating CrySL rule for javax.crypto.KeyAgreement (on Object #1cc21cb6ee988ee39bd31926a0f03b9af6770c641af9badacf6f6b8683d98c7a)
			First parameter (with value "ECDH") should be any of {DH, DiffieHellman, NH}
			at statement: $r3 = staticinvoke <javax.crypto.KeyAgreement: javax.crypto.KeyAgreement getInstance(java.lang.String,java.security.Provider)>($r2, $r1)

		ConstraintError violating CrySL rule for javax.crypto.KeyAgreement (on Object #9cd5897108227e0db758ed11d1e4030d206f6d08e2c9768e683d1fa0dc28795c)
			First parameter (with value "AES/ECB/NoPadding") should be any of {DH, DiffieHellman, NH}
			at statement: $r3 = staticinvoke <javax.crypto.KeyAgreement: javax.crypto.KeyAgreement getInstance(java.lang.String)>($r2)

		ConstraintError violating CrySL rule for javax.crypto.KeyAgreement (on Object #1cc21cb6ee988ee39bd31926a0f03b9af6770c641af9badacf6f6b8683d98c7a)
			First parameter (with value "EC") should be any of {DH, DiffieHellman, NH}
			at statement: $r3 = staticinvoke <javax.crypto.KeyAgreement: javax.crypto.KeyAgreement getInstance(java.lang.String,java.security.Provider)>($r2, $r1)

		ConstraintError violating CrySL rule for javax.crypto.KeyAgreement (on Object #9cd5897108227e0db758ed11d1e4030d206f6d08e2c9768e683d1fa0dc28795c)
			First parameter (with value "AES/CTR/NoPadding") should be any of {DH, DiffieHellman, NH}
			at statement: $r3 = staticinvoke <javax.crypto.KeyAgreement: javax.crypto.KeyAgreement getInstance(java.lang.String)>($r2)

		ConstraintError violating CrySL rule for javax.crypto.KeyAgreement (on Object #9cd5897108227e0db758ed11d1e4030d206f6d08e2c9768e683d1fa0dc28795c)
			First parameter (with value "EC") should be any of {DH, DiffieHellman, NH}
			at statement: $r3 = staticinvoke <javax.crypto.KeyAgreement: javax.crypto.KeyAgreement getInstance(java.lang.String)>($r2)

		ConstraintError violating CrySL rule for javax.crypto.KeyAgreement (on Object #9cd5897108227e0db758ed11d1e4030d206f6d08e2c9768e683d1fa0dc28795c)
			First parameter (with value "ECDH") should be any of {DH, DiffieHellman, NH}
			at statement: $r3 = staticinvoke <javax.crypto.KeyAgreement: javax.crypto.KeyAgreement getInstance(java.lang.String)>($r2)

		ConstraintError violating CrySL rule for javax.crypto.KeyAgreement (on Object #1cc21cb6ee988ee39bd31926a0f03b9af6770c641af9badacf6f6b8683d98c7a)
			First parameter (with value "AES/ECB/NoPadding") should be any of {DH, DiffieHellman, NH}
			at statement: $r3 = staticinvoke <javax.crypto.KeyAgreement: javax.crypto.KeyAgreement getInstance(java.lang.String,java.security.Provider)>($r2, $r1)

		ConstraintError violating CrySL rule for javax.crypto.KeyAgreement (on Object #1cc21cb6ee988ee39bd31926a0f03b9af6770c641af9badacf6f6b8683d98c7a)
			First parameter (with value "AES/CTR/NoPadding") should be any of {DH, DiffieHellman, NH}
			at statement: $r3 = staticinvoke <javax.crypto.KeyAgreement: javax.crypto.KeyAgreement getInstance(java.lang.String,java.security.Provider)>($r2, $r1)


Findings in Java Class: com.remotefairy.wifi.boxee.network.http.discovery.BoxeeScanner

	 in Method: java.lang.String getSignature(java.lang.String)
		ConstraintError violating CrySL rule for java.security.MessageDigest (on Object #d0b9824be9a29ae611efb857910488b95afd443df2913191b2d1fa11359607b7)
			First parameter (with value "MD5") should be any of {SHA-256, SHA-384, SHA-512}
			at statement: $r2 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer105189)


Findings in Java Class: com.remotefairy.wifi.androidtv.KeyStoreManager$DynamicTrustManager

	 in Method: void reloadTrustManager(java.security.KeyStore)
		RequiredPredicateError violating CrySL rule for javax.net.ssl.TrustManagerFactory
			First parameter was not properly generated as generatedKeyStore
			at statement: virtualinvoke $r5.<javax.net.ssl.TrustManagerFactory: void init(java.security.KeyStore)>($r3)

		IncompleteOperationError violating CrySL rule for java.security.KeyStore (on Object #a695dcf2cab1d39ed979da588f11598c020649e34d773f0177a22f2ae88884dc)
			Operation on object of type java.security.KeyStore object not completed. Expected call to load
			at statement: virtualinvoke $r5.<javax.net.ssl.TrustManagerFactory: void init(java.security.KeyStore)>($r3)

		IncompleteOperationError violating CrySL rule for java.security.KeyStore (on Object #a695dcf2cab1d39ed979da588f11598c020649e34d773f0177a22f2ae88884dc)
			Operation on object of type java.security.KeyStore object not completed. Expected call to load
			at statement: virtualinvoke $r5.<javax.net.ssl.TrustManagerFactory: void init(java.security.KeyStore)>($r3)


Findings in Java Class: org.bouncycastle.x509.X509Util

	 in Method: java.security.Signature getSignatureInstance(java.lang.String,java.lang.String)
		ConstraintError violating CrySL rule for java.security.Signature (on Object #f2111809ecb4309ae2437e31fabdc1229e5a2ea016a54ebef99506eaa0a13e3)
			First parameter (with value "SHA256WithRSAEncryption") should be any of {SHA256withRSA, SHA256withECDSA, SHA256withDSA, SHA224withDSA, NONEwithDSA, SHA1withDSA}
			at statement: $r2 = staticinvoke <java.security.Signature: java.security.Signature getInstance(java.lang.String)>($r1)

		ConstraintError violating CrySL rule for java.security.Signature (on Object #3b30b0fde419d036179f221fab0c1cb9b3a1335e21241c8626c0401b1773651e)
			First parameter (with value "SHA256WithRSAEncryption") should be any of {SHA256withRSA, SHA256withECDSA, SHA256withDSA, SHA224withDSA, NONEwithDSA, SHA1withDSA}
			at statement: $r2 = staticinvoke <java.security.Signature: java.security.Signature getInstance(java.lang.String,java.lang.String)>($r1, $r0)


	 in Method: byte[] calculateSignature(org.bouncycastle.asn1.DERObjectIdentifier,java.lang.String,java.lang.String,java.security.PrivateKey,java.security.SecureRandom,org.bouncycastle.asn1.ASN1Encodable)
		RequiredPredicateError violating CrySL rule for java.security.Signature
			First parameter was not properly generated as generatedPrivkey
			at statement: virtualinvoke $r6.<java.security.Signature: void initSign(java.security.PrivateKey,java.security.SecureRandom)>($r1, $r2)


Findings in Java Class: com.google.android.gms.internal.ads.zzgaz

	 in Method: java.lang.Object zza(com.google.android.gms.internal.ads.zzgma)
		ConstraintError violating CrySL rule for javax.crypto.spec.SecretKeySpec (on Object #8b270c64e39d5849cebb88aca7943aeb71dbce7de4f57b00936fb6e7f4be25b4)
			Second parameter (with value "HMAC") should be any of {AES, HmacSHA224, HmacSHA256, HmacSHA384, HmacSHA512}
			at statement: specialinvoke $r1.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r6, varReplacer111473)

		RequiredPredicateError violating CrySL rule for javax.crypto.spec.SecretKeySpec
			First parameter was not properly generated as preparedKeyMaterial
			at statement: specialinvoke $r1.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r6, varReplacer111473)


Findings in Java Class: org.apache.http.impl.auth.NTLMEngineImpl

	 in Method: byte[] RC4(byte[],byte[])
		NeverTypeOfError violating CrySL rule for javax.crypto.spec.SecretKeySpec (on Object #802dc075aeb760b8c9ab76083033b39a1febb1afb868c4d659f65e8f2185740f)
			First parameter should never be of type java.lang.String.
			at statement: specialinvoke $r0.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r2, varReplacer112680)

		NeverTypeOfError violating CrySL rule for javax.crypto.spec.SecretKeySpec (on Object #802dc075aeb760b8c9ab76083033b39a1febb1afb868c4d659f65e8f2185740f)
			First parameter should never be of type java.lang.String.
			at statement: specialinvoke $r0.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r2, varReplacer112680)

		RequiredPredicateError violating CrySL rule for javax.crypto.Cipher
			Second parameter was not properly generated as generatedKey
			at statement: virtualinvoke $r3.<javax.crypto.Cipher: void init(int,java.security.Key)>(varReplacer112679, $r0)

		NeverTypeOfError violating CrySL rule for javax.crypto.spec.SecretKeySpec (on Object #802dc075aeb760b8c9ab76083033b39a1febb1afb868c4d659f65e8f2185740f)
			First parameter should never be of type java.lang.String.
			at statement: specialinvoke $r0.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r2, varReplacer112680)

		ConstraintError violating CrySL rule for javax.crypto.Cipher (on Object #27fac94e9ea9620d81ef352f6f5f628782ffc90bc3615b3bffe307ea028d76ef)
			First parameter (with value "RC4") should be any of {AES, PBEWithHmacSHA224AndAES_128, PBEWithHmacSHA256AndAES_128, PBEWithHmacSHA384AndAES_128, PBEWithHmacSHA512AndAES_128, PBEWithHmacSHA224AndAES_256, PBEWithHmacSHA256AndAES_256, PBEWithHmacSHA384AndAES_256, PBEWithHmacSHA512AndAES_256}
			at statement: $r3 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer112678)

		RequiredPredicateError violating CrySL rule for javax.crypto.spec.SecretKeySpec
			First parameter was not properly generated as preparedKeyMaterial
			at statement: specialinvoke $r0.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r2, varReplacer112680)

		NeverTypeOfError violating CrySL rule for javax.crypto.spec.SecretKeySpec (on Object #802dc075aeb760b8c9ab76083033b39a1febb1afb868c4d659f65e8f2185740f)
			First parameter should never be of type java.lang.String.
			at statement: specialinvoke $r0.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r2, varReplacer112680)

		ConstraintError violating CrySL rule for javax.crypto.spec.SecretKeySpec (on Object #802dc075aeb760b8c9ab76083033b39a1febb1afb868c4d659f65e8f2185740f)
			Second parameter (with value "RC4") should be any of {AES, HmacSHA224, HmacSHA256, HmacSHA384, HmacSHA512}
			at statement: specialinvoke $r0.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r2, varReplacer112680)


	 in Method: java.security.MessageDigest getMD5()
		ConstraintError violating CrySL rule for java.security.MessageDigest (on Object #c34fcb7fcd813dea9b45c2c5cfd386a82e8210390e0493bef84bc022d894ce9f)
			First parameter (with value "MD5") should be any of {SHA-256, SHA-384, SHA-512}
			at statement: $r0 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(varReplacer113597)


	 in Method: java.security.Key createDESKey(byte[],int)
		ConstraintError violating CrySL rule for javax.crypto.spec.SecretKeySpec (on Object #62ddb2662572fc8c623a26c69377be8bef7c90f97b6071a57460bddd4da4f29)
			Second parameter (with value "DES") should be any of {AES, HmacSHA224, HmacSHA256, HmacSHA384, HmacSHA512}
			at statement: specialinvoke $r2.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r1, varReplacer113657)

		RequiredPredicateError violating CrySL rule for javax.crypto.spec.SecretKeySpec
			First parameter was not properly generated as preparedKeyMaterial
			at statement: specialinvoke $r2.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r1, varReplacer113657)


	 in Method: byte[] lmResponse(byte[],byte[])
		ConstraintError violating CrySL rule for javax.crypto.Cipher (on Object #5cf7332c227f4ef9c63a86d12a124781bbc1aeace820183aa3f8b74774a03c64)
			First parameter (with value "DES/ECB/NoPadding") should be any of {AES, PBEWithHmacSHA224AndAES_128, PBEWithHmacSHA256AndAES_128, PBEWithHmacSHA384AndAES_128, PBEWithHmacSHA512AndAES_128, PBEWithHmacSHA224AndAES_256, PBEWithHmacSHA256AndAES_256, PBEWithHmacSHA384AndAES_256, PBEWithHmacSHA512AndAES_256}
			at statement: $r6 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer113665)

		TypestateError violating CrySL rule for javax.crypto.Cipher (on Object #5cf7332c227f4ef9c63a86d12a124781bbc1aeace820183aa3f8b74774a03c64)
			Unexpected call to method init on object of type javax.crypto.Cipher. Expect a call to one of the following methods update,doFinal
			at statement: virtualinvoke $r6.<javax.crypto.Cipher: void init(int,java.security.Key)>(varReplacer113670, $r4)

		RequiredPredicateError violating CrySL rule for javax.crypto.Cipher
			Second parameter was not properly generated as generatedKey
			at statement: virtualinvoke $r6.<javax.crypto.Cipher: void init(int,java.security.Key)>(varReplacer113678, $r5)


	 in Method: byte[] lmHash(java.lang.String)
		ConstraintError violating CrySL rule for javax.crypto.Cipher (on Object #a521a7a12ae939c44a0358818f0b3b465ea7435553e0c3610e5be6e9ba9bf222)
			First parameter (with value "DES/ECB/NoPadding") should be any of {AES, PBEWithHmacSHA224AndAES_128, PBEWithHmacSHA256AndAES_128, PBEWithHmacSHA384AndAES_128, PBEWithHmacSHA512AndAES_128, PBEWithHmacSHA224AndAES_256, PBEWithHmacSHA256AndAES_256, PBEWithHmacSHA384AndAES_256, PBEWithHmacSHA512AndAES_256}
			at statement: $r7 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer114598)

		RequiredPredicateError violating CrySL rule for javax.crypto.Cipher
			Second parameter was not properly generated as generatedKey
			at statement: virtualinvoke $r7.<javax.crypto.Cipher: void init(int,java.security.Key)>(varReplacer114595, $r5)

		TypestateError violating CrySL rule for javax.crypto.Cipher (on Object #a521a7a12ae939c44a0358818f0b3b465ea7435553e0c3610e5be6e9ba9bf222)
			Unexpected call to method init on object of type javax.crypto.Cipher. Expect a call to one of the following methods update,doFinal
			at statement: virtualinvoke $r7.<javax.crypto.Cipher: void init(int,java.security.Key)>(varReplacer114594, $r6)


Findings in Java Class: org.apache.http.impl.auth.NTLMEngineImpl$CipherGen

	 in Method: byte[] getLanManagerSessionKey()
		ConstraintError violating CrySL rule for javax.crypto.Cipher (on Object #8f84bcd0356b108d0cf887912868579baae439dc06072c7a57cbf83353b4ef6c)
			First parameter (with value "DES/ECB/NoPadding") should be any of {AES, PBEWithHmacSHA224AndAES_128, PBEWithHmacSHA256AndAES_128, PBEWithHmacSHA384AndAES_128, PBEWithHmacSHA512AndAES_128, PBEWithHmacSHA224AndAES_256, PBEWithHmacSHA256AndAES_256, PBEWithHmacSHA384AndAES_256, PBEWithHmacSHA512AndAES_256}
			at statement: $r5 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>(varReplacer113618)

		RequiredPredicateError violating CrySL rule for javax.crypto.Cipher
			Second parameter was not properly generated as generatedKey
			at statement: virtualinvoke $r5.<javax.crypto.Cipher: void init(int,java.security.Key)>(varReplacer113622, $r4)


Findings in Java Class: com.google.android.gms.internal.ads.zzfzd

	 in Method: java.security.spec.AlgorithmParameterSpec zzc(byte[],int,int)
		RequiredPredicateError violating CrySL rule for javax.crypto.spec.IvParameterSpec
			First parameter was not properly generated as randomized
			at statement: specialinvoke $r3.<javax.crypto.spec.IvParameterSpec: void <init>(byte[],int,int)>($r1, varReplacer94843, $i0)

		RequiredPredicateError violating CrySL rule for javax.crypto.spec.GCMParameterSpec
			Second parameter was not properly generated as randomized
			at statement: specialinvoke $r2.<javax.crypto.spec.GCMParameterSpec: void <init>(int,byte[],int,int)>(varReplacer94844, $r1, varReplacer94845, $i0)


	 in Method: void <init>(byte[])
		RequiredPredicateError violating CrySL rule for javax.crypto.spec.SecretKeySpec
			First parameter was not properly generated as preparedKeyMaterial
			at statement: specialinvoke $r2.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r1, varReplacer112806)


Findings in Java Class: org.bouncycastle.jce.provider.X509SignatureUtil

	 in Method: void setSignatureParameters(java.security.Signature,org.bouncycastle.asn1.DEREncodable)
		RequiredPredicateError violating CrySL rule for java.security.AlgorithmParameters
			First parameter was not properly generated as preparedAlg
			at statement: $r5 = staticinvoke <java.security.AlgorithmParameters: java.security.AlgorithmParameters getInstance(java.lang.String,java.security.Provider)>($r3, $r4)


Findings in Java Class: com.remotefairy.wifi.adb.AdbCrypto

	 in Method: com.remotefairy.wifi.adb.AdbCrypto loadAdbKeyPair(com.remotefairy.wifi.adb.AdbBase64,java.io.File,java.io.File)
		RequiredPredicateError violating CrySL rule for java.security.KeyPair
			Second parameter was not properly generated as generatedPrivkey
			at statement: specialinvoke $r11.<java.security.KeyPair: void <init>(java.security.PublicKey,java.security.PrivateKey)>($r12, $r13)

		RequiredPredicateError violating CrySL rule for java.security.KeyFactory
			First parameter was not properly generated as speccedKey
			at statement: $r13 = virtualinvoke $r8.<java.security.KeyFactory: java.security.PrivateKey generatePrivate(java.security.spec.KeySpec)>($r9)

		RequiredPredicateError violating CrySL rule for java.security.KeyPair
			First parameter was not properly generated as generatedPubkey
			at statement: specialinvoke $r11.<java.security.KeyPair: void <init>(java.security.PublicKey,java.security.PrivateKey)>($r12, $r13)

		RequiredPredicateError violating CrySL rule for java.security.spec.X509EncodedKeySpec
			First parameter was not properly generated as preparedKeyMaterial
			at statement: specialinvoke $r10.<java.security.spec.X509EncodedKeySpec: void <init>(byte[])>($r5)


	 in Method: byte[] signAdbTokenPayload(byte[])
		RequiredPredicateError violating CrySL rule for javax.crypto.Cipher
			Second parameter was not properly generated as generatedKey
			at statement: virtualinvoke $r2.<javax.crypto.Cipher: void init(int,java.security.Key)>(varReplacer15447, $r4)


Findings in Java Class: com.google.android.gms.internal.ads.zzfyu

	 in Method: java.security.spec.AlgorithmParameterSpec zzc(byte[],int,int)
		RequiredPredicateError violating CrySL rule for javax.crypto.spec.GCMParameterSpec
			Second parameter was not properly generated as randomized
			at statement: specialinvoke $r2.<javax.crypto.spec.GCMParameterSpec: void <init>(int,byte[],int,int)>(varReplacer103434, $r0, varReplacer103435, varReplacer103436)

		RequiredPredicateError violating CrySL rule for javax.crypto.spec.IvParameterSpec
			First parameter was not properly generated as randomized
			at statement: specialinvoke $r1.<javax.crypto.spec.IvParameterSpec: void <init>(byte[],int,int)>($r0, varReplacer103432, varReplacer103433)


	 in Method: void <init>(byte[],boolean)
		RequiredPredicateError violating CrySL rule for javax.crypto.spec.SecretKeySpec
			First parameter was not properly generated as preparedKeyMaterial
			at statement: specialinvoke $r2.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r1, varReplacer105148)


Findings in Java Class: org.bouncycastle.jce.provider.JDKKeyPairGenerator$DH

	 in Method: java.security.KeyPair generateKeyPair()
		RequiredPredicateError violating CrySL rule for java.security.KeyPair
			First parameter was not properly generated as generatedPubkey
			at statement: specialinvoke $r13.<java.security.KeyPair: void <init>(java.security.PublicKey,java.security.PrivateKey)>($r14, $r15)

		RequiredPredicateError violating CrySL rule for java.security.KeyPair
			Second parameter was not properly generated as generatedPrivkey
			at statement: specialinvoke $r13.<java.security.KeyPair: void <init>(java.security.PublicKey,java.security.PrivateKey)>($r14, $r15)


Findings in Java Class: org.bouncycastle.jce.provider.asymmetric.ec.KeyPairGenerator$EC

	 in Method: java.security.KeyPair generateKeyPair()
		RequiredPredicateError violating CrySL rule for java.security.KeyPair
			Second parameter was not properly generated as generatedPrivkey
			at statement: specialinvoke $r8.<java.security.KeyPair: void <init>(java.security.PublicKey,java.security.PrivateKey)>($r9, $r11)

		RequiredPredicateError violating CrySL rule for java.security.KeyPair
			First parameter was not properly generated as generatedPubkey
			at statement: specialinvoke $r8.<java.security.KeyPair: void <init>(java.security.PublicKey,java.security.PrivateKey)>($r9, $r11)


Findings in Java Class: com.google.android.gms.internal.ads.zzghd

	 in Method: byte[] zzb(byte[],byte[])
		RequiredPredicateError violating CrySL rule for javax.crypto.spec.IvParameterSpec
			First parameter was not properly generated as randomized
			at statement: specialinvoke $r10.<javax.crypto.spec.IvParameterSpec: void <init>(byte[])>($r4)


	 in Method: byte[] zza(byte[],byte[])
		RequiredPredicateError violating CrySL rule for javax.crypto.spec.IvParameterSpec
			First parameter was not properly generated as randomized
			at statement: specialinvoke $r9.<javax.crypto.spec.IvParameterSpec: void <init>(byte[])>($r7)


	 in Method: void <init>(byte[],int)
		RequiredPredicateError violating CrySL rule for javax.crypto.spec.SecretKeySpec
			First parameter was not properly generated as preparedKeyMaterial
			at statement: specialinvoke $r3.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r1, varReplacer112798)


Findings in Java Class: org.bouncycastle.jce.provider.X509CertificateObject

	 in Method: void checkSignature(java.security.PublicKey,java.security.Signature)
		RequiredPredicateError violating CrySL rule for java.security.Signature
			First parameter was not properly generated as generatedPubkey
			at statement: virtualinvoke $r2.<java.security.Signature: void initVerify(java.security.PublicKey)>($r1)


Findings in Java Class: com.google.android.gms.internal.ads.zzgha

	 in Method: void zzc(byte[],int,int,byte[],int,byte[],boolean)
		RequiredPredicateError violating CrySL rule for javax.crypto.spec.IvParameterSpec
			First parameter was not properly generated as randomized
			at statement: specialinvoke $r8.<javax.crypto.spec.IvParameterSpec: void <init>(byte[])>($r7)


	 in Method: void <init>(byte[],int)
		RequiredPredicateError violating CrySL rule for javax.crypto.spec.SecretKeySpec
			First parameter was not properly generated as preparedKeyMaterial
			at statement: specialinvoke $r2.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r1, varReplacer112785)


Findings in Java Class: org.bouncycastle.jce.provider.JDKKeyPairGenerator$RSA

	 in Method: java.security.KeyPair generateKeyPair()
		RequiredPredicateError violating CrySL rule for java.security.KeyPair
			Second parameter was not properly generated as generatedPrivkey
			at statement: specialinvoke $r1.<java.security.KeyPair: void <init>(java.security.PublicKey,java.security.PrivateKey)>($r2, $r8)

		RequiredPredicateError violating CrySL rule for java.security.KeyPair
			First parameter was not properly generated as generatedPubkey
			at statement: specialinvoke $r1.<java.security.KeyPair: void <init>(java.security.PublicKey,java.security.PrivateKey)>($r2, $r8)


Findings in Java Class: org.bouncycastle.jce.provider.JDKKeyPairGenerator$DSA

	 in Method: java.security.KeyPair generateKeyPair()
		RequiredPredicateError violating CrySL rule for java.security.KeyPair
			Second parameter was not properly generated as generatedPrivkey
			at statement: specialinvoke $r10.<java.security.KeyPair: void <init>(java.security.PublicKey,java.security.PrivateKey)>($r11, $r12)

		RequiredPredicateError violating CrySL rule for java.security.KeyPair
			First parameter was not properly generated as generatedPubkey
			at statement: specialinvoke $r10.<java.security.KeyPair: void <init>(java.security.PublicKey,java.security.PrivateKey)>($r11, $r12)


Findings in Java Class: org.bouncycastle.jce.provider.JDKKeyPairGenerator$ElGamal

	 in Method: java.security.KeyPair generateKeyPair()
		RequiredPredicateError violating CrySL rule for java.security.KeyPair
			First parameter was not properly generated as generatedPubkey
			at statement: specialinvoke $r10.<java.security.KeyPair: void <init>(java.security.PublicKey,java.security.PrivateKey)>($r11, $r12)

		RequiredPredicateError violating CrySL rule for java.security.KeyPair
			Second parameter was not properly generated as generatedPrivkey
			at statement: specialinvoke $r10.<java.security.KeyPair: void <init>(java.security.PublicKey,java.security.PrivateKey)>($r11, $r12)


Findings in Java Class: org.bouncycastle.jce.provider.JDKKeyPairGenerator$GOST3410

	 in Method: java.security.KeyPair generateKeyPair()
		RequiredPredicateError violating CrySL rule for java.security.KeyPair
			First parameter was not properly generated as generatedPubkey
			at statement: specialinvoke $r1.<java.security.KeyPair: void <init>(java.security.PublicKey,java.security.PrivateKey)>($r2, $r12)

		RequiredPredicateError violating CrySL rule for java.security.KeyPair
			Second parameter was not properly generated as generatedPrivkey
			at statement: specialinvoke $r1.<java.security.KeyPair: void <init>(java.security.PublicKey,java.security.PrivateKey)>($r2, $r12)


======================= CryptoAnalysis Summary ==========================
	Number of CrySL rules: 47
	Number of Objects Analyzed: 272

	CryptoAnalysis found the following violations. For details see description above.
	ConstraintError: 85
	TypestateError: 18
	RequiredPredicateError: 82
	NeverTypeOfError: 7
	IncompleteOperationError: 151
	HardCodedError: 2
=====================================================================
